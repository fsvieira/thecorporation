{"version":3,"sources":["index.js","../node_modules/core-js/modules/_global.js","../node_modules/core-js/modules/_core.js","../node_modules/core-js/modules/_is-object.js","../node_modules/core-js/modules/_an-object.js","../node_modules/core-js/modules/_fails.js","../node_modules/core-js/modules/_descriptors.js","../node_modules/core-js/modules/_dom-create.js","../node_modules/core-js/modules/_ie8-dom-define.js","../node_modules/core-js/modules/_to-primitive.js","../node_modules/core-js/modules/_object-dp.js","../node_modules/core-js/modules/_property-desc.js","../node_modules/core-js/modules/_hide.js","../node_modules/core-js/modules/_has.js","../node_modules/core-js/modules/_uid.js","../node_modules/core-js/modules/_library.js","../node_modules/core-js/modules/_shared.js","../node_modules/core-js/modules/_function-to-string.js","../node_modules/core-js/modules/_redefine.js","../node_modules/core-js/modules/_a-function.js","../node_modules/core-js/modules/_ctx.js","../node_modules/core-js/modules/_export.js","../node_modules/core-js/modules/_defined.js","../node_modules/core-js/modules/_to-object.js","../node_modules/core-js/modules/_to-integer.js","../node_modules/core-js/modules/_to-absolute-index.js","../node_modules/core-js/modules/_to-length.js","../node_modules/core-js/modules/_array-copy-within.js","../node_modules/core-js/modules/_wks.js","../node_modules/core-js/modules/_add-to-unscopables.js","../node_modules/core-js/modules/es6.array.copy-within.js","../node_modules/core-js/modules/_array-fill.js","../node_modules/core-js/modules/es6.array.fill.js","../node_modules/core-js/modules/_cof.js","../node_modules/core-js/modules/_iobject.js","../node_modules/core-js/modules/_is-array.js","../node_modules/core-js/modules/_array-species-constructor.js","../node_modules/core-js/modules/_array-species-create.js","../node_modules/core-js/modules/_array-methods.js","../node_modules/core-js/modules/es6.array.find.js","../node_modules/core-js/modules/es6.array.find-index.js","../node_modules/core-js/modules/_iter-call.js","../node_modules/core-js/modules/_iterators.js","../node_modules/core-js/modules/_is-array-iter.js","../node_modules/core-js/modules/_create-property.js","../node_modules/core-js/modules/_classof.js","../node_modules/core-js/modules/core.get-iterator-method.js","../node_modules/core-js/modules/_iter-detect.js","../node_modules/core-js/modules/es6.array.from.js","../node_modules/core-js/modules/_to-iobject.js","../node_modules/core-js/modules/_array-includes.js","../node_modules/core-js/modules/es7.array.includes.js","../node_modules/core-js/modules/_iter-step.js","../node_modules/core-js/modules/_shared-key.js","../node_modules/core-js/modules/_object-keys-internal.js","../node_modules/core-js/modules/_enum-bug-keys.js","../node_modules/core-js/modules/_object-keys.js","../node_modules/core-js/modules/_object-dps.js","../node_modules/core-js/modules/_html.js","../node_modules/core-js/modules/_object-create.js","../node_modules/core-js/modules/_set-to-string-tag.js","../node_modules/core-js/modules/_iter-create.js","../node_modules/core-js/modules/_object-gpo.js","../node_modules/core-js/modules/_iter-define.js","../node_modules/core-js/modules/es6.array.iterator.js","../node_modules/core-js/modules/es6.array.of.js","../node_modules/core-js/modules/_strict-method.js","../node_modules/core-js/modules/es6.array.sort.js","../node_modules/core-js/modules/_set-species.js","../node_modules/core-js/modules/es6.array.species.js","../node_modules/core-js/modules/es6.date.to-json.js","../node_modules/core-js/modules/_date-to-primitive.js","../node_modules/core-js/modules/es6.date.to-primitive.js","../node_modules/core-js/modules/es6.function.has-instance.js","../node_modules/core-js/modules/es6.function.name.js","../node_modules/core-js/modules/_redefine-all.js","../node_modules/core-js/modules/_an-instance.js","../node_modules/core-js/modules/_for-of.js","../node_modules/core-js/modules/_meta.js","../node_modules/core-js/modules/_validate-collection.js","../node_modules/core-js/modules/_collection-strong.js","../node_modules/core-js/modules/_object-pie.js","../node_modules/core-js/modules/_object-gopd.js","../node_modules/core-js/modules/_set-proto.js","../node_modules/core-js/modules/_inherit-if-required.js","../node_modules/core-js/modules/_collection.js","../node_modules/core-js/modules/es6.map.js","../node_modules/core-js/modules/_math-log1p.js","../node_modules/core-js/modules/es6.math.acosh.js","../node_modules/core-js/modules/es6.math.asinh.js","../node_modules/core-js/modules/es6.math.atanh.js","../node_modules/core-js/modules/_math-sign.js","../node_modules/core-js/modules/es6.math.cbrt.js","../node_modules/core-js/modules/es6.math.clz32.js","../node_modules/core-js/modules/es6.math.cosh.js","../node_modules/core-js/modules/_math-expm1.js","../node_modules/core-js/modules/es6.math.expm1.js","../node_modules/core-js/modules/_math-fround.js","../node_modules/core-js/modules/es6.math.fround.js","../node_modules/core-js/modules/es6.math.hypot.js","../node_modules/core-js/modules/es6.math.imul.js","../node_modules/core-js/modules/es6.math.log1p.js","../node_modules/core-js/modules/es6.math.log10.js","../node_modules/core-js/modules/es6.math.log2.js","../node_modules/core-js/modules/es6.math.sign.js","../node_modules/core-js/modules/es6.math.sinh.js","../node_modules/core-js/modules/es6.math.tanh.js","../node_modules/core-js/modules/es6.math.trunc.js","../node_modules/core-js/modules/_object-gopn.js","../node_modules/core-js/modules/_string-ws.js","../node_modules/core-js/modules/_string-trim.js","../node_modules/core-js/modules/es6.number.constructor.js","../node_modules/core-js/modules/es6.number.epsilon.js","../node_modules/core-js/modules/es6.number.is-finite.js","../node_modules/core-js/modules/_is-integer.js","../node_modules/core-js/modules/es6.number.is-integer.js","../node_modules/core-js/modules/es6.number.is-nan.js","../node_modules/core-js/modules/es6.number.is-safe-integer.js","../node_modules/core-js/modules/es6.number.max-safe-integer.js","../node_modules/core-js/modules/es6.number.min-safe-integer.js","../node_modules/core-js/modules/_parse-float.js","../node_modules/core-js/modules/es6.number.parse-float.js","../node_modules/core-js/modules/_parse-int.js","../node_modules/core-js/modules/es6.number.parse-int.js","../node_modules/core-js/modules/_object-gops.js","../node_modules/core-js/modules/_object-assign.js","../node_modules/core-js/modules/es6.object.assign.js","../node_modules/core-js/modules/_object-forced-pam.js","../node_modules/core-js/modules/es7.object.define-getter.js","../node_modules/core-js/modules/es7.object.define-setter.js","../node_modules/core-js/modules/_object-to-array.js","../node_modules/core-js/modules/es7.object.entries.js","../node_modules/core-js/modules/_object-sap.js","../node_modules/core-js/modules/es6.object.freeze.js","../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","../node_modules/core-js/modules/_own-keys.js","../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","../node_modules/core-js/modules/_object-gopn-ext.js","../node_modules/core-js/modules/es6.object.get-own-property-names.js","../node_modules/core-js/modules/es6.object.get-prototype-of.js","../node_modules/core-js/modules/es7.object.lookup-getter.js","../node_modules/core-js/modules/es7.object.lookup-setter.js","../node_modules/core-js/modules/es6.object.prevent-extensions.js","../node_modules/core-js/modules/_same-value.js","../node_modules/core-js/modules/es6.object.is.js","../node_modules/core-js/modules/es6.object.is-frozen.js","../node_modules/core-js/modules/es6.object.is-sealed.js","../node_modules/core-js/modules/es6.object.is-extensible.js","../node_modules/core-js/modules/es6.object.keys.js","../node_modules/core-js/modules/es6.object.seal.js","../node_modules/core-js/modules/es6.object.set-prototype-of.js","../node_modules/core-js/modules/es7.object.values.js","../node_modules/core-js/modules/_species-constructor.js","../node_modules/core-js/modules/_invoke.js","../node_modules/core-js/modules/_task.js","../node_modules/core-js/modules/_microtask.js","../node_modules/core-js/modules/_new-promise-capability.js","../node_modules/core-js/modules/_perform.js","../node_modules/core-js/modules/_user-agent.js","../node_modules/core-js/modules/_promise-resolve.js","../node_modules/core-js/modules/es6.promise.js","../node_modules/core-js/modules/es7.promise.finally.js","../node_modules/core-js/modules/es6.reflect.apply.js","../node_modules/core-js/modules/_bind.js","../node_modules/core-js/modules/es6.reflect.construct.js","../node_modules/core-js/modules/es6.reflect.define-property.js","../node_modules/core-js/modules/es6.reflect.delete-property.js","../node_modules/core-js/modules/es6.reflect.get.js","../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","../node_modules/core-js/modules/es6.reflect.get-prototype-of.js","../node_modules/core-js/modules/es6.reflect.has.js","../node_modules/core-js/modules/es6.reflect.is-extensible.js","../node_modules/core-js/modules/es6.reflect.own-keys.js","../node_modules/core-js/modules/es6.reflect.prevent-extensions.js","../node_modules/core-js/modules/es6.reflect.set.js","../node_modules/core-js/modules/es6.reflect.set-prototype-of.js","../node_modules/core-js/modules/_is-regexp.js","../node_modules/core-js/modules/_flags.js","../node_modules/core-js/modules/es6.regexp.constructor.js","../node_modules/core-js/modules/es6.regexp.flags.js","../node_modules/core-js/modules/_string-at.js","../node_modules/core-js/modules/_advance-string-index.js","../node_modules/core-js/modules/_regexp-exec-abstract.js","../node_modules/core-js/modules/_regexp-exec.js","../node_modules/core-js/modules/es6.regexp.exec.js","../node_modules/core-js/modules/_fix-re-wks.js","../node_modules/core-js/modules/es6.regexp.match.js","../node_modules/core-js/modules/es6.regexp.replace.js","../node_modules/core-js/modules/es6.regexp.split.js","../node_modules/core-js/modules/es6.regexp.search.js","../node_modules/core-js/modules/es6.regexp.to-string.js","../node_modules/core-js/modules/es6.set.js","../node_modules/core-js/modules/_wks-ext.js","../node_modules/core-js/modules/_wks-define.js","../node_modules/core-js/modules/_enum-keys.js","../node_modules/core-js/modules/es6.symbol.js","../node_modules/core-js/modules/es7.symbol.async-iterator.js","../node_modules/core-js/modules/_string-html.js","../node_modules/core-js/modules/es6.string.anchor.js","../node_modules/core-js/modules/es6.string.big.js","../node_modules/core-js/modules/es6.string.blink.js","../node_modules/core-js/modules/es6.string.bold.js","../node_modules/core-js/modules/es6.string.code-point-at.js","../node_modules/core-js/modules/_string-context.js","../node_modules/core-js/modules/_fails-is-regexp.js","../node_modules/core-js/modules/es6.string.ends-with.js","../node_modules/core-js/modules/es6.string.fixed.js","../node_modules/core-js/modules/es6.string.fontcolor.js","../node_modules/core-js/modules/es6.string.fontsize.js","../node_modules/core-js/modules/es6.string.from-code-point.js","../node_modules/core-js/modules/es6.string.includes.js","../node_modules/core-js/modules/es6.string.italics.js","../node_modules/core-js/modules/es6.string.iterator.js","../node_modules/core-js/modules/es6.string.link.js","../node_modules/core-js/modules/_string-repeat.js","../node_modules/core-js/modules/_string-pad.js","../node_modules/core-js/modules/es7.string.pad-start.js","../node_modules/core-js/modules/es7.string.pad-end.js","../node_modules/core-js/modules/es6.string.raw.js","../node_modules/core-js/modules/es6.string.repeat.js","../node_modules/core-js/modules/es6.string.small.js","../node_modules/core-js/modules/es6.string.starts-with.js","../node_modules/core-js/modules/es6.string.strike.js","../node_modules/core-js/modules/es6.string.sub.js","../node_modules/core-js/modules/es6.string.sup.js","../node_modules/core-js/modules/_typed.js","../node_modules/core-js/modules/_to-index.js","../node_modules/core-js/modules/_typed-buffer.js","../node_modules/core-js/modules/es6.typed.array-buffer.js","../node_modules/core-js/modules/_typed-array.js","../node_modules/core-js/modules/es6.typed.int8-array.js","../node_modules/core-js/modules/es6.typed.uint8-array.js","../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","../node_modules/core-js/modules/es6.typed.int16-array.js","../node_modules/core-js/modules/es6.typed.uint16-array.js","../node_modules/core-js/modules/es6.typed.int32-array.js","../node_modules/core-js/modules/es6.typed.uint32-array.js","../node_modules/core-js/modules/es6.typed.float32-array.js","../node_modules/core-js/modules/es6.typed.float64-array.js","../node_modules/core-js/modules/_collection-weak.js","../node_modules/core-js/modules/es6.weak-map.js","../node_modules/core-js/modules/es6.weak-set.js","../node_modules/core-js/modules/_flatten-into-array.js","../node_modules/core-js/modules/es7.array.flat-map.js","../node_modules/core-js/modules/web.timers.js","../node_modules/core-js/modules/web.immediate.js","../node_modules/core-js/modules/web.dom.iterable.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@fortawesome/fontawesome-free/js/all.js","../node_modules/@aegis-framework/artemis/src/Debug.js","../node_modules/@aegis-framework/artemis/src/DOM.js","../node_modules/@aegis-framework/artemis/src/Request.js","../node_modules/@aegis-framework/artemis/src/FileSystem.js","../node_modules/@aegis-framework/artemis/src/Form.js","../node_modules/@aegis-framework/artemis/src/Platform.js","../node_modules/@aegis-framework/artemis/src/Preload.js","../node_modules/@aegis-framework/artemis/src/SpaceAdapter/LocalStorage.js","../node_modules/@aegis-framework/artemis/src/SpaceAdapter/SessionStorage.js","../node_modules/@aegis-framework/artemis/src/SpaceAdapter/IndexedDB.js","../node_modules/@aegis-framework/artemis/src/SpaceAdapter/RemoteStorage.js","../node_modules/@aegis-framework/artemis/src/Space.js","../node_modules/@aegis-framework/artemis/src/Text.js","../node_modules/@aegis-framework/artemis/src/Util.js","../node_modules/@aegis-framework/artemis/index.js","../node_modules/typed.js/lib/typed.js","../node_modules/process/browser.js","../node_modules/particles.js/particles.js","../node_modules/moment/moment.js","../node_modules/mousetrap/mousetrap.js","lib/FancyError.js","../node_modules/deeply/flags.js","../node_modules/deeply/adapters/array.js","../node_modules/deeply/adapters/date.js","../node_modules/deeply/lib/reduce_object.js","../node_modules/deeply/adapters/object.js","../node_modules/deeply/extra/arrays_combine.js","../node_modules/deeply/extra/arrays_append.js","../node_modules/deeply/extra/arrays_append_unique.js","../node_modules/fulcon/index.js","../node_modules/deeply/extra/functions_clone.js","../node_modules/deeply/extra/functions_extend.js","../node_modules/deeply/adapters.js","../node_modules/precise-typeof/index.js","../node_modules/deeply/merge.js","../node_modules/deeply/mutable.js","../node_modules/deeply/immutable.js","../node_modules/deeply/index.js","lib/monogatari.js","lib/translations/Deutsch.js","lib/translations/English.js","lib/translations/Español.js","lib/translations/Français.js","lib/translations/Nederlands.js","lib/translations/Português.js","lib/translations/日本語.js","lib/translations/Russian.js","lib/translations/简体中文.js","lib/translations/index.js","lib/Component.js","lib/components/CreditsScreen.js","lib/components/CreditsScreenItem.js","lib/components/DialogLog.js","lib/components/GameScreen.js","lib/components/HelpScreen.js","lib/components/ImageGallery.js","lib/components/ImageGalleryItem.js","lib/components/LoadScreen.js","lib/components/LoadingScreen.js","lib/components/MainScreen.js","lib/components/Message.js","lib/components/OrientationWarning.js","lib/components/SaveScreen.js","../node_modules/path-browserify/index.js","../node_modules/electron/index.js","lib/components/SettingsScreen.js","lib/components/QuickMenu.js","lib/components/QuitWarning.js","lib/components/Slot.js","lib/components/SlotDeletionWarning.js","lib/components/SlotOverwriteWarning.js","lib/components/TextInput.js","lib/components/index.js","lib/Action.js","lib/actions/Canvas.js","lib/actions/Centered.js","lib/actions/Choice.js","lib/actions/Clear.js","lib/actions/Conditional.js","lib/actions/End.js","lib/actions/Function.js","lib/actions/HideCanvas.js","lib/actions/HideCharacter.js","lib/actions/HideImage.js","lib/actions/HideParticles.js","lib/actions/HideVideo.js","lib/actions/InputModal.js","lib/actions/Jump.js","lib/actions/Message.js","lib/actions/Next.js","lib/actions/Notify.js","lib/actions/Particles.js","lib/actions/Pause.js","lib/actions/Play.js","lib/actions/Scene.js","lib/actions/ShowCharacter.js","lib/actions/ShowImage.js","lib/actions/Stop.js","lib/actions/Vibrate.js","lib/actions/Video.js","lib/actions/Wait.js","lib/actions/Dialog.js","lib/actions/index.js"],"names":["_WINDOW","_DOCUMENT","window","document","e","_ref$userAgent","navigator","userAgent","WINDOW","DOCUMENT","PRODUCTION","documentElement","head","addEventListener","createElement","indexOf","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","w","styles","hooks","shims","namespace","icons","bunker","fn","defineIcons","prefix","_params$skipHooks","arguments","length","skipHooks","normalized","keys","reduce","acc","iconName","icon","addPack","_objectSpread","target","i","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","props","descriptor","_slicedToArray","arr","_arrayWithHoles","Array","isArray","_iterableToArrayLimit","_arr","_n","_d","_e","_s","_i","next","done","push","err","_nonIterableRest","TypeError","_toConsumableArray","_arrayWithoutHoles","arr2","_iterableToArray","iter","toString","call","from","_nonIterableSpread","noop","_MUTATION_OBSERVER","_PERFORMANCE","mark","measure","MutationObserver","performance","MUTATION_OBSERVER","PERFORMANCE","IS_BROWSER","IS_DOM","IS_IE","UNITS_IN_GRID","DEFAULT_FAMILY_PREFIX","DEFAULT_REPLACEMENT_CLASS","DATA_FA_I2SVG","DATA_FA_PSEUDO_ELEMENT","DATA_FA_PSEUDO_ELEMENT_PENDING","DATA_PREFIX","DATA_ICON","HTML_CLASS_I2SVG_BASE_CLASS","MUTATION_APPROACH_ASYNC","TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS","PREFIX_TO_STYLE","STYLE_TO_PREFIX","LAYERS_TEXT_CLASSNAME","FONT_FAMILY_PATTERN","FONT_WEIGHT_TO_PREFIX","oneToTen","oneToTwenty","ATTRIBUTES_WATCHED_FOR_MUTATION","RESERVED_CLASSES","map","n","initial","FontAwesomeConfig","querySelector","_ref","_ref2","attr","val","coerce","getAttrConfig","element","getAttribute","_config","familyPrefix","replacementClass","autoReplaceSvg","autoAddCss","autoA11y","searchPseudoElements","observeMutations","mutateApproach","keepOriginalSource","measurePerformance","showMissingIcons","config","functions","loaded","domready","setTimeout","doScroll","test","readyState","listener","removeEventListener","asyncTimer","PENDING","SETTLED","FULFILLED","REJECTED","NOOP","isNode","global","process","emit","asyncSetTimer","setImmediate","asyncQueue","asyncFlush","asyncCall","callback","arg","invokeCallback","subscriber","owner","settled","_state","_data","promise","then","reject","handleThenable","resolve","resolved","fulfill","reason","publishFulfillment","publishRejection","publish","_then","_handled","notifyRejectionHandled","P","resolver","invokeResolver","rejectPromise","resolvePromise","onFulfillment","onRejection","fulfilled","rejected","catch","all","promises","results","remaining","index","race","picked","Promise","d","meaninglessTransform","size","x","y","rotate","flipX","flipY","insertCss","css","style","setAttribute","innerHTML","headChildren","childNodes","beforeChild","child","tagName","toUpperCase","insertBefore","idPool","nextUniqueId","id","Math","random","toArray","array","classArray","node","classList","split","htmlEscape","str","replace","joinStyles","styleName","transformIsMeaningful","transform","transformForSvg","containerWidth","iconWidth","outer","innerTranslate","innerScale","innerRotate","inner","path","ALL_SPACE","width","height","makeInlineSvgAbstract","params","_params$icons","main","mask","symbol","title","extra","_params$watchable","watchable","found","widthClass","ceil","attrClass","c","classes","join","content","children","attributes","tag","args","makeIconMasking","mainWidth","mainPath","maskWidth","maskPath","trans","maskRect","fill","maskInnerGroup","maskOuterGroup","maskId","clipId","defs","maskUnits","maskContentUnits","makeIconStandard","styleString","asSymbol","asIcon","offset","makeLayersTextAbstract","_params$watchable2","transformForCss","_ref2$width","_ref2$height","_ref2$startCentered","startCentered","class","noop$1","p","end","name","perf","begin","subject","initialValue","thisContext","result","func","a","b","_byUnicode","_byLigature","_byOldName","build","lookup","reducer","o","ligatures","ligature","hasRegular","shim","oldName","byUnicode","unicode","styles$1","emptyCanonicalIcon","rest","getCanonicalIcon","values","cls","getIconName","parts","slice","autoFetchSvg","iconFromMapping","mapping","toHtml","abstractNodes","_abstractNodes$attrib","_abstractNodes$childr","joinAttributes","attributeName","trim","noop$2","isWatched","mutators","mutation","newOuterHTML","parentNode","outerHTML","toLowerCase","newNode","replaceChild","nest","abstract","forSvg","RegExp","splitClasses","match","toSvg","toNode","newInnerHTML","performOperationSync","op","perform","mutations","callbackFunction","frame","requestAnimationFrame","mutator","disabled","enableObservation","mo","observe","options","treeCallback","nodeCallback","pseudoElementsCallback","_options$observeMutat","observeMutationsRoot","objects","mutationRecord","type","addedNodes","_getCanonicalIcon","childList","characterData","subtree","toHex","charCodeAt","parseTransformString","transformString","first","parseFloat","isNaN","parseMeta","_classParser","classParser","existingPrefix","existingIconName","innerText","extraClasses","extraStyles","styleParser","prop","transformParser","symbolParser","extraAttributes","attributesParser","maskParser","MissingIcon","error","message","stack","Error","create","FILL","ANIMATION_BASE","attributeType","repeatCount","dur","RING","OPACITY_ANIMATE","missing","cx","cy","r","opacity","styles$2","findIcon","styles$3","generateMutation","nodeMeta","generateLayersText","computedFontSize","parseInt","getComputedStyle","fontSize","boundingClientRect","getBoundingClientRect","generateSvgReplacementMutation","onTree","root","htmlClassList","hclAdd","suffix","add","hclRemove","remove","prefixes","prefixesDomQuery","candidates","querySelectorAll","console","resolvedMutations","onNode","replaceForPosition","position","pendingAttribute","alreadyProcessedPseudoElement","fontFamily","getPropertyValue","fontWeight","removeChild","substr","meta","firstChild","appendChild","removeAttribute","processable","operations","baseStyles","dfp","drc","fp","rc","s","dPatt","rPatt","prepIcon","ensureCss","_cssInserted","apiObject","abstractCreator","get","container","html","findIconDefinition","iconLookup","_iconLookup$prefix","library","definitions","Library","_classCallCheck","instance","Constructor","protoProps","_this","_len","_key","additions","_pullDefinitions","definition","_normalized$key","dom","i2svg","_params$node","_params$callback","watch","autoReplaceSvgRoot","autoReplace","iconDefinition","_params$transform","_params$symbol","_params$mask","_params$title","_params$classes","_params$attributes","_params$styles","maybeIconDefinition","api","noAuto","disconnect","parse","text","_params$transform2","_params$title2","_params$classes2","_params$attributes2","_params$styles2","counter","_params$title3","_params$classes3","_params$attributes3","_params$styles3","makeLayersCounterAbstract","layer","assembler","_params$autoReplaceSv","FontAwesome","addShims","_namespace$shims","apply","DebugLevel","NONE","ERROR","WARNING","INFO","DEBUG","ALL","Debug","level","_level","log","debug","info","warn","table","group","groupCollapsed","groupEnd","time","timeLog","timeEnd","trace","$_ready","DOM","selector","collection","NodeList","hide","display","newClass","oldClass","item","j","toggle","classToCheck","focus","event","$_","matches","dataset","textContent","div","last","isVisible","offsetWidth","offsetHeight","parent","parentElement","rect","top","body","scrollTop","left","scrollLeft","search","find","attribute","hasAttribute","insertAdjacentHTML","properties","property","start","Date","getTime","timer","setInterval","step","min","clearInterval","tick","check","Element","polyfill","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","reset","Request","data","encodeURIComponent","url","query","serialize","fetch","formData","headers","contentType","FormData","append","JSON","stringify","assign","method","post","response","json","blob","FileSystem","file","read","reader","FileReader","onload","onerror","readAsDataURL","readAsArrayBuffer","readAsText","File","pop","extension","Form","field","each","files","Platform","retina","devicePixelRatio","portrait","orientation","landscape","electron","cordova","platform","includes","serviceWorkers","location","protocol","Preload","route","image","Image","src","LocalStorage","version","store","upgrades","numericVersion","open","storage","upgradesToApply","versionless","storedVersions","localStorage","sort","oldVersion","oldVersionNumeric","availableUpgrades","startFrom","findIndex","u","old","previousId","previous","getItem","setItem","removeItem","_upgrade","currentValue","set","exception","getAll","newVersion","oldId","full","clear","SessionStorage","sessionStorage","IndexedDB","IDBDatabase","indexedDB","onsuccess","onupgradeneeded","createObjectStore","createIndex","transaction","objectStore","put","rename","getAllKeys","delete","RemoteStorage","endpoint","upgrade","SpaceAdapter","Space","adapter","configuration","_configuration","callbacks","transformations","object","update","contains","Text","txt","charAt","selection","getSelection","createRange","regex","replacements","Util","callable","context","uuid","crypto","getRandomValues","Uint8Array","generate","floor","substring","cachedSetTimeout","cachedClearTimeout","module","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","Item","nextTick","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","FancyError","host","Prism","prepend","render","click","highlightAll","MonogatariDebug","unshift","capitalize","useCustomAdapters","useCustomTypeOf","arrayAdapter","to","merge","splice","dateAdapter","setTime","valueOf","reduceObject","require","objectAdapter","arraysCombineAdapter","arraysAppendAdapter","arraysAppendUniqueAdapter","fulcon","Function","cloneFunction","functionsCloneAdapter","copy","functionsExtendAdapter","arraysCombine","arraysAppend","arraysAppendUnique","functionsClone","functionsExtend","preciseTypeOf","stamp","isBuffer","pojoOnly","adapters","behaviors","getTypeOfAdapter","getMergeByTypeAdapter","passThru","getInitialValue","glob","objectType","typeOf","bind","mutable","shift","immutable","Monogatari","components","component","onStart","actions","action","onLoad","Proxy","receiver","Reflect","_translations","preference","show","_history","_actions","_components","_id","_assets","_characters","character","Images","sprites","Directory","directory","Color","color","Name","Nme","Face","default_expression","Side","expressions","TypeAnimation","type_animation","language","strings","_settings","_preferences","Storage","setupStorage","_status","_storage","script","_script","setting","state","revert","_functions","_globals","_templates","_mediaPlayers","mediaPlayers","mediaKey","pause","currentTime","_temp","string_translation","string","assetCount","assets","category","asset","isImage","finally","characters","statement","translations","translate","replaceVariables","Engine","date","Scene","slot","max","saveKey","number","format","getMaxSlotId","game","cursor","resetGame","Step","label","Label","scene","Song","music","Sound","sound","Particles","particles","Show","className","history","MusicHistory","SoundHistory","ImageHistory","CharacterHistory","SceneHistory","sceneElements","SceneElements","particle","ParticlesHistory","self","canProceed","canRevert","ambientPlayer","play","playAmbient","paused","removeClass","autoPlay","stopAmbient","labelName","showMainScreen","shortcut","preventDefault","enable","interval","expected","now","replaceWith","addClass","shouldAdvance","actionToRevert","jump","reverse","destination","actionStatement","matchString","matchObject","act","_setStatement","_setCycle","setContext","willRevert","didRevert","advance","callAsync","willApply","didApply","local_settings","serviceWorker","register","registration","onupdatefound","worker","installing","onstatechange","controller","registerListener","distractionFree","skip","setup","_listeners","closest","assertAsync","stopImmediatePropagation","stopPropagation","mobile","runListener","keyboardShortcut","Adapter","friendly","Store","Endpoint","keyPath","init","localize","background","preload","fadeOut","showSplashScreen","voice","video","block","playing","finishedTyping","images","scenes","globals","deleteSlot","overwriteSlot","currentAutoSaveSlot","_AutoPlayTimer","_log","translation","Component","HTMLElement","onConfigurationUpdate","onUpdate","onStateUpdate","_html","CreditsScreen","credits","items","section","registerComponent","CreditsScreenItem","DialogLog","addAfter","scrollHeight","dialog","GameScreen","h","innerWidth","widthCss","heightCss","marginTopCss","innerHeight","marginTop","marginLeft","marginRight","backgroundSize","resize","HelpScreen","ImageGallery","showImage","unlocked","ImageGalleryItem","LoadScreen","saveTo","setAutoSlots","savedData","aNumber","bNumber","addAutoSlot","addSlot","loadFromSlot","setSlots","LoadingScreen","MainScreen","Message","subtitle","OrientationWarning","SaveScreen","slotName","customName","fs","pathFile","__dirname","getElectronPath","existsSync","executablePath","readFileSync","SettingsScreen","createEvent","initMouseEvent","dispatchEvent","change","remote","win","getCurrentWindow","isResizable","aspectRatio","aspectRatioWidth","aspectRatioHeight","setResizable","minSize","getMinimumSize","screen","getPrimaryDisplay","workAreaSize","calculatedWidth","calculatedHeight","changeWindowResolution","resolution","isFullScreen","isFullScreenable","setFullScreen","chosenWidth","chosenHeight","setSize","QuickMenu","buttons","after","before","button","QuitWarning","Slot","SlotDeletionWarning","SlotOverwriteWarning","TextInput","Action","_statement","cycle","_cycle","Canvas","mode","canvas","stop","registerAction","Centered","animate","el","destroy","Typed","dialogLog","write","Choice","onChosen","Do","choice","Condition","Class","hasClass","onRevert","Clear","Conditional","returnValue","True","False","conditional","End","ReversibleFunction","shouldContinue","Apply","fileName","lineNumber","Reverse","HideCanvas","HideCharacter","durationPosition","HideImage","HideParticles","HideVideo","InputModal","Input","inputValue","Validation","Save","Warning","submit","Revert","Jump","messages","Title","Subtitle","Next","Notify","notifications","notification","Notification","permission","requestPermission","close","pJSDom","pJS","cancelAnimationFrame","drawAnimFrame","particlesJS","Pause","media","player","mediaPlayer","Play","Audio","volume","videoPlayer","shutUp","stopVideo","mediaType","players","preferences","playerType","removeMediaPlayer","fadeTime","increments","maxVolume","fade","loop","fadePosition","onended","endState","fadeIn","HTMLVideoElement","ended","m","isColorProperty","isNamed","scene_elements","ShowCharacter","sprite","ShowImage","Stop","statements","Vibrate","vibrate","Video","videos","requestFullscreen","toggleClass","Wait","Dialog","expression","nvl","clientHeight","textObject","typedConfiguration","typeSpeed","showCursor","preStringTyped","onStringTyped","onDestroy","animation","displayNvlDialog","checkUnread","displayDialog","characterDialog","narratorDialog","_action"],"mappings":"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","file":"monogatari.a3b499a4.js","sourceRoot":"../src","sourcesContent":["/**\n * ==============================\n * Monogatari Core Engine\n * ==============================\n */\n\n/**\n * Import Global Vendor Libraries, these are third party libraries that must be\n * globally imported in order for Monogatari to work correctly.\n *\n * TODO: Find a way to import Font Awesome in a better way\n */\nimport '@babel/polyfill';\nimport './../node_modules/@fortawesome/fontawesome-free/js/all.js';\n\n/**\n * Export Vendor Libraries, these are third party libraries that Monogatari uses\n * for certain functions and may be helpful for the developers.\n */\nexport * from '@aegis-framework/artemis';\nexport * from 'typed.js';\n\nimport 'particles.js';\n\n/**\n * Import Monogatari extra files such as actions, translations and all the functionality\n * apart from the core engine.\n */\nimport './lib/translations/index.js';\nimport './lib/components/index.js';\nimport './lib/actions/index.js';\n\n/**\n * Export Monogatari Core\n */\nexport * from './lib/Action.js';\nexport * from './lib/Component.js';\nexport * from './lib/FancyError.js';\nexport * from './lib/monogatari';","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","module.exports = false;\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });\n\nrequire('./_add-to-unscopables')('copyWithin');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","module.exports = {};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","'use strict';\nvar $export = require('./_export');\nvar createProperty = require('./_create-property');\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * require('./_fails')(function () {\n  function F() { /* empty */ }\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */) {\n    var index = 0;\n    var aLen = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(aLen);\n    while (aLen > index) createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","require('./_set-species')('Array');\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","'use strict';\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\nvar NUMBER = 'number';\n\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');\n  return toPrimitive(anObject(this), hint != NUMBER);\n};\n","var TO_PRIMITIVE = require('./_wks')('toPrimitive');\nvar proto = Date.prototype;\n\nif (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));\n","'use strict';\nvar isObject = require('./_is-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar HAS_INSTANCE = require('./_wks')('hasInstance');\nvar FunctionProto = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {\n  if (typeof this != 'function' || !isObject(O)) return false;\n  if (!isObject(this.prototype)) return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n  return false;\n} });\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","exports.f = {}.propertyIsEnumerable;\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","// 20.2.2.20 Math.log1p(x)\nmodule.exports = Math.log1p || function log1p(x) {\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n};\n","// 20.2.2.3 Math.acosh(x)\nvar $export = require('./_export');\nvar log1p = require('./_math-log1p');\nvar sqrt = Math.sqrt;\nvar $acosh = Math.acosh;\n\n$export($export.S + $export.F * !($acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  && $acosh(Infinity) == Infinity\n), 'Math', {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? Math.log(x) + Math.LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n","// 20.2.2.5 Math.asinh(x)\nvar $export = require('./_export');\nvar $asinh = Math.asinh;\n\nfunction asinh(x) {\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n}\n\n// Tor Browser bug: Math.asinh(0) -> -0\n$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });\n","// 20.2.2.7 Math.atanh(x)\nvar $export = require('./_export');\nvar $atanh = Math.atanh;\n\n// Tor Browser bug: Math.atanh(-0) -> 0\n$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n  atanh: function atanh(x) {\n    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n  }\n});\n","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export');\nvar sign = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n","// 20.2.2.11 Math.clz32(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  clz32: function clz32(x) {\n    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n  }\n});\n","// 20.2.2.12 Math.cosh(x)\nvar $export = require('./_export');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  cosh: function cosh(x) {\n    return (exp(x = +x) + exp(-x)) / 2;\n  }\n});\n","// 20.2.2.14 Math.expm1(x)\nvar $expm1 = Math.expm1;\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x) {\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n} : $expm1;\n","// 20.2.2.14 Math.expm1(x)\nvar $export = require('./_export');\nvar $expm1 = require('./_math-expm1');\n\n$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });\n","// 20.2.2.16 Math.fround(x)\nvar sign = require('./_math-sign');\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = Math.abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n","// 20.2.2.16 Math.fround(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { fround: require('./_math-fround') });\n","// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n","// 20.2.2.18 Math.imul(x, y)\nvar $export = require('./_export');\nvar $imul = Math.imul;\n\n// some WebKit versions fails with big numbers, some has wrong arity\n$export($export.S + $export.F * require('./_fails')(function () {\n  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n}), 'Math', {\n  imul: function imul(x, y) {\n    var UINT16 = 0xffff;\n    var xn = +x;\n    var yn = +y;\n    var xl = UINT16 & xn;\n    var yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n","// 20.2.2.20 Math.log1p(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { log1p: require('./_math-log1p') });\n","// 20.2.2.21 Math.log10(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log10: function log10(x) {\n    return Math.log(x) * Math.LOG10E;\n  }\n});\n","// 20.2.2.22 Math.log2(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n","// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { sign: require('./_math-sign') });\n","// 20.2.2.30 Math.sinh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n// V8 near Chromium 38 has a problem with very small numbers\n$export($export.S + $export.F * require('./_fails')(function () {\n  return !Math.sinh(-2e-17) != -2e-17;\n}), 'Math', {\n  sinh: function sinh(x) {\n    return Math.abs(x = +x) < 1\n      ? (expm1(x) - expm1(-x)) / 2\n      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n  }\n});\n","// 20.2.2.33 Math.tanh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  tanh: function tanh(x) {\n    var a = expm1(x = +x);\n    var b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n","// 20.2.2.34 Math.trunc(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  trunc: function trunc(it) {\n    return (it > 0 ? Math.floor : Math.ceil)(it);\n  }\n});\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","// 20.1.2.1 Number.EPSILON\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });\n","// 20.1.2.2 Number.isFinite(number)\nvar $export = require('./_export');\nvar _isFinite = require('./_global').isFinite;\n\n$export($export.S, 'Number', {\n  isFinite: function isFinite(it) {\n    return typeof it == 'number' && _isFinite(it);\n  }\n});\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","// 20.1.2.5 Number.isSafeInteger(number)\nvar $export = require('./_export');\nvar isInteger = require('./_is-integer');\nvar abs = Math.abs;\n\n$export($export.S, 'Number', {\n  isSafeInteger: function isSafeInteger(number) {\n    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n  }\n});\n","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n","// 20.1.2.10 Number.MIN_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 20.1.2.12 Number.parseFloat(string)\n$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });\n","exports.f = Object.getOwnPropertySymbols;\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","'use strict';\n// Forced replacement prototype accessors methods\nmodule.exports = require('./_library') || !require('./_fails')(function () {\n  var K = Math.random();\n  // In FF throws only define methods\n  // eslint-disable-next-line no-undef, no-useless-call\n  __defineSetter__.call(null, K, function () { /* empty */ });\n  delete require('./_global')[K];\n});\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar aFunction = require('./_a-function');\nvar $defineProperty = require('./_object-dp');\n\n// B.2.2.2 Object.prototype.__defineGetter__(P, getter)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __defineGetter__: function __defineGetter__(P, getter) {\n    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar aFunction = require('./_a-function');\nvar $defineProperty = require('./_object-dp');\n\n// B.2.2.3 Object.prototype.__defineSetter__(P, setter)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __defineSetter__: function __defineSetter__(P, setter) {\n    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });\n  }\n});\n","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","// all object keys, includes non-enumerable and symbols\nvar gOPN = require('./_object-gopn');\nvar gOPS = require('./_object-gops');\nvar anObject = require('./_an-object');\nvar Reflect = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = gOPN.f(anObject(it));\n  var getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export = require('./_export');\nvar ownKeys = require('./_own-keys');\nvar toIObject = require('./_to-iobject');\nvar gOPD = require('./_object-gopd');\nvar createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIObject(object);\n    var getDesc = gOPD.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var i = 0;\n    var key, desc;\n    while (keys.length > i) {\n      desc = getDesc(O, key = keys[i++]);\n      if (desc !== undefined) createProperty(result, key, desc);\n    }\n    return result;\n  }\n});\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\nvar getPrototypeOf = require('./_object-gpo');\nvar getOwnPropertyDescriptor = require('./_object-gopd').f;\n\n// B.2.2.4 Object.prototype.__lookupGetter__(P)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __lookupGetter__: function __lookupGetter__(P) {\n    var O = toObject(this);\n    var K = toPrimitive(P, true);\n    var D;\n    do {\n      if (D = getOwnPropertyDescriptor(O, K)) return D.get;\n    } while (O = getPrototypeOf(O));\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\nvar getPrototypeOf = require('./_object-gpo');\nvar getOwnPropertyDescriptor = require('./_object-gopd').f;\n\n// B.2.2.5 Object.prototype.__lookupSetter__(P)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __lookupSetter__: function __lookupSetter__(P) {\n    var O = toObject(this);\n    var K = toPrimitive(P, true);\n    var D;\n    do {\n      if (D = getOwnPropertyDescriptor(O, K)) return D.set;\n    } while (O = getPrototypeOf(O));\n  }\n});\n","// 19.1.2.15 Object.preventExtensions(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('preventExtensions', function ($preventExtensions) {\n  return function preventExtensions(it) {\n    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n  };\n});\n","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', { is: require('./_same-value') });\n","// 19.1.2.12 Object.isFrozen(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isFrozen', function ($isFrozen) {\n  return function isFrozen(it) {\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n","// 19.1.2.13 Object.isSealed(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isSealed', function ($isSealed) {\n  return function isSealed(it) {\n    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n  };\n});\n","// 19.1.2.11 Object.isExtensible(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isExtensible', function ($isExtensible) {\n  return function isExtensible(it) {\n    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n  };\n});\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// 19.1.2.17 Object.seal(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('seal', function ($seal) {\n  return function seal(it) {\n    return $seal && isObject(it) ? $seal(meta(it)) : it;\n  };\n});\n","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar rApply = (require('./_global').Reflect || {}).apply;\nvar fApply = Function.apply;\n// MS Edge argumentsList argument is optional\n$export($export.S + $export.F * !require('./_fails')(function () {\n  rApply(function () { /* empty */ });\n}), 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList) {\n    var T = aFunction(target);\n    var L = anObject(argumentsList);\n    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n  }\n});\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\nvar dP = require('./_object-dp');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n$export($export.S + $export.F * require('./_fails')(function () {\n  // eslint-disable-next-line no-undef\n  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });\n}), 'Reflect', {\n  defineProperty: function defineProperty(target, propertyKey, attributes) {\n    anObject(target);\n    propertyKey = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      dP.f(target, propertyKey, attributes);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 26.1.4 Reflect.deleteProperty(target, propertyKey)\nvar $export = require('./_export');\nvar gOPD = require('./_object-gopd').f;\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  deleteProperty: function deleteProperty(target, propertyKey) {\n    var desc = gOPD(anObject(target), propertyKey);\n    return desc && !desc.configurable ? false : delete target[propertyKey];\n  }\n});\n","// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\n\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var desc, proto;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', { get: get });\n","// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\nvar gOPD = require('./_object-gopd');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n    return gOPD.f(anObject(target), propertyKey);\n  }\n});\n","// 26.1.8 Reflect.getPrototypeOf(target)\nvar $export = require('./_export');\nvar getProto = require('./_object-gpo');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getPrototypeOf: function getPrototypeOf(target) {\n    return getProto(anObject(target));\n  }\n});\n","// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey) {\n    return propertyKey in target;\n  }\n});\n","// 26.1.10 Reflect.isExtensible(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $isExtensible = Object.isExtensible;\n\n$export($export.S, 'Reflect', {\n  isExtensible: function isExtensible(target) {\n    anObject(target);\n    return $isExtensible ? $isExtensible(target) : true;\n  }\n});\n","// 26.1.11 Reflect.ownKeys(target)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });\n","// 26.1.12 Reflect.preventExtensions(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $preventExtensions = Object.preventExtensions;\n\n$export($export.S, 'Reflect', {\n  preventExtensions: function preventExtensions(target) {\n    anObject(target);\n    try {\n      if ($preventExtensions) $preventExtensions(target);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n","// 26.1.14 Reflect.setPrototypeOf(target, proto)\nvar $export = require('./_export');\nvar setProto = require('./_set-proto');\n\nif (setProto) $export($export.S, 'Reflect', {\n  setPrototypeOf: function setPrototypeOf(target, proto) {\n    setProto.check(target, proto);\n    try {\n      setProto.set(target, proto);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar sameValue = require('./_same-value');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","exports.f = require('./_wks');\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","require('./_wks-define')('asyncIterator');\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","'use strict';\n// B.2.3.3 String.prototype.big()\nrequire('./_string-html')('big', function (createHTML) {\n  return function big() {\n    return createHTML(this, 'big', '', '');\n  };\n});\n","'use strict';\n// B.2.3.4 String.prototype.blink()\nrequire('./_string-html')('blink', function (createHTML) {\n  return function blink() {\n    return createHTML(this, 'blink', '', '');\n  };\n});\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","'use strict';\nvar $export = require('./_export');\nvar $at = require('./_string-at')(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos) {\n    return $at(this, pos);\n  }\n});\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","'use strict';\n// B.2.3.7 String.prototype.fontcolor(color)\nrequire('./_string-html')('fontcolor', function (createHTML) {\n  return function fontcolor(color) {\n    return createHTML(this, 'font', 'color', color);\n  };\n});\n","'use strict';\n// B.2.3.8 String.prototype.fontsize(size)\nrequire('./_string-html')('fontsize', function (createHTML) {\n  return function fontsize(size) {\n    return createHTML(this, 'font', 'size', size);\n  };\n});\n","var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\n// B.2.3.9 String.prototype.italics()\nrequire('./_string-html')('italics', function (createHTML) {\n  return function italics() {\n    return createHTML(this, 'i', '', '');\n  };\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","var $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite) {\n    var tpl = toIObject(callSite.raw);\n    var len = toLength(tpl.length);\n    var aLen = arguments.length;\n    var res = [];\n    var i = 0;\n    while (len > i) {\n      res.push(String(tpl[i++]));\n      if (i < aLen) res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","'use strict';\n// B.2.3.12 String.prototype.strike()\nrequire('./_string-html')('strike', function (createHTML) {\n  return function strike() {\n    return createHTML(this, 'strike', '', '');\n  };\n});\n","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n","'use strict';\n// B.2.3.14 String.prototype.sup()\nrequire('./_string-html')('sup', function (createHTML) {\n  return function sup() {\n    return createHTML(this, 'sup', '', '');\n  };\n});\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","'use strict';\nvar $export = require('./_export');\nvar $typed = require('./_typed');\nvar buffer = require('./_typed-buffer');\nvar anObject = require('./_an-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar isObject = require('./_is-object');\nvar ArrayBuffer = require('./_global').ArrayBuffer;\nvar speciesConstructor = require('./_species-constructor');\nvar $ArrayBuffer = buffer.ArrayBuffer;\nvar $DataView = buffer.DataView;\nvar $isView = $typed.ABV && ArrayBuffer.isView;\nvar $slice = $ArrayBuffer.prototype.slice;\nvar VIEW = $typed.VIEW;\nvar ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it) {\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function () {\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end) {\n    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix\n    var len = anObject(this).byteLength;\n    var first = toAbsoluteIndex(start, len);\n    var fin = toAbsoluteIndex(end === undefined ? len : end, len);\n    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));\n    var viewS = new $DataView(this);\n    var viewT = new $DataView(result);\n    var index = 0;\n    while (first < fin) {\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","require('./_typed-array')('Int8', 1, function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n","require('./_typed-array')('Int16', 2, function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Int32', 4, function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint32', 4, function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Float32', 4, function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Float64', 8, function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\nvar redefineAll = require('./_redefine-all');\nvar getWeak = require('./_meta').getWeak;\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar createArrayMethod = require('./_array-methods');\nvar $has = require('./_has');\nvar validate = require('./_validate-collection');\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function () {\n  this.a = [];\n};\nvar findUncaughtFrozen = function (store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;      // collection type\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n","'use strict';\nvar global = require('./_global');\nvar each = require('./_array-methods')(0);\nvar redefine = require('./_redefine');\nvar meta = require('./_meta');\nvar assign = require('./_object-assign');\nvar weak = require('./_collection-weak');\nvar isObject = require('./_is-object');\nvar validate = require('./_validate-collection');\nvar NATIVE_WEAK_MAP = require('./_validate-collection');\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar InternalMap;\n\nvar wrapper = function (get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      // store frozen objects on internal weakmap shim\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n","'use strict';\nvar weak = require('./_collection-weak');\nvar validate = require('./_validate-collection');\nvar WEAK_SET = 'WeakSet';\n\n// 23.4 WeakSet Objects\nrequire('./_collection')(WEAK_SET, function (get) {\n  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value) {\n    return weak.def(validate(this, WEAK_SET), value, true);\n  }\n}, weak, false, true);\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","// ie9- setTimeout & setInterval additional parameters fix\nvar global = require('./_global');\nvar $export = require('./_export');\nvar userAgent = require('./_user-agent');\nvar slice = [].slice;\nvar MSIE = /MSIE .\\./.test(userAgent); // <- dirty ie9- check\nvar wrap = function (set) {\n  return function (fn, time /* , ...args */) {\n    var boundArgs = arguments.length > 2;\n    var args = boundArgs ? slice.call(arguments, 2) : false;\n    return set(boundArgs ? function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);\n    } : fn, time);\n  };\n};\n$export($export.G + $export.B + $export.F * MSIE, {\n  setTimeout: wrap(global.setTimeout),\n  setInterval: wrap(global.setInterval)\n});\n","var $export = require('./_export');\nvar $task = require('./_task');\n$export($export.G + $export.B, {\n  setImmediate: $task.set,\n  clearImmediate: $task.clear\n});\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*!\n * Font Awesome Free 5.8.1 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n */\n(function () {\n  'use strict';\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var icons = {\n    \"500px\": [448, 512, [], \"f26e\", \"M103.3 344.3c-6.5-14.2-6.9-18.3 7.4-23.1 25.6-8 8 9.2 43.2 49.2h.3v-93.9c1.2-50.2 44-92.2 97.7-92.2 53.9 0 97.7 43.5 97.7 96.8 0 63.4-60.8 113.2-128.5 93.3-10.5-4.2-2.1-31.7 8.5-28.6 53 0 89.4-10.1 89.4-64.4 0-61-77.1-89.6-116.9-44.6-23.5 26.4-17.6 42.1-17.6 157.6 50.7 31 118.3 22 160.4-20.1 24.8-24.8 38.5-58 38.5-93 0-35.2-13.8-68.2-38.8-93.3-24.8-24.8-57.8-38.5-93.3-38.5s-68.8 13.8-93.5 38.5c-.3.3-16 16.5-21.2 23.9l-.5.6c-3.3 4.7-6.3 9.1-20.1 6.1-6.9-1.7-14.3-5.8-14.3-11.8V20c0-5 3.9-10.5 10.5-10.5h241.3c8.3 0 8.3 11.6 8.3 15.1 0 3.9 0 15.1-8.3 15.1H130.3v132.9h.3c104.2-109.8 282.8-36 282.8 108.9 0 178.1-244.8 220.3-310.1 62.8zm63.3-260.8c-.5 4.2 4.6 24.5 14.6 20.6C306 56.6 384 144.5 390.6 144.5c4.8 0 22.8-15.3 14.3-22.8-93.2-89-234.5-57-238.3-38.2zM393 414.7C283 524.6 94 475.5 61 310.5c0-12.2-30.4-7.4-28.9 3.3 24 173.4 246 256.9 381.6 121.3 6.9-7.8-12.6-28.4-20.7-20.4zM213.6 306.6c0 4 4.3 7.3 5.5 8.5 3 3 6.1 4.4 8.5 4.4 3.8 0 2.6.2 22.3-19.5 19.6 19.3 19.1 19.5 22.3 19.5 5.4 0 18.5-10.4 10.7-18.2L265.6 284l18.2-18.2c6.3-6.8-10.1-21.8-16.2-15.7L249.7 268c-18.6-18.8-18.4-19.5-21.5-19.5-5 0-18 11.7-12.4 17.3L234 284c-18.1 17.9-20.4 19.2-20.4 22.6z\"],\n    \"accessible-icon\": [448, 512, [], \"f368\", \"M423.9 255.8L411 413.1c-3.3 40.7-63.9 35.1-60.6-4.9l10-122.5-41.1 2.3c10.1 20.7 15.8 43.9 15.8 68.5 0 41.2-16.1 78.7-42.3 106.5l-39.3-39.3c57.9-63.7 13.1-167.2-74-167.2-25.9 0-49.5 9.9-67.2 26L73 243.2c22-20.7 50.1-35.1 81.4-40.2l75.3-85.7-42.6-24.8-51.6 46c-30 26.8-70.6-18.5-40.5-45.4l68-60.7c9.8-8.8 24.1-10.2 35.5-3.6 0 0 139.3 80.9 139.5 81.1 16.2 10.1 20.7 36 6.1 52.6L285.7 229l106.1-5.9c18.5-1.1 33.6 14.4 32.1 32.7zm-64.9-154c28.1 0 50.9-22.8 50.9-50.9C409.9 22.8 387.1 0 359 0c-28.1 0-50.9 22.8-50.9 50.9 0 28.1 22.8 50.9 50.9 50.9zM179.6 456.5c-80.6 0-127.4-90.6-82.7-156.1l-39.7-39.7C36.4 287 24 320.3 24 356.4c0 130.7 150.7 201.4 251.4 122.5l-39.7-39.7c-16 10.9-35.3 17.3-56.1 17.3z\"],\n    \"accusoft\": [640, 512, [], \"f369\", \"M322.1 252v-1l-51.2-65.8s-12 1.6-25 15.1c-9 9.3-242.1 239.1-243.4 240.9-7 10 1.6 6.8 15.7 1.7.8 0 114.5-36.6 114.5-36.6.5-.6-.1-.1.6-.6-.4-5.1-.8-26.2-1-27.7-.6-5.2 2.2-6.9 7-8.9l92.6-33.8c.6-.8 88.5-81.7 90.2-83.3zm160.1 120.1c13.3 16.1 20.7 13.3 30.8 9.3 3.2-1.2 115.4-47.6 117.8-48.9 8-4.3-1.7-16.7-7.2-23.4-2.1-2.5-205.1-245.6-207.2-248.3-9.7-12.2-14.3-12.9-38.4-12.8-10.2 0-106.8.5-116.5.6-19.2.1-32.9-.3-19.2 16.9C250 75 476.5 365.2 482.2 372.1zm152.7 1.6c-2.3-.3-24.6-4.7-38-7.2 0 0-115 50.4-117.5 51.6-16 7.3-26.9-3.2-36.7-14.6l-57.1-74c-5.4-.9-60.4-9.6-65.3-9.3-3.1.2-9.6.8-14.4 2.9-4.9 2.1-145.2 52.8-150.2 54.7-5.1 2-11.4 3.6-11.1 7.6.2 2.5 2 2.6 4.6 3.5 2.7.8 300.9 67.6 308 69.1 15.6 3.3 38.5 10.5 53.6 1.7 2.1-1.2 123.8-76.4 125.8-77.8 5.4-4 4.3-6.8-1.7-8.2z\"],\n    \"acquisitions-incorporated\": [384, 512, [], \"f6af\", \"M357.45 468.2c-1.2-7.7-1.3-7.6-9.6-7.6-99.8.2-111.8-2.4-112.7-2.6-12.3-1.7-20.6-10.5-21-23.1-.1-1.6-.2-71.6-1-129.1-.1-4.7 1.6-6.4 5.9-7.5 12.5-3 24.9-6.1 37.3-9.7 4.3-1.3 6.8-.2 8.4 3.5 4.5 10.3 8.8 20.6 13.2 30.9 1.6 3.7.1 4.4-3.4 4.4-10-.2-20-.1-30.4-.1v27h116c-1.4-9.5-2.7-18.1-4-27.5-7 0-13.8.4-20.4-.1-22.6-1.6-18.3-4.4-84-158.6-8.8-20.1-27.9-62.1-36.5-89.2-4.4-14 5.5-25.4 18.9-26.6 18.6-1.7 37.5-1.6 56.2-2 20.6-.4 41.2-.4 61.8-.5 3.1 0 4-1.4 4.3-4.3 1.2-9.8 2.7-19.5 4-29.2.8-5.3 1.6-10.7 2.4-16.1L23.75 0c-3.6 0-5.3 1.1-4.6 5.3 2.2 13.2-.8.8 6.4 45.3 63.4 0 71.8.9 101.8.5 12.3-.2 37 3.5 37.7 22.1.4 11.4-1.1 11.3-32.6 87.4-53.8 129.8-50.7 120.3-67.3 161-1.7 4.1-3.6 5.2-7.6 5.2-8.5-.2-17-.3-25.4.1-1.9.1-5.2 1.8-5.5 3.2-1.5 8.1-2.2 16.3-3.2 24.9h114.3v-27.6c-6.9 0-33.5.4-35.3-2.9 5.3-12.3 10.4-24.4 15.7-36.7 16.3 4 31.9 7.8 47.6 11.7 3.4.9 4.6 3 4.6 6.8-.1 42.9.1 85.9.2 128.8 0 10.2-5.5 19.1-14.9 23.1-6.5 2.7-3.3 3.4-121.4 2.4-5.3 0-7.1 2-7.6 6.8-1.5 12.9-2.9 25.9-5 38.8-.8 5 1.3 5.7 5.3 5.7 183.2.6-30.7 0 337.1 0-2.5-15-4.4-29.4-6.6-43.7zm-174.9-205.7c-13.3-4.2-26.6-8.2-39.9-12.5a44.53 44.53 0 0 1-5.8-2.9c17.2-44.3 34.2-88.1 51.3-132.1 7.5 2.4 7.9-.8 9.4 0 9.3 22.5 18.1 60.1 27 82.8 6.6 16.7 13 33.5 19.7 50.9a35.78 35.78 0 0 1-3.9 2.1c-13.1 3.9-26.4 7.5-39.4 11.7a27.66 27.66 0 0 1-18.4 0z\"],\n    \"adn\": [496, 512, [], \"f170\", \"M248 167.5l64.9 98.8H183.1l64.9-98.8zM496 256c0 136.9-111.1 248-248 248S0 392.9 0 256 111.1 8 248 8s248 111.1 248 248zm-99.8 82.7L248 115.5 99.8 338.7h30.4l33.6-51.7h168.6l33.6 51.7h30.2z\"],\n    \"adobe\": [512, 512, [], \"f778\", \"M315.5 64h170.9v384L315.5 64zm-119 0H25.6v384L196.5 64zM256 206.1L363.5 448h-73l-30.7-76.8h-78.7L256 206.1z\"],\n    \"adversal\": [512, 512, [], \"f36a\", \"M482.1 32H28.7C5.8 32 0 37.9 0 60.9v390.2C0 474.4 5.8 480 28.7 480h453.4c24.4 0 29.9-5.2 29.9-29.7V62.2c0-24.6-5.4-30.2-29.9-30.2zM178.4 220.3c-27.5-20.2-72.1-8.7-84.2 23.4-4.3 11.1-9.3 9.5-17.5 8.3-9.7-1.5-17.2-3.2-22.5-5.5-28.8-11.4 8.6-55.3 24.9-64.3 41.1-21.4 83.4-22.2 125.3-4.8 40.9 16.8 34.5 59.2 34.5 128.5 2.7 25.8-4.3 58.3 9.3 88.8 1.9 4.4.4 7.9-2.7 10.7-8.4 6.7-39.3 2.2-46.6-7.4-1.9-2.2-1.8-3.6-3.9-6.2-3.6-3.9-7.3-2.2-11.9 1-57.4 36.4-140.3 21.4-147-43.3-3.1-29.3 12.4-57.1 39.6-71 38.2-19.5 112.2-11.8 114-30.9 1.1-10.2-1.9-20.1-11.3-27.3zm286.7 222c0 15.1-11.1 9.9-17.8 9.9H52.4c-7.4 0-18.2 4.8-17.8-10.7.4-13.9 10.5-9.1 17.1-9.1 132.3-.4 264.5-.4 396.8 0 6.8 0 16.6-4.4 16.6 9.9zm3.8-340.5v291c0 5.7-.7 13.9-8.1 13.9-12.4-.4-27.5 7.1-36.1-5.6-5.8-8.7-7.8-4-12.4-1.2-53.4 29.7-128.1 7.1-144.4-85.2-6.1-33.4-.7-67.1 15.7-100 11.8-23.9 56.9-76.1 136.1-30.5v-71c0-26.2-.1-26.2 26-26.2 3.1 0 6.6.4 9.7 0 10.1-.8 13.6 4.4 13.6 14.3-.1.2-.1.3-.1.5zm-51.5 232.3c-19.5 47.6-72.9 43.3-90 5.2-15.1-33.3-15.5-68.2.4-101.5 16.3-34.1 59.7-35.7 81.5-4.8 20.6 28.8 14.9 84.6 8.1 101.1zm-294.8 35.3c-7.5-1.3-33-3.3-33.7-27.8-.4-13.9 7.8-23 19.8-25.8 24.4-5.9 49.3-9.9 73.7-14.7 8.9-2 7.4 4.4 7.8 9.5 1.4 33-26.1 59.2-67.6 58.8z\"],\n    \"affiliatetheme\": [512, 512, [], \"f36b\", \"M159.7 237.4C108.4 308.3 43.1 348.2 14 326.6-15.2 304.9 2.8 230 54.2 159.1c51.3-70.9 116.6-110.8 145.7-89.2 29.1 21.6 11.1 96.6-40.2 167.5zm351.2-57.3C437.1 303.5 319 367.8 246.4 323.7c-25-15.2-41.3-41.2-49-73.8-33.6 64.8-92.8 113.8-164.1 133.2 49.8 59.3 124.1 96.9 207 96.9 150 0 271.6-123.1 271.6-274.9.1-8.5-.3-16.8-1-25z\"],\n    \"airbnb\": [448, 512, [], \"f834\", \"M224 373.12c-25.24-31.67-40.08-59.43-45-83.18-22.55-88 112.61-88 90.06 0-5.45 24.25-20.29 52-45 83.18zm138.15 73.23c-42.06 18.31-83.67-10.88-119.3-50.47 103.9-130.07 46.11-200-18.85-200-54.92 0-85.16 46.51-73.28 100.5 6.93 29.19 25.23 62.39 54.43 99.5-32.53 36.05-60.55 52.69-85.15 54.92-50 7.43-89.11-41.06-71.3-91.09 15.1-39.16 111.72-231.18 115.87-241.56 15.75-30.07 25.56-57.4 59.38-57.4 32.34 0 43.4 25.94 60.37 59.87 36 70.62 89.35 177.48 114.84 239.09 13.17 33.07-1.37 71.29-37.01 86.64zm47-136.12C280.27 35.93 273.13 32 224 32c-45.52 0-64.87 31.67-84.66 72.79C33.18 317.1 22.89 347.19 22 349.81-3.22 419.14 48.74 480 111.63 480c21.71 0 60.61-6.06 112.37-62.4 58.68 63.78 101.26 62.4 112.37 62.4 62.89.05 114.85-60.86 89.61-130.19.02-3.89-16.82-38.9-16.82-39.58z\"],\n    \"algolia\": [448, 512, [], \"f36c\", \"M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z\"],\n    \"alipay\": [448, 512, [], \"f642\", \"M377.74 32H70.26C31.41 32 0 63.41 0 102.26v307.48C0 448.59 31.41 480 70.26 480h307.48c38.52 0 69.76-31.08 70.26-69.6-45.96-25.62-110.59-60.34-171.6-88.44-32.07 43.97-84.14 81-148.62 81-70.59 0-93.73-45.3-97.04-76.37-3.97-39.01 14.88-81.5 99.52-81.5 35.38 0 79.35 10.25 127.13 24.96 16.53-30.09 26.45-60.34 26.45-60.34h-178.2v-16.7h92.08v-31.24H88.28v-19.01h109.44V92.34h50.92v50.42h109.44v19.01H248.63v31.24h88.77s-15.21 46.62-38.35 90.92c48.93 16.7 100.01 36.04 148.62 52.74V102.26C447.83 63.57 416.43 32 377.74 32zM47.28 322.95c.99 20.17 10.25 53.73 69.93 53.73 52.07 0 92.58-39.68 117.87-72.9-44.63-18.68-84.48-31.41-109.44-31.41-67.45 0-79.35 33.06-78.36 50.58z\"],\n    \"amazon\": [448, 512, [], \"f270\", \"M257.2 162.7c-48.7 1.8-169.5 15.5-169.5 117.5 0 109.5 138.3 114 183.5 43.2 6.5 10.2 35.4 37.5 45.3 46.8l56.8-56S341 288.9 341 261.4V114.3C341 89 316.5 32 228.7 32 140.7 32 94 87 94 136.3l73.5 6.8c16.3-49.5 54.2-49.5 54.2-49.5 40.7-.1 35.5 29.8 35.5 69.1zm0 86.8c0 80-84.2 68-84.2 17.2 0-47.2 50.5-56.7 84.2-57.8v40.6zm136 163.5c-7.7 10-70 67-174.5 67S34.2 408.5 9.7 379c-6.8-7.7 1-11.3 5.5-8.3C88.5 415.2 203 488.5 387.7 401c7.5-3.7 13.3 2 5.5 12zm39.8 2.2c-6.5 15.8-16 26.8-21.2 31-5.5 4.5-9.5 2.7-6.5-3.8s19.3-46.5 12.7-55c-6.5-8.3-37-4.3-48-3.2-10.8 1-13 2-14-.3-2.3-5.7 21.7-15.5 37.5-17.5 15.7-1.8 41-.8 46 5.7 3.7 5.1 0 27.1-6.5 43.1z\"],\n    \"amazon-pay\": [640, 512, [], \"f42c\", \"M14 325.3c2.3-4.2 5.2-4.9 9.7-2.5 10.4 5.6 20.6 11.4 31.2 16.7a595.88 595.88 0 0 0 127.4 46.3 616.61 616.61 0 0 0 63.2 11.8 603.33 603.33 0 0 0 95 5.2c17.4-.4 34.8-1.8 52.1-3.8a603.66 603.66 0 0 0 163.3-42.8c2.9-1.2 5.9-2 9.1-1.2 6.7 1.8 9 9 4.1 13.9a70 70 0 0 1-9.6 7.4c-30.7 21.1-64.2 36.4-99.6 47.9a473.31 473.31 0 0 1-75.1 17.6 431 431 0 0 1-53.2 4.8 21.3 21.3 0 0 0-2.5.3H308a21.3 21.3 0 0 0-2.5-.3c-3.6-.2-7.2-.3-10.7-.4a426.3 426.3 0 0 1-50.4-5.3A448.4 448.4 0 0 1 164 420a443.33 443.33 0 0 1-145.6-87c-1.8-1.6-3-3.8-4.4-5.7zM172 65.1l-4.3.6a80.92 80.92 0 0 0-38 15.1c-2.4 1.7-4.6 3.5-7.1 5.4a4.29 4.29 0 0 1-.4-1.4c-.4-2.7-.8-5.5-1.3-8.2-.7-4.6-3-6.6-7.6-6.6h-11.5c-6.9 0-8.2 1.3-8.2 8.2v209.3c0 1 0 2 .1 3 .2 3 2 4.9 4.9 5 7 .1 14.1.1 21.1 0 2.9 0 4.7-2 5-5 .1-1 .1-2 .1-3v-72.4c1.1.9 1.7 1.4 2.2 1.9 17.9 14.9 38.5 19.8 61 15.4 20.4-4 34.6-16.5 43.8-34.9 7-13.9 9.9-28.7 10.3-44.1.5-17.1-1.2-33.9-8.1-49.8-8.5-19.6-22.6-32.5-43.9-36.9-3.2-.7-6.5-1-9.8-1.5-2.8-.1-5.5-.1-8.3-.1zM124.6 107a3.48 3.48 0 0 1 1.7-3.3c13.7-9.5 28.8-14.5 45.6-13.2 14.9 1.1 27.1 8.4 33.5 25.9 3.9 10.7 4.9 21.8 4.9 33 0 10.4-.8 20.6-4 30.6-6.8 21.3-22.4 29.4-42.6 28.5-14-.6-26.2-6-37.4-13.9a3.57 3.57 0 0 1-1.7-3.3c.1-14.1 0-28.1 0-42.2s.1-28 0-42.1zm205.7-41.9c-1 .1-2 .3-2.9.4a148 148 0 0 0-28.9 4.1c-6.1 1.6-12 3.8-17.9 5.8-3.6 1.2-5.4 3.8-5.3 7.7.1 3.3-.1 6.6 0 9.9.1 4.8 2.1 6.1 6.8 4.9 7.8-2 15.6-4.2 23.5-5.7 12.3-2.3 24.7-3.3 37.2-1.4 6.5 1 12.6 2.9 16.8 8.4 3.7 4.8 5.1 10.5 5.3 16.4.3 8.3.2 16.6.3 24.9a7.84 7.84 0 0 1-.2 1.4c-.5-.1-.9 0-1.3-.1a180.56 180.56 0 0 0-32-4.9c-11.3-.6-22.5.1-33.3 3.9-12.9 4.5-23.3 12.3-29.4 24.9-4.7 9.8-5.4 20.2-3.9 30.7 2 14 9 24.8 21.4 31.7 11.9 6.6 24.8 7.4 37.9 5.4 15.1-2.3 28.5-8.7 40.3-18.4a7.36 7.36 0 0 1 1.6-1.1c.6 3.8 1.1 7.4 1.8 11 .6 3.1 2.5 5.1 5.4 5.2 5.4.1 10.9.1 16.3 0a4.84 4.84 0 0 0 4.8-4.7 26.2 26.2 0 0 0 .1-2.8v-106a80 80 0 0 0-.9-12.9c-1.9-12.9-7.4-23.5-19-30.4-6.7-4-14.1-6-21.8-7.1-3.6-.5-7.2-.8-10.8-1.3-3.9.1-7.9.1-11.9.1zm35 127.7a3.33 3.33 0 0 1-1.5 3c-11.2 8.1-23.5 13.5-37.4 14.9-5.7.6-11.4.4-16.8-1.8a20.08 20.08 0 0 1-12.4-13.3 32.9 32.9 0 0 1-.1-19.4c2.5-8.3 8.4-13 16.4-15.6a61.33 61.33 0 0 1 24.8-2.2c8.4.7 16.6 2.3 25 3.4 1.6.2 2.1 1 2.1 2.6-.1 4.8 0 9.5 0 14.3s-.2 9.4-.1 14.1zm259.9 129.4c-1-5-4.8-6.9-9.1-8.3a88.42 88.42 0 0 0-21-3.9 147.32 147.32 0 0 0-39.2 1.9c-14.3 2.7-27.9 7.3-40 15.6a13.75 13.75 0 0 0-3.7 3.5 5.11 5.11 0 0 0-.5 4c.4 1.5 2.1 1.9 3.6 1.8a16.2 16.2 0 0 0 2.2-.1c7.8-.8 15.5-1.7 23.3-2.5 11.4-1.1 22.9-1.8 34.3-.9a71.64 71.64 0 0 1 14.4 2.7c5.1 1.4 7.4 5.2 7.6 10.4.4 8-1.4 15.7-3.5 23.3-4.1 15.4-10 30.3-15.8 45.1a17.6 17.6 0 0 0-1 3c-.5 2.9 1.2 4.8 4.1 4.1a10.56 10.56 0 0 0 4.8-2.5 145.91 145.91 0 0 0 12.7-13.4c12.8-16.4 20.3-35.3 24.7-55.6.8-3.6 1.4-7.3 2.1-10.9v-17.3zM493.1 199q-19.35-53.55-38.7-107.2c-2-5.7-4.2-11.3-6.3-16.9-1.1-2.9-3.2-4.8-6.4-4.8-7.6-.1-15.2-.2-22.9-.1-2.5 0-3.7 2-3.2 4.5a43.1 43.1 0 0 0 1.9 6.1q29.4 72.75 59.1 145.5c1.7 4.1 2.1 7.6.2 11.8-3.3 7.3-5.9 15-9.3 22.3-3 6.5-8 11.4-15.2 13.3a42.13 42.13 0 0 1-15.4 1.1c-2.5-.2-5-.8-7.5-1-3.4-.2-5.1 1.3-5.2 4.8q-.15 5 0 9.9c.1 5.5 2 8 7.4 8.9a108.18 108.18 0 0 0 16.9 2c17.1.4 30.7-6.5 39.5-21.4a131.63 131.63 0 0 0 9.2-18.4q35.55-89.7 70.6-179.6a26.62 26.62 0 0 0 1.6-5.5c.4-2.8-.9-4.4-3.7-4.4-6.6-.1-13.3 0-19.9 0a7.54 7.54 0 0 0-7.7 5.2c-.5 1.4-1.1 2.7-1.6 4.1l-34.8 100c-2.5 7.2-5.1 14.5-7.7 22.2-.4-1.1-.6-1.7-.9-2.4z\"],\n    \"amilia\": [448, 512, [], \"f36d\", \"M240.1 32c-61.9 0-131.5 16.9-184.2 55.4-5.1 3.1-9.1 9.2-7.2 19.4 1.1 5.1 5.1 27.4 10.2 39.6 4.1 10.2 14.2 10.2 20.3 6.1 32.5-22.3 96.5-47.7 152.3-47.7 57.9 0 58.9 28.4 58.9 73.1v38.5C203 227.7 78.2 251 46.7 264.2 11.2 280.5 16.3 357.7 16.3 376s15.2 104 124.9 104c47.8 0 113.7-20.7 153.3-42.1v25.4c0 3 2.1 8.2 6.1 9.1 3.1 1 50.7 2 59.9 2s62.5.3 66.5-.7c4.1-1 5.1-6.1 5.1-9.1V168c-.1-80.3-57.9-136-192-136zm50.2 348c-21.4 13.2-48.7 24.4-79.1 24.4-52.8 0-58.9-33.5-59-44.7 0-12.2-3-42.7 18.3-52.9 24.3-13.2 75.1-29.4 119.8-33.5z\"],\n    \"android\": [448, 512, [], \"f17b\", \"M89.6 204.5v115.8c0 15.4-12.1 27.7-27.5 27.7-15.3 0-30.1-12.4-30.1-27.7V204.5c0-15.1 14.8-27.5 30.1-27.5 15.1 0 27.5 12.4 27.5 27.5zm10.8 157c0 16.4 13.2 29.6 29.6 29.6h19.9l.3 61.1c0 36.9 55.2 36.6 55.2 0v-61.1h37.2v61.1c0 36.7 55.5 36.8 55.5 0v-61.1h20.2c16.2 0 29.4-13.2 29.4-29.6V182.1H100.4v179.4zm248-189.1H99.3c0-42.8 25.6-80 63.6-99.4l-19.1-35.3c-2.8-4.9 4.3-8 6.7-3.8l19.4 35.6c34.9-15.5 75-14.7 108.3 0L297.5 34c2.5-4.3 9.5-1.1 6.7 3.8L285.1 73c37.7 19.4 63.3 56.6 63.3 99.4zm-170.7-55.5c0-5.7-4.6-10.5-10.5-10.5-5.7 0-10.2 4.8-10.2 10.5s4.6 10.5 10.2 10.5c5.9 0 10.5-4.8 10.5-10.5zm113.4 0c0-5.7-4.6-10.5-10.2-10.5-5.9 0-10.5 4.8-10.5 10.5s4.6 10.5 10.5 10.5c5.6 0 10.2-4.8 10.2-10.5zm94.8 60.1c-15.1 0-27.5 12.1-27.5 27.5v115.8c0 15.4 12.4 27.7 27.5 27.7 15.4 0 30.1-12.4 30.1-27.7V204.5c0-15.4-14.8-27.5-30.1-27.5z\"],\n    \"angellist\": [448, 512, [], \"f209\", \"M347.1 215.4c11.7-32.6 45.4-126.9 45.4-157.1 0-26.6-15.7-48.9-43.7-48.9-44.6 0-84.6 131.7-97.1 163.1C242 144 196.6 0 156.6 0c-31.1 0-45.7 22.9-45.7 51.7 0 35.3 34.2 126.8 46.6 162-6.3-2.3-13.1-4.3-20-4.3-23.4 0-48.3 29.1-48.3 52.6 0 8.9 4.9 21.4 8 29.7-36.9 10-51.1 34.6-51.1 71.7C46 435.6 114.4 512 210.6 512c118 0 191.4-88.6 191.4-202.9 0-43.1-6.9-82-54.9-93.7zM311.7 108c4-12.3 21.1-64.3 37.1-64.3 8.6 0 10.9 8.9 10.9 16 0 19.1-38.6 124.6-47.1 148l-34-6 33.1-93.7zM142.3 48.3c0-11.9 14.5-45.7 46.3 47.1l34.6 100.3c-15.6-1.3-27.7-3-35.4 1.4-10.9-28.8-45.5-119.7-45.5-148.8zM140 244c29.3 0 67.1 94.6 67.1 107.4 0 5.1-4.9 11.4-10.6 11.4-20.9 0-76.9-76.9-76.9-97.7.1-7.7 12.7-21.1 20.4-21.1zm184.3 186.3c-29.1 32-66.3 48.6-109.7 48.6-59.4 0-106.3-32.6-128.9-88.3-17.1-43.4 3.8-68.3 20.6-68.3 11.4 0 54.3 60.3 54.3 73.1 0 4.9-7.7 8.3-11.7 8.3-16.1 0-22.4-15.5-51.1-51.4-29.7 29.7 20.5 86.9 58.3 86.9 26.1 0 43.1-24.2 38-42 3.7 0 8.3.3 11.7-.6 1.1 27.1 9.1 59.4 41.7 61.7 0-.9 2-7.1 2-7.4 0-17.4-10.6-32.6-10.6-50.3 0-28.3 21.7-55.7 43.7-71.7 8-6 17.7-9.7 27.1-13.1 9.7-3.7 20-8 27.4-15.4-1.1-11.2-5.7-21.1-16.9-21.1-27.7 0-120.6 4-120.6-39.7 0-6.7.1-13.1 17.4-13.1 32.3 0 114.3 8 138.3 29.1 18.1 16.1 24.3 113.2-31 174.7zm-98.6-126c9.7 3.1 19.7 4 29.7 6-7.4 5.4-14 12-20.3 19.1-2.8-8.5-6.2-16.8-9.4-25.1z\"],\n    \"angrycreative\": [640, 512, [], \"f36e\", \"M640 238.2l-3.2 28.2-34.5 2.3-2 18.1 34.5-2.3-3.2 28.2-34.4 2.2-2.3 20.1 34.4-2.2-3 26.1-64.7 4.1 12.7-113.2L527 365.2l-31.9 2-23.8-117.8 30.3-2 13.6 79.4 31.7-82.4 93.1-6.2zM426.8 371.5l28.3-1.8L468 249.6l-28.4 1.9-12.8 120zM162 388.1l-19.4-36-3.5 37.4-28.2 1.7 2.7-29.1c-11 18-32 34.3-56.9 35.8C23.9 399.9-3 377 .3 339.7c2.6-29.3 26.7-62.8 67.5-65.4 37.7-2.4 47.6 23.2 51.3 28.8l2.8-30.8 38.9-2.5c20.1-1.3 38.7 3.7 42.5 23.7l2.6-26.6 64.8-4.2-2.7 27.9-36.4 2.4-1.7 17.9 36.4-2.3-2.7 27.9-36.4 2.3-1.9 19.9 36.3-2.3-2.1 20.8 55-117.2 23.8-1.6L370.4 369l8.9-85.6-22.3 1.4 2.9-27.9 75-4.9-3 28-24.3 1.6-9.7 91.9-58 3.7-4.3-15.6-39.4 2.5-8 16.3-126.2 7.7zm-44.3-70.2l-26.4 1.7C84.6 307.2 76.9 303 65 303.8c-19 1.2-33.3 17.5-34.6 33.3-1.4 16 7.3 32.5 28.7 31.2 12.8-.8 21.3-8.6 28.9-18.9l27-1.7 2.7-29.8zm56.1-7.7c1.2-12.9-7.6-13.6-26.1-12.4l-2.7 28.5c14.2-.9 27.5-2.1 28.8-16.1zm21.1 70.8l5.8-60c-5 13.5-14.7 21.1-27.9 26.6l22.1 33.4zm135.4-45l-7.9-37.8-15.8 39.3 23.7-1.5zm-170.1-74.6l-4.3-17.5-39.6 2.6-8.1 18.2-31.9 2.1 57-121.9 23.9-1.6 30.7 102 9.9-104.7 27-1.8 37.8 63.6 6.5-66.6 28.5-1.9-4 41.2c7.4-13.5 22.9-44.7 63.6-47.5 40.5-2.8 52.4 29.3 53.4 30.3l3.3-32 39.3-2.7c12.7-.9 27.8.3 36.3 9.7l-4.4-11.9 32.2-2.2 12.9 43.2 23-45.7 31-2.2-43.6 78.4-4.8 44.3-28.4 1.9 4.8-44.3-15.8-43c1 22.3-9.2 40.1-32 49.6l25.2 38.8-36.4 2.4-19.2-36.8-4 38.3-28.4 1.9 3.3-31.5c-6.7 9.3-19.7 35.4-59.6 38-26.2 1.7-45.6-10.3-55.4-39.2l-4 40.3-25 1.6-37.6-63.3-6.3 66.2-56.8 3.7zm276.6-82.1c10.2-.7 17.5-2.1 21.6-4.3 4.5-2.4 7-6.4 7.6-12.1.6-5.3-.6-8.8-3.4-10.4-3.6-2.1-10.6-2.8-22.9-2l-2.9 28.8zM327.7 214c5.6 5.9 12.7 8.5 21.3 7.9 4.7-.3 9.1-1.8 13.3-4.1 5.5-3 10.6-8 15.1-14.3l-34.2 2.3 2.4-23.9 63.1-4.3 1.2-12-31.2 2.1c-4.1-3.7-7.8-6.6-11.1-8.1-4-1.7-8.1-2.8-12.2-2.5-8 .5-15.3 3.6-22 9.2-7.7 6.4-12 14.5-12.9 24.4-1.1 9.6 1.4 17.3 7.2 23.3zm-201.3 8.2l23.8-1.6-8.3-37.6-15.5 39.2z\"],\n    \"angular\": [448, 512, [], \"f420\", \"M185.7 268.1h76.2l-38.1-91.6-38.1 91.6zM223.8 32L16 106.4l31.8 275.7 176 97.9 176-97.9 31.8-275.7zM354 373.8h-48.6l-26.2-65.4H168.6l-26.2 65.4H93.7L223.8 81.5z\"],\n    \"app-store\": [512, 512, [], \"f36f\", \"M255.9 120.9l9.1-15.7c5.6-9.8 18.1-13.1 27.9-7.5 9.8 5.6 13.1 18.1 7.5 27.9l-87.5 151.5h63.3c20.5 0 32 24.1 23.1 40.8H113.8c-11.3 0-20.4-9.1-20.4-20.4 0-11.3 9.1-20.4 20.4-20.4h52l66.6-115.4-20.8-36.1c-5.6-9.8-2.3-22.2 7.5-27.9 9.8-5.6 22.2-2.3 27.9 7.5l8.9 15.7zm-78.7 218l-19.6 34c-5.6 9.8-18.1 13.1-27.9 7.5-9.8-5.6-13.1-18.1-7.5-27.9l14.6-25.2c16.4-5.1 29.8-1.2 40.4 11.6zm168.9-61.7h53.1c11.3 0 20.4 9.1 20.4 20.4 0 11.3-9.1 20.4-20.4 20.4h-29.5l19.9 34.5c5.6 9.8 2.3 22.2-7.5 27.9-9.8 5.6-22.2 2.3-27.9-7.5-33.5-58.1-58.7-101.6-75.4-130.6-17.1-29.5-4.9-59.1 7.2-69.1 13.4 23 33.4 57.7 60.1 104zM256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm216 248c0 118.7-96.1 216-216 216-118.7 0-216-96.1-216-216 0-118.7 96.1-216 216-216 118.7 0 216 96.1 216 216z\"],\n    \"app-store-ios\": [448, 512, [], \"f370\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM127 384.5c-5.5 9.6-17.8 12.8-27.3 7.3-9.6-5.5-12.8-17.8-7.3-27.3l14.3-24.7c16.1-4.9 29.3-1.1 39.6 11.4L127 384.5zm138.9-53.9H84c-11 0-20-9-20-20s9-20 20-20h51l65.4-113.2-20.5-35.4c-5.5-9.6-2.2-21.8 7.3-27.3 9.6-5.5 21.8-2.2 27.3 7.3l8.9 15.4 8.9-15.4c5.5-9.6 17.8-12.8 27.3-7.3 9.6 5.5 12.8 17.8 7.3 27.3l-85.8 148.6h62.1c20.2 0 31.5 23.7 22.7 40zm98.1 0h-29l19.6 33.9c5.5 9.6 2.2 21.8-7.3 27.3-9.6 5.5-21.8 2.2-27.3-7.3-32.9-56.9-57.5-99.7-74-128.1-16.7-29-4.8-58 7.1-67.8 13.1 22.7 32.7 56.7 58.9 102h52c11 0 20 9 20 20 0 11.1-9 20-20 20z\"],\n    \"apper\": [640, 512, [], \"f371\", \"M42.1 239.1c22.2 0 29 2.8 33.5 14.6h.8v-22.9c0-11.3-4.8-15.4-17.9-15.4-11.3 0-14.4 2.5-15.1 12.8H4.8c.3-13.9 1.5-19.1 5.8-24.4C17.9 195 29.5 192 56.7 192c33 0 47.1 5 53.9 18.9 2 4.3 4 15.6 4 23.7v76.3H76.3l1.3-19.1h-1c-5.3 15.6-13.6 20.4-35.5 20.4-30.3 0-41.1-10.1-41.1-37.3 0-25.2 12.3-35.8 42.1-35.8zm17.1 48.1c13.1 0 16.9-3 16.9-13.4 0-9.1-4.3-11.6-19.6-11.6-13.1 0-17.9 3-17.9 12.1-.1 10.4 3.7 12.9 20.6 12.9zm77.8-94.9h38.3l-1.5 20.6h.8c9.1-17.1 15.9-20.9 37.5-20.9 14.4 0 24.7 3 31.5 9.1 9.8 8.6 12.8 20.4 12.8 48.1 0 30-3 43.1-12.1 52.9-6.8 7.3-16.4 10.1-33.2 10.1-20.4 0-29.2-5.5-33.8-21.2h-.8v70.3H137v-169zm80.9 60.7c0-27.5-3.3-32.5-20.7-32.5-16.9 0-20.7 5-20.7 28.7 0 28 3.5 33.5 21.2 33.5 16.4 0 20.2-5.6 20.2-29.7zm57.9-60.7h38.3l-1.5 20.6h.8c9.1-17.1 15.9-20.9 37.5-20.9 14.4 0 24.7 3 31.5 9.1 9.8 8.6 12.8 20.4 12.8 48.1 0 30-3 43.1-12.1 52.9-6.8 7.3-16.4 10.1-33.3 10.1-20.4 0-29.2-5.5-33.8-21.2h-.8v70.3h-39.5v-169zm80.9 60.7c0-27.5-3.3-32.5-20.7-32.5-16.9 0-20.7 5-20.7 28.7 0 28 3.5 33.5 21.2 33.5 16.4 0 20.2-5.6 20.2-29.7zm53.8-3.8c0-25.4 3.3-37.8 12.3-45.8 8.8-8.1 22.2-11.3 45.1-11.3 42.8 0 55.7 12.8 55.7 55.7v11.1h-75.3c-.3 2-.3 4-.3 4.8 0 16.9 4.5 21.9 20.1 21.9 13.9 0 17.9-3 17.9-13.9h37.5v2.3c0 9.8-2.5 18.9-6.8 24.7-7.3 9.8-19.6 13.6-44.3 13.6-27.5 0-41.6-3.3-50.6-12.3-8.5-8.5-11.3-21.3-11.3-50.8zm76.4-11.6c-.3-1.8-.3-3.3-.3-3.8 0-12.3-3.3-14.6-19.6-14.6-14.4 0-17.1 3-18.1 15.1l-.3 3.3h38.3zm55.6-45.3h38.3l-1.8 19.9h.7c6.8-14.9 14.4-20.2 29.7-20.2 10.8 0 19.1 3.3 23.4 9.3 5.3 7.3 6.8 14.4 6.8 34 0 1.5 0 5 .2 9.3h-35c.3-1.8.3-3.3.3-4 0-15.4-2-19.4-10.3-19.4-6.3 0-10.8 3.3-13.1 9.3-1 3-1 4.3-1 12.3v68h-38.3V192.3z\"],\n    \"apple\": [384, 512, [], \"f179\", \"M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z\"],\n    \"apple-pay\": [640, 512, [], \"f415\", \"M116.9 158.5c-7.5 8.9-19.5 15.9-31.5 14.9-1.5-12 4.4-24.8 11.3-32.6 7.5-9.1 20.6-15.6 31.3-16.1 1.2 12.4-3.7 24.7-11.1 33.8m10.9 17.2c-17.4-1-32.3 9.9-40.5 9.9-8.4 0-21-9.4-34.8-9.1-17.9.3-34.5 10.4-43.6 26.5-18.8 32.3-4.9 80 13.3 106.3 8.9 13 19.5 27.3 33.5 26.8 13.3-.5 18.5-8.6 34.5-8.6 16.1 0 20.8 8.6 34.8 8.4 14.5-.3 23.6-13 32.5-26 10.1-14.8 14.3-29.1 14.5-29.9-.3-.3-28-10.9-28.3-42.9-.3-26.8 21.9-39.5 22.9-40.3-12.5-18.6-32-20.6-38.8-21.1m100.4-36.2v194.9h30.3v-66.6h41.9c38.3 0 65.1-26.3 65.1-64.3s-26.4-64-64.1-64h-73.2zm30.3 25.5h34.9c26.3 0 41.3 14 41.3 38.6s-15 38.8-41.4 38.8h-34.8V165zm162.2 170.9c19 0 36.6-9.6 44.6-24.9h.6v23.4h28v-97c0-28.1-22.5-46.3-57.1-46.3-32.1 0-55.9 18.4-56.8 43.6h27.3c2.3-12 13.4-19.9 28.6-19.9 18.5 0 28.9 8.6 28.9 24.5v10.8l-37.8 2.3c-35.1 2.1-54.1 16.5-54.1 41.5.1 25.2 19.7 42 47.8 42zm8.2-23.1c-16.1 0-26.4-7.8-26.4-19.6 0-12.3 9.9-19.4 28.8-20.5l33.6-2.1v11c0 18.2-15.5 31.2-36 31.2zm102.5 74.6c29.5 0 43.4-11.3 55.5-45.4L640 193h-30.8l-35.6 115.1h-.6L537.4 193h-31.6L557 334.9l-2.8 8.6c-4.6 14.6-12.1 20.3-25.5 20.3-2.4 0-7-.3-8.9-.5v23.4c1.8.4 9.3.7 11.6.7z\"],\n    \"artstation\": [512, 512, [], \"f77a\", \"M2 377.4l43 74.3A51.35 51.35 0 0 0 90.9 480h285.4l-59.2-102.6zM501.8 350L335.6 59.3A51.38 51.38 0 0 0 290.2 32h-88.4l257.3 447.6 40.7-70.5c1.9-3.2 21-29.7 2-59.1zM275 304.5l-115.5-200L44 304.5z\"],\n    \"asymmetrik\": [576, 512, [], \"f372\", \"M517.5 309.2c38.8-40 58.1-80 58.5-116.1.8-65.5-59.4-118.2-169.4-135C277.9 38.4 118.1 73.6 0 140.5 52 114 110.6 92.3 170.7 82.3c74.5-20.5 153-25.4 221.3-14.8C544.5 91.3 588.8 195 490.8 299.2c-10.2 10.8-22 21.1-35 30.6L304.9 103.4 114.7 388.9c-65.6-29.4-76.5-90.2-19.1-151.2 20.8-22.2 48.3-41.9 79.5-58.1 20-12.2 39.7-22.6 62-30.7-65.1 20.3-122.7 52.9-161.6 92.9-27.7 28.6-41.4 57.1-41.7 82.9-.5 35.1 23.4 65.1 68.4 83l-34.5 51.7h101.6l22-34.4c22.2 1 45.3 0 68.6-2.7l-22.8 37.1h135.5L340 406.3c18.6-5.3 36.9-11.5 54.5-18.7l45.9 71.8H542L468.6 349c18.5-12.1 35-25.5 48.9-39.8zm-187.6 80.5l-25-40.6-32.7 53.3c-23.4 3.5-46.7 5.1-69.2 4.4l101.9-159.3 78.7 123c-17.2 7.4-35.3 13.9-53.7 19.2z\"],\n    \"atlassian\": [512, 512, [], \"f77b\", \"M152.2 236.4c-7.7-8.2-19.7-7.7-24.8 2.8L1.6 490.2c-5 10 2.4 21.7 13.4 21.7h175c5.8.1 11-3.2 13.4-8.4 37.9-77.8 15.1-196.3-51.2-267.1zM244.4 8.1c-122.3 193.4-8.5 348.6 65 495.5 2.5 5.1 7.7 8.4 13.4 8.4H497c11.2 0 18.4-11.8 13.4-21.7 0 0-234.5-470.6-240.4-482.3-5.3-10.6-18.8-10.8-25.6.1z\"],\n    \"audible\": [640, 512, [], \"f373\", \"M640 199.9v54l-320 200L0 254v-54l320 200 320-200.1zm-194.5 72l47.1-29.4c-37.2-55.8-100.7-92.6-172.7-92.6-72 0-135.5 36.7-172.6 92.4h.3c2.5-2.3 5.1-4.5 7.7-6.7 89.7-74.4 219.4-58.1 290.2 36.3zm-220.1 18.8c16.9-11.9 36.5-18.7 57.4-18.7 34.4 0 65.2 18.4 86.4 47.6l45.4-28.4c-20.9-29.9-55.6-49.5-94.8-49.5-38.9 0-73.4 19.4-94.4 49zM103.6 161.1c131.8-104.3 318.2-76.4 417.5 62.1l.7 1 48.8-30.4C517.1 112.1 424.8 58.1 319.9 58.1c-103.5 0-196.6 53.5-250.5 135.6 9.9-10.5 22.7-23.5 34.2-32.6zm467 32.7z\"],\n    \"autoprefixer\": [640, 512, [], \"f41c\", \"M318.4 16l-161 480h77.5l25.4-81.4h119.5L405 496h77.5L318.4 16zm-40.3 341.9l41.2-130.4h1.5l40.9 130.4h-83.6zM640 405l-10-31.4L462.1 358l19.4 56.5L640 405zm-462.1-47L10 373.7 0 405l158.5 9.4 19.4-56.4z\"],\n    \"avianex\": [512, 512, [], \"f374\", \"M453.1 32h-312c-38.9 0-76.2 31.2-83.3 69.7L1.2 410.3C-5.9 448.8 19.9 480 58.9 480h312c38.9 0 76.2-31.2 83.3-69.7l56.7-308.5c7-38.6-18.8-69.8-57.8-69.8zm-58.2 347.3l-32 13.5-115.4-110c-14.7 10-29.2 19.5-41.7 27.1l22.1 64.2-17.9 12.7-40.6-61-52.4-48.1 15.7-15.4 58 31.1c9.3-10.5 20.8-22.6 32.8-34.9L203 228.9l-68.8-99.8 18.8-28.9 8.9-4.8L265 207.8l4.9 4.5c19.4-18.8 33.8-32.4 33.8-32.4 7.7-6.5 21.5-2.9 30.7 7.9 9 10.5 10.6 24.7 2.7 31.3-1.8 1.3-15.5 11.4-35.3 25.6l4.5 7.3 94.9 119.4-6.3 7.9z\"],\n    \"aviato\": [640, 512, [], \"f421\", \"M107.2 283.5l-19-41.8H36.1l-19 41.8H0l62.2-131.4 62.2 131.4h-17.2zm-45-98.1l-19.6 42.5h39.2l-19.6-42.5zm112.7 102.4l-62.2-131.4h17.1l45.1 96 45.1-96h17l-62.1 131.4zm80.6-4.3V156.4H271v127.1h-15.5zm209.1-115.6v115.6h-17.3V167.9h-41.2v-11.5h99.6v11.5h-41.1zM640 218.8c0 9.2-1.7 17.8-5.1 25.8-3.4 8-8.2 15.1-14.2 21.1-6 6-13.1 10.8-21.1 14.2-8 3.4-16.6 5.1-25.8 5.1s-17.8-1.7-25.8-5.1c-8-3.4-15.1-8.2-21.1-14.2-6-6-10.8-13-14.2-21.1-3.4-8-5.1-16.6-5.1-25.8s1.7-17.8 5.1-25.8c3.4-8 8.2-15.1 14.2-21.1 6-6 13-8.4 21.1-11.9 8-3.4 16.6-5.1 25.8-5.1s17.8 1.7 25.8 5.1c8 3.4 15.1 5.8 21.1 11.9 6 6 10.7 13.1 14.2 21.1 3.4 8 5.1 16.6 5.1 25.8zm-15.5 0c0-7.3-1.3-14-3.9-20.3-2.6-6.3-6.2-11.7-10.8-16.3-4.6-4.6-10-8.2-16.2-10.9-6.2-2.7-12.8-4-19.8-4s-13.6 1.3-19.8 4c-6.2 2.7-11.6 6.3-16.2 10.9-4.6 4.6-8.2 10-10.8 16.3-2.6 6.3-3.9 13.1-3.9 20.3 0 7.3 1.3 14 3.9 20.3 2.6 6.3 6.2 11.7 10.8 16.3 4.6 4.6 10 8.2 16.2 10.9 6.2 2.7 12.8 4 19.8 4s13.6-1.3 19.8-4c6.2-2.7 11.6-6.3 16.2-10.9 4.6-4.6 8.2-10 10.8-16.3 2.6-6.3 3.9-13.1 3.9-20.3zm-94.8 96.7v-6.3l88.9-10-242.9 13.4c.6-2.2 1.1-4.6 1.4-7.2.3-2 .5-4.2.6-6.5l64.8-8.1-64.9 1.9c0-.4-.1-.7-.1-1.1-2.8-17.2-25.5-23.7-25.5-23.7l-1.1-26.3h23.8l19 41.8h17.1L348.6 152l-62.2 131.4h17.1l19-41.8h23.6L345 268s-22.7 6.5-25.5 23.7c-.1.3-.1.7-.1 1.1l-64.9-1.9 64.8 8.1c.1 2.3.3 4.4.6 6.5.3 2.6.8 5 1.4 7.2L78.4 299.2l88.9 10v6.3c-5.9.9-10.5 6-10.5 12.2 0 6.8 5.6 12.4 12.4 12.4 6.8 0 12.4-5.6 12.4-12.4 0-6.2-4.6-11.3-10.5-12.2v-5.8l80.3 9v5.4c-5.7 1.1-9.9 6.2-9.9 12.1 0 6.8 5.6 10.2 12.4 10.2 6.8 0 12.4-3.4 12.4-10.2 0-6-4.3-11-9.9-12.1v-4.9l28.4 3.2v23.7h-5.9V360h5.9v-6.6h5v6.6h5.9v-13.8h-5.9V323l38.3 4.3c8.1 11.4 19 13.6 19 13.6l-.1 6.7-5.1.2-.1 12.1h4.1l.1-5h5.2l.1 5h4.1l-.1-12.1-5.1-.2-.1-6.7s10.9-2.1 19-13.6l38.3-4.3v23.2h-5.9V360h5.9v-6.6h5v6.6h5.9v-13.8h-5.9v-23.7l28.4-3.2v4.9c-5.7 1.1-9.9 6.2-9.9 12.1 0 6.8 5.6 10.2 12.4 10.2 6.8 0 12.4-3.4 12.4-10.2 0-6-4.3-11-9.9-12.1v-5.4l80.3-9v5.8c-5.9.9-10.5 6-10.5 12.2 0 6.8 5.6 12.4 12.4 12.4 6.8 0 12.4-5.6 12.4-12.4-.2-6.3-4.7-11.4-10.7-12.3zm-200.8-87.6l19.6-42.5 19.6 42.5h-17.9l-1.7-40.3-1.7 40.3h-17.9z\"],\n    \"aws\": [640, 512, [], \"f375\", \"M180.41 203.01c-.72 22.65 10.6 32.68 10.88 39.05a8.164 8.164 0 0 1-4.1 6.27l-12.8 8.96a10.66 10.66 0 0 1-5.63 1.92c-.43-.02-8.19 1.83-20.48-25.61a78.608 78.608 0 0 1-62.61 29.45c-16.28.89-60.4-9.24-58.13-56.21-1.59-38.28 34.06-62.06 70.93-60.05 7.1.02 21.6.37 46.99 6.27v-15.62c2.69-26.46-14.7-46.99-44.81-43.91-2.4.01-19.4-.5-45.84 10.11-7.36 3.38-8.3 2.82-10.75 2.82-7.41 0-4.36-21.48-2.94-24.2 5.21-6.4 35.86-18.35 65.94-18.18a76.857 76.857 0 0 1 55.69 17.28 70.285 70.285 0 0 1 17.67 52.36l-.01 69.29zM93.99 235.4c32.43-.47 46.16-19.97 49.29-30.47 2.46-10.05 2.05-16.41 2.05-27.4-9.67-2.32-23.59-4.85-39.56-4.87-15.15-1.14-42.82 5.63-41.74 32.26-1.24 16.79 11.12 31.4 29.96 30.48zm170.92 23.05c-7.86.72-11.52-4.86-12.68-10.37l-49.8-164.65c-.97-2.78-1.61-5.65-1.92-8.58a4.61 4.61 0 0 1 3.86-5.25c.24-.04-2.13 0 22.25 0 8.78-.88 11.64 6.03 12.55 10.37l35.72 140.83 33.16-140.83c.53-3.22 2.94-11.07 12.8-10.24h17.16c2.17-.18 11.11-.5 12.68 10.37l33.42 142.63L420.98 80.1c.48-2.18 2.72-11.37 12.68-10.37h19.72c.85-.13 6.15-.81 5.25 8.58-.43 1.85 3.41-10.66-52.75 169.9-1.15 5.51-4.82 11.09-12.68 10.37h-18.69c-10.94 1.15-12.51-9.66-12.68-10.75L328.67 110.7l-32.78 136.99c-.16 1.09-1.73 11.9-12.68 10.75h-18.3zm273.48 5.63c-5.88.01-33.92-.3-57.36-12.29a12.802 12.802 0 0 1-7.81-11.91v-10.75c0-8.45 6.2-6.9 8.83-5.89 10.04 4.06 16.48 7.14 28.81 9.6 36.65 7.53 52.77-2.3 56.72-4.48 13.15-7.81 14.19-25.68 5.25-34.95-10.48-8.79-15.48-9.12-53.13-21-4.64-1.29-43.7-13.61-43.79-52.36-.61-28.24 25.05-56.18 69.52-55.95 12.67-.01 46.43 4.13 55.57 15.62 1.35 2.09 2.02 4.55 1.92 7.04v10.11c0 4.44-1.62 6.66-4.87 6.66-7.71-.86-21.39-11.17-49.16-10.75-6.89-.36-39.89.91-38.41 24.97-.43 18.96 26.61 26.07 29.7 26.89 36.46 10.97 48.65 12.79 63.12 29.58 17.14 22.25 7.9 48.3 4.35 55.44-19.08 37.49-68.42 34.44-69.26 34.42zm40.2 104.86c-70.03 51.72-171.69 79.25-258.49 79.25A469.127 469.127 0 0 1 2.83 327.46c-6.53-5.89-.77-13.96 7.17-9.47a637.37 637.37 0 0 0 316.88 84.12 630.22 630.22 0 0 0 241.59-49.55c11.78-5 21.77 7.8 10.12 16.38zm29.19-33.29c-8.96-11.52-59.28-5.38-81.81-2.69-6.79.77-7.94-5.12-1.79-9.47 40.07-28.17 105.88-20.1 113.44-10.63 7.55 9.47-2.05 75.41-39.56 106.91-5.76 4.87-11.27 2.3-8.71-4.1 8.44-21.25 27.39-68.49 18.43-80.02z\"],\n    \"bandcamp\": [496, 512, [], \"f2d5\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm48.2 326.1h-181L199.9 178h181l-84.7 156.1z\"],\n    \"battle-net\": [512, 512, [], \"f835\", \"M448.61 225.62c26.87.18 35.57-7.43 38.92-12.37 12.47-16.32-7.06-47.6-52.85-71.33 17.76-33.58 30.11-63.68 36.34-85.3 3.38-11.83 1.09-19 .45-20.25-1.72 10.52-15.85 48.46-48.2 100.05-25-11.22-56.52-20.1-93.77-23.8-8.94-16.94-34.88-63.86-60.48-88.93C252.18 7.14 238.7 1.07 228.18.22h-.05c-13.83-1.55-22.67 5.85-27.4 11-17.2 18.53-24.33 48.87-25 84.07-7.24-12.35-17.17-24.63-28.5-25.93h-.18c-20.66-3.48-38.39 29.22-36 81.29-38.36 1.38-71 5.75-93 11.23-9.9 2.45-16.22 7.27-17.76 9.72 1-.38 22.4-9.22 111.56-9.22 5.22 53 29.75 101.82 26 93.19-9.73 15.4-38.24 62.36-47.31 97.7-5.87 22.88-4.37 37.61.15 47.14 5.57 12.75 16.41 16.72 23.2 18.26 25 5.71 55.38-3.63 86.7-21.14-7.53 12.84-13.9 28.51-9.06 39.34 7.31 19.65 44.49 18.66 88.44-9.45 20.18 32.18 40.07 57.94 55.7 74.12a39.79 39.79 0 0 0 8.75 7.09c5.14 3.21 8.58 3.37 8.58 3.37-8.24-6.75-34-38-62.54-91.78 22.22-16 45.65-38.87 67.47-69.27 122.82 4.6 143.29-24.76 148-31.64 14.67-19.88 3.43-57.44-57.32-93.69zm-77.85 106.22c23.81-37.71 30.34-67.77 29.45-92.33 27.86 17.57 47.18 37.58 49.06 58.83 1.14 12.93-8.1 29.12-78.51 33.5zM216.9 387.69c9.76-6.23 19.53-13.12 29.2-20.49 6.68 13.33 13.6 26.1 20.6 38.19-40.6 21.86-68.84 12.76-49.8-17.7zm215-171.35c-10.29-5.34-21.16-10.34-32.38-15.05a722.459 722.459 0 0 0 22.74-36.9c39.06 24.1 45.9 53.18 9.64 51.95zM279.18 398c-5.51-11.35-11-23.5-16.5-36.44 43.25 1.27 62.42-18.73 63.28-20.41 0 .07-25 15.64-62.53 12.25a718.78 718.78 0 0 0 85.06-84q13.06-15.31 24.93-31.11c-.36-.29-1.54-3-16.51-12-51.7 60.27-102.34 98-132.75 115.92-20.59-11.18-40.84-31.78-55.71-61.49-20-39.92-30-82.39-31.57-116.07 12.3.91 25.27 2.17 38.85 3.88-22.29 36.8-14.39 63-13.47 64.23 0-.07-.95-29.17 20.14-59.57a695.23 695.23 0 0 0 44.67 152.84c.93-.38 1.84.88 18.67-8.25-26.33-74.47-33.76-138.17-34-173.43 20-12.42 48.18-19.8 81.63-17.81 44.57 2.67 86.36 15.25 116.32 30.71q-10.69 15.66-23.33 32.47C365.63 152 339.1 145.84 337.5 146c.11 0 25.9 14.07 41.52 47.22a717.63 717.63 0 0 0-115.34-31.71 646.608 646.608 0 0 0-39.39-6.05c-.07.45-1.81 1.85-2.16 20.33C300 190.28 358.78 215.68 389.36 233c.74 23.55-6.95 51.61-25.41 79.57-24.6 37.31-56.39 67.23-84.77 85.43zm27.4-287c-44.56-1.66-73.58 7.43-94.69 20.67 2-52.3 21.31-76.38 38.21-75.28C267 52.15 305 108.55 306.58 111zm-130.65 3.1c.48 12.11 1.59 24.62 3.21 37.28-14.55-.85-28.74-1.25-42.4-1.26-.08 3.24-.12-51 24.67-49.59h.09c5.76 1.09 10.63 6.88 14.43 13.57zm-28.06 162c20.76 39.7 43.3 60.57 65.25 72.31-46.79 24.76-77.53 20-84.92 4.51-.2-.21-11.13-15.3 19.67-76.81zm210.06 74.8\"],\n    \"behance\": [576, 512, [], \"f1b4\", \"M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z\"],\n    \"behance-square\": [448, 512, [], \"f1b5\", \"M186.5 293c0 19.3-14 25.4-31.2 25.4h-45.1v-52.9h46c18.6.1 30.3 7.8 30.3 27.5zm-7.7-82.3c0-17.7-13.7-21.9-28.9-21.9h-39.6v44.8H153c15.1 0 25.8-6.6 25.8-22.9zm132.3 23.2c-18.3 0-30.5 11.4-31.7 29.7h62.2c-1.7-18.5-11.3-29.7-30.5-29.7zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM271.7 185h77.8v-18.9h-77.8V185zm-43 110.3c0-24.1-11.4-44.9-35-51.6 17.2-8.2 26.2-17.7 26.2-37 0-38.2-28.5-47.5-61.4-47.5H68v192h93.1c34.9-.2 67.6-16.9 67.6-55.9zM380 280.5c0-41.1-24.1-75.4-67.6-75.4-42.4 0-71.1 31.8-71.1 73.6 0 43.3 27.3 73 71.1 73 33.2 0 54.7-14.9 65.1-46.8h-33.7c-3.7 11.9-18.6 18.1-30.2 18.1-22.4 0-34.1-13.1-34.1-35.3h100.2c.1-2.3.3-4.8.3-7.2z\"],\n    \"bimobject\": [448, 512, [], \"f378\", \"M416 32H32C14.4 32 0 46.4 0 64v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zm-64 257.4c0 49.4-11.4 82.6-103.8 82.6h-16.9c-44.1 0-62.4-14.9-70.4-38.8h-.9V368H96V136h64v74.7h1.1c4.6-30.5 39.7-38.8 69.7-38.8h17.3c92.4 0 103.8 33.1 103.8 82.5v35zm-64-28.9v22.9c0 21.7-3.4 33.8-38.4 33.8h-45.3c-28.9 0-44.1-6.5-44.1-35.7v-19c0-29.3 15.2-35.7 44.1-35.7h45.3c35-.2 38.4 12 38.4 33.7z\"],\n    \"bitbucket\": [512, 512, [], \"f171\", \"M22.2 32A16 16 0 0 0 6 47.8a26.35 26.35 0 0 0 .2 2.8l67.9 412.1a21.77 21.77 0 0 0 21.3 18.2h325.7a16 16 0 0 0 16-13.4L505 50.7a16 16 0 0 0-13.2-18.3 24.58 24.58 0 0 0-2.8-.2L22.2 32zm285.9 297.8h-104l-28.1-147h157.3l-25.2 147z\"],\n    \"bitcoin\": [512, 512, [], \"f379\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-141.651-35.33c4.937-32.999-20.191-50.739-54.55-62.573l11.146-44.702-27.213-6.781-10.851 43.524c-7.154-1.783-14.502-3.464-21.803-5.13l10.929-43.81-27.198-6.781-11.153 44.686c-5.922-1.349-11.735-2.682-17.377-4.084l.031-.14-37.53-9.37-7.239 29.062s20.191 4.627 19.765 4.913c11.022 2.751 13.014 10.044 12.68 15.825l-12.696 50.925c.76.194 1.744.473 2.829.907-.907-.225-1.876-.473-2.876-.713l-17.796 71.338c-1.349 3.348-4.767 8.37-12.471 6.464.271.395-19.78-4.937-19.78-4.937l-13.51 31.147 35.414 8.827c6.588 1.651 13.045 3.379 19.4 5.006l-11.262 45.213 27.182 6.781 11.153-44.733a1038.209 1038.209 0 0 0 21.687 5.627l-11.115 44.523 27.213 6.781 11.262-45.128c46.404 8.781 81.299 5.239 95.986-36.727 11.836-33.79-.589-53.281-25.004-65.991 17.78-4.098 31.174-15.792 34.747-39.949zm-62.177 87.179c-8.41 33.79-65.308 15.523-83.755 10.943l14.944-59.899c18.446 4.603 77.6 13.717 68.811 48.956zm8.417-87.667c-7.673 30.736-55.031 15.12-70.393 11.292l13.548-54.327c15.363 3.828 64.836 10.973 56.845 43.035z\"],\n    \"bity\": [496, 512, [], \"f37a\", \"M78.4 67.2C173.8-22 324.5-24 421.5 71c14.3 14.1-6.4 37.1-22.4 21.5-84.8-82.4-215.8-80.3-298.9-3.2-16.3 15.1-36.5-8.3-21.8-22.1zm98.9 418.6c19.3 5.7 29.3-23.6 7.9-30C73 421.9 9.4 306.1 37.7 194.8c5-19.6-24.9-28.1-30.2-7.1-32.1 127.4 41.1 259.8 169.8 298.1zm148.1-2c121.9-40.2 192.9-166.9 164.4-291-4.5-19.7-34.9-13.8-30 7.9 24.2 107.7-37.1 217.9-143.2 253.4-21.2 7-10.4 36 8.8 29.7zm-62.9-79l.2-71.8c0-8.2-6.6-14.8-14.8-14.8-8.2 0-14.8 6.7-14.8 14.8l-.2 71.8c0 8.2 6.6 14.8 14.8 14.8s14.8-6.6 14.8-14.8zm71-269c2.1 90.9 4.7 131.9-85.5 132.5-92.5-.7-86.9-44.3-85.5-132.5 0-21.8-32.5-19.6-32.5 0v71.6c0 69.3 60.7 90.9 118 90.1 57.3.8 118-20.8 118-90.1v-71.6c0-19.6-32.5-21.8-32.5 0z\"],\n    \"black-tie\": [448, 512, [], \"f27e\", \"M0 32v448h448V32H0zm316.5 325.2L224 445.9l-92.5-88.7 64.5-184-64.5-86.6h184.9L252 173.2l64.5 184z\"],\n    \"blackberry\": [512, 512, [], \"f37b\", \"M166 116.9c0 23.4-16.4 49.1-72.5 49.1H23.4l21-88.8h67.8c42.1 0 53.8 23.3 53.8 39.7zm126.2-39.7h-67.8L205.7 166h70.1c53.8 0 70.1-25.7 70.1-49.1.1-16.4-11.6-39.7-53.7-39.7zM88.8 208.1H21L0 296.9h70.1c56.1 0 72.5-23.4 72.5-49.1 0-16.3-11.7-39.7-53.8-39.7zm180.1 0h-67.8l-18.7 88.8h70.1c53.8 0 70.1-23.4 70.1-49.1 0-16.3-11.7-39.7-53.7-39.7zm189.3-53.8h-67.8l-18.7 88.8h70.1c53.8 0 70.1-23.4 70.1-49.1.1-16.3-11.6-39.7-53.7-39.7zm-28 137.9h-67.8L343.7 381h70.1c56.1 0 70.1-23.4 70.1-49.1 0-16.3-11.6-39.7-53.7-39.7zM240.8 346H173l-18.7 88.8h70.1c56.1 0 70.1-25.7 70.1-49.1.1-16.3-11.6-39.7-53.7-39.7z\"],\n    \"blogger\": [448, 512, [], \"f37c\", \"M162.4 196c4.8-4.9 6.2-5.1 36.4-5.1 27.2 0 28.1.1 32.1 2.1 5.8 2.9 8.3 7 8.3 13.6 0 5.9-2.4 10-7.6 13.4-2.8 1.8-4.5 1.9-31.1 2.1-16.4.1-29.5-.2-31.5-.8-10.3-2.9-14.1-17.7-6.6-25.3zm61.4 94.5c-53.9 0-55.8.2-60.2 4.1-3.5 3.1-5.7 9.4-5.1 13.9.7 4.7 4.8 10.1 9.2 12 2.2 1 14.1 1.7 56.3 1.2l47.9-.6 9.2-1.5c9-5.1 10.5-17.4 3.1-24.4-5.3-4.7-5-4.7-60.4-4.7zm223.4 130.1c-3.5 28.4-23 50.4-51.1 57.5-7.2 1.8-9.7 1.9-172.9 1.8-157.8 0-165.9-.1-172-1.8-8.4-2.2-15.6-5.5-22.3-10-5.6-3.8-13.9-11.8-17-16.4-3.8-5.6-8.2-15.3-10-22C.1 423 0 420.3 0 256.3 0 93.2 0 89.7 1.8 82.6 8.1 57.9 27.7 39 53 33.4c7.3-1.6 332.1-1.9 340-.3 21.2 4.3 37.9 17.1 47.6 36.4 7.7 15.3 7-1.5 7.3 180.6.2 115.8 0 164.5-.7 170.5zm-85.4-185.2c-1.1-5-4.2-9.6-7.7-11.5-1.1-.6-8-1.3-15.5-1.7-12.4-.6-13.8-.8-17.8-3.1-6.2-3.6-7.9-7.6-8-18.3 0-20.4-8.5-39.4-25.3-56.5-12-12.2-25.3-20.5-40.6-25.1-3.6-1.1-11.8-1.5-39.2-1.8-42.9-.5-52.5.4-67.1 6.2-27 10.7-46.3 33.4-53.4 62.4-1.3 5.4-1.6 14.2-1.9 64.3-.4 62.8 0 72.1 4 84.5 9.7 30.7 37.1 53.4 64.6 58.4 9.2 1.7 122.2 2.1 133.7.5 20.1-2.7 35.9-10.8 50.7-25.9 10.7-10.9 17.4-22.8 21.8-38.5 3.2-10.9 2.9-88.4 1.7-93.9z\"],\n    \"blogger-b\": [448, 512, [], \"f37d\", \"M446.6 222.7c-1.8-8-6.8-15.4-12.5-18.5-1.8-1-13-2.2-25-2.7-20.1-.9-22.3-1.3-28.7-5-10.1-5.9-12.8-12.3-12.9-29.5-.1-33-13.8-63.7-40.9-91.3-19.3-19.7-40.9-33-65.5-40.5-5.9-1.8-19.1-2.4-63.3-2.9-69.4-.8-84.8.6-108.4 10C45.9 59.5 14.7 96.1 3.3 142.9 1.2 151.7.7 165.8.2 246.8c-.6 101.5.1 116.4 6.4 136.5 15.6 49.6 59.9 86.3 104.4 94.3 14.8 2.7 197.3 3.3 216 .8 32.5-4.4 58-17.5 81.9-41.9 17.3-17.7 28.1-36.8 35.2-62.1 4.9-17.6 4.5-142.8 2.5-151.7zm-322.1-63.6c7.8-7.9 10-8.2 58.8-8.2 43.9 0 45.4.1 51.8 3.4 9.3 4.7 13.4 11.3 13.4 21.9 0 9.5-3.8 16.2-12.3 21.6-4.6 2.9-7.3 3.1-50.3 3.3-26.5.2-47.7-.4-50.8-1.2-16.6-4.7-22.8-28.5-10.6-40.8zm191.8 199.8l-14.9 2.4-77.5.9c-68.1.8-87.3-.4-90.9-2-7.1-3.1-13.8-11.7-14.9-19.4-1.1-7.3 2.6-17.3 8.2-22.4 7.1-6.4 10.2-6.6 97.3-6.7 89.6-.1 89.1-.1 97.6 7.8 12.1 11.3 9.5 31.2-4.9 39.4z\"],\n    \"bluetooth\": [448, 512, [], \"f293\", \"M292.6 171.1L249.7 214l-.3-86 43.2 43.1m-43.2 219.8l43.1-43.1-42.9-42.9-.2 86zM416 259.4C416 465 344.1 512 230.9 512S32 465 32 259.4 115.4 0 228.6 0 416 53.9 416 259.4zm-158.5 0l79.4-88.6L211.8 36.5v176.9L138 139.6l-27 26.9 92.7 93-92.7 93 26.9 26.9 73.8-73.8 2.3 170 127.4-127.5-83.9-88.7z\"],\n    \"bluetooth-b\": [320, 512, [], \"f294\", \"M196.48 260.023l92.626-103.333L143.125 0v206.33l-86.111-86.111-31.406 31.405 108.061 108.399L25.608 368.422l31.406 31.405 86.111-86.111L145.84 512l148.552-148.644-97.912-103.333zm40.86-102.996l-49.977 49.978-.338-100.295 50.315 50.317zM187.363 313.04l49.977 49.978-50.315 50.316.338-100.294z\"],\n    \"bootstrap\": [448, 512, [], \"f836\", \"M292.3 311.93c0 42.41-39.72 41.43-43.92 41.43h-80.89v-81.69h80.89c42.56 0 43.92 31.9 43.92 40.26zm-50.15-73.13c.67 0 38.44 1 38.44-36.31 0-15.52-3.51-35.87-38.44-35.87h-74.66v72.18h74.66zM448 106.67v298.66A74.89 74.89 0 0 1 373.33 480H74.67A74.89 74.89 0 0 1 0 405.33V106.67A74.89 74.89 0 0 1 74.67 32h298.66A74.89 74.89 0 0 1 448 106.67zM338.05 317.86c0-21.57-6.65-58.29-49.05-67.35v-.73c22.91-9.78 37.34-28.25 37.34-55.64 0-7 2-64.78-77.6-64.78h-127v261.33c128.23 0 139.87 1.68 163.6-5.71 14.21-4.42 52.71-17.98 52.71-67.12z\"],\n    \"btc\": [384, 512, [], \"f15a\", \"M310.204 242.638c27.73-14.18 45.377-39.39 41.28-81.3-5.358-57.351-52.458-76.573-114.85-81.929V0h-48.528v77.203c-12.605 0-25.525.315-38.444.63V0h-48.528v79.409c-17.842.539-38.622.276-97.37 0v51.678c38.314-.678 58.417-3.14 63.023 21.427v217.429c-2.925 19.492-18.524 16.685-53.255 16.071L3.765 443.68c88.481 0 97.37.315 97.37.315V512h48.528v-67.06c13.234.315 26.154.315 38.444.315V512h48.528v-68.005c81.299-4.412 135.647-24.894 142.895-101.467 5.671-61.446-23.32-88.862-69.326-99.89zM150.608 134.553c27.415 0 113.126-8.507 113.126 48.528 0 54.515-85.71 48.212-113.126 48.212v-96.74zm0 251.776V279.821c32.772 0 133.127-9.138 133.127 53.255-.001 60.186-100.355 53.253-133.127 53.253z\"],\n    \"buffer\": [448, 512, [], \"f837\", \"M427.84 380.67l-196.5 97.82a18.6 18.6 0 0 1-14.67 0L20.16 380.67c-4-2-4-5.28 0-7.29L67.22 350a18.65 18.65 0 0 1 14.69 0l134.76 67a18.51 18.51 0 0 0 14.67 0l134.76-67a18.62 18.62 0 0 1 14.68 0l47.06 23.43c4.05 1.96 4.05 5.24 0 7.24zm0-136.53l-47.06-23.43a18.62 18.62 0 0 0-14.68 0l-134.76 67.08a18.68 18.68 0 0 1-14.67 0L81.91 220.71a18.65 18.65 0 0 0-14.69 0l-47.06 23.43c-4 2-4 5.29 0 7.31l196.51 97.8a18.6 18.6 0 0 0 14.67 0l196.5-97.8c4.05-2.02 4.05-5.3 0-7.31zM20.16 130.42l196.5 90.29a20.08 20.08 0 0 0 14.67 0l196.51-90.29c4-1.86 4-4.89 0-6.74L231.33 33.4a19.88 19.88 0 0 0-14.67 0l-196.5 90.28c-4.05 1.85-4.05 4.88 0 6.74z\"],\n    \"buromobelexperte\": [448, 512, [], \"f37f\", \"M0 32v128h128V32H0zm120 120H8V40h112v112zm40-120v128h128V32H160zm120 120H168V40h112v112zm40-120v128h128V32H320zm120 120H328V40h112v112zM0 192v128h128V192H0zm120 120H8V200h112v112zm40-120v128h128V192H160zm120 120H168V200h112v112zm40-120v128h128V192H320zm120 120H328V200h112v112zM0 352v128h128V352H0zm120 120H8V360h112v112zm40-120v128h128V352H160zm120 120H168V360h112v112zm40-120v128h128V352H320z\"],\n    \"buysellads\": [448, 512, [], \"f20d\", \"M224 150.7l42.9 160.7h-85.8L224 150.7zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-65.3 325.3l-94.5-298.7H159.8L65.3 405.3H156l111.7-91.6 24.2 91.6h90.8z\"],\n    \"canadian-maple-leaf\": [512, 512, [], \"f785\", \"M383.8 351.7c2.5-2.5 105.2-92.4 105.2-92.4l-17.5-7.5c-10-4.9-7.4-11.5-5-17.4 2.4-7.6 20.1-67.3 20.1-67.3s-47.7 10-57.7 12.5c-7.5 2.4-10-2.5-12.5-7.5s-15-32.4-15-32.4-52.6 59.9-55.1 62.3c-10 7.5-20.1 0-17.6-10 0-10 27.6-129.6 27.6-129.6s-30.1 17.4-40.1 22.4c-7.5 5-12.6 5-17.6-5C293.5 72.3 255.9 0 255.9 0s-37.5 72.3-42.5 79.8c-5 10-10 10-17.6 5-10-5-40.1-22.4-40.1-22.4S183.3 182 183.3 192c2.5 10-7.5 17.5-17.6 10-2.5-2.5-55.1-62.3-55.1-62.3S98.1 167 95.6 172s-5 9.9-12.5 7.5C73 177 25.4 167 25.4 167s17.6 59.7 20.1 67.3c2.4 6 5 12.5-5 17.4L23 259.3s102.6 89.9 105.2 92.4c5.1 5 10 7.5 5.1 22.5-5.1 15-10.1 35.1-10.1 35.1s95.2-20.1 105.3-22.6c8.7-.9 18.3 2.5 18.3 12.5S241 512 241 512h30s-5.8-102.7-5.8-112.8 9.5-13.4 18.4-12.5c10 2.5 105.2 22.6 105.2 22.6s-5-20.1-10-35.1 0-17.5 5-22.5z\"],\n    \"cc-amazon-pay\": [576, 512, [], \"f42d\", \"M124.7 201.8c.1-11.8 0-23.5 0-35.3v-35.3c0-1.3.4-2 1.4-2.7 11.5-8 24.1-12.1 38.2-11.1 12.5.9 22.7 7 28.1 21.7 3.3 8.9 4.1 18.2 4.1 27.7 0 8.7-.7 17.3-3.4 25.6-5.7 17.8-18.7 24.7-35.7 23.9-11.7-.5-21.9-5-31.4-11.7-.9-.8-1.4-1.6-1.3-2.8zm154.9 14.6c4.6 1.8 9.3 2 14.1 1.5 11.6-1.2 21.9-5.7 31.3-12.5.9-.6 1.3-1.3 1.3-2.5-.1-3.9 0-7.9 0-11.8 0-4-.1-8 0-12 0-1.4-.4-2-1.8-2.2-7-.9-13.9-2.2-20.9-2.9-7-.6-14-.3-20.8 1.9-6.7 2.2-11.7 6.2-13.7 13.1-1.6 5.4-1.6 10.8.1 16.2 1.6 5.5 5.2 9.2 10.4 11.2zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zm-207.5 23.9c.4 1.7.9 3.4 1.6 5.1 16.5 40.6 32.9 81.3 49.5 121.9 1.4 3.5 1.7 6.4.2 9.9-2.8 6.2-4.9 12.6-7.8 18.7-2.6 5.5-6.7 9.5-12.7 11.2-4.2 1.1-8.5 1.3-12.9.9-2.1-.2-4.2-.7-6.3-.8-2.8-.2-4.2 1.1-4.3 4-.1 2.8-.1 5.6 0 8.3.1 4.6 1.6 6.7 6.2 7.5 4.7.8 9.4 1.6 14.2 1.7 14.3.3 25.7-5.4 33.1-17.9 2.9-4.9 5.6-10.1 7.7-15.4 19.8-50.1 39.5-100.3 59.2-150.5.6-1.5 1.1-3 1.3-4.6.4-2.4-.7-3.6-3.1-3.7-5.6-.1-11.1 0-16.7 0-3.1 0-5.3 1.4-6.4 4.3-.4 1.1-.9 2.3-1.3 3.4l-29.1 83.7c-2.1 6.1-4.2 12.1-6.5 18.6-.4-.9-.6-1.4-.8-1.9-10.8-29.9-21.6-59.9-32.4-89.8-1.7-4.7-3.5-9.5-5.3-14.2-.9-2.5-2.7-4-5.4-4-6.4-.1-12.8-.2-19.2-.1-2.2 0-3.3 1.6-2.8 3.7zM242.4 206c1.7 11.7 7.6 20.8 18 26.6 9.9 5.5 20.7 6.2 31.7 4.6 12.7-1.9 23.9-7.3 33.8-15.5.4-.3.8-.6 1.4-1 .5 3.2.9 6.2 1.5 9.2.5 2.6 2.1 4.3 4.5 4.4 4.6.1 9.1.1 13.7 0 2.3-.1 3.8-1.6 4-3.9.1-.8.1-1.6.1-2.3v-88.8c0-3.6-.2-7.2-.7-10.8-1.6-10.8-6.2-19.7-15.9-25.4-5.6-3.3-11.8-5-18.2-5.9-3-.4-6-.7-9.1-1.1h-10c-.8.1-1.6.3-2.5.3-8.2.4-16.3 1.4-24.2 3.5-5.1 1.3-10 3.2-15 4.9-3 1-4.5 3.2-4.4 6.5.1 2.8-.1 5.6 0 8.3.1 4.1 1.8 5.2 5.7 4.1 6.5-1.7 13.1-3.5 19.7-4.8 10.3-1.9 20.7-2.7 31.1-1.2 5.4.8 10.5 2.4 14.1 7 3.1 4 4.2 8.8 4.4 13.7.3 6.9.2 13.9.3 20.8 0 .4-.1.7-.2 1.2-.4 0-.8 0-1.1-.1-8.8-2.1-17.7-3.6-26.8-4.1-9.5-.5-18.9.1-27.9 3.2-10.8 3.8-19.5 10.3-24.6 20.8-4.1 8.3-4.6 17-3.4 25.8zM98.7 106.9v175.3c0 .8 0 1.7.1 2.5.2 2.5 1.7 4.1 4.1 4.2 5.9.1 11.8.1 17.7 0 2.5 0 4-1.7 4.1-4.1.1-.8.1-1.7.1-2.5v-60.7c.9.7 1.4 1.2 1.9 1.6 15 12.5 32.2 16.6 51.1 12.9 17.1-3.4 28.9-13.9 36.7-29.2 5.8-11.6 8.3-24.1 8.7-37 .5-14.3-1-28.4-6.8-41.7-7.1-16.4-18.9-27.3-36.7-30.9-2.7-.6-5.5-.8-8.2-1.2h-7c-1.2.2-2.4.3-3.6.5-11.7 1.4-22.3 5.8-31.8 12.7-2 1.4-3.9 3-5.9 4.5-.1-.5-.3-.8-.4-1.2-.4-2.3-.7-4.6-1.1-6.9-.6-3.9-2.5-5.5-6.4-5.6h-9.7c-5.9-.1-6.9 1-6.9 6.8zM493.6 339c-2.7-.7-5.1 0-7.6 1-43.9 18.4-89.5 30.2-136.8 35.8-14.5 1.7-29.1 2.8-43.7 3.2-26.6.7-53.2-.8-79.6-4.3-17.8-2.4-35.5-5.7-53-9.9-37-8.9-72.7-21.7-106.7-38.8-8.8-4.4-17.4-9.3-26.1-14-3.8-2.1-6.2-1.5-8.2 2.1v1.7c1.2 1.6 2.2 3.4 3.7 4.8 36 32.2 76.6 56.5 122 72.9 21.9 7.9 44.4 13.7 67.3 17.5 14 2.3 28 3.8 42.2 4.5 3 .1 6 .2 9 .4.7 0 1.4.2 2.1.3h17.7c.7-.1 1.4-.3 2.1-.3 14.9-.4 29.8-1.8 44.6-4 21.4-3.2 42.4-8.1 62.9-14.7 29.6-9.6 57.7-22.4 83.4-40.1 2.8-1.9 5.7-3.8 8-6.2 4.3-4.4 2.3-10.4-3.3-11.9zm50.4-27.7c-.8-4.2-4-5.8-7.6-7-5.7-1.9-11.6-2.8-17.6-3.3-11-.9-22-.4-32.8 1.6-12 2.2-23.4 6.1-33.5 13.1-1.2.8-2.4 1.8-3.1 3-.6.9-.7 2.3-.5 3.4.3 1.3 1.7 1.6 3 1.5.6 0 1.2 0 1.8-.1l19.5-2.1c9.6-.9 19.2-1.5 28.8-.8 4.1.3 8.1 1.2 12 2.2 4.3 1.1 6.2 4.4 6.4 8.7.3 6.7-1.2 13.1-2.9 19.5-3.5 12.9-8.3 25.4-13.3 37.8-.3.8-.7 1.7-.8 2.5-.4 2.5 1 4 3.4 3.5 1.4-.3 3-1.1 4-2.1 3.7-3.6 7.5-7.2 10.6-11.2 10.7-13.8 17-29.6 20.7-46.6.7-3 1.2-6.1 1.7-9.1.2-4.7.2-9.6.2-14.5z\"],\n    \"cc-amex\": [576, 512, [], \"f1f3\", \"M325.1 167.8c0-16.4-14.1-18.4-27.4-18.4l-39.1-.3v69.3H275v-25.1h18c18.4 0 14.5 10.3 14.8 25.1h16.6v-13.5c0-9.2-1.5-15.1-11-18.4 7.4-3 11.8-10.7 11.7-18.7zm-29.4 11.3H275v-15.3h21c5.1 0 10.7 1 10.7 7.4 0 6.6-5.3 7.9-11 7.9zM279 268.6h-52.7l-21 22.8-20.5-22.8h-66.5l-.1 69.3h65.4l21.3-23 20.4 23h32.2l.1-23.3c18.9 0 49.3 4.6 49.3-23.3 0-17.3-12.3-22.7-27.9-22.7zm-103.8 54.7h-40.6v-13.8h36.3v-14.1h-36.3v-12.5h41.7l17.9 20.2zm65.8 8.2l-25.3-28.1L241 276zm37.8-31h-21.2v-17.6h21.5c5.6 0 10.2 2.3 10.2 8.4 0 6.4-4.6 9.2-10.5 9.2zm-31.6-136.7v-14.6h-55.5v69.3h55.5v-14.3h-38.9v-13.8h37.8v-14.1h-37.8v-12.5zM576 255.4h-.2zm-194.6 31.9c0-16.4-14.1-18.7-27.1-18.7h-39.4l-.1 69.3h16.6l.1-25.3h17.6c11 0 14.8 2 14.8 13.8l-.1 11.5h16.6l.1-13.8c0-8.9-1.8-15.1-11-18.4 7.7-3.1 11.8-10.8 11.9-18.4zm-29.2 11.2h-20.7v-15.6h21c5.1 0 10.7 1 10.7 7.4 0 6.9-5.4 8.2-11 8.2zm-172.8-80v-69.3h-27.6l-19.7 47-21.7-47H83.3v65.7l-28.1-65.7H30.7L1 218.5h17.9l6.4-15.3h34.5l6.4 15.3H100v-54.2l24 54.2h14.6l24-54.2v54.2zM31.2 188.8l11.2-27.6 11.5 27.6zm477.4 158.9v-4.5c-10.8 5.6-3.9 4.5-156.7 4.5 0-25.2.1-23.9 0-25.2-1.7-.1-3.2-.1-9.4-.1 0 17.9-.1 6.8-.1 25.3h-39.6c0-12.1.1-15.3.1-29.2-10 6-22.8 6.4-34.3 6.2 0 14.7-.1 8.3-.1 23h-48.9c-5.1-5.7-2.7-3.1-15.4-17.4-3.2 3.5-12.8 13.9-16.1 17.4h-82v-92.3h83.1c5 5.6 2.8 3.1 15.5 17.2 3.2-3.5 12.2-13.4 15.7-17.2h58c9.8 0 18 1.9 24.3 5.6v-5.6c54.3 0 64.3-1.4 75.7 5.1v-5.1h78.2v5.2c11.4-6.9 19.6-5.2 64.9-5.2v5c10.3-5.9 16.6-5.2 54.3-5V80c0-26.5-21.5-48-48-48h-480c-26.5 0-48 21.5-48 48v109.8c9.4-21.9 19.7-46 23.1-53.9h39.7c4.3 10.1 1.6 3.7 9 21.1v-21.1h46c2.9 6.2 11.1 24 13.9 30 5.8-13.6 10.1-23.9 12.6-30h103c0-.1 11.5 0 11.6 0 43.7.2 53.6-.8 64.4 5.3v-5.3H363v9.3c7.6-6.1 17.9-9.3 30.7-9.3h27.6c0 .5 1.9.3 2.3.3H456c4.2 9.8 2.6 6 8.8 20.6v-20.6h43.3c4.9 8-1-1.8 11.2 18.4v-18.4h39.9v92h-41.6c-5.4-9-1.4-2.2-13.2-21.9v21.9h-52.8c-6.4-14.8-.1-.3-6.6-15.3h-19c-4.2 10-2.2 5.2-6.4 15.3h-26.8c-12.3 0-22.3-3-29.7-8.9v8.9h-66.5c-.3-13.9-.1-24.8-.1-24.8-1.8-.3-3.4-.2-9.8-.2v25.1H151.2v-11.4c-2.5 5.6-2.7 5.9-5.1 11.4h-29.5c-4-8.9-2.9-6.4-5.1-11.4v11.4H58.6c-4.2-10.1-2.2-5.3-6.4-15.3H33c-4.2 10-2.2 5.2-6.4 15.3H0V432c0 26.5 21.5 48 48 48h480.1c26.5 0 48-21.5 48-48v-90.4c-12.7 8.3-32.7 6.1-67.5 6.1zm36.3-64.5H575v-14.6h-32.9c-12.8 0-23.8 6.6-23.8 20.7 0 33 42.7 12.8 42.7 27.4 0 5.1-4.3 6.4-8.4 6.4h-32l-.1 14.8h32c8.4 0 17.6-1.8 22.5-8.9v-25.8c-10.5-13.8-39.3-1.3-39.3-13.5 0-5.8 4.6-6.5 9.2-6.5zm-57 39.8h-32.2l-.1 14.8h32.2c14.8 0 26.2-5.6 26.2-22 0-33.2-42.9-11.2-42.9-26.3 0-5.6 4.9-6.4 9.2-6.4h30.4v-14.6h-33.2c-12.8 0-23.5 6.6-23.5 20.7 0 33 42.7 12.5 42.7 27.4-.1 5.4-4.7 6.4-8.8 6.4zm-42.2-40.1v-14.3h-55.2l-.1 69.3h55.2l.1-14.3-38.6-.3v-13.8H445v-14.1h-37.8v-12.5zm-56.3-108.1c-.3.2-1.4 2.2-1.4 7.6 0 6 .9 7.7 1.1 7.9.2.1 1.1.5 3.4.5l7.3-16.9c-1.1 0-2.1-.1-3.1-.1-5.6 0-7 .7-7.3 1zm20.4-10.5h-.1zm-16.2-15.2c-23.5 0-34 12-34 35.3 0 22.2 10.2 34 33 34h19.2l6.4-15.3h34.3l6.6 15.3h33.7v-51.9l31.2 51.9h23.6v-69h-16.9v48.1l-29.1-48.1h-25.3v65.4l-27.9-65.4h-24.8l-23.5 54.5h-7.4c-13.3 0-16.1-8.1-16.1-19.9 0-23.8 15.7-20 33.1-19.7v-15.2zm42.1 12.1l11.2 27.6h-22.8zm-101.1-12v69.3h16.9v-69.3z\"],\n    \"cc-apple-pay\": [576, 512, [], \"f416\", \"M302.2 218.4c0 17.2-10.5 27.1-29 27.1h-24.3v-54.2h24.4c18.4 0 28.9 9.8 28.9 27.1zm47.5 62.6c0 8.3 7.2 13.7 18.5 13.7 14.4 0 25.2-9.1 25.2-21.9v-7.7l-23.5 1.5c-13.3.9-20.2 5.8-20.2 14.4zM576 79v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM127.8 197.2c8.4.7 16.8-4.2 22.1-10.4 5.2-6.4 8.6-15 7.7-23.7-7.4.3-16.6 4.9-21.9 11.3-4.8 5.5-8.9 14.4-7.9 22.8zm60.6 74.5c-.2-.2-19.6-7.6-19.8-30-.2-18.7 15.3-27.7 16-28.2-8.8-13-22.4-14.4-27.1-14.7-12.2-.7-22.6 6.9-28.4 6.9-5.9 0-14.7-6.6-24.3-6.4-12.5.2-24.2 7.3-30.5 18.6-13.1 22.6-3.4 56 9.3 74.4 6.2 9.1 13.7 19.1 23.5 18.7 9.3-.4 13-6 24.2-6 11.3 0 14.5 6 24.3 5.9 10.2-.2 16.5-9.1 22.8-18.2 6.9-10.4 9.8-20.4 10-21zm135.4-53.4c0-26.6-18.5-44.8-44.9-44.8h-51.2v136.4h21.2v-46.6h29.3c26.8 0 45.6-18.4 45.6-45zm90 23.7c0-19.7-15.8-32.4-40-32.4-22.5 0-39.1 12.9-39.7 30.5h19.1c1.6-8.4 9.4-13.9 20-13.9 13 0 20.2 6 20.2 17.2v7.5l-26.4 1.6c-24.6 1.5-37.9 11.6-37.9 29.1 0 17.7 13.7 29.4 33.4 29.4 13.3 0 25.6-6.7 31.2-17.4h.4V310h19.6v-68zM516 210.9h-21.5l-24.9 80.6h-.4l-24.9-80.6H422l35.9 99.3-1.9 6c-3.2 10.2-8.5 14.2-17.9 14.2-1.7 0-4.9-.2-6.2-.3v16.4c1.2.4 6.5.5 8.1.5 20.7 0 30.4-7.9 38.9-31.8L516 210.9z\"],\n    \"cc-diners-club\": [576, 512, [], \"f24c\", \"M239.7 79.9c-96.9 0-175.8 78.6-175.8 175.8 0 96.9 78.9 175.8 175.8 175.8 97.2 0 175.8-78.9 175.8-175.8 0-97.2-78.6-175.8-175.8-175.8zm-39.9 279.6c-41.7-15.9-71.4-56.4-71.4-103.8s29.7-87.9 71.4-104.1v207.9zm79.8.3V151.6c41.7 16.2 71.4 56.7 71.4 104.1s-29.7 87.9-71.4 104.1zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM329.7 448h-90.3c-106.2 0-193.8-85.5-193.8-190.2C45.6 143.2 133.2 64 239.4 64h90.3c105 0 200.7 79.2 200.7 193.8 0 104.7-95.7 190.2-200.7 190.2z\"],\n    \"cc-discover\": [576, 512, [], \"f1f2\", \"M520.4 196.1c0-7.9-5.5-12.1-15.6-12.1h-4.9v24.9h4.7c10.3 0 15.8-4.4 15.8-12.8zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-44.1 138.9c22.6 0 52.9-4.1 52.9 24.4 0 12.6-6.6 20.7-18.7 23.2l25.8 34.4h-19.6l-22.2-32.8h-2.2v32.8h-16zm-55.9.1h45.3v14H444v18.2h28.3V217H444v22.2h29.3V253H428zm-68.7 0l21.9 55.2 22.2-55.2h17.5l-35.5 84.2h-8.6l-35-84.2zm-55.9-3c24.7 0 44.6 20 44.6 44.6 0 24.7-20 44.6-44.6 44.6-24.7 0-44.6-20-44.6-44.6 0-24.7 20-44.6 44.6-44.6zm-49.3 6.1v19c-20.1-20.1-46.8-4.7-46.8 19 0 25 27.5 38.5 46.8 19.2v19c-29.7 14.3-63.3-5.7-63.3-38.2 0-31.2 33.1-53 63.3-38zm-97.2 66.3c11.4 0 22.4-15.3-3.3-24.4-15-5.5-20.2-11.4-20.2-22.7 0-23.2 30.6-31.4 49.7-14.3l-8.4 10.8c-10.4-11.6-24.9-6.2-24.9 2.5 0 4.4 2.7 6.9 12.3 10.3 18.2 6.6 23.6 12.5 23.6 25.6 0 29.5-38.8 37.4-56.6 11.3l10.3-9.9c3.7 7.1 9.9 10.8 17.5 10.8zM55.4 253H32v-82h23.4c26.1 0 44.1 17 44.1 41.1 0 18.5-13.2 40.9-44.1 40.9zm67.5 0h-16v-82h16zM544 433c0 8.2-6.8 15-15 15H128c189.6-35.6 382.7-139.2 416-160zM74.1 191.6c-5.2-4.9-11.6-6.6-21.9-6.6H48v54.2h4.2c10.3 0 17-2 21.9-6.4 5.7-5.2 8.9-12.8 8.9-20.7s-3.2-15.5-8.9-20.5z\"],\n    \"cc-jcb\": [576, 512, [], \"f24b\", \"M431.5 244.3V212c41.2 0 38.5.2 38.5.2 7.3 1.3 13.3 7.3 13.3 16 0 8.8-6 14.5-13.3 15.8-1.2.4-3.3.3-38.5.3zm42.8 20.2c-2.8-.7-3.3-.5-42.8-.5v35c39.6 0 40 .2 42.8-.5 7.5-1.5 13.5-8 13.5-17 0-8.7-6-15.5-13.5-17zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM182 192.3h-57c0 67.1 10.7 109.7-35.8 109.7-19.5 0-38.8-5.7-57.2-14.8v28c30 8.3 68 8.3 68 8.3 97.9 0 82-47.7 82-131.2zm178.5 4.5c-63.4-16-165-14.9-165 59.3 0 77.1 108.2 73.6 165 59.2V287C312.9 311.7 253 309 253 256s59.8-55.6 107.5-31.2v-28zM544 286.5c0-18.5-16.5-30.5-38-32v-.8c19.5-2.7 30.3-15.5 30.3-30.2 0-19-15.7-30-37-31 0 0 6.3-.3-120.3-.3v127.5h122.7c24.3.1 42.3-12.9 42.3-33.2z\"],\n    \"cc-mastercard\": [576, 512, [], \"f1f1\", \"M482.9 410.3c0 6.8-4.6 11.7-11.2 11.7-6.8 0-11.2-5.2-11.2-11.7 0-6.5 4.4-11.7 11.2-11.7 6.6 0 11.2 5.2 11.2 11.7zm-310.8-11.7c-7.1 0-11.2 5.2-11.2 11.7 0 6.5 4.1 11.7 11.2 11.7 6.5 0 10.9-4.9 10.9-11.7-.1-6.5-4.4-11.7-10.9-11.7zm117.5-.3c-5.4 0-8.7 3.5-9.5 8.7h19.1c-.9-5.7-4.4-8.7-9.6-8.7zm107.8.3c-6.8 0-10.9 5.2-10.9 11.7 0 6.5 4.1 11.7 10.9 11.7 6.8 0 11.2-4.9 11.2-11.7 0-6.5-4.4-11.7-11.2-11.7zm105.9 26.1c0 .3.3.5.3 1.1 0 .3-.3.5-.3 1.1-.3.3-.3.5-.5.8-.3.3-.5.5-1.1.5-.3.3-.5.3-1.1.3-.3 0-.5 0-1.1-.3-.3 0-.5-.3-.8-.5-.3-.3-.5-.5-.5-.8-.3-.5-.3-.8-.3-1.1 0-.5 0-.8.3-1.1 0-.5.3-.8.5-1.1.3-.3.5-.3.8-.5.5-.3.8-.3 1.1-.3.5 0 .8 0 1.1.3.5.3.8.3 1.1.5s.2.6.5 1.1zm-2.2 1.4c.5 0 .5-.3.8-.3.3-.3.3-.5.3-.8 0-.3 0-.5-.3-.8-.3 0-.5-.3-1.1-.3h-1.6v3.5h.8V426h.3l1.1 1.4h.8l-1.1-1.3zM576 81v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V81c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM64 220.6c0 76.5 62.1 138.5 138.5 138.5 27.2 0 53.9-8.2 76.5-23.1-72.9-59.3-72.4-171.2 0-230.5-22.6-15-49.3-23.1-76.5-23.1-76.4-.1-138.5 62-138.5 138.2zm224 108.8c70.5-55 70.2-162.2 0-217.5-70.2 55.3-70.5 162.6 0 217.5zm-142.3 76.3c0-8.7-5.7-14.4-14.7-14.7-4.6 0-9.5 1.4-12.8 6.5-2.4-4.1-6.5-6.5-12.2-6.5-3.8 0-7.6 1.4-10.6 5.4V392h-8.2v36.7h8.2c0-18.9-2.5-30.2 9-30.2 10.2 0 8.2 10.2 8.2 30.2h7.9c0-18.3-2.5-30.2 9-30.2 10.2 0 8.2 10 8.2 30.2h8.2v-23zm44.9-13.7h-7.9v4.4c-2.7-3.3-6.5-5.4-11.7-5.4-10.3 0-18.2 8.2-18.2 19.3 0 11.2 7.9 19.3 18.2 19.3 5.2 0 9-1.9 11.7-5.4v4.6h7.9V392zm40.5 25.6c0-15-22.9-8.2-22.9-15.2 0-5.7 11.9-4.8 18.5-1.1l3.3-6.5c-9.4-6.1-30.2-6-30.2 8.2 0 14.3 22.9 8.3 22.9 15 0 6.3-13.5 5.8-20.7.8l-3.5 6.3c11.2 7.6 32.6 6 32.6-7.5zm35.4 9.3l-2.2-6.8c-3.8 2.1-12.2 4.4-12.2-4.1v-16.6h13.1V392h-13.1v-11.2h-8.2V392h-7.6v7.3h7.6V416c0 17.6 17.3 14.4 22.6 10.9zm13.3-13.4h27.5c0-16.2-7.4-22.6-17.4-22.6-10.6 0-18.2 7.9-18.2 19.3 0 20.5 22.6 23.9 33.8 14.2l-3.8-6c-7.8 6.4-19.6 5.8-21.9-4.9zm59.1-21.5c-4.6-2-11.6-1.8-15.2 4.4V392h-8.2v36.7h8.2V408c0-11.6 9.5-10.1 12.8-8.4l2.4-7.6zm10.6 18.3c0-11.4 11.6-15.1 20.7-8.4l3.8-6.5c-11.6-9.1-32.7-4.1-32.7 15 0 19.8 22.4 23.8 32.7 15l-3.8-6.5c-9.2 6.5-20.7 2.6-20.7-8.6zm66.7-18.3H408v4.4c-8.3-11-29.9-4.8-29.9 13.9 0 19.2 22.4 24.7 29.9 13.9v4.6h8.2V392zm33.7 0c-2.4-1.2-11-2.9-15.2 4.4V392h-7.9v36.7h7.9V408c0-11 9-10.3 12.8-8.4l2.4-7.6zm40.3-14.9h-7.9v19.3c-8.2-10.9-29.9-5.1-29.9 13.9 0 19.4 22.5 24.6 29.9 13.9v4.6h7.9v-51.7zm7.6-75.1v4.6h.8V302h1.9v-.8h-4.6v.8h1.9zm6.6 123.8c0-.5 0-1.1-.3-1.6-.3-.3-.5-.8-.8-1.1-.3-.3-.8-.5-1.1-.8-.5 0-1.1-.3-1.6-.3-.3 0-.8.3-1.4.3-.5.3-.8.5-1.1.8-.5.3-.8.8-.8 1.1-.3.5-.3 1.1-.3 1.6 0 .3 0 .8.3 1.4 0 .3.3.8.8 1.1.3.3.5.5 1.1.8.5.3 1.1.3 1.4.3.5 0 1.1 0 1.6-.3.3-.3.8-.5 1.1-.8.3-.3.5-.8.8-1.1.3-.6.3-1.1.3-1.4zm3.2-124.7h-1.4l-1.6 3.5-1.6-3.5h-1.4v5.4h.8v-4.1l1.6 3.5h1.1l1.4-3.5v4.1h1.1v-5.4zm4.4-80.5c0-76.2-62.1-138.3-138.5-138.3-27.2 0-53.9 8.2-76.5 23.1 72.1 59.3 73.2 171.5 0 230.5 22.6 15 49.5 23.1 76.5 23.1 76.4.1 138.5-61.9 138.5-138.4z\"],\n    \"cc-paypal\": [576, 512, [], \"f1f4\", \"M186.3 258.2c0 12.2-9.7 21.5-22 21.5-9.2 0-16-5.2-16-15 0-12.2 9.5-22 21.7-22 9.3 0 16.3 5.7 16.3 15.5zM80.5 209.7h-4.7c-1.5 0-3 1-3.2 2.7l-4.3 26.7 8.2-.3c11 0 19.5-1.5 21.5-14.2 2.3-13.4-6.2-14.9-17.5-14.9zm284 0H360c-1.8 0-3 1-3.2 2.7l-4.2 26.7 8-.3c13 0 22-3 22-18-.1-10.6-9.6-11.1-18.1-11.1zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM128.3 215.4c0-21-16.2-28-34.7-28h-40c-2.5 0-5 2-5.2 4.7L32 294.2c-.3 2 1.2 4 3.2 4h19c2.7 0 5.2-2.9 5.5-5.7l4.5-26.6c1-7.2 13.2-4.7 18-4.7 28.6 0 46.1-17 46.1-45.8zm84.2 8.8h-19c-3.8 0-4 5.5-4.2 8.2-5.8-8.5-14.2-10-23.7-10-24.5 0-43.2 21.5-43.2 45.2 0 19.5 12.2 32.2 31.7 32.2 9 0 20.2-4.9 26.5-11.9-.5 1.5-1 4.7-1 6.2 0 2.3 1 4 3.2 4H200c2.7 0 5-2.9 5.5-5.7l10.2-64.3c.3-1.9-1.2-3.9-3.2-3.9zm40.5 97.9l63.7-92.6c.5-.5.5-1 .5-1.7 0-1.7-1.5-3.5-3.2-3.5h-19.2c-1.7 0-3.5 1-4.5 2.5l-26.5 39-11-37.5c-.8-2.2-3-4-5.5-4h-18.7c-1.7 0-3.2 1.8-3.2 3.5 0 1.2 19.5 56.8 21.2 62.1-2.7 3.8-20.5 28.6-20.5 31.6 0 1.8 1.5 3.2 3.2 3.2h19.2c1.8-.1 3.5-1.1 4.5-2.6zm159.3-106.7c0-21-16.2-28-34.7-28h-39.7c-2.7 0-5.2 2-5.5 4.7l-16.2 102c-.2 2 1.3 4 3.2 4h20.5c2 0 3.5-1.5 4-3.2l4.5-29c1-7.2 13.2-4.7 18-4.7 28.4 0 45.9-17 45.9-45.8zm84.2 8.8h-19c-3.8 0-4 5.5-4.3 8.2-5.5-8.5-14-10-23.7-10-24.5 0-43.2 21.5-43.2 45.2 0 19.5 12.2 32.2 31.7 32.2 9.3 0 20.5-4.9 26.5-11.9-.3 1.5-1 4.7-1 6.2 0 2.3 1 4 3.2 4H484c2.7 0 5-2.9 5.5-5.7l10.2-64.3c.3-1.9-1.2-3.9-3.2-3.9zm47.5-33.3c0-2-1.5-3.5-3.2-3.5h-18.5c-1.5 0-3 1.2-3.2 2.7l-16.2 104-.3.5c0 1.8 1.5 3.5 3.5 3.5h16.5c2.5 0 5-2.9 5.2-5.7L544 191.2v-.3zm-90 51.8c-12.2 0-21.7 9.7-21.7 22 0 9.7 7 15 16.2 15 12 0 21.7-9.2 21.7-21.5.1-9.8-6.9-15.5-16.2-15.5z\"],\n    \"cc-stripe\": [576, 512, [], \"f1f5\", \"M492.4 220.8c-8.9 0-18.7 6.7-18.7 22.7h36.7c0-16-9.3-22.7-18-22.7zM375 223.4c-8.2 0-13.3 2.9-17 7l.2 52.8c3.5 3.7 8.5 6.7 16.8 6.7 13.1 0 21.9-14.3 21.9-33.4 0-18.6-9-33.2-21.9-33.1zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM122.2 281.1c0 25.6-20.3 40.1-49.9 40.3-12.2 0-25.6-2.4-38.8-8.1v-33.9c12 6.4 27.1 11.3 38.9 11.3 7.9 0 13.6-2.1 13.6-8.7 0-17-54-10.6-54-49.9 0-25.2 19.2-40.2 48-40.2 11.8 0 23.5 1.8 35.3 6.5v33.4c-10.8-5.8-24.5-9.1-35.3-9.1-7.5 0-12.1 2.2-12.1 7.7 0 16 54.3 8.4 54.3 50.7zm68.8-56.6h-27V275c0 20.9 22.5 14.4 27 12.6v28.9c-4.7 2.6-13.3 4.7-24.9 4.7-21.1 0-36.9-15.5-36.9-36.5l.2-113.9 34.7-7.4v30.8H191zm74 2.4c-4.5-1.5-18.7-3.6-27.1 7.4v84.4h-35.5V194.2h30.7l2.2 10.5c8.3-15.3 24.9-12.2 29.6-10.5h.1zm44.1 91.8h-35.7V194.2h35.7zm0-142.9l-35.7 7.6v-28.9l35.7-7.6zm74.1 145.5c-12.4 0-20-5.3-25.1-9l-.1 40.2-35.5 7.5V194.2h31.3l1.8 8.8c4.9-4.5 13.9-11.1 27.8-11.1 24.9 0 48.4 22.5 48.4 63.8 0 45.1-23.2 65.5-48.6 65.6zm160.4-51.5h-69.5c1.6 16.6 13.8 21.5 27.6 21.5 14.1 0 25.2-3 34.9-7.9V312c-9.7 5.3-22.4 9.2-39.4 9.2-34.6 0-58.8-21.7-58.8-64.5 0-36.2 20.5-64.9 54.3-64.9 33.7 0 51.3 28.7 51.3 65.1 0 3.5-.3 10.9-.4 12.9z\"],\n    \"cc-visa\": [576, 512, [], \"f1f0\", \"M470.1 231.3s7.6 37.2 9.3 45H446c3.3-8.9 16-43.5 16-43.5-.2.3 3.3-9.1 5.3-14.9l2.8 13.4zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM152.5 331.2L215.7 176h-42.5l-39.3 106-4.3-21.5-14-71.4c-2.3-9.9-9.4-12.7-18.2-13.1H32.7l-.7 3.1c15.8 4 29.9 9.8 42.2 17.1l35.8 135h42.5zm94.4.2L272.1 176h-40.2l-25.1 155.4h40.1zm139.9-50.8c.2-17.7-10.6-31.2-33.7-42.3-14.1-7.1-22.7-11.9-22.7-19.2.2-6.6 7.3-13.4 23.1-13.4 13.1-.3 22.7 2.8 29.9 5.9l3.6 1.7 5.5-33.6c-7.9-3.1-20.5-6.6-36-6.6-39.7 0-67.6 21.2-67.8 51.4-.3 22.3 20 34.7 35.2 42.2 15.5 7.6 20.8 12.6 20.8 19.3-.2 10.4-12.6 15.2-24.1 15.2-16 0-24.6-2.5-37.7-8.3l-5.3-2.5-5.6 34.9c9.4 4.3 26.8 8.1 44.8 8.3 42.2.1 69.7-20.8 70-53zM528 331.4L495.6 176h-31.1c-9.6 0-16.9 2.8-21 12.9l-59.7 142.5H426s6.9-19.2 8.4-23.3H486c1.2 5.5 4.8 23.3 4.8 23.3H528z\"],\n    \"centercode\": [512, 512, [], \"f380\", \"M329.2 268.6c-3.8 35.2-35.4 60.6-70.6 56.8-35.2-3.8-60.6-35.4-56.8-70.6 3.8-35.2 35.4-60.6 70.6-56.8 35.1 3.8 60.6 35.4 56.8 70.6zm-85.8 235.1C96.7 496-8.2 365.5 10.1 224.3c11.2-86.6 65.8-156.9 139.1-192 161-77.1 349.7 37.4 354.7 216.6 4.1 147-118.4 262.2-260.5 254.8zm179.9-180c27.9-118-160.5-205.9-237.2-234.2-57.5 56.3-69.1 188.6-33.8 344.4 68.8 15.8 169.1-26.4 271-110.2z\"],\n    \"centos\": [448, 512, [], \"f789\", \"M289.6 97.5l31.6 31.7-76.3 76.5V97.5zm-162.4 31.7l76.3 76.5V97.5h-44.7zm41.5-41.6h44.7v127.9l10.8 10.8 10.8-10.8V87.6h44.7L224.2 32zm26.2 168.1l-10.8-10.8H55.5v-44.8L0 255.7l55.5 55.6v-44.8h128.6l10.8-10.8zm79.3-20.7h107.9v-44.8l-31.6-31.7zm173.3 20.7L392 200.1v44.8H264.3l-10.8 10.8 10.8 10.8H392v44.8l55.5-55.6zM65.4 176.2l32.5-31.7 90.3 90.5h15.3v-15.3l-90.3-90.5 31.6-31.7H65.4zm316.7-78.7h-78.5l31.6 31.7-90.3 90.5V235h15.3l90.3-90.5 31.6 31.7zM203.5 413.9V305.8l-76.3 76.5 31.6 31.7h44.7zM65.4 235h108.8l-76.3-76.5-32.5 31.7zm316.7 100.2l-31.6 31.7-90.3-90.5h-15.3v15.3l90.3 90.5-31.6 31.7h78.5zm0-58.8H274.2l76.3 76.5 31.6-31.7zm-60.9 105.8l-76.3-76.5v108.1h44.7zM97.9 352.9l76.3-76.5H65.4v44.8zm181.8 70.9H235V295.9l-10.8-10.8-10.8 10.8v127.9h-44.7l55.5 55.6zm-166.5-41.6l90.3-90.5v-15.3h-15.3l-90.3 90.5-32.5-31.7v78.7h79.4z\"],\n    \"chrome\": [496, 512, [], \"f268\", \"M131.5 217.5L55.1 100.1c47.6-59.2 119-91.8 192-92.1 42.3-.3 85.5 10.5 124.8 33.2 43.4 25.2 76.4 61.4 97.4 103L264 133.4c-58.1-3.4-113.4 29.3-132.5 84.1zm32.9 38.5c0 46.2 37.4 83.6 83.6 83.6s83.6-37.4 83.6-83.6-37.4-83.6-83.6-83.6-83.6 37.3-83.6 83.6zm314.9-89.2L339.6 174c37.9 44.3 38.5 108.2 6.6 157.2L234.1 503.6c46.5 2.5 94.4-7.7 137.8-32.9 107.4-62 150.9-192 107.4-303.9zM133.7 303.6L40.4 120.1C14.9 159.1 0 205.9 0 256c0 124 90.8 226.7 209.5 244.9l63.7-124.8c-57.6 10.8-113.2-20.8-139.5-72.5z\"],\n    \"chromecast\": [512, 512, [], \"f838\", \"M447.83 64H64a42.72 42.72 0 0 0-42.72 42.72v63.92H64v-63.92h383.83v298.56H298.64V448H448a42.72 42.72 0 0 0 42.72-42.72V106.72A42.72 42.72 0 0 0 448 64zM21.28 383.58v63.92h63.91a63.91 63.91 0 0 0-63.91-63.92zm0-85.28V341a106.63 106.63 0 0 1 106.64 106.66v.34h42.72a149.19 149.19 0 0 0-149-149.36h-.33zm0-85.27v42.72c106-.1 192 85.75 192.08 191.75v.5h42.72c-.46-129.46-105.34-234.27-234.8-234.64z\"],\n    \"cloudscale\": [448, 512, [], \"f383\", \"M318.1 154l-9.4 7.6c-22.5-19.3-51.5-33.6-83.3-33.6C153.8 128 96 188.8 96 260.3c0 6.6.4 13.1 1.4 19.4-2-56 41.8-97.4 92.6-97.4 24.2 0 46.2 9.4 62.6 24.7l-25.2 20.4c-8.3-.9-16.8 1.8-23.1 8.1-11.1 11-11.1 28.9 0 40 11.1 11 28.9 11 40 0 6.3-6.3 9-14.9 8.1-23.1l75.2-88.8c6.3-6.5-3.3-15.9-9.5-9.6zm-83.8 111.5c-5.6 5.5-14.6 5.5-20.2 0-5.6-5.6-5.6-14.6 0-20.2s14.6-5.6 20.2 0 5.6 14.7 0 20.2zM224 32C100.5 32 0 132.5 0 256s100.5 224 224 224 224-100.5 224-224S347.5 32 224 32zm0 384c-88.2 0-160-71.8-160-160S135.8 96 224 96s160 71.8 160 160-71.8 160-160 160z\"],\n    \"cloudsmith\": [332, 512, [], \"f384\", \"M332.5 419.9c0 46.4-37.6 84.1-84 84.1s-84-37.7-84-84.1 37.6-84 84-84 84 37.6 84 84zm-84-243.9c46.4 0 80-37.6 80-84s-33.6-84-80-84-88 37.6-88 84-29.6 76-76 76-84 41.6-84 88 37.6 80 84 80 84-33.6 84-80 33.6-80 80-80z\"],\n    \"cloudversify\": [616, 512, [], \"f385\", \"M148.6 304c8.2 68.5 67.4 115.5 146 111.3 51.2 43.3 136.8 45.8 186.4-5.6 69.2 1.1 118.5-44.6 131.5-99.5 14.8-62.5-18.2-132.5-92.1-155.1-33-88.1-131.4-101.5-186.5-85-57.3 17.3-84.3 53.2-99.3 109.7-7.8 2.7-26.5 8.9-45 24.1 11.7 0 15.2 8.9 15.2 19.5v20.4c0 10.7-8.7 19.5-19.5 19.5h-20.2c-10.7 0-19.5-6-19.5-16.7V240H98.8C95 240 88 244.3 88 251.9v40.4c0 6.4 5.3 11.8 11.7 11.8h48.9zm227.4 8c-10.7 46.3 21.7 72.4 55.3 86.8C324.1 432.6 259.7 348 296 288c-33.2 21.6-33.7 71.2-29.2 92.9-17.9-12.4-53.8-32.4-57.4-79.8-3-39.9 21.5-75.7 57-93.9C297 191.4 369.9 198.7 400 248c-14.1-48-53.8-70.1-101.8-74.8 30.9-30.7 64.4-50.3 114.2-43.7 69.8 9.3 133.2 82.8 67.7 150.5 35-16.3 48.7-54.4 47.5-76.9l10.5 19.6c11.8 22 15.2 47.6 9.4 72-9.2 39-40.6 68.8-79.7 76.5-32.1 6.3-83.1-5.1-91.8-59.2zM128 208H88.2c-8.9 0-16.2-7.3-16.2-16.2v-39.6c0-8.9 7.3-16.2 16.2-16.2H128c8.9 0 16.2 7.3 16.2 16.2v39.6c0 8.9-7.3 16.2-16.2 16.2zM10.1 168C4.5 168 0 163.5 0 157.9v-27.8c0-5.6 4.5-10.1 10.1-10.1h27.7c5.5 0 10.1 4.5 10.1 10.1v27.8c0 5.6-4.5 10.1-10.1 10.1H10.1zM168 142.7v-21.4c0-5.1 4.2-9.3 9.3-9.3h21.4c5.1 0 9.3 4.2 9.3 9.3v21.4c0 5.1-4.2 9.3-9.3 9.3h-21.4c-5.1 0-9.3-4.2-9.3-9.3zM56 235.5v25c0 6.3-5.1 11.5-11.4 11.5H19.4C13.1 272 8 266.8 8 260.5v-25c0-6.3 5.1-11.5 11.4-11.5h25.1c6.4 0 11.5 5.2 11.5 11.5z\"],\n    \"codepen\": [512, 512, [], \"f1cb\", \"M502.285 159.704l-234-156c-7.987-4.915-16.511-4.96-24.571 0l-234 156C3.714 163.703 0 170.847 0 177.989v155.999c0 7.143 3.714 14.286 9.715 18.286l234 156.022c7.987 4.915 16.511 4.96 24.571 0l234-156.022c6-3.999 9.715-11.143 9.715-18.286V177.989c-.001-7.142-3.715-14.286-9.716-18.285zM278 63.131l172.286 114.858-76.857 51.429L278 165.703V63.131zm-44 0v102.572l-95.429 63.715-76.857-51.429L234 63.131zM44 219.132l55.143 36.857L44 292.846v-73.714zm190 229.715L61.714 333.989l76.857-51.429L234 346.275v102.572zm22-140.858l-77.715-52 77.715-52 77.715 52-77.715 52zm22 140.858V346.275l95.429-63.715 76.857 51.429L278 448.847zm190-156.001l-55.143-36.857L468 219.132v73.714z\"],\n    \"codiepie\": [472, 512, [], \"f284\", \"M422.5 202.9c30.7 0 33.5 53.1-.3 53.1h-10.8v44.3h-26.6v-97.4h37.7zM472 352.6C429.9 444.5 350.4 504 248 504 111 504 0 393 0 256S111 8 248 8c97.4 0 172.8 53.7 218.2 138.4l-186 108.8L472 352.6zm-38.5 12.5l-60.3-30.7c-27.1 44.3-70.4 71.4-122.4 71.4-82.5 0-149.2-66.7-149.2-148.9 0-82.5 66.7-149.2 149.2-149.2 48.4 0 88.9 23.5 116.9 63.4l59.5-34.6c-40.7-62.6-104.7-100-179.2-100-121.2 0-219.5 98.3-219.5 219.5S126.8 475.5 248 475.5c78.6 0 146.5-42.1 185.5-110.4z\"],\n    \"confluence\": [512, 512, [], \"f78d\", \"M2.3 412.2c-4.5 7.6-2.1 17.5 5.5 22.2l105.9 65.2c7.7 4.7 17.7 2.4 22.4-5.3 0-.1.1-.2.1-.2 67.1-112.2 80.5-95.9 280.9-.7 8.1 3.9 17.8.4 21.7-7.7.1-.1.1-.3.2-.4l50.4-114.1c3.6-8.1-.1-17.6-8.1-21.3-22.2-10.4-66.2-31.2-105.9-50.3C127.5 179 44.6 345.3 2.3 412.2zm507.4-312.1c4.5-7.6 2.1-17.5-5.5-22.2L398.4 12.8c-7.5-5-17.6-3.1-22.6 4.4-.2.3-.4.6-.6 1-67.3 112.6-81.1 95.6-280.6.9-8.1-3.9-17.8-.4-21.7 7.7-.1.1-.1.3-.2.4L22.2 141.3c-3.6 8.1.1 17.6 8.1 21.3 22.2 10.4 66.3 31.2 106 50.4 248 120 330.8-45.4 373.4-112.9z\"],\n    \"connectdevelop\": [576, 512, [], \"f20e\", \"M550.5 241l-50.089-86.786c1.071-2.142 1.875-4.553 1.875-7.232 0-8.036-6.696-14.733-14.732-15.001l-55.447-95.893c.536-1.607 1.071-3.214 1.071-4.821 0-8.571-6.964-15.268-15.268-15.268-4.821 0-8.839 2.143-11.786 5.625H299.518C296.839 18.143 292.821 16 288 16s-8.839 2.143-11.518 5.625H170.411C167.464 18.143 163.447 16 158.625 16c-8.303 0-15.268 6.696-15.268 15.268 0 1.607.536 3.482 1.072 4.821l-55.983 97.233c-5.356 2.41-9.107 7.5-9.107 13.661 0 .535.268 1.071.268 1.607l-53.304 92.143c-7.232 1.339-12.59 7.5-12.59 15 0 7.232 5.089 13.393 12.054 15l55.179 95.358c-.536 1.607-.804 2.946-.804 4.821 0 7.232 5.089 13.393 12.054 14.732l51.697 89.732c-.536 1.607-1.071 3.482-1.071 5.357 0 8.571 6.964 15.268 15.268 15.268 4.821 0 8.839-2.143 11.518-5.357h106.875C279.161 493.857 283.447 496 288 496s8.839-2.143 11.518-5.357h107.143c2.678 2.946 6.696 4.821 10.982 4.821 8.571 0 15.268-6.964 15.268-15.268 0-1.607-.267-2.946-.803-4.285l51.697-90.268c6.964-1.339 12.054-7.5 12.054-14.732 0-1.607-.268-3.214-.804-4.821l54.911-95.358c6.964-1.339 12.322-7.5 12.322-15-.002-7.232-5.092-13.393-11.788-14.732zM153.535 450.732l-43.66-75.803h43.66v75.803zm0-83.839h-43.66c-.268-1.071-.804-2.142-1.339-3.214l44.999-47.41v50.624zm0-62.411l-50.357 53.304c-1.339-.536-2.679-1.34-4.018-1.607L43.447 259.75c.535-1.339.535-2.679.535-4.018s0-2.41-.268-3.482l51.965-90c2.679-.268 5.357-1.072 7.768-2.679l50.089 51.965v92.946zm0-102.322l-45.803-47.41c1.339-2.143 2.143-4.821 2.143-7.767 0-.268-.268-.804-.268-1.072l43.928-15.804v72.053zm0-80.625l-43.66 15.804 43.66-75.536v59.732zm326.519 39.108l.804 1.339L445.5 329.125l-63.75-67.232 98.036-101.518.268.268zM291.75 355.107l11.518 11.786H280.5l11.25-11.786zm-.268-11.25l-83.303-85.446 79.553-84.375 83.036 87.589-79.286 82.232zm5.357 5.893l79.286-82.232 67.5 71.25-5.892 28.125H313.714l-16.875-17.143zM410.411 44.393c1.071.536 2.142 1.072 3.482 1.34l57.857 100.714v.536c0 2.946.803 5.624 2.143 7.767L376.393 256l-83.035-87.589L410.411 44.393zm-9.107-2.143L287.732 162.518l-57.054-60.268 166.339-60h4.287zm-123.483 0c2.678 2.678 6.16 4.285 10.179 4.285s7.5-1.607 10.179-4.285h75L224.786 95.821 173.893 42.25h103.928zm-116.249 5.625l1.071-2.142a33.834 33.834 0 0 0 2.679-.804l51.161 53.84-54.911 19.821V47.875zm0 79.286l60.803-21.964 59.732 63.214-79.553 84.107-40.982-42.053v-83.304zm0 92.678L198 257.607l-36.428 38.304v-76.072zm0 87.858l42.053-44.464 82.768 85.982-17.143 17.678H161.572v-59.196zm6.964 162.053c-1.607-1.607-3.482-2.678-5.893-3.482l-1.071-1.607v-89.732h99.91l-91.607 94.821h-1.339zm129.911 0c-2.679-2.41-6.428-4.285-10.447-4.285s-7.767 1.875-10.447 4.285h-96.429l91.607-94.821h38.304l91.607 94.821H298.447zm120-11.786l-4.286 7.5c-1.339.268-2.41.803-3.482 1.339l-89.196-91.875h114.376l-17.412 83.036zm12.856-22.232l12.858-60.803h21.964l-34.822 60.803zm34.822-68.839h-20.357l4.553-21.16 17.143 18.214c-.535.803-1.071 1.874-1.339 2.946zm66.161-107.411l-55.447 96.697c-1.339.535-2.679 1.071-4.018 1.874l-20.625-21.964 34.554-163.928 45.803 79.286c-.267 1.339-.803 2.678-.803 4.285 0 1.339.268 2.411.536 3.75z\"],\n    \"contao\": [512, 512, [], \"f26d\", \"M45.4 305c14.4 67.1 26.4 129 68.2 175H34c-18.7 0-34-15.2-34-34V66c0-18.7 15.2-34 34-34h57.7C77.9 44.6 65.6 59.2 54.8 75.6c-45.4 70-27 146.8-9.4 229.4zM478 32h-90.2c21.4 21.4 39.2 49.5 52.7 84.1l-137.1 29.3c-14.9-29-37.8-53.3-82.6-43.9-24.6 5.3-41 19.3-48.3 34.6-8.8 18.7-13.2 39.8 8.2 140.3 21.1 100.2 33.7 117.7 49.5 131.2 12.9 11.1 33.4 17 58.3 11.7 44.5-9.4 55.7-40.7 57.4-73.2l137.4-29.6c3.2 71.5-18.7 125.2-57.4 163.6H478c18.7 0 34-15.2 34-34V66c0-18.8-15.2-34-34-34z\"],\n    \"cpanel\": [640, 512, [], \"f388\", \"M210.3 220.2c-5.6-24.8-26.9-41.2-51-41.2h-37c-7.1 0-12.5 4.5-14.3 10.9L73.1 320l24.7-.1c6.8 0 12.3-4.5 14.2-10.7l25.8-95.7h19.8c8.4 0 16.2 5.6 18.3 14.8 2.5 10.9-5.9 22.6-18.3 22.6h-10.3c-7 0-12.5 4.6-14.3 10.8l-6.4 23.8h32c37.2 0 58.3-36.2 51.7-65.3zm-156.5 28h18.6c6.9 0 12.4-4.4 14.3-10.9l6.2-23.6h-40C30 213.7 9 227.8 1.7 254.8-7 288.6 18.5 320 52 320h12.4l7.1-26.1c1.2-4.4-2.2-8.3-6.4-8.3H53.8c-24.7 0-24.9-37.4 0-37.4zm247.5-34.8h-77.9l-3.5 13.4c-2.4 9.6 4.5 18.5 14.2 18.5h57.5c4 0 2.4 4.3 2.1 5.3l-8.6 31.8c-.4 1.4-.9 5.3-5.5 5.3h-34.9c-5.3 0-5.3-7.9 0-7.9h21.6c6.8 0 12.3-4.6 14.2-10.8l3.5-13.2h-48.4c-39.2 0-43.6 63.8-.7 63.8l57.5.2c11.2 0 20.6-7.2 23.4-17.8l14-51.8c4.8-19.2-9.7-36.8-28.5-36.8zM633.1 179h-18.9c-4.9 0-9.2 3.2-10.4 7.9L568.2 320c20.7 0 39.8-13.8 44.9-34.5l26.5-98.2c1.2-4.3-2-8.3-6.5-8.3zm-236.3 34.7v.1h-48.3l-26.2 98c-1.2 4.4 2.2 8.3 6.4 8.3h18.9c4.8 0 9.2-3 10.4-7.8l17.2-64H395c12.5 0 21.4 11.8 18.1 23.4l-10.6 40c-1.2 4.3 1.9 8.3 6.4 8.3H428c4.6 0 9.1-2.9 10.3-7.8l8.8-33.1c9-33.1-15.9-65.4-50.3-65.4zm98.3 74.6c-3.6 0-6-3.4-5.1-6.7l8-30c.9-3.9 3.7-6 7.8-6h32.9c2.6 0 4.6 2.4 3.9 5.1l-.7 2.6c-.6 2-1.9 3-3.9 3h-21.6c-7 0-12.6 4.6-14.2 10.8l-3.5 13h53.4c10.5 0 20.3-6.6 23.2-17.6l3.2-12c4.9-19.1-9.3-36.8-28.3-36.8h-47.3c-17.9 0-33.8 12-38.6 29.6l-10.8 40c-5 17.7 8.3 36.7 28.3 36.7h66.7c6.8 0 12.3-4.5 14.2-10.7l5.7-21z\"],\n    \"creative-commons\": [496, 512, [], \"f25e\", \"M245.83 214.87l-33.22 17.28c-9.43-19.58-25.24-19.93-27.46-19.93-22.13 0-33.22 14.61-33.22 43.84 0 23.57 9.21 43.84 33.22 43.84 14.47 0 24.65-7.09 30.57-21.26l30.55 15.5c-6.17 11.51-25.69 38.98-65.1 38.98-22.6 0-73.96-10.32-73.96-77.05 0-58.69 43-77.06 72.63-77.06 30.72-.01 52.7 11.95 65.99 35.86zm143.05 0l-32.78 17.28c-9.5-19.77-25.72-19.93-27.9-19.93-22.14 0-33.22 14.61-33.22 43.84 0 23.55 9.23 43.84 33.22 43.84 14.45 0 24.65-7.09 30.54-21.26l31 15.5c-2.1 3.75-21.39 38.98-65.09 38.98-22.69 0-73.96-9.87-73.96-77.05 0-58.67 42.97-77.06 72.63-77.06 30.71-.01 52.58 11.95 65.56 35.86zM247.56 8.05C104.74 8.05 0 123.11 0 256.05c0 138.49 113.6 248 247.56 248 129.93 0 248.44-100.87 248.44-248 0-137.87-106.62-248-248.44-248zm.87 450.81c-112.54 0-203.7-93.04-203.7-202.81 0-105.42 85.43-203.27 203.72-203.27 112.53 0 202.82 89.46 202.82 203.26-.01 121.69-99.68 202.82-202.84 202.82z\"],\n    \"creative-commons-by\": [496, 512, [], \"f4e7\", \"M314.9 194.4v101.4h-28.3v120.5h-77.1V295.9h-28.3V194.4c0-4.4 1.6-8.2 4.6-11.3 3.1-3.1 6.9-4.7 11.3-4.7H299c4.1 0 7.8 1.6 11.1 4.7 3.1 3.2 4.8 6.9 4.8 11.3zm-101.5-63.7c0-23.3 11.5-35 34.5-35s34.5 11.7 34.5 35c0 23-11.5 34.5-34.5 34.5s-34.5-11.5-34.5-34.5zM247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3z\"],\n    \"creative-commons-nc\": [496, 512, [], \"f4e8\", \"M247.6 8C387.4 8 496 115.9 496 256c0 147.2-118.5 248-248.4 248C113.1 504 0 393.2 0 256 0 123.1 104.7 8 247.6 8zM55.8 189.1c-7.4 20.4-11.1 42.7-11.1 66.9 0 110.9 92.1 202.4 203.7 202.4 122.4 0 177.2-101.8 178.5-104.1l-93.4-41.6c-7.7 37.1-41.2 53-68.2 55.4v38.1h-28.8V368c-27.5-.3-52.6-10.2-75.3-29.7l34.1-34.5c31.7 29.4 86.4 31.8 86.4-2.2 0-6.2-2.2-11.2-6.6-15.1-14.2-6-1.8-.1-219.3-97.4zM248.4 52.3c-38.4 0-112.4 8.7-170.5 93l94.8 42.5c10-31.3 40.4-42.9 63.8-44.3v-38.1h28.8v38.1c22.7 1.2 43.4 8.9 62 23L295 199.7c-42.7-29.9-83.5-8-70 11.1 53.4 24.1 43.8 19.8 93 41.6l127.1 56.7c4.1-17.4 6.2-35.1 6.2-53.1 0-57-19.8-105-59.3-143.9-39.3-39.9-87.2-59.8-143.6-59.8z\"],\n    \"creative-commons-nc-eu\": [496, 512, [], \"f4e9\", \"M247.7 8C103.6 8 0 124.8 0 256c0 136.3 111.7 248 247.7 248C377.9 504 496 403.1 496 256 496 117 388.4 8 247.7 8zm.6 450.7c-112 0-203.6-92.5-203.6-202.7 0-23.2 3.7-45.2 10.9-66l65.7 29.1h-4.7v29.5h23.3c0 6.2-.4 3.2-.4 19.5h-22.8v29.5h27c11.4 67 67.2 101.3 124.6 101.3 26.6 0 50.6-7.9 64.8-15.8l-10-46.1c-8.7 4.6-28.2 10.8-47.3 10.8-28.2 0-58.1-10.9-67.3-50.2h90.3l128.3 56.8c-1.5 2.1-56.2 104.3-178.8 104.3zm-16.7-190.6l-.5-.4.9.4h-.4zm77.2-19.5h3.7v-29.5h-70.3l-28.6-12.6c2.5-5.5 5.4-10.5 8.8-14.3 12.9-15.8 31.1-22.4 51.1-22.4 18.3 0 35.3 5.4 46.1 10l11.6-47.3c-15-6.6-37-12.4-62.3-12.4-39 0-72.2 15.8-95.9 42.3-5.3 6.1-9.8 12.9-13.9 20.1l-81.6-36.1c64.6-96.8 157.7-93.6 170.7-93.6 113 0 203 90.2 203 203.4 0 18.7-2.1 36.3-6.3 52.9l-136.1-60.5z\"],\n    \"creative-commons-nc-jp\": [496, 512, [], \"f4ea\", \"M247.7 8C103.6 8 0 124.8 0 256c0 136.4 111.8 248 247.7 248C377.9 504 496 403.2 496 256 496 117.2 388.5 8 247.7 8zm.6 450.7c-112 0-203.6-92.5-203.6-202.7 0-21.1 3-41.2 9-60.3l127 56.5h-27.9v38.6h58.1l5.7 11.8v18.7h-63.8V360h63.8v56h61.7v-56h64.2v-35.7l81 36.1c-1.5 2.2-57.1 98.3-175.2 98.3zm87.6-137.3h-57.6v-18.7l2.9-5.6 54.7 24.3zm6.5-51.4v-17.8h-38.6l63-116H301l-43.4 96-23-10.2-39.6-85.7h-65.8l27.3 51-81.9-36.5c27.8-44.1 82.6-98.1 173.7-98.1 112.8 0 203 90 203 203.4 0 21-2.7 40.6-7.9 59l-101-45.1z\"],\n    \"creative-commons-nd\": [496, 512, [], \"f4eb\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm94 144.3v42.5H162.1V197h180.3zm0 79.8v42.5H162.1v-42.5h180.3z\"],\n    \"creative-commons-pd\": [496, 512, [], \"f4ec\", \"M248 8C111 8 0 119.1 0 256c0 137 111 248 248 248s248-111 248-248C496 119.1 385 8 248 8zm0 449.5c-139.2 0-235.8-138-190.2-267.9l78.8 35.1c-2.1 10.5-3.3 21.5-3.3 32.9 0 99 73.9 126.9 120.4 126.9 22.9 0 53.5-6.7 79.4-29.5L297 311.1c-5.5 6.3-17.6 16.7-36.3 16.7-37.8 0-53.7-39.9-53.9-71.9 230.4 102.6 216.5 96.5 217.9 96.8-34.3 62.4-100.6 104.8-176.7 104.8zm194.2-150l-224-100c18.8-34 54.9-30.7 74.7-11l40.4-41.6c-27.1-23.3-58-27.5-78.1-27.5-47.4 0-80.9 20.5-100.7 51.6l-74.9-33.4c36.1-54.9 98.1-91.2 168.5-91.2 111.1 0 201.5 90.4 201.5 201.5 0 18-2.4 35.4-6.8 52-.3-.1-.4-.2-.6-.4z\"],\n    \"creative-commons-pd-alt\": [496, 512, [], \"f4ed\", \"M247.6 8C104.7 8 0 123.1 0 256c0 138.5 113.6 248 247.6 248C377.5 504 496 403.1 496 256 496 118.1 389.4 8 247.6 8zm.8 450.8c-112.5 0-203.7-93-203.7-202.8 0-105.4 85.5-203.3 203.7-203.3 112.6 0 202.9 89.5 202.8 203.3 0 121.7-99.6 202.8-202.8 202.8zM316.7 186h-53.2v137.2h53.2c21.4 0 70-5.1 70-68.6 0-63.4-48.6-68.6-70-68.6zm.8 108.5h-19.9v-79.7l19.4-.1c3.8 0 35-2.1 35 39.9 0 24.6-10.5 39.9-34.5 39.9zM203.7 186h-68.2v137.3h34.6V279h27c54.1 0 57.1-37.5 57.1-46.5 0-31-16.8-46.5-50.5-46.5zm-4.9 67.3h-29.2v-41.6h28.3c30.9 0 28.8 41.6.9 41.6z\"],\n    \"creative-commons-remix\": [496, 512, [], \"f4ee\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm161.7 207.7l4.9 2.2v70c-7.2 3.6-63.4 27.5-67.3 28.8-6.5-1.8-113.7-46.8-137.3-56.2l-64.2 26.6-63.3-27.5v-63.8l59.3-24.8c-.7-.7-.4 5-.4-70.4l67.3-29.7L361 178.5v61.6l49.1 20.3zm-70.4 81.5v-43.8h-.4v-1.8l-113.8-46.5V295l113.8 46.9v-.4l.4.4zm7.5-57.6l39.9-16.4-36.8-15.5-39 16.4 35.9 15.5zm52.3 38.1v-43L355.2 298v43.4l44.3-19z\"],\n    \"creative-commons-sa\": [496, 512, [], \"f4ef\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zM137.7 221c13-83.9 80.5-95.7 108.9-95.7 99.8 0 127.5 82.5 127.5 134.2 0 63.6-41 132.9-128.9 132.9-38.9 0-99.1-20-109.4-97h62.5c1.5 30.1 19.6 45.2 54.5 45.2 23.3 0 58-18.2 58-82.8 0-82.5-49.1-80.6-56.7-80.6-33.1 0-51.7 14.6-55.8 43.8h18.2l-49.2 49.2-49-49.2h19.4z\"],\n    \"creative-commons-sampling\": [496, 512, [], \"f4f0\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm3.6 53.2c2.8-.3 11.5 1 11.5 11.5l6.6 107.2 4.9-59.3c0-6 4.7-10.6 10.6-10.6 5.9 0 10.6 4.7 10.6 10.6 0 2.5-.5-5.7 5.7 81.5l5.8-64.2c.3-2.9 2.9-9.3 10.2-9.3 3.8 0 9.9 2.3 10.6 8.9l11.5 96.5 5.3-12.8c1.8-4.4 5.2-6.6 10.2-6.6h58v21.3h-50.9l-18.2 44.3c-3.9 9.9-19.5 9.1-20.8-3.1l-4-31.9-7.5 92.6c-.3 3-3 9.3-10.2 9.3-3 0-9.8-2.1-10.6-9.3 0-1.9.6 5.8-6.2-77.9l-5.3 72.2c-1.1 4.8-4.8 9.3-10.6 9.3-2.9 0-9.8-2-10.6-9.3 0-1.9.5 6.7-5.8-87.7l-5.8 94.8c0 6.3-3.6 12.4-10.6 12.4-5.2 0-10.6-4.1-10.6-12l-5.8-87.7c-5.8 92.5-5.3 84-5.3 85.9-1.1 4.8-4.8 9.3-10.6 9.3-3 0-9.8-2.1-10.6-9.3 0-.7-.4-1.1-.4-2.6l-6.2-88.6L182 348c-.7 6.5-6.7 9.3-10.6 9.3-5.8 0-9.6-4.1-10.6-8.9L149.7 272c-2 4-3.5 8.4-11.1 8.4H87.2v-21.3H132l13.7-27.9c4.4-9.9 18.2-7.2 19.9 2.7l3.1 20.4 8.4-97.9c0-6 4.8-10.6 10.6-10.6.5 0 10.6-.2 10.6 12.4l4.9 69.1 6.6-92.6c0-10.1 9.5-10.6 10.2-10.6.6 0 10.6.7 10.6 10.6l5.3 80.6 6.2-97.9c.1-1.1-.6-10.3 9.9-11.5z\"],\n    \"creative-commons-sampling-plus\": [496, 512, [], \"f4f1\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm107 205.6c-4.7 0-9 2.8-10.7 7.2l-4 9.5-11-92.8c-1.7-13.9-22-13.4-23.1.4l-4.3 51.4-5.2-68.8c-1.1-14.3-22.1-14.2-23.2 0l-3.5 44.9-5.9-94.3c-.9-14.5-22.3-14.4-23.2 0l-5.1 83.7-4.3-66.3c-.9-14.4-22.2-14.4-23.2 0l-5.3 80.2-4.1-57c-1.1-14.3-22-14.3-23.2-.2l-7.7 89.8-1.8-12.2c-1.7-11.4-17.1-13.6-22-3.3l-13.2 27.7H87.5v23.2h51.3c4.4 0 8.4-2.5 10.4-6.4l10.7 73.1c2 13.5 21.9 13 23.1-.7l3.8-43.6 5.7 78.3c1.1 14.4 22.3 14.2 23.2-.1l4.6-70.4 4.8 73.3c.9 14.4 22.3 14.4 23.2-.1l4.9-80.5 4.5 71.8c.9 14.3 22.1 14.5 23.2.2l4.6-58.6 4.9 64.4c1.1 14.3 22 14.2 23.1.1l6.8-83 2.7 22.3c1.4 11.8 17.7 14.1 22.3 3.1l18-43.4h50.5V258l-58.4.3zm-78 5.2h-21.9v21.9c0 4.1-3.3 7.5-7.5 7.5-4.1 0-7.5-3.3-7.5-7.5v-21.9h-21.9c-4.1 0-7.5-3.3-7.5-7.5 0-4.1 3.4-7.5 7.5-7.5h21.9v-21.9c0-4.1 3.4-7.5 7.5-7.5s7.5 3.3 7.5 7.5v21.9h21.9c4.1 0 7.5 3.3 7.5 7.5 0 4.1-3.4 7.5-7.5 7.5z\"],\n    \"creative-commons-share\": [496, 512, [], \"f4f2\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm101 132.4c7.8 0 13.7 6.1 13.7 13.7v182.5c0 7.7-6.1 13.7-13.7 13.7H214.3c-7.7 0-13.7-6-13.7-13.7v-54h-54c-7.8 0-13.7-6-13.7-13.7V131.1c0-8.2 6.6-12.7 12.4-13.7h136.4c7.7 0 13.7 6 13.7 13.7v54h54zM159.9 300.3h40.7V198.9c0-7.4 5.8-12.6 12-13.7h55.8v-40.3H159.9v155.4zm176.2-88.1H227.6v155.4h108.5V212.2z\"],\n    \"creative-commons-zero\": [496, 512, [], \"f4f3\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm-.4 60.5c-81.9 0-102.5 77.3-102.5 142.8 0 65.5 20.6 142.8 102.5 142.8S350.5 321.5 350.5 256c0-65.5-20.6-142.8-102.5-142.8zm0 53.9c3.3 0 6.4.5 9.2 1.2 5.9 5.1 8.8 12.1 3.1 21.9l-54.5 100.2c-1.7-12.7-1.9-25.1-1.9-34.4 0-28.8 2-88.9 44.1-88.9zm40.8 46.2c2.9 15.4 3.3 31.4 3.3 42.7 0 28.9-2 88.9-44.1 88.9-13.5 0-32.6-7.7-20.1-26.4l60.9-105.2z\"],\n    \"critical-role\": [448, 512, [], \"f6c9\", \"M225.82 0c.26.15 216.57 124.51 217.12 124.72 3 1.18 3.7 3.46 3.7 6.56q-.11 125.17 0 250.36a5.88 5.88 0 0 1-3.38 5.78c-21.37 12-207.86 118.29-218.93 124.58h-3C142 466.34 3.08 386.56 2.93 386.48a3.29 3.29 0 0 1-1.88-3.24c0-.87 0-225.94-.05-253.1a5 5 0 0 1 2.93-4.93C27.19 112.11 213.2 6 224.07 0zM215.4 20.42l-.22-.16Q118.06 75.55 21 130.87c0 .12.08.23.13.35l30.86 11.64c-7.71 6-8.32 6-10.65 5.13-.1 0-24.17-9.28-26.8-10v230.43c.88-1.41 64.07-110.91 64.13-111 1.62-2.82 3-1.92 9.12-1.52 1.4.09 1.48.22.78 1.42-41.19 71.33-36.4 63-67.48 116.94-.81 1.4-.61 1.13 1.25 1.13h186.5c1.44 0 1.69-.23 1.7-1.64v-8.88c0-1.34 2.36-.81-18.37-1-7.46-.07-14.14-3.22-21.38-12.7-7.38-9.66-14.62-19.43-21.85-29.21-2.28-3.08-3.45-2.38-16.76-2.38-1.75 0-1.78 0-1.76 1.82.29 26.21.15 25.27 1 32.66.52 4.37 2.16 4.2 9.69 4.81 3.14.26 3.88 4.08.52 4.92-1.57.39-31.6.51-33.67-.1a2.42 2.42 0 0 1 .3-4.73c3.29-.76 6.16.81 6.66-4.44 1.3-13.66 1.17-9 1.1-79.42 0-10.82-.35-12.58-5.36-13.55-1.22-.24-3.54-.16-4.69-.55-2.88-1-2-4.84 1.77-4.85 33.67 0 46.08-1.07 56.06 4.86 7.74 4.61 12 11.48 12.51 20.4.88 14.59-6.51 22.35-15 32.59a1.46 1.46 0 0 0 0 2.22c2.6 3.25 5 6.63 7.71 9.83 27.56 33.23 24.11 30.54 41.28 33.06.89.13 1-.42 1-1.15v-11c0-1 .32-1.43 1.41-1.26a72.37 72.37 0 0 0 23.58-.3c1.08-.15 1.5.2 1.48 1.33 0 .11.88 26.69.87 26.8-.05 1.52.67 1.62 1.89 1.62h186.71Q386.51 304.6 346 234.33c2.26-.66-.4 0 6.69-1.39 2-.39 2.05-.41 3.11 1.44 7.31 12.64 77.31 134 77.37 134.06V138c-1.72.5-103.3 38.72-105.76 39.68-1.08.42-1.55.2-1.91-.88-.63-1.9-1.34-3.76-2.09-5.62-.32-.79-.09-1.13.65-1.39.1 0 95.53-35.85 103-38.77-65.42-37.57-130.56-75-196-112.6l86.82 150.39-.28.33c-9.57-.9-10.46-1.6-11.8-3.94-1-1.69-73.5-127.71-82-142.16-9.1 14.67-83.56 146.21-85.37 146.32-2.93.17-5.88.08-9.25.08q43.25-74.74 86.18-149zm51.93 129.92a37.68 37.68 0 0 0 5.54-.85c1.69-.3 2.53.2 2.6 1.92 0 .11.07 19.06-.86 20.45s-1.88 1.22-2.6-.19c-5-9.69 6.22-9.66-39.12-12-.7 0-1 .23-1 .93 0 .13 3.72 122 3.73 122.11 0 .89.52 1.2 1.21 1.51a83.92 83.92 0 0 1 8.7 4.05c7.31 4.33 11.38 10.84 12.41 19.31 1.44 11.8-2.77 35.77-32.21 37.14-2.75.13-28.26 1.08-34.14-23.25-4.66-19.26 8.26-32.7 19.89-36.4a2.45 2.45 0 0 0 2-2.66c.1-5.63 3-107.1 3.71-121.35.05-1.08-.62-1.16-1.35-1.15-32.35.52-36.75-.34-40.22 8.52-2.42 6.18-4.14 1.32-3.95.23q1.59-9 3.31-18c.4-2.11 1.43-2.61 3.43-1.86 5.59 2.11 6.72 1.7 37.25 1.92 1.73 0 1.78-.08 1.82-1.85.68-27.49.58-22.59 1-29.55a2.69 2.69 0 0 0-1.63-2.8c-5.6-2.91-8.75-7.55-8.9-13.87-.35-14.81 17.72-21.67 27.38-11.51 6.84 7.19 5.8 18.91-2.45 24.15a4.35 4.35 0 0 0-2.22 4.34c0 .59-.11-4.31 1 30.05 0 .9.43 1.12 1.24 1.11.1 0 23-.09 34.47-.37zM68.27 141.7c19.84-4.51 32.68-.56 52.49 1.69 2.76.31 3.74 1.22 3.62 4-.21 5-1.16 22.33-1.24 23.15a2.65 2.65 0 0 1-1.63 2.34c-4.06 1.7-3.61-4.45-4-7.29-3.13-22.43-73.87-32.7-74.63 25.4-.31 23.92 17 53.63 54.08 50.88 27.24-2 19-20.19 24.84-20.47a2.72 2.72 0 0 1 3 3.36c-1.83 10.85-3.42 18.95-3.45 19.15-1.54 9.17-86.7 22.09-93.35-42.06-2.71-25.85 10.44-53.37 40.27-60.15zm80 87.67h-19.49a2.57 2.57 0 0 1-2.66-1.79c2.38-3.75 5.89.92 5.86-6.14-.08-25.75.21-38 .23-40.1 0-3.42-.53-4.65-3.32-4.94-7-.72-3.11-3.37-1.11-3.38 11.84-.1 22.62-.18 30.05.72 8.77 1.07 16.71 12.63 7.93 22.62-2 2.25-4 4.42-6.14 6.73.95 1.15 6.9 8.82 17.28 19.68 2.66 2.78 6.15 3.51 9.88 3.13a2.21 2.21 0 0 0 2.23-2.12c.3-3.42.26 4.73.45-40.58 0-5.65-.34-6.58-3.23-6.83-3.95-.35-4-2.26-.69-3.37l19.09-.09c.32 0 4.49.53 1 3.38 0 .05-.16 0-.24 0-3.61.26-3.94 1-4 4.62-.27 43.93.07 40.23.41 42.82.11.84.27 2.23 5.1 2.14 2.49 0 3.86 3.37 0 3.4-10.37.08-20.74 0-31.11.07-10.67 0-13.47-6.2-24.21-20.82-1.6-2.18-8.31-2.36-8.2-.37.88 16.47 0 17.78 4 17.67 4.75-.1 4.73 3.57.83 3.55zm275-10.15c-1.21 7.13.17 10.38-5.3 10.34-61.55-.42-47.82-.22-50.72-.31a18.4 18.4 0 0 1-3.63-.73c-2.53-.6 1.48-1.23-.38-5.6-1.43-3.37-2.78-6.78-4.11-10.19a1.94 1.94 0 0 0-2-1.44 138 138 0 0 0-14.58.07 2.23 2.23 0 0 0-1.62 1.06c-1.58 3.62-3.07 7.29-4.51 11-1.27 3.23 7.86 1.32 12.19 2.16 3 .57 4.53 3.72.66 3.73H322.9c-2.92 0-3.09-3.15-.74-3.21a6.3 6.3 0 0 0 5.92-3.47c1.5-3 2.8-6 4.11-9.09 18.18-42.14 17.06-40.17 18.42-41.61a1.83 1.83 0 0 1 3 0c2.93 3.34 18.4 44.71 23.62 51.92 2 2.7 5.74 2 6.36 2 3.61.13 4-1.11 4.13-4.29.09-1.87.08 1.17.07-41.24 0-4.46-2.36-3.74-5.55-4.27-.26 0-2.56-.63-.08-3.06.21-.2-.89-.24 21.7-.15 2.32 0 5.32 2.75-1.21 3.45a2.56 2.56 0 0 0-2.66 2.83c-.07 1.63-.19 38.89.29 41.21a3.06 3.06 0 0 0 3.23 2.43c13.25.43 14.92.44 16-3.41 1.67-5.78 4.13-2.52 3.73-.19zm-104.72 64.37c-4.24 0-4.42-3.39-.61-3.41 35.91-.16 28.11.38 37.19-.65 1.68-.19 2.38.24 2.25 1.89-.26 3.39-.64 6.78-1 10.16-.25 2.16-3.2 2.61-3.4-.15-.38-5.31-2.15-4.45-15.63-5.08-1.58-.07-1.64 0-1.64 1.52V304c0 1.65 0 1.6 1.62 1.47 3.12-.25 10.31.34 15.69-1.52.47-.16 3.3-1.79 3.07 1.76 0 .21-.76 10.35-1.18 11.39-.53 1.29-1.88 1.51-2.58.32-1.17-2 0-5.08-3.71-5.3-15.42-.9-12.91-2.55-12.91 6 0 12.25-.76 16.11 3.89 16.24 16.64.48 14.4 0 16.43-5.71.84-2.37 3.5-1.77 3.18.58-.44 3.21-.85 6.43-1.23 9.64 0 .36-.16 2.4-4.66 2.39-37.16-.08-34.54-.19-35.21-.31-2.72-.51-2.2-3 .22-3.45 1.1-.19 4 .54 4.16-2.56 2.44-56.22-.07-51.34-3.91-51.33zm-.41-109.52c2.46.61 3.13 1.76 2.95 4.65-.33 5.3-.34 9-.55 9.69-.66 2.23-3.15 2.12-3.34-.27-.38-4.81-3.05-7.82-7.57-9.15-26.28-7.73-32.81 15.46-27.17 30.22 5.88 15.41 22 15.92 28.86 13.78 5.92-1.85 5.88-6.5 6.91-7.58 1.23-1.3 2.25-1.84 3.12 1.1 0 .1.57 11.89-6 12.75-1.6.21-19.38 3.69-32.68-3.39-21-11.19-16.74-35.47-6.88-45.33 14-14.06 39.91-7.06 42.32-6.47zM289.8 280.14c3.28 0 3.66 3 .16 3.43-2.61.32-5-.42-5 5.46 0 2-.19 29.05.4 41.45.11 2.29 1.15 3.52 3.44 3.65 22 1.21 14.95-1.65 18.79-6.34 1.83-2.24 2.76.84 2.76 1.08.35 13.62-4 12.39-5.19 12.4l-38.16-.19c-1.93-.23-2.06-3-.42-3.38 2-.48 4.94.4 5.13-2.8 1-15.87.57-44.65.34-47.81-.27-3.77-2.8-3.27-5.68-3.71-2.47-.38-2-3.22.34-3.22 1.45-.02 17.97-.03 23.09-.02zm-31.63-57.79c.07 4.08 2.86 3.46 6 3.58 2.61.1 2.53 3.41-.07 3.43-6.48 0-13.7 0-21.61-.06-3.84 0-3.38-3.35 0-3.37 4.49 0 3.24 1.61 3.41-45.54 0-5.08-3.27-3.54-4.72-4.23-2.58-1.23-1.36-3.09.41-3.15 1.29 0 20.19-.41 21.17.21s1.87 1.65-.42 2.86c-1 .52-3.86-.28-4.15 2.47 0 .21-.82 1.63-.07 43.8zm-36.91 274.27a2.93 2.93 0 0 0 3.26 0c17-9.79 182-103.57 197.42-112.51-.14-.43 11.26-.18-181.52-.27-1.22 0-1.57.37-1.53 1.56 0 .1 1.25 44.51 1.22 50.38a28.33 28.33 0 0 1-1.36 7.71c-.55 1.83.38-.5-13.5 32.23-.73 1.72-1 2.21-2-.08-4.19-10.34-8.28-20.72-12.57-31a23.6 23.6 0 0 1-2-10.79c.16-2.46.8-16.12 1.51-48 0-1.95 0-2-2-2h-183c2.58 1.63 178.32 102.57 196 112.76zm-90.9-188.75c0 2.4.36 2.79 2.76 3 11.54 1.17 21 3.74 25.64-7.32 6-14.46 2.66-34.41-12.48-38.84-2-.59-16-2.76-15.94 1.51.05 8.04.01 11.61.02 41.65zm105.75-15.05c0 2.13 1.07 38.68 1.09 39.13.34 9.94-25.58 5.77-25.23-2.59.08-2 1.37-37.42 1.1-39.43-14.1 7.44-14.42 40.21 6.44 48.8a17.9 17.9 0 0 0 22.39-7.07c4.91-7.76 6.84-29.47-5.43-39a2.53 2.53 0 0 1-.36.12zm-12.28-198c-9.83 0-9.73 14.75-.07 14.87s10.1-14.88.07-14.91zm-80.15 103.83c0 1.8.41 2.4 2.17 2.58 13.62 1.39 12.51-11 12.16-13.36-1.69-11.22-14.38-10.2-14.35-7.81.05 4.5-.03 13.68.02 18.59zm212.32 6.4l-6.1-15.84c-2.16 5.48-4.16 10.57-6.23 15.84z\"],\n    \"css3\": [512, 512, [], \"f13c\", \"M480 32l-64 368-223.3 80L0 400l19.6-94.8h82l-8 40.6L210 390.2l134.1-44.4 18.8-97.1H29.5l16-82h333.7l10.5-52.7H56.3l16.3-82H480z\"],\n    \"css3-alt\": [384, 512, [], \"f38b\", \"M0 32l34.9 395.8L192 480l157.1-52.2L384 32H0zm313.1 80l-4.8 47.3L193 208.6l-.3.1h111.5l-12.8 146.6-98.2 28.7-98.8-29.2-6.4-73.9h48.9l3.2 38.3 52.6 13.3 54.7-15.4 3.7-61.6-166.3-.5v-.1l-.2.1-3.6-46.3L193.1 162l6.5-2.7H76.7L70.9 112h242.2z\"],\n    \"cuttlefish\": [440, 512, [], \"f38c\", \"M344 305.5c-17.5 31.6-57.4 54.5-96 54.5-56.6 0-104-47.4-104-104s47.4-104 104-104c38.6 0 78.5 22.9 96 54.5 13.7-50.9 41.7-93.3 87-117.8C385.7 39.1 320.5 8 248 8 111 8 0 119 0 256s111 248 248 248c72.5 0 137.7-31.1 183-80.7-45.3-24.5-73.3-66.9-87-117.8z\"],\n    \"d-and-d\": [576, 512, [], \"f38d\", \"M82.5 98.9c-.6-17.2 2-33.8 12.7-48.2.3 7.4 1.2 14.5 4.2 21.6 5.9-27.5 19.7-49.3 42.3-65.5-1.9 5.9-3.5 11.8-3 17.7 8.7-7.4 18.8-17.8 44.4-22.7 14.7-2.8 29.7-2 42.1 1 38.5 9.3 61 34.3 69.7 72.3 5.3 23.1.7 45-8.3 66.4-5.2 12.4-12 24.4-20.7 35.1-2-1.9-3.9-3.8-5.8-5.6-42.8-40.8-26.8-25.2-37.4-37.4-1.1-1.2-1-2.2-.1-3.6 8.3-13.5 11.8-28.2 10-44-1.1-9.8-4.3-18.9-11.3-26.2-14.5-15.3-39.2-15-53.5.6-11.4 12.5-14.1 27.4-10.9 43.6.2 1.3.4 2.7 0 3.9-3.4 13.7-4.6 27.6-2.5 41.6.1.5.1 1.1.1 1.6 0 .3-.1.5-.2 1.1-21.8-11-36-28.3-43.2-52.2-8.3 17.8-11.1 35.5-6.6 54.1-15.6-15.2-21.3-34.3-22-55.2zm469.6 123.2c-11.6-11.6-25-20.4-40.1-26.6-12.8-5.2-26-7.9-39.9-7.1-10 .6-19.6 3.1-29 6.4-2.5.9-5.1 1.6-7.7 2.2-4.9 1.2-7.3-3.1-4.7-6.8 3.2-4.6 3.4-4.2 15-12 .6-.4 1.2-.8 2.2-1.5h-2.5c-.6 0-1.2.2-1.9.3-19.3 3.3-30.7 15.5-48.9 29.6-10.4 8.1-13.8 3.8-12-.5 1.4-3.5 3.3-6.7 5.1-10 1-1.8 2.3-3.4 3.5-5.1-.2-.2-.5-.3-.7-.5-27 18.3-46.7 42.4-57.7 73.3.3.3.7.6 1 .9.3-.6.5-1.2.9-1.7 10.4-12.1 22.8-21.8 36.6-29.8 18.2-10.6 37.5-18.3 58.7-20.2 4.3-.4 8.7-.1 13.1-.1-1.8.7-3.5.9-5.3 1.1-18.5 2.4-35.5 9-51.5 18.5-30.2 17.9-54.5 42.2-75.1 70.4-.3.4-.4.9-.7 1.3 14.5 5.3 24 17.3 36.1 25.6.2-.1.3-.2.4-.4l1.2-2.7c12.2-26.9 27-52.3 46.7-74.5 16.7-18.8 38-25.3 62.5-20 5.9 1.3 11.4 4.4 17.2 6.8 2.3-1.4 5.1-3.2 8-4.7 8.4-4.3 17.4-7 26.7-9 14.7-3.1 29.5-4.9 44.5-1.3v-.5c-.5-.4-1.2-.8-1.7-1.4zM316.7 397.6c-39.4-33-22.8-19.5-42.7-35.6-.8.9 0-.2-1.9 3-11.2 19.1-25.5 35.3-44 47.6-10.3 6.8-21.5 11.8-34.1 11.8-21.6 0-38.2-9.5-49.4-27.8-12-19.5-13.3-40.7-8.2-62.6 7.8-33.8 30.1-55.2 38.6-64.3-18.7-6.2-33 1.7-46.4 13.9.8-13.9 4.3-26.2 11.8-37.3-24.3 10.6-45.9 25-64.8 43.9-.3-5.8 5.4-43.7 5.6-44.7.3-2.7-.6-5.3-3-7.4-24.2 24.7-44.5 51.8-56.1 84.6 7.4-5.9 14.9-11.4 23.6-16.2-8.3 22.3-19.6 52.8-7.8 101.1 4.6 19 11.9 36.8 24.1 52.3 2.9 3.7 6.3 6.9 9.5 10.3.2-.2.4-.3.6-.5-1.4-7-2.2-14.1-1.5-21.9 2.2 3.2 3.9 6 5.9 8.6 12.6 16 28.7 27.4 47.2 35.6 25 11.3 51.1 13.3 77.9 8.6 54.9-9.7 90.7-48.6 116-98.8 1-1.8.6-2.9-.9-4.2zm172-46.4c-9.5-3.1-22.2-4.2-28.7-2.9 9.9 4 14.1 6.6 18.8 12 12.6 14.4 10.4 34.7-5.4 45.6-11.7 8.1-24.9 10.5-38.9 9.1-1.2-.1-2.3-.4-3-.6 2.8-3.7 6-7 8.1-10.8 9.4-16.8 5.4-42.1-8.7-56.1-2.1-2.1-4.6-3.9-7-5.9-.3 1.3-.1 2.1.1 2.8 4.2 16.6-8.1 32.4-24.8 31.8-7.6-.3-13.9-3.8-19.6-8.5-19.5-16.1-39.1-32.1-58.5-48.3-5.9-4.9-12.5-8.1-20.1-8.7-4.6-.4-9.3-.6-13.9-.9-5.9-.4-8.8-2.8-10.4-8.4-.9-3.4-1.5-6.8-2.2-10.2-1.5-8.1-6.2-13-14.3-14.2-4.4-.7-8.9-1-13.3-1.5-13-1.4-19.8-7.4-22.6-20.3-5 11-1.6 22.4 7.3 29.9 4.5 3.8 9.3 7.3 13.8 11.2 4.6 3.8 7.4 8.7 7.9 14.8.4 4.7.8 9.5 1.8 14.1 2.2 10.6 8.9 18.4 17 25.1 16.5 13.7 33 27.3 49.5 41.1 17.9 15 13.9 32.8 13 56-.9 22.9 12.2 42.9 33.5 51.2 1 .4 2 .6 3.6 1.1-15.7-18.2-10.1-44.1.7-52.3.3 2.2.4 4.3.9 6.4 9.4 44.1 45.4 64.2 85 56.9 16-2.9 30.6-8.9 42.9-19.8 2-1.8 3.7-4.1 5.9-6.5-19.3 4.6-35.8.1-50.9-10.6.7-.3 1.3-.3 1.9-.3 21.3 1.8 40.6-3.4 57-17.4 19.5-16.6 26.6-42.9 17.4-66-8.3-20.1-23.6-32.3-43.8-38.9zM99.4 179.3c-5.3-9.2-13.2-15.6-22.1-21.3 13.7-.5 26.6.2 39.6 3.7-7-12.2-8.5-24.7-5-38.7 5.3 11.9 13.7 20.1 23.6 26.8 19.7 13.2 35.7 19.6 46.7 30.2 3.4 3.3 6.3 7.1 9.6 10.9-.8-2.1-1.4-4.1-2.2-6-5-10.6-13-18.6-22.6-25-1.8-1.2-2.8-2.5-3.4-4.5-3.3-12.5-3-25.1-.7-37.6 1-5.5 2.8-10.9 4.5-16.3.8-2.4 2.3-4.6 4-6.6.6 6.9 0 25.5 19.6 46 10.8 11.3 22.4 21.9 33.9 32.7 9 8.5 18.3 16.7 25.5 26.8 1.1 1.6 2.2 3.3 3.8 4.7-5-13-14.2-24.1-24.2-33.8-9.6-9.3-19.4-18.4-29.2-27.4-3.3-3-4.6-6.7-5.1-10.9-1.2-10.4 0-20.6 4.3-30.2.5-1 1.1-2 1.9-3.3.5 4.2.6 7.9 1.4 11.6 4.8 23.1 20.4 36.3 49.3 63.5 10 9.4 19.3 19.2 25.6 31.6 4.8 9.3 7.3 19 5.7 29.6-.1.6.5 1.7 1.1 2 6.2 2.6 10 6.9 9.7 14.3 7.7-2.6 12.5-8 16.4-14.5 4.2 20.2-9.1 50.3-27.2 58.7.4-4.5 5-23.4-16.5-27.7-6.8-1.3-12.8-1.3-22.9-2.1 4.7-9 10.4-20.6.5-22.4-24.9-4.6-52.8 1.9-57.8 4.6 8.2.4 16.3 1 23.5 3.3-2 6.5-4 12.7-5.8 18.9-1.9 6.5 2.1 14.6 9.3 9.6 1.2-.9 2.3-1.9 3.3-2.7-3.1 17.9-2.9 15.9-2.8 18.3.3 10.2 9.5 7.8 15.7 7.3-2.5 11.8-29.5 27.3-45.4 25.8 7-4.7 12.7-10.3 15.9-17.9-6.5.8-12.9 1.6-19.2 2.4l-.3-.9c4.7-3.4 8-7.8 10.2-13.1 8.7-21.1-3.6-38-25-39.9-9.1-.8-17.8.8-25.9 5.5 6.2-15.6 17.2-26.6 32.6-34.5-15.2-4.3-8.9-2.7-24.6-6.3 14.6-9.3 30.2-13.2 46.5-14.6-5.2-3.2-48.1-3.6-70.2 20.9 7.9 1.4 15.5 2.8 23.2 4.2-23.8 7-44 19.7-62.4 35.6 1.1-4.8 2.7-9.5 3.3-14.3.6-4.5.8-9.2.1-13.6-1.5-9.4-8.9-15.1-19.7-16.3-7.9-.9-15.6.1-23.3 1.3-.9.1-1.7.3-2.9 0 15.8-14.8 36-21.7 53.1-33.5 6-4.5 6.8-8.2 3-14.9zm128.4 26.8c3.3 16 12.6 25.5 23.8 24.3-4.6-11.3-12.1-19.5-23.8-24.3z\"],\n    \"d-and-d-beyond\": [640, 512, [], \"f6ca\", \"M313.8 241.5c13.8 0 21-10.1 24.8-17.9-1-1.1-5-4.2-7.4-6.6-2.4 4.3-8.2 10.7-13.9 10.7-10.2 0-15.4-14.7-3.2-26.6-.5-.2-4.3-1.8-8 2.4 0-3 1-5.1 2.1-6.6-3.5 1.3-9.8 5.6-11.4 7.9.2-5.8 1.6-7.5.6-9l-.2-.2s-8.5 5.6-9.3 14.7c0 0 1.1-1.6 2.1-1.9.6-.3 1.3 0 .6 1.9-.2.6-5.8 15.7 5.1 26-.6-1.6-1.9-7.6 2.4-1.9-.3.1 5.8 7.1 15.7 7.1zm52.4-21.1c0-4-4.9-4.4-5.6-4.5 2 3.9.9 7.5.2 9 2.5-.4 5.4-1.6 5.4-4.5zm10.3 5.2c0-6.4-6.2-11.4-13.5-10.7 8 1.3 5.6 13.8-5 11.4 3.7-2.6 3.2-9.9-1.3-12.5 1.4 4.2-3 8.2-7.4 4.6-2.4-1.9-8-6.6-10.6-8.6-2.4-2.1-5.5-1-6.6-1.8-1.3-1.1-.5-3.8-2.2-5-1.6-.8-3-.3-4.8-1-1.6-.6-2.7-1.9-2.6-3.5-2.5 4.4 3.4 6.3 4.5 8.5 1 1.9-.8 4.8 4 8.5 14.8 11.6 9.1 8 10.4 18.1.6 4.3 4.2 6.7 6.4 7.4-2.1-1.9-2.9-6.4 0-9.3 0 13.9 19.2 13.3 23.1 6.4-2.4 1.1-7-.2-9-1.9 7.7 1 14.2-4.1 14.6-10.6zm-39.4-18.4c2 .8 1.6.7 6.4 4.5 10.2-24.5 21.7-15.7 22-15.5 2.2-1.9 9.8-3.8 13.8-2.7-2.4-2.7-7.5-6.2-13.3-6.2-4.7 0-7.4 2.2-8 1.3-.8-1.4 3.2-3.4 3.2-3.4-5.4.2-9.6 6.7-11.2 5.9-1.1-.5 1.4-3.7 1.4-3.7-5.1 2.9-9.3 9.1-10.2 13 4.6-5.8 13.8-9.8 19.7-9-10.5.5-19.5 9.7-23.8 15.8zm242.5 51.9c-20.7 0-40 1.3-50.3 2.1l7.4 8.2v77.2l-7.4 8.2c10.4.8 30.9 2.1 51.6 2.1 42.1 0 59.1-20.7 59.1-48.9 0-29.3-23.2-48.9-60.4-48.9zm-15.1 75.6v-53.3c30.1-3.3 46.8 3.8 46.8 26.3 0 25.6-21.4 30.2-46.8 27zM301.6 181c-1-3.4-.2-6.9 1.1-9.4 1 3 2.6 6.4 7.5 9-.5-2.4-.2-5.6.5-8-1.4-5.4 2.1-9.9 6.4-9.9 6.9 0 8.5 8.8 4.7 14.4 2.1 3.2 5.5 5.6 7.7 7.8 3.2-3.7 5.5-9.5 5.5-13.8 0-8.2-5.5-15.9-16.7-16.5-20-.9-20.2 16.6-20 18.9.5 5.2 3.4 7.8 3.3 7.5zm-.4 6c-.5 1.8-7 3.7-10.2 6.9 4.8-1 7-.2 7.8 1.8.5 1.4-.2 3.4-.5 5.6 1.6-1.8 7-5.5 11-6.2-1-.3-3.4-.8-4.3-.8 2.9-3.4 9.3-4.5 12.8-3.7-2.2-.2-6.7 1.1-8.5 2.6 1.6.3 3 .6 4.3 1.1-2.1.8-4.8 3.4-5.8 6.1 7-5 13.1 5.2 7 8.2.8.2 2.7 0 3.5-.5-.3 1.1-1.9 3-3 3.4 2.9 0 7-1.9 8.2-4.6 0 0-1.8.6-2.6-.2s.3-4.3.3-4.3c-2.3 2.9-3.4-1.3-1.3-4.2-1-.3-3.5-.6-4.6-.5 3.2-1.1 10.4-1.8 11.2-.3.6 1.1-1 3.4-1 3.4 4-.5 8.3 1.1 6.7 5.1 2.9-1.4 5.5-5.9 4.8-10.4-.3 1-1.6 2.4-2.9 2.7.2-1.4-1-2.2-1.9-2.6 1.7-9.6-14.6-14.2-14.1-23.9-1 1.3-1.8 5-.8 7.1 2.7 3.2 8.7 6.7 10.1 12.2-2.6-6.4-15.1-11.4-14.6-20.2-1.6 1.6-2.6 7.8-1.3 11 2.4 1.4 4.5 3.8 4.8 6.1-2.2-5.1-11.4-6.1-13.9-12.2-.6 2.2-.3 5 1 6.7 0 0-2.2-.8-7-.6 1.7.6 5.1 3.5 4.8 5.2zm25.9 7.4c-2.7 0-3.5-2.1-4.2-4.3 3.3 1.3 4.2 4.3 4.2 4.3zm38.9 3.7l-1-.6c-1.1-1-2.9-1.4-4.7-1.4-2.9 0-5.8 1.3-7.5 3.4-.8.8-1.4 1.8-2.1 2.6v15.7c3.5 2.6 7.1-2.9 3-7.2 1.5.3 4.6 2.7 5.1 3.2 0 0 2.6-.5 5-.5 2.1 0 3.9.3 5.6 1.1V196c-1.1.5-2.2 1-2.7 1.4zM79.9 305.9c17.2-4.6 16.2-18 16.2-19.9 0-20.6-24.1-25-37-25H3l8.3 8.6v29.5H0l11.4 14.6V346L3 354.6c61.7 0 73.8 1.5 86.4-5.9 6.7-4 9.9-9.8 9.9-17.6 0-5.1 2.6-18.8-19.4-25.2zm-41.3-27.5c20 0 29.6-.8 29.6 9.1v3c0 12.1-19 8.8-29.6 8.8zm0 59.2V315c12.2 0 32.7-2.3 32.7 8.8v4.5h.2c0 11.2-12.5 9.3-32.9 9.3zm101.2-19.3l23.1.2v-.2l14.1-21.2h-37.2v-14.9h52.4l-14.1-21v-.2l-73.5.2 7.4 8.2v77.1l-7.4 8.2h81.2l14.1-21.2-60.1.2zm214.7-60.1c-73.9 0-77.5 99.3-.3 99.3 77.9 0 74.1-99.3.3-99.3zm-.3 77.5c-37.4 0-36.9-55.3.2-55.3 36.8.1 38.8 55.3-.2 55.3zm-91.3-8.3l44.1-66.2h-41.7l6.1 7.2-20.5 37.2h-.3l-21-37.2 6.4-7.2h-44.9l44.1 65.8.2 19.4-7.7 8.2h42.6l-7.2-8.2zm-28.4-151.3c1.6 1.3 2.9 2.4 2.9 6.6v38.8c0 4.2-.8 5.3-2.7 6.4-.1.1-7.5 4.5-7.9 4.6h35.1c10 0 17.4-1.5 26-8.6-.6-5 .2-9.5.8-12 0-.2-1.8 1.4-2.7 3.5 0-5.7 1.6-15.4 9.6-20.5-.1 0-3.7-.8-9 1.1 2-3.1 10-7.9 10.4-7.9-8.2-26-38-22.9-32.2-22.9-30.9 0-32.6.3-39.9-4 .1.8.5 8.2 9.6 14.9zm21.5 5.5c4.6 0 23.1-3.3 23.1 17.3 0 20.7-18.4 17.3-23.1 17.3zm228.9 79.6l7 8.3V312h-.3c-5.4-14.4-42.3-41.5-45.2-50.9h-31.6l7.4 8.5v76.9l-7.2 8.3h39l-7.4-8.2v-47.4h.3c3.7 10.6 44.5 42.9 48.5 55.6h21.3v-85.2l7.4-8.3zm-106.7-96.1c-32.2 0-32.8.2-39.9-4 .1.7.5 8.3 9.6 14.9 3.1 2 2.9 4.3 2.9 9.5 1.8-1.1 3.8-2.2 6.1-3-1.1 1.1-2.7 2.7-3.5 4.5 1-1.1 7.5-5.1 14.6-3.5-1.6.3-4 1.1-6.1 2.9.1 0 2.1-1.1 7.5-.3v-4.3c4.7 0 23.1-3.4 23.1 17.3 0 20.5-18.5 17.3-19.7 17.3 5.7 4.4 5.8 12 2.2 16.3h.3c33.4 0 36.7-27.3 36.7-34 0-3.8-1.1-32-33.8-33.6z\"],\n    \"dashcube\": [448, 512, [], \"f210\", \"M326.6 104H110.4c-51.1 0-91.2 43.3-91.2 93.5V427c0 50.5 40.1 85 91.2 85h227.2c51.1 0 91.2-34.5 91.2-85V0L326.6 104zM153.9 416.5c-17.7 0-32.4-15.1-32.4-32.8V240.8c0-17.7 14.7-32.5 32.4-32.5h140.7c17.7 0 32 14.8 32 32.5v123.5l51.1 52.3H153.9z\"],\n    \"delicious\": [448, 512, [], \"f1a5\", \"M446.5 68c-.4-1.5-.9-3-1.4-4.5-.9-2.5-2-4.8-3.3-7.1-1.4-2.4-3-4.8-4.7-6.9-2.1-2.5-4.4-4.8-6.9-6.8-1.1-.9-2.2-1.7-3.3-2.5-1.3-.9-2.6-1.7-4-2.4-1.8-1-3.6-1.8-5.5-2.5-1.7-.7-3.5-1.3-5.4-1.7-3.8-1-7.9-1.5-12-1.5H48C21.5 32 0 53.5 0 80v352c0 4.1.5 8.2 1.5 12 2 7.7 5.8 14.6 11 20.3 1 1.1 2.1 2.2 3.3 3.3 5.7 5.2 12.6 9 20.3 11 3.8 1 7.9 1.5 12 1.5h352c26.5 0 48-21.5 48-48V80c-.1-4.1-.6-8.2-1.6-12zM416 432c0 8.8-7.2 16-16 16H224V256H32V80c0-8.8 7.2-16 16-16h176v192h192z\"],\n    \"deploydog\": [512, 512, [], \"f38e\", \"M382.2 136h51.7v239.6h-51.7v-20.7c-19.8 24.8-52.8 24.1-73.8 14.7-26.2-11.7-44.3-38.1-44.3-71.8 0-29.8 14.8-57.9 43.3-70.8 20.2-9.1 52.7-10.6 74.8 12.9V136zm-64.7 161.8c0 18.2 13.6 33.5 33.2 33.5 19.8 0 33.2-16.4 33.2-32.9 0-17.1-13.7-33.2-33.2-33.2-19.6 0-33.2 16.4-33.2 32.6zM188.5 136h51.7v239.6h-51.7v-20.7c-19.8 24.8-52.8 24.1-73.8 14.7-26.2-11.7-44.3-38.1-44.3-71.8 0-29.8 14.8-57.9 43.3-70.8 20.2-9.1 52.7-10.6 74.8 12.9V136zm-64.7 161.8c0 18.2 13.6 33.5 33.2 33.5 19.8 0 33.2-16.4 33.2-32.9 0-17.1-13.7-33.2-33.2-33.2-19.7 0-33.2 16.4-33.2 32.6zM448 96c17.5 0 32 14.4 32 32v256c0 17.5-14.4 32-32 32H64c-17.5 0-32-14.4-32-32V128c0-17.5 14.4-32 32-32h384m0-32H64C28.8 64 0 92.8 0 128v256c0 35.2 28.8 64 64 64h384c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64z\"],\n    \"deskpro\": [480, 512, [], \"f38f\", \"M205.9 512l31.1-38.4c12.3-.2 25.6-1.4 36.5-6.6 38.9-18.6 38.4-61.9 38.3-63.8-.1-5-.8-4.4-28.9-37.4H362c-.2 50.1-7.3 68.5-10.2 75.7-9.4 23.7-43.9 62.8-95.2 69.4-8.7 1.1-32.8 1.2-50.7 1.1zm200.4-167.7c38.6 0 58.5-13.6 73.7-30.9l-175.5-.3-17.4 31.3 119.2-.1zm-43.6-223.9v168.3h-73.5l-32.7 55.5H250c-52.3 0-58.1-56.5-58.3-58.9-1.2-13.2-21.3-11.6-20.1 1.8 1.4 15.8 8.8 40 26.4 57.1h-91c-25.5 0-110.8-26.8-107-114V16.9C0 .9 9.7.3 15 .1h82c.2 0 .3.1.5.1 4.3-.4 50.1-2.1 50.1 43.7 0 13.3 20.2 13.4 20.2 0 0-18.2-5.5-32.8-15.8-43.7h84.2c108.7-.4 126.5 79.4 126.5 120.2zm-132.5 56l64 29.3c13.3-45.5-42.2-71.7-64-29.3z\"],\n    \"dev\": [448, 512, [], \"f6cc\", \"M120.12 208.29c-3.88-2.9-7.77-4.35-11.65-4.35H91.03v104.47h17.45c3.88 0 7.77-1.45 11.65-4.35 3.88-2.9 5.82-7.25 5.82-13.06v-69.65c-.01-5.8-1.96-10.16-5.83-13.06zM404.1 32H43.9C19.7 32 .06 51.59 0 75.8v360.4C.06 460.41 19.7 480 43.9 480h360.2c24.21 0 43.84-19.59 43.9-43.8V75.8c-.06-24.21-19.7-43.8-43.9-43.8zM154.2 291.19c0 18.81-11.61 47.31-48.36 47.25h-46.4V172.98h47.38c35.44 0 47.36 28.46 47.37 47.28l.01 70.93zm100.68-88.66H201.6v38.42h32.57v29.57H201.6v38.41h53.29v29.57h-62.18c-11.16.29-20.44-8.53-20.72-19.69V193.7c-.27-11.15 8.56-20.41 19.71-20.69h63.19l-.01 29.52zm103.64 115.29c-13.2 30.75-36.85 24.63-47.44 0l-38.53-144.8h32.57l29.71 113.72 29.57-113.72h32.58l-38.46 144.8z\"],\n    \"deviantart\": [320, 512, [], \"f1bd\", \"M320 93.2l-98.2 179.1 7.4 9.5H320v127.7H159.1l-13.5 9.2-43.7 84c-.3 0-8.6 8.6-9.2 9.2H0v-93.2l93.2-179.4-7.4-9.2H0V102.5h156l13.5-9.2 43.7-84c.3 0 8.6-8.6 9.2-9.2H320v93.1z\"],\n    \"dhl\": [640, 512, [], \"f790\", \"M238 301.2h58.7L319 271h-58.7L238 301.2zM0 282.9v6.4h81.8l4.7-6.4H0zM172.9 271c-8.7 0-6-3.6-4.6-5.5 2.8-3.8 7.6-10.4 10.4-14.1 2.8-3.7 2.8-5.9-2.8-5.9h-51l-41.1 55.8h100.1c33.1 0 51.5-22.5 57.2-30.3h-68.2zm317.5-6.9l39.3-53.4h-62.2l-39.3 53.4h62.2zM95.3 271H0v6.4h90.6l4.7-6.4zm111-26.6c-2.8 3.8-7.5 10.4-10.3 14.2-1.4 2-4.1 5.5 4.6 5.5h45.6s7.3-10 13.5-18.4c8.4-11.4.7-35-29.2-35H112.6l-20.4 27.8h111.4c5.6 0 5.5 2.2 2.7 5.9zM0 301.2h73.1l4.7-6.4H0v6.4zm323 0h58.7L404 271h-58.7c-.1 0-22.3 30.2-22.3 30.2zm222 .1h95v-6.4h-90.3l-4.7 6.4zm22.3-30.3l-4.7 6.4H640V271h-72.7zm-13.5 18.3H640v-6.4h-81.5l-4.7 6.4zm-164.2-78.6l-22.5 30.6h-26.2l22.5-30.6h-58.7l-39.3 53.4H409l39.3-53.4h-58.7zm33.5 60.3s-4.3 5.9-6.4 8.7c-7.4 10-.9 21.6 23.2 21.6h94.3l22.3-30.3H423.1z\"],\n    \"diaspora\": [512, 512, [], \"f791\", \"M251.64 354.55c-1.4 0-88 119.9-88.7 119.9S76.34 414 76 413.25s86.6-125.7 86.6-127.4c0-2.2-129.6-44-137.6-47.1-1.3-.5 31.4-101.8 31.7-102.1.6-.7 144.4 47 145.5 47 .4 0 .9-.6 1-1.3.4-2 1-148.6 1.7-149.6.8-1.2 104.5-.7 105.1-.3 1.5 1 3.5 156.1 6.1 156.1 1.4 0 138.7-47 139.3-46.3.8.9 31.9 102.2 31.5 102.6-.9.9-140.2 47.1-140.6 48.8-.3 1.4 82.8 122.1 82.5 122.9s-85.5 63.5-86.3 63.5c-1-.2-89-125.5-90.9-125.5z\"],\n    \"digg\": [512, 512, [], \"f1a6\", \"M81.7 172.3H0v174.4h132.7V96h-51v76.3zm0 133.4H50.9v-92.3h30.8v92.3zm297.2-133.4v174.4h81.8v28.5h-81.8V416H512V172.3H378.9zm81.8 133.4h-30.8v-92.3h30.8v92.3zm-235.6 41h82.1v28.5h-82.1V416h133.3V172.3H225.1v174.4zm51.2-133.3h30.8v92.3h-30.8v-92.3zM153.3 96h51.3v51h-51.3V96zm0 76.3h51.3v174.4h-51.3V172.3z\"],\n    \"digital-ocean\": [512, 512, [], \"f391\", \"M87 481.8h73.7v-73.6H87zM25.4 346.6v61.6H87v-61.6zm466.2-169.7c-23-74.2-82.4-133.3-156.6-156.6C164.9-32.8 8 93.7 8 255.9h95.8c0-101.8 101-180.5 208.1-141.7 39.7 14.3 71.5 46.1 85.8 85.7 39.1 107-39.7 207.8-141.4 208v.3h-.3V504c162.6 0 288.8-156.8 235.6-327.1zm-235.3 231v-95.3h-95.6v95.6H256v-.3z\"],\n    \"discord\": [448, 512, [], \"f392\", \"M297.216 243.2c0 15.616-11.52 28.416-26.112 28.416-14.336 0-26.112-12.8-26.112-28.416s11.52-28.416 26.112-28.416c14.592 0 26.112 12.8 26.112 28.416zm-119.552-28.416c-14.592 0-26.112 12.8-26.112 28.416s11.776 28.416 26.112 28.416c14.592 0 26.112-12.8 26.112-28.416.256-15.616-11.52-28.416-26.112-28.416zM448 52.736V512c-64.494-56.994-43.868-38.128-118.784-107.776l13.568 47.36H52.48C23.552 451.584 0 428.032 0 398.848V52.736C0 23.552 23.552 0 52.48 0h343.04C424.448 0 448 23.552 448 52.736zm-72.96 242.688c0-82.432-36.864-149.248-36.864-149.248-36.864-27.648-71.936-26.88-71.936-26.88l-3.584 4.096c43.52 13.312 63.744 32.512 63.744 32.512-60.811-33.329-132.244-33.335-191.232-7.424-9.472 4.352-15.104 7.424-15.104 7.424s21.248-20.224 67.328-33.536l-2.56-3.072s-35.072-.768-71.936 26.88c0 0-36.864 66.816-36.864 149.248 0 0 21.504 37.12 78.08 38.912 0 0 9.472-11.52 17.152-21.248-32.512-9.728-44.8-30.208-44.8-30.208 3.766 2.636 9.976 6.053 10.496 6.4 43.21 24.198 104.588 32.126 159.744 8.96 8.96-3.328 18.944-8.192 29.44-15.104 0 0-12.8 20.992-46.336 30.464 7.68 9.728 16.896 20.736 16.896 20.736 56.576-1.792 78.336-38.912 78.336-38.912z\"],\n    \"discourse\": [448, 512, [], \"f393\", \"M225.9 32C103.3 32 0 130.5 0 252.1 0 256 .1 480 .1 480l225.8-.2c122.7 0 222.1-102.3 222.1-223.9C448 134.3 348.6 32 225.9 32zM224 384c-19.4 0-37.9-4.3-54.4-12.1L88.5 392l22.9-75c-9.8-18.1-15.4-38.9-15.4-61 0-70.7 57.3-128 128-128s128 57.3 128 128-57.3 128-128 128z\"],\n    \"dochub\": [416, 512, [], \"f394\", \"M397.9 160H256V19.6L397.9 160zM304 192v130c0 66.8-36.5 100.1-113.3 100.1H96V84.8h94.7c12 0 23.1.8 33.1 2.5v-84C212.9 1.1 201.4 0 189.2 0H0v512h189.2C329.7 512 400 447.4 400 318.1V192h-96z\"],\n    \"docker\": [640, 512, [], \"f395\", \"M349.9 236.3h-66.1v-59.4h66.1v59.4zm0-204.3h-66.1v60.7h66.1V32zm78.2 144.8H362v59.4h66.1v-59.4zm-156.3-72.1h-66.1v60.1h66.1v-60.1zm78.1 0h-66.1v60.1h66.1v-60.1zm276.8 100c-14.4-9.7-47.6-13.2-73.1-8.4-3.3-24-16.7-44.9-41.1-63.7l-14-9.3-9.3 14c-18.4 27.8-23.4 73.6-3.7 103.8-8.7 4.7-25.8 11.1-48.4 10.7H2.4c-8.7 50.8 5.8 116.8 44 162.1 37.1 43.9 92.7 66.2 165.4 66.2 157.4 0 273.9-72.5 328.4-204.2 21.4.4 67.6.1 91.3-45.2 1.5-2.5 6.6-13.2 8.5-17.1l-13.3-8.9zm-511.1-27.9h-66v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm-78.1-72.1h-66.1v60.1h66.1v-60.1z\"],\n    \"draft2digital\": [480, 512, [], \"f396\", \"M480 398.1l-144-82.2v64.7h-91.3c30.8-35 81.8-95.9 111.8-149.3 35.2-62.6 16.1-123.4-12.8-153.3-4.4-4.6-62.2-62.9-166-41.2-59.1 12.4-89.4 43.4-104.3 67.3-13.1 20.9-17 39.8-18.2 47.7-5.5 33 19.4 67.1 56.7 67.1 31.7 0 57.3-25.7 57.3-57.4 0-27.1-19.7-52.1-48-56.8 1.8-7.3 17.7-21.1 26.3-24.7 41.1-17.3 78 5.2 83.3 33.5 8.3 44.3-37.1 90.4-69.7 127.6C84.5 328.1 18.3 396.8 0 415.9l336-.1V480zM369.9 371l47.1 27.2-47.1 27.2zM134.2 161.4c0 12.4-10 22.4-22.4 22.4s-22.4-10-22.4-22.4 10-22.4 22.4-22.4 22.4 10.1 22.4 22.4zM82.5 380.5c25.6-27.4 97.7-104.7 150.8-169.9 35.1-43.1 40.3-82.4 28.4-112.7-7.4-18.8-17.5-30.2-24.3-35.7 45.3 2.1 68 23.4 82.2 38.3 0 0 42.4 48.2 5.8 113.3-37 65.9-110.9 147.5-128.5 166.7z\"],\n    \"dribbble\": [512, 512, [], \"f17d\", \"M256 8C119.252 8 8 119.252 8 256s111.252 248 248 248 248-111.252 248-248S392.748 8 256 8zm163.97 114.366c29.503 36.046 47.369 81.957 47.835 131.955-6.984-1.477-77.018-15.682-147.502-6.818-5.752-14.041-11.181-26.393-18.617-41.614 78.321-31.977 113.818-77.482 118.284-83.523zM396.421 97.87c-3.81 5.427-35.697 48.286-111.021 76.519-34.712-63.776-73.185-116.168-79.04-124.008 67.176-16.193 137.966 1.27 190.061 47.489zm-230.48-33.25c5.585 7.659 43.438 60.116 78.537 122.509-99.087 26.313-186.36 25.934-195.834 25.809C62.38 147.205 106.678 92.573 165.941 64.62zM44.17 256.323c0-2.166.043-4.322.108-6.473 9.268.19 111.92 1.513 217.706-30.146 6.064 11.868 11.857 23.915 17.174 35.949-76.599 21.575-146.194 83.527-180.531 142.306C64.794 360.405 44.17 310.73 44.17 256.323zm81.807 167.113c22.127-45.233 82.178-103.622 167.579-132.756 29.74 77.283 42.039 142.053 45.189 160.638-68.112 29.013-150.015 21.053-212.768-27.882zm248.38 8.489c-2.171-12.886-13.446-74.897-41.152-151.033 66.38-10.626 124.7 6.768 131.947 9.055-9.442 58.941-43.273 109.844-90.795 141.978z\"],\n    \"dribbble-square\": [448, 512, [], \"f397\", \"M90.2 228.2c8.9-42.4 37.4-77.7 75.7-95.7 3.6 4.9 28 38.8 50.7 79-64 17-120.3 16.8-126.4 16.7zM314.6 154c-33.6-29.8-79.3-41.1-122.6-30.6 3.8 5.1 28.6 38.9 51 80 48.6-18.3 69.1-45.9 71.6-49.4zM140.1 364c40.5 31.6 93.3 36.7 137.3 18-2-12-10-53.8-29.2-103.6-55.1 18.8-93.8 56.4-108.1 85.6zm98.8-108.2c-3.4-7.8-7.2-15.5-11.1-23.2C159.6 253 93.4 252.2 87.4 252c0 1.4-.1 2.8-.1 4.2 0 35.1 13.3 67.1 35.1 91.4 22.2-37.9 67.1-77.9 116.5-91.8zm34.9 16.3c17.9 49.1 25.1 89.1 26.5 97.4 30.7-20.7 52.5-53.6 58.6-91.6-4.6-1.5-42.3-12.7-85.1-5.8zm-20.3-48.4c4.8 9.8 8.3 17.8 12 26.8 45.5-5.7 90.7 3.4 95.2 4.4-.3-32.3-11.8-61.9-30.9-85.1-2.9 3.9-25.8 33.2-76.3 53.9zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-64 176c0-88.2-71.8-160-160-160S64 167.8 64 256s71.8 160 160 160 160-71.8 160-160z\"],\n    \"dropbox\": [528, 512, [], \"f16b\", \"M264.4 116.3l-132 84.3 132 84.3-132 84.3L0 284.1l132.3-84.3L0 116.3 132.3 32l132.1 84.3zM131.6 395.7l132-84.3 132 84.3-132 84.3-132-84.3zm132.8-111.6l132-84.3-132-83.6L395.7 32 528 116.3l-132.3 84.3L528 284.8l-132.3 84.3-131.3-85z\"],\n    \"drupal\": [448, 512, [], \"f1a9\", \"M319.5 114.7c-22.2-14-43.5-19.5-64.7-33.5-13-8.8-31.3-30-46.5-48.3-2.7 29.3-11.5 41.2-22 49.5-21.3 17-34.8 22.2-53.5 32.3C117 123 32 181.5 32 290.5 32 399.7 123.8 480 225.8 480 327.5 480 416 406 416 294c0-112.3-83-171-96.5-179.3zm2.5 325.6c-20.1 20.1-90.1 28.7-116.7 4.2-4.8-4.8.3-12 6.5-12 0 0 17 13.3 51.5 13.3 27 0 46-7.7 54.5-14 6.1-4.6 8.4 4.3 4.2 8.5zm-54.5-52.6c8.7-3.6 29-3.8 36.8 1.3 4.1 2.8 16.1 18.8 6.2 23.7-8.4 4.2-1.2-15.7-26.5-15.7-14.7 0-19.5 5.2-26.7 11-7 6-9.8 8-12.2 4.7-6-8.2 15.9-22.3 22.4-25zM360 405c-15.2-1-45.5-48.8-65-49.5-30.9-.9-104.1 80.7-161.3 42-38.8-26.6-14.6-104.8 51.8-105.2 49.5-.5 83.8 49 108.5 48.5 21.3-.3 61.8-41.8 81.8-41.8 48.7 0 23.3 109.3-15.8 106z\"],\n    \"dyalog\": [416, 512, [], \"f399\", \"M0 32v119.2h64V96h107.2C284.6 96 352 176.2 352 255.9 352 332 293.4 416 171.2 416H0v64h171.2C331.9 480 416 367.3 416 255.9c0-58.7-22.1-113.4-62.3-154.3C308.9 56 245.7 32 171.2 32H0z\"],\n    \"earlybirds\": [480, 512, [], \"f39a\", \"M313.2 47.5c1.2-13 21.3-14 36.6-8.7.9.3 26.2 9.7 19 15.2-27.9-7.4-56.4 18.2-55.6-6.5zm-201 6.9c30.7-8.1 62 20 61.1-7.1-1.3-14.2-23.4-15.3-40.2-9.6-1 .3-28.7 10.5-20.9 16.7zM319.4 160c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-159.7 0c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm318.5 163.2c-9.9 24-40.7 11-63.9-1.2-13.5 69.1-58.1 111.4-126.3 124.2.3.9-2-.1 24 1 33.6 1.4 63.8-3.1 97.4-8-19.8-13.8-11.4-37.1-9.8-38.1 1.4-.9 14.7 1.7 21.6 11.5 8.6-12.5 28.4-14.8 30.2-13.6 1.6 1.1 6.6 20.9-6.9 34.6 4.7-.9 8.2-1.6 9.8-2.1 2.6-.8 17.7 11.3 3.1 13.3-14.3 2.3-22.6 5.1-47.1 10.8-45.9 10.7-85.9 11.8-117.7 12.8l1 11.6c3.8 18.1-23.4 24.3-27.6 6.2.8 17.9-27.1 21.8-28.4-1l-.5 5.3c-.7 18.4-28.4 17.9-28.3-.6-7.5 13.5-28.1 6.8-26.4-8.5l1.2-12.4c-36.7.9-59.7 3.1-61.8 3.1-20.9 0-20.9-31.6 0-31.6 2.4 0 27.7 1.3 63.2 2.8-61.1-15.5-103.7-55-114.9-118.2-25 12.8-57.5 26.8-68.2.8-10.5-25.4 21.5-42.6 66.8-73.4.7-6.6 1.6-13.3 2.7-19.8-14.4-19.6-11.6-36.3-16.1-60.4-16.8 2.4-23.2-9.1-23.6-23.1.3-7.3 2.1-14.9 2.4-15.4 1.1-1.8 10.1-2 12.7-2.6 6-31.7 50.6-33.2 90.9-34.5 19.7-21.8 45.2-41.5 80.9-48.3C203.3 29 215.2 8.5 216.2 8c1.7-.8 21.2 4.3 26.3 23.2 5.2-8.8 18.3-11.4 19.6-10.7 1.1.6 6.4 15-4.9 25.9 40.3 3.5 72.2 24.7 96 50.7 36.1 1.5 71.8 5.9 77.1 34 2.7.6 11.6.8 12.7 2.6.3.5 2.1 8.1 2.4 15.4-.5 13.9-6.8 25.4-23.6 23.1-3.2 17.3-2.7 32.9-8.7 47.7 2.4 11.7 4 23.8 4.8 36.4 37 25.4 70.3 42.5 60.3 66.9zM207.4 159.9c.9-44-37.9-42.2-78.6-40.3-21.7 1-38.9 1.9-45.5 13.9-11.4 20.9 5.9 92.9 23.2 101.2 9.8 4.7 73.4 7.9 86.3-7.1 8.2-9.4 15-49.4 14.6-67.7zm52 58.3c-4.3-12.4-6-30.1-15.3-32.7-2-.5-9-.5-11 0-10 2.8-10.8 22.1-17 37.2 15.4 0 19.3 9.7 23.7 9.7 4.3 0 6.3-11.3 19.6-14.2zm135.7-84.7c-6.6-12.1-24.8-12.9-46.5-13.9-40.2-1.9-78.2-3.8-77.3 40.3-.5 18.3 5 58.3 13.2 67.8 13 14.9 76.6 11.8 86.3 7.1 15.8-7.6 36.5-78.9 24.3-101.3z\"],\n    \"ebay\": [640, 512, [], \"f4f4\", \"M606 189.5l-54.8 109.9-54.9-109.9h-37.5l10.9 20.6c-11.5-19-35.9-26-63.3-26-31.8 0-67.9 8.7-71.5 43.1h33.7c1.4-13.8 15.7-21.8 35-21.8 26 0 41 9.6 41 33v3.4c-12.7 0-28 .1-41.7.4-42.4.9-69.6 10-76.7 34.4 1-5.2 1.5-10.6 1.5-16.2 0-52.1-39.7-76.2-75.4-76.2-21.3 0-43 5.5-58.7 24.2v-80.6h-32.1v169.5c0 10.3-.6 22.9-1.1 33.1h31.5c.7-6.3 1.1-12.9 1.1-19.5 13.6 16.6 35.4 24.9 58.7 24.9 36.9 0 64.9-21.9 73.3-54.2-.5 2.8-.7 5.8-.7 9 0 24.1 21.1 45 60.6 45 26.6 0 45.8-5.7 61.9-25.5 0 6.6.3 13.3 1.1 20.2h29.8c-.7-8.2-1-17.5-1-26.8v-65.6c0-9.3-1.7-17.2-4.8-23.8l61.5 116.1-28.5 54.1h35.9L640 189.5zM243.7 313.8c-29.6 0-50.2-21.5-50.2-53.8 0-32.4 20.6-53.8 50.2-53.8 29.8 0 50.2 21.4 50.2 53.8 0 32.3-20.4 53.8-50.2 53.8zm200.9-47.3c0 30-17.9 48.4-51.6 48.4-25.1 0-35-13.4-35-25.8 0-19.1 18.1-24.4 47.2-25.3 13.1-.5 27.6-.6 39.4-.6zm-411.9 1.6h128.8v-8.5c0-51.7-33.1-75.4-78.4-75.4-56.8 0-83 30.8-83 77.6 0 42.5 25.3 74 82.5 74 31.4 0 68-11.7 74.4-46.1h-33.1c-12 35.8-87.7 36.7-91.2-21.6zm95-21.4H33.3c6.9-56.6 92.1-54.7 94.4 0z\"],\n    \"edge\": [512, 512, [], \"f282\", \"M25.714 228.163c.111-.162.23-.323.342-.485-.021.162-.045.323-.065.485h-.277zm460.572 15.508c0-44.032-7.754-84.465-28.801-122.405C416.498 47.879 343.912 8.001 258.893 8.001 118.962 7.724 40.617 113.214 26.056 227.679c42.429-61.312 117.073-121.376 220.375-124.966 0 0 109.666 0 99.419 104.957H169.997c6.369-37.386 18.554-58.986 34.339-78.926-75.048 34.893-121.85 96.096-120.742 188.315.83 71.448 50.124 144.836 120.743 171.976 83.357 31.847 192.776 7.2 240.132-21.324V363.307c-80.864 56.494-270.871 60.925-272.255-67.572h314.073v-52.064z\"],\n    \"elementor\": [448, 512, [], \"f430\", \"M425.6 32H22.4C10 32 0 42 0 54.4v403.2C0 470 10 480 22.4 480h403.2c12.4 0 22.4-10 22.4-22.4V54.4C448 42 438 32 425.6 32M164.3 355.5h-39.8v-199h39.8v199zm159.3 0H204.1v-39.8h119.5v39.8zm0-79.6H204.1v-39.8h119.5v39.8zm0-79.7H204.1v-39.8h119.5v39.8z\"],\n    \"ello\": [496, 512, [], \"f5f1\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm143.84 285.2C375.31 358.51 315.79 404.8 248 404.8s-127.31-46.29-143.84-111.6c-1.65-7.44 2.48-15.71 9.92-17.36 7.44-1.65 15.71 2.48 17.36 9.92 14.05 52.91 62 90.11 116.56 90.11s102.51-37.2 116.56-90.11c1.65-7.44 9.92-12.4 17.36-9.92 7.44 1.65 12.4 9.92 9.92 17.36z\"],\n    \"ember\": [640, 512, [], \"f423\", \"M639.9 254.6c-1.1-10.7-10.7-6.8-10.7-6.8s-15.6 12.1-29.3 10.7c-13.7-1.3-9.4-32-9.4-32s3-28.1-5.1-30.4c-8.1-2.4-18 7.3-18 7.3s-12.4 13.7-18.3 31.2l-1.6.5s1.9-30.6-.3-37.6c-1.6-3.5-16.4-3.2-18.8 3s-14.2 49.2-15 67.2c0 0-23.1 19.6-43.3 22.8s-25-9.4-25-9.4 54.8-15.3 52.9-59.1-44.2-27.6-49-24c-4.6 3.5-29.4 18.4-36.6 59.7-.2 1.4-.7 7.5-.7 7.5s-21.2 14.2-33 18c0 0 33-55.6-7.3-80.9-11.4-6.8-21.3-.5-27.2 5.3 13.6-17.3 46.4-64.2 36.9-105.2-5.8-24.4-18-27.1-29.2-23.1-17 6.7-23.5 16.7-23.5 16.7s-22 32-27.1 79.5-12.6 105.1-12.6 105.1-10.5 10.2-20.2 10.7-5.4-28.7-5.4-28.7 7.5-44.6 7-52.1-1.1-11.6-9.9-14.2c-8.9-2.7-18.5 8.6-18.5 8.6s-25.5 38.7-27.7 44.6l-1.3 2.4-1.3-1.6s18-52.7.8-53.5-28.5 18.8-28.5 18.8-19.6 32.8-20.4 36.5l-1.3-1.6s8.1-38.2 6.4-47.6c-1.6-9.4-10.5-7.5-10.5-7.5s-11.3-1.3-14.2 5.9-13.7 55.3-15 70.7c0 0-28.2 20.2-46.8 20.4-18.5.3-16.7-11.8-16.7-11.8s68-23.3 49.4-69.2c-8.3-11.8-18-15.5-31.7-15.3-13.7.3-30.3 8.6-41.3 33.3-5.3 11.8-6.8 23-7.8 31.5 0 0-12.3 2.4-18.8-2.9s-10 0-10 0-11.2 14-.1 18.3 28.1 6.1 28.1 6.1c1.6 7.5 6.2 19.5 19.6 29.7 20.2 15.3 58.8-1.3 58.8-1.3l15.9-8.8s.5 14.6 12.1 16.7 16.4 1 36.5-47.9c11.8-25 12.6-23.6 12.6-23.6l1.3-.3s-9.1 46.8-5.6 59.7C187.7 319.4 203 318 203 318s8.3 2.4 15-21.2 19.6-49.9 19.6-49.9h1.6s-5.6 48.1 3 63.7 30.9 5.3 30.9 5.3 15.6-7.8 18-10.2c0 0 18.5 15.8 44.6 12.9 58.3-11.5 79.1-25.9 79.1-25.9s10 24.4 41.1 26.7c35.5 2.7 54.8-18.6 54.8-18.6s-.3 13.5 12.1 18.6 20.7-22.8 20.7-22.8l20.7-57.2h1.9s1.1 37.3 21.5 43.2 47-13.7 47-13.7 6.4-3.5 5.3-14.3zm-578 5.3c.8-32 21.8-45.9 29-39 7.3 7 4.6 22-9.1 31.4-13.7 9.5-19.9 7.6-19.9 7.6zm272.8-123.8s19.1-49.7 23.6-25.5-40 96.2-40 96.2c.5-16.2 16.4-70.7 16.4-70.7zm22.8 138.4c-12.6 33-43.3 19.6-43.3 19.6s-3.5-11.8 6.4-44.9 33.3-20.2 33.3-20.2 16.2 12.4 3.6 45.5zm84.6-14.6s-3-10.5 8.1-30.6c11-20.2 19.6-9.1 19.6-9.1s9.4 10.2-1.3 25.5-26.4 14.2-26.4 14.2z\"],\n    \"empire\": [496, 512, [], \"f1d1\", \"M287.6 54.2c-10.8-2.2-22.1-3.3-33.5-3.6V32.4c78.1 2.2 146.1 44 184.6 106.6l-15.8 9.1c-6.1-9.7-12.7-18.8-20.2-27.1l-18 15.5c-26-29.6-61.4-50.7-101.9-58.4l4.8-23.9zM53.4 322.4l23-7.7c-6.4-18.3-10-38.2-10-58.7s3.3-40.4 9.7-58.7l-22.7-7.7c3.6-10.8 8.3-21.3 13.6-31l-15.8-9.1C34 181 24.1 217.5 24.1 256s10 75 27.1 106.6l15.8-9.1c-5.3-10-9.7-20.3-13.6-31.1zM213.1 434c-40.4-8-75.8-29.1-101.9-58.7l-18 15.8c-7.5-8.6-14.4-17.7-20.2-27.4l-16 9.4c38.5 62.3 106.8 104.3 184.9 106.6v-18.3c-11.3-.3-22.7-1.7-33.5-3.6l4.7-23.8zM93.3 120.9l18 15.5c26-29.6 61.4-50.7 101.9-58.4l-4.7-23.8c10.8-2.2 22.1-3.3 33.5-3.6V32.4C163.9 34.6 95.9 76.4 57.4 139l15.8 9.1c6-9.7 12.6-18.9 20.1-27.2zm309.4 270.2l-18-15.8c-26 29.6-61.4 50.7-101.9 58.7l4.7 23.8c-10.8 1.9-22.1 3.3-33.5 3.6v18.3c78.1-2.2 146.4-44.3 184.9-106.6l-16.1-9.4c-5.7 9.7-12.6 18.8-20.1 27.4zM496 256c0 137-111 248-248 248S0 393 0 256 111 8 248 8s248 111 248 248zm-12.2 0c0-130.1-105.7-235.8-235.8-235.8S12.2 125.9 12.2 256 117.9 491.8 248 491.8 483.8 386.1 483.8 256zm-39-106.6l-15.8 9.1c5.3 9.7 10 20.2 13.6 31l-22.7 7.7c6.4 18.3 9.7 38.2 9.7 58.7s-3.6 40.4-10 58.7l23 7.7c-3.9 10.8-8.3 21-13.6 31l15.8 9.1C462 331 471.9 294.5 471.9 256s-9.9-75-27.1-106.6zm-183 177.7c16.3-3.3 30.4-11.6 40.7-23.5l51.2 44.8c11.9-13.6 21.3-29.3 27.1-46.8l-64.2-22.1c2.5-7.5 3.9-15.2 3.9-23.5s-1.4-16.1-3.9-23.5l64.5-22.1c-6.1-17.4-15.5-33.2-27.4-46.8l-51.2 44.8c-10.2-11.9-24.4-20.5-40.7-23.8l13.3-66.4c-8.6-1.9-17.7-2.8-27.1-2.8-9.4 0-18.5.8-27.1 2.8l13.3 66.4c-16.3 3.3-30.4 11.9-40.7 23.8l-51.2-44.8c-11.9 13.6-21.3 29.3-27.4 46.8l64.5 22.1c-2.5 7.5-3.9 15.2-3.9 23.5s1.4 16.1 3.9 23.5l-64.2 22.1c5.8 17.4 15.2 33.2 27.1 46.8l51.2-44.8c10.2 11.9 24.4 20.2 40.7 23.5l-13.3 66.7c8.6 1.7 17.7 2.8 27.1 2.8 9.4 0 18.5-1.1 27.1-2.8l-13.3-66.7z\"],\n    \"envira\": [448, 512, [], \"f299\", \"M0 32c477.6 0 366.6 317.3 367.1 366.3L448 480h-26l-70.4-71.2c-39 4.2-124.4 34.5-214.4-37C47 300.3 52 214.7 0 32zm79.7 46c-49.7-23.5-5.2 9.2-5.2 9.2 45.2 31.2 66 73.7 90.2 119.9 31.5 60.2 79 139.7 144.2 167.7 65 28 34.2 12.5 6-8.5-28.2-21.2-68.2-87-91-130.2-31.7-60-61-118.6-144.2-158.1z\"],\n    \"erlang\": [640, 512, [], \"f39d\", \"M87.2 53.5H0v405h100.4c-49.7-52.6-78.8-125.3-78.7-212.1-.1-76.7 24-142.7 65.5-192.9zm238.2 9.7c-45.9.1-85.1 33.5-89.2 83.2h169.9c-1.1-49.7-34.5-83.1-80.7-83.2zm230.7-9.6h.3l-.1-.1zm.3 0c31.4 42.7 48.7 97.5 46.2 162.7.5 6 .5 11.7 0 24.1H230.2c-.2 109.7 38.9 194.9 138.6 195.3 68.5-.3 118-51 151.9-106.1l96.4 48.2c-17.4 30.9-36.5 57.8-57.9 80.8H640v-405z\"],\n    \"ethereum\": [320, 512, [], \"f42e\", \"M311.9 260.8L160 353.6 8 260.8 160 0l151.9 260.8zM160 383.4L8 290.6 160 512l152-221.4-152 92.8z\"],\n    \"etsy\": [384, 512, [], \"f2d7\", \"M384 348c-1.75 10.75-13.75 110-15.5 132-117.879-4.299-219.895-4.743-368.5 0v-25.5c45.457-8.948 60.627-8.019 61-35.25 1.793-72.322 3.524-244.143 0-322-1.029-28.46-12.13-26.765-61-36v-25.5c73.886 2.358 255.933 8.551 362.999-3.75-3.5 38.25-7.75 126.5-7.75 126.5H332C320.947 115.665 313.241 68 277.25 68h-137c-10.25 0-10.75 3.5-10.75 9.75V241.5c58 .5 88.5-2.5 88.5-2.5 29.77-.951 27.56-8.502 40.75-65.251h25.75c-4.407 101.351-3.91 61.829-1.75 160.25H257c-9.155-40.086-9.065-61.045-39.501-61.5 0 0-21.5-2-88-2v139c0 26 14.25 38.25 44.25 38.25H263c63.636 0 66.564-24.996 98.751-99.75H384z\"],\n    \"evernote\": [384, 512, [], \"f839\", \"M120.82 132.21c1.6 22.31-17.55 21.59-21.61 21.59-68.93 0-73.64-1-83.58 3.34-.56.22-.74 0-.37-.37L123.79 46.45c.38-.37.6-.22.38.37-4.35 9.99-3.35 15.09-3.35 85.39zm79 308c-14.68-37.08 13-76.93 52.52-76.62 17.49 0 22.6 23.21 7.95 31.42-6.19 3.3-24.95 1.74-25.14 19.2-.05 17.09 19.67 25 31.2 24.89A45.64 45.64 0 0 0 312 393.45v-.08c0-11.63-7.79-47.22-47.54-55.34-7.72-1.54-65-6.35-68.35-50.52-3.74 16.93-17.4 63.49-43.11 69.09-8.74 1.94-69.68 7.64-112.92-36.77 0 0-18.57-15.23-28.23-57.95-3.38-15.75-9.28-39.7-11.14-62 0-18 11.14-30.45 25.07-32.2 81 0 90 2.32 101-7.8 9.82-9.24 7.8-15.5 7.8-102.78 1-8.3 7.79-30.81 53.41-24.14 6 .86 31.91 4.18 37.48 30.64l64.26 11.15c20.43 3.71 70.94 7 80.6 57.94 22.66 121.09 8.91 238.46 7.8 238.46C362.15 485.53 267.06 480 267.06 480c-18.95-.23-54.25-9.4-67.27-39.83zm80.94-204.84c-1 1.92-2.2 6 .85 7 14.09 4.93 39.75 6.84 45.88 5.53 3.11-.25 3.05-4.43 2.48-6.65-3.53-21.85-40.83-26.5-49.24-5.92z\"],\n    \"expeditedssl\": [496, 512, [], \"f23e\", \"M248 43.4C130.6 43.4 35.4 138.6 35.4 256S130.6 468.6 248 468.6 460.6 373.4 460.6 256 365.4 43.4 248 43.4zm-97.4 132.9c0-53.7 43.7-97.4 97.4-97.4s97.4 43.7 97.4 97.4v26.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-26.6c0-82.1-124-82.1-124 0v26.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-26.6zM389.7 380c0 9.7-8 17.7-17.7 17.7H124c-9.7 0-17.7-8-17.7-17.7V238.3c0-9.7 8-17.7 17.7-17.7h248c9.7 0 17.7 8 17.7 17.7V380zm-248-137.3v132.9c0 2.5-1.9 4.4-4.4 4.4h-8.9c-2.5 0-4.4-1.9-4.4-4.4V242.7c0-2.5 1.9-4.4 4.4-4.4h8.9c2.5 0 4.4 1.9 4.4 4.4zm141.7 48.7c0 13-7.2 24.4-17.7 30.4v31.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-31.6c-10.5-6.1-17.7-17.4-17.7-30.4 0-19.7 15.8-35.4 35.4-35.4s35.5 15.8 35.5 35.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 478.3C121 486.3 17.7 383 17.7 256S121 25.7 248 25.7 478.3 129 478.3 256 375 486.3 248 486.3z\"],\n    \"facebook\": [448, 512, [], \"f09a\", \"M448 56.7v398.5c0 13.7-11.1 24.7-24.7 24.7H309.1V306.5h58.2l8.7-67.6h-67v-43.2c0-19.6 5.4-32.9 33.5-32.9h35.8v-60.5c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9h-58.4v67.6h58.4V480H24.7C11.1 480 0 468.9 0 455.3V56.7C0 43.1 11.1 32 24.7 32h398.5c13.7 0 24.8 11.1 24.8 24.7z\"],\n    \"facebook-f\": [264, 512, [], \"f39e\", \"M215.8 85H264V3.6C255.7 2.5 227.1 0 193.8 0 124.3 0 76.7 42.4 76.7 120.3V192H0v91h76.7v229h94V283h73.6l11.7-91h-85.3v-62.7c0-26.3 7.3-44.3 45.1-44.3z\"],\n    \"facebook-messenger\": [448, 512, [], \"f39f\", \"M224 32C15.9 32-77.5 278 84.6 400.6V480l75.7-42c142.2 39.8 285.4-59.9 285.4-198.7C445.8 124.8 346.5 32 224 32zm23.4 278.1L190 250.5 79.6 311.6l121.1-128.5 57.4 59.6 110.4-61.1-121.1 128.5z\"],\n    \"facebook-square\": [448, 512, [], \"f082\", \"M448 80v352c0 26.5-21.5 48-48 48h-85.3V302.8h60.6l8.7-67.6h-69.3V192c0-19.6 5.4-32.9 33.5-32.9H384V98.7c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9H184v67.6h60.9V480H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48z\"],\n    \"fantasy-flight-games\": [512, 512, [], \"f6dc\", \"M256 32.86L32.86 256 256 479.14 479.14 256 256 32.86zM88.34 255.83c1.96-2 11.92-12.3 96.49-97.48 41.45-41.75 86.19-43.77 119.77-18.69 24.63 18.4 62.06 58.9 62.15 59 .68.74 1.07 2.86.58 3.38-11.27 11.84-22.68 23.54-33.5 34.69-34.21-32.31-40.52-38.24-48.51-43.95-17.77-12.69-41.4-10.13-56.98 5.1-2.17 2.13-1.79 3.43.12 5.35 2.94 2.95 28.1 28.33 35.09 35.78-11.95 11.6-23.66 22.97-35.69 34.66-12.02-12.54-24.48-25.53-36.54-38.11-21.39 21.09-41.69 41.11-61.85 60.99a42569.01 42569.01 0 0 1-41.13-40.72zm234.82 101.6c-35.49 35.43-78.09 38.14-106.99 20.47-22.08-13.5-39.38-32.08-72.93-66.84 12.05-12.37 23.79-24.42 35.37-36.31 33.02 31.91 37.06 36.01 44.68 42.09 18.48 14.74 42.52 13.67 59.32-1.8 3.68-3.39 3.69-3.64.14-7.24-10.59-10.73-21.19-21.44-31.77-32.18-1.32-1.34-3.03-2.48-.8-4.69 10.79-10.71 21.48-21.52 32.21-32.29.26-.26.65-.38 1.91-1.07 12.37 12.87 24.92 25.92 37.25 38.75 21.01-20.73 41.24-40.68 61.25-60.42 13.68 13.4 27.13 26.58 40.86 40.03-20.17 20.86-81.68 82.71-100.5 101.5zM256 0L0 256l256 256 256-256L256 0zM16 256L256 16l240 240-240 240L16 256z\"],\n    \"fedex\": [640, 512, [], \"f797\", \"M586 284.5l53.3-59.9h-62.4l-21.7 24.8-22.5-24.8H414v-16h56.1v-48.1H318.9V236h-.5c-9.6-11-21.5-14.8-35.4-14.8-28.4 0-49.8 19.4-57.3 44.9-18-59.4-97.4-57.6-121.9-14v-24.2H49v-26.2h60v-41.1H0V345h49v-77.5h48.9c-1.5 5.7-2.3 11.8-2.3 18.2 0 73.1 102.6 91.4 130.2 23.7h-42c-14.7 20.9-45.8 8.9-45.8-14.6h85.5c3.7 30.5 27.4 56.9 60.1 56.9 14.1 0 27-6.9 34.9-18.6h.5V345h212.2l22.1-25 22.3 25H640l-54-60.5zm-446.7-16.6c6.1-26.3 41.7-25.6 46.5 0h-46.5zm153.4 48.9c-34.6 0-34-62.8 0-62.8 32.6 0 34.5 62.8 0 62.8zm167.8 19.1h-94.4V169.4h95v30.2H405v33.9h55.5v28.1h-56.1v44.7h56.1v29.6zm-45.9-39.8v-24.4h56.1v-44l50.7 57-50.7 57v-45.6h-56.1zm138.6 10.3l-26.1 29.5H489l45.6-51.2-45.6-51.2h39.7l26.6 29.3 25.6-29.3h38.5l-45.4 51 46 51.4h-40.5l-26.3-29.5z\"],\n    \"fedora\": [448, 512, [], \"f798\", \"M225 32C101.3 31.7.8 131.7.4 255.4L0 425.7a53.6 53.6 0 0 0 53.6 53.9l170.2.4c123.7.3 224.3-99.7 224.6-223.4S348.7 32.3 225 32zm169.8 157.2L333 126.6c2.3-4.7 3.8-9.2 3.8-14.3v-1.6l55.2 56.1a101 101 0 0 1 2.8 22.4zM331 94.3a106.06 106.06 0 0 1 58.5 63.8l-54.3-54.6a26.48 26.48 0 0 0-4.2-9.2zM118.1 247.2a49.66 49.66 0 0 0-7.7 11.4l-8.5-8.5a85.78 85.78 0 0 1 16.2-2.9zM97 251.4l11.8 11.9-.9 8a34.74 34.74 0 0 0 2.4 12.5l-27-27.2a80.6 80.6 0 0 1 13.7-5.2zm-18.2 7.4l38.2 38.4a53.17 53.17 0 0 0-14.1 4.7L67.6 266a107 107 0 0 1 11.2-7.2zm-15.2 9.8l35.3 35.5a67.25 67.25 0 0 0-10.5 8.5L53.5 278a64.33 64.33 0 0 1 10.1-9.4zm-13.3 12.3l34.9 35a56.84 56.84 0 0 0-7.7 11.4l-35.8-35.9c2.8-3.8 5.7-7.2 8.6-10.5zm-11 14.3l36.4 36.6a48.29 48.29 0 0 0-3.6 15.2l-39.5-39.8a99.81 99.81 0 0 1 6.7-12zm-8.8 16.3l41.3 41.8a63.47 63.47 0 0 0 6.7 26.2L25.8 326c1.4-4.9 2.9-9.6 4.7-14.5zm-7.9 43l61.9 62.2a31.24 31.24 0 0 0-3.6 14.3v1.1l-55.4-55.7a88.27 88.27 0 0 1-2.9-21.9zm5.3 30.7l54.3 54.6a28.44 28.44 0 0 0 4.2 9.2 106.32 106.32 0 0 1-58.5-63.8zm-5.3-37a80.69 80.69 0 0 1 2.1-17l72.2 72.5a37.59 37.59 0 0 0-9.9 8.7zm253.3-51.8l-42.6-.1-.1 56c-.2 69.3-64.4 115.8-125.7 102.9-5.7 0-19.9-8.7-19.9-24.2a24.89 24.89 0 0 1 24.5-24.6c6.3 0 6.3 1.6 15.7 1.6a55.91 55.91 0 0 0 56.1-55.9l.1-47c0-4.5-4.5-9-8.9-9l-33.6-.1c-32.6-.1-32.5-49.4.1-49.3l42.6.1.1-56a105.18 105.18 0 0 1 105.6-105 86.35 86.35 0 0 1 20.2 2.3c11.2 1.8 19.9 11.9 19.9 24 0 15.5-14.9 27.8-30.3 23.9-27.4-5.9-65.9 14.4-66 54.9l-.1 47a8.94 8.94 0 0 0 8.9 9l33.6.1c32.5.2 32.4 49.5-.2 49.4zm23.5-.3a35.58 35.58 0 0 0 7.6-11.4l8.5 8.5a102 102 0 0 1-16.1 2.9zm21-4.2L308.6 280l.9-8.1a34.74 34.74 0 0 0-2.4-12.5l27 27.2a74.89 74.89 0 0 1-13.7 5.3zm18-7.4l-38-38.4c4.9-1.1 9.6-2.4 13.7-4.7l36.2 35.9c-3.8 2.5-7.9 5-11.9 7.2zm15.5-9.8l-35.3-35.5a61.06 61.06 0 0 0 10.5-8.5l34.9 35a124.56 124.56 0 0 1-10.1 9zm13.2-12.3l-34.9-35a63.18 63.18 0 0 0 7.7-11.4l35.8 35.9a130.28 130.28 0 0 1-8.6 10.5zm11-14.3l-36.4-36.6a48.29 48.29 0 0 0 3.6-15.2l39.5 39.8a87.72 87.72 0 0 1-6.7 12zm13.5-30.9a140.63 140.63 0 0 1-4.7 14.3L345.6 190a58.19 58.19 0 0 0-7.1-26.2zm1-5.6l-71.9-72.1a32 32 0 0 0 9.9-9.2l64.3 64.7a90.93 90.93 0 0 1-2.3 16.6z\"],\n    \"figma\": [384, 512, [], \"f799\", \"M277 170.7A85.35 85.35 0 0 0 277 0H106.3a85.3 85.3 0 0 0 0 170.6 85.35 85.35 0 0 0 0 170.7 85.35 85.35 0 1 0 85.3 85.4v-256zm0 0a85.3 85.3 0 1 0 85.3 85.3 85.31 85.31 0 0 0-85.3-85.3z\"],\n    \"firefox\": [480, 512, [], \"f269\", \"M478.1 235.3c-.7-4.5-1.4-7.1-1.4-7.1s-1.8 2-4.7 5.9c-.9-10.7-2.8-21.2-5.8-31.6-3.7-12.9-8.5-25.4-14.5-37.4-3.8-8-8.2-15.6-13.3-22.8-1.8-2.7-3.7-5.4-5.6-7.9-8.8-14.4-19-23.3-30.7-40-7.6-12.8-12.9-26.9-15.4-41.6-3.2 8.9-5.7 18-7.4 27.3-12.1-12.2-22.5-20.8-28.9-26.7C319.4 24.2 323 9.1 323 9.1S264.7 74.2 289.9 142c8.7 23 23.8 43.1 43.4 57.9 24.4 20.2 50.8 36 64.7 76.6-11.2-21.3-28.1-39.2-48.8-51.5 6.2 14.7 9.4 30.6 9.3 46.5 0 61-49.6 110.5-110.6 110.4-8.3 0-16.5-.9-24.5-2.8-9.5-1.8-18.7-4.9-27.4-9.3-12.9-7.8-24-18.1-32.8-30.3l-.2-.3 2 .7c4.6 1.6 9.2 2.8 14 3.7 18.7 4 38.3 1.7 55.6-6.6 17.5-9.7 28-16.9 36.6-14h.2c8.4 2.7 15-5.5 9-14-10.4-13.4-27.4-20-44.2-17-17.5 2.5-33.5 15-56.4 2.9-1.5-.8-2.9-1.6-4.3-2.5-1.6-.9 4.9 1.3 3.4.3-5-2.5-9.8-5.4-14.4-8.6-.3-.3 3.5 1.1 3.1.8-5.9-4-11-9.2-15-15.2-4.1-7.4-4.5-16.4-1-24.1 2.1-3.8 5.4-6.9 9.3-8.7 3 1.5 4.8 2.6 4.8 2.6s-1.3-2.5-2.1-3.8c.3-.1.5 0 .8-.2 2.6 1.1 8.3 4 11.4 5.8 2.1 1.1 3.8 2.7 5.2 4.7 0 0 1-.5.3-2.7-1.1-2.7-2.9-5-5.4-6.6h.2c2.3 1.2 4.5 2.6 6.6 4.1 1.9-4.4 2.8-9.2 2.6-14 .2-2.6-.2-5.3-1.1-7.8-.8-1.6.5-2.2 1.9-.5-.2-1.3-.7-2.5-1.2-3.7v-.1s.8-1.1 1.2-1.5c1-1 2.1-1.9 3.4-2.7 7.2-4.5 14.8-8.4 22.7-11.6 6.4-2.8 11.7-4.9 12.8-5.6 1.6-1 3.1-2.2 4.5-3.5 5.3-4.5 9-10.8 10.2-17.7.1-.9.2-1.8.3-2.8v-1.5c-.9-3.5-6.9-6.1-38.4-9.1-11.1-1.8-20-10.1-22.5-21.1v-.1c6-15.7 16.8-29.1 30.8-38.3.8-.7-3.2.2-2.4-.5 2.7-1.3 5.4-2.5 8.2-3.5 1.4-.6-6-3.4-12.6-2.7-4 .2-8 1.2-11.7 2.8 1.6-1.3 6.2-3.1 5.1-3.1-8.4 1.6-16.5 4.7-23.9 9 0-.8.1-1.5.5-2.2-5.9 2.5-11 6.5-15 11.5.1-.9.2-1.8.2-2.7-2.7 2-5.2 4.3-7.3 6.9l-.1.1c-17.4-6.7-36.3-8.3-54.6-4.7l-.2-.1h.2c-3.8-3.1-7.1-6.7-9.7-10.9l-.2.1-.4-.2c-1.2-1.8-2.4-3.8-3.7-6-.9-1.6-1.8-3.4-2.7-5.2 0-.1-.1-.2-.2-.2-.4 0-.6 1.7-.9 1.3v-.1c-3.2-8.3-4.7-17.2-4.4-26.2l-.2.1c-5.1 3.5-9 8.6-11.1 14.5-.9 2.1-1.6 3.3-2.2 4.5v-.5c.1-1.1.6-3.3.5-3.1s-.2.3-.3.4c-1.5 1.7-2.9 3.7-3.9 5.8-.9 1.9-1.7 3.9-2.3 5.9-.1.3 0-.3 0-1s.1-2 0-1.7l-.3.7c-6.7 14.9-10.9 30.8-12.4 47.1-.4 2.8-.6 5.6-.5 8.3v.2c-4.8 5.2-9 11-12.7 17.1-12.1 20.4-21.1 42.5-26.8 65.6 4-8.8 8.8-17.2 14.3-25.1C5.5 228.5 0 257.4 0 286.6c1.8-8.6 4.2-17 7-25.3-1.7 34.5 4.9 68.9 19.4 100.3 19.4 43.5 51.6 80 92.3 104.7 16.6 11.2 34.7 19.9 53.8 25.8 2.5.9 5.1 1.8 7.7 2.7-.8-.3-1.6-.7-2.4-1 22.6 6.8 46.2 10.3 69.8 10.3 83.7 0 111.3-31.9 113.8-35 4.1-3.7 7.5-8.2 9.9-13.3 1.6-.7 3.2-1.4 4.9-2.1l1-.5 1.9-.9c12.6-5.9 24.5-13.4 35.3-22.1 16.3-11.7 27.9-28.7 32.9-48.1 3-7.1 3.1-15 .4-22.2.9-1.4 1.7-2.8 2.7-4.3 18-28.9 28.2-61.9 29.6-95.9v-2.8c0-7.3-.6-14.5-1.9-21.6zm-299-97.6c-.4 1.1-.9 2.3-1.3 3.5.4-1.2.8-2.3 1.3-3.5z\"],\n    \"first-order\": [448, 512, [], \"f2b0\", \"M12.9 229.2c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4h-.2zM224 96.6c-7.1 0-14.6.6-21.4 1.7l3.7 67.4-22-64c-14.3 3.7-27.7 9.4-40 16.6l29.4 61.4-45.1-50.9c-11.4 8.9-21.7 19.1-30.6 30.9l50.6 45.4-61.1-29.7c-7.1 12.3-12.9 25.7-16.6 40l64.3 22.6-68-4c-.9 7.1-1.4 14.6-1.4 22s.6 14.6 1.4 21.7l67.7-4-64 22.6c3.7 14.3 9.4 27.7 16.6 40.3l61.1-29.7L97.7 352c8.9 11.7 19.1 22.3 30.9 30.9l44.9-50.9-29.5 61.4c12.3 7.4 25.7 13.1 40 16.9l22.3-64.6-4 68c7.1 1.1 14.6 1.7 21.7 1.7 7.4 0 14.6-.6 21.7-1.7l-4-68.6 22.6 65.1c14.3-4 27.7-9.4 40-16.9L274.9 332l44.9 50.9c11.7-8.9 22-19.1 30.6-30.9l-50.6-45.1 61.1 29.4c7.1-12.3 12.9-25.7 16.6-40.3l-64-22.3 67.4 4c1.1-7.1 1.4-14.3 1.4-21.7s-.3-14.9-1.4-22l-67.7 4 64-22.3c-3.7-14.3-9.1-28-16.6-40.3l-60.9 29.7 50.6-45.4c-8.9-11.7-19.1-22-30.6-30.9l-45.1 50.9 29.4-61.1c-12.3-7.4-25.7-13.1-40-16.9L241.7 166l4-67.7c-7.1-1.2-14.3-1.7-21.7-1.7zM443.4 128v256L224 512 4.6 384V128L224 0l219.4 128zm-17.1 10.3L224 20.9 21.7 138.3v235.1L224 491.1l202.3-117.7V138.3zM224 37.1l187.7 109.4v218.9L224 474.9 36.3 365.4V146.6L224 37.1zm0 50.9c-92.3 0-166.9 75.1-166.9 168 0 92.6 74.6 167.7 166.9 167.7 92 0 166.9-75.1 166.9-167.7 0-92.9-74.9-168-166.9-168z\"],\n    \"first-order-alt\": [496, 512, [], \"f50a\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 488.21C115.34 496.21 7.79 388.66 7.79 256S115.34 15.79 248 15.79 488.21 123.34 488.21 256 380.66 496.21 248 496.21zm0-459.92C126.66 36.29 28.29 134.66 28.29 256S126.66 475.71 248 475.71 467.71 377.34 467.71 256 369.34 36.29 248 36.29zm0 431.22c-116.81 0-211.51-94.69-211.51-211.51S131.19 44.49 248 44.49 459.51 139.19 459.51 256 364.81 467.51 248 467.51zm186.23-162.98a191.613 191.613 0 0 1-20.13 48.69l-74.13-35.88 61.48 54.82a193.515 193.515 0 0 1-37.2 37.29l-54.8-61.57 35.88 74.27a190.944 190.944 0 0 1-48.63 20.23l-27.29-78.47 4.79 82.93c-8.61 1.18-17.4 1.8-26.33 1.8s-17.72-.62-26.33-1.8l4.76-82.46-27.15 78.03a191.365 191.365 0 0 1-48.65-20.2l35.93-74.34-54.87 61.64a193.85 193.85 0 0 1-37.22-37.28l61.59-54.9-74.26 35.93a191.638 191.638 0 0 1-20.14-48.69l77.84-27.11-82.23 4.76c-1.16-8.57-1.78-17.32-1.78-26.21 0-9 .63-17.84 1.82-26.51l82.38 4.77-77.94-27.16a191.726 191.726 0 0 1 20.23-48.67l74.22 35.92-61.52-54.86a193.85 193.85 0 0 1 37.28-37.22l54.76 61.53-35.83-74.17a191.49 191.49 0 0 1 48.65-20.13l26.87 77.25-4.71-81.61c8.61-1.18 17.39-1.8 26.32-1.8s17.71.62 26.32 1.8l-4.74 82.16 27.05-77.76c17.27 4.5 33.6 11.35 48.63 20.17l-35.82 74.12 54.72-61.47a193.13 193.13 0 0 1 37.24 37.23l-61.45 54.77 74.12-35.86a191.515 191.515 0 0 1 20.2 48.65l-77.81 27.1 82.24-4.75c1.19 8.66 1.82 17.5 1.82 26.49 0 8.88-.61 17.63-1.78 26.19l-82.12-4.75 77.72 27.09z\"],\n    \"firstdraft\": [384, 512, [], \"f3a1\", \"M384 192h-64v128H192v128H0v-25.6h166.4v-128h128v-128H384V192zm-25.6 38.4v128h-128v128H64V512h192V384h128V230.4h-25.6zm25.6 192h-89.6V512H320v-64h64v-25.6zM0 0v384h128V256h128V128h128V0H0z\"],\n    \"flickr\": [448, 512, [], \"f16e\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM144.5 319c-35.1 0-63.5-28.4-63.5-63.5s28.4-63.5 63.5-63.5 63.5 28.4 63.5 63.5-28.4 63.5-63.5 63.5zm159 0c-35.1 0-63.5-28.4-63.5-63.5s28.4-63.5 63.5-63.5 63.5 28.4 63.5 63.5-28.4 63.5-63.5 63.5z\"],\n    \"flipboard\": [448, 512, [], \"f44d\", \"M0 32v448h448V32H0zm358.4 179.2h-89.6v89.6h-89.6v89.6H89.6V121.6h268.8v89.6z\"],\n    \"fly\": [384, 512, [], \"f417\", \"M197.8 427.8c12.9 11.7 33.7 33.3 33.2 50.7 0 .8-.1 1.6-.1 2.5-1.8 19.8-18.8 31.1-39.1 31-25-.1-39.9-16.8-38.7-35.8 1-16.2 20.5-36.7 32.4-47.6 2.3-2.1 2.7-2.7 5.6-3.6 3.4 0 3.9.3 6.7 2.8zM331.9 67.3c-16.3-25.7-38.6-40.6-63.3-52.1C243.1 4.5 214-.2 192 0c-44.1 0-71.2 13.2-81.1 17.3C57.3 45.2 26.5 87.2 28 158.6c7.1 82.2 97 176 155.8 233.8 1.7 1.6 4.5 4.5 6.2 5.1l3.3.1c2.1-.7 1.8-.5 3.5-2.1 52.3-49.2 140.7-145.8 155.9-215.7 7-39.2 3.1-72.5-20.8-112.5zM186.8 351.9c-28-51.1-65.2-130.7-69.3-189-3.4-47.5 11.4-131.2 69.3-136.7v325.7zM328.7 180c-16.4 56.8-77.3 128-118.9 170.3C237.6 298.4 275 217 277 158.4c1.6-45.9-9.8-105.8-48-131.4 88.8 18.3 115.5 98.1 99.7 153z\"],\n    \"font-awesome\": [448, 512, [], \"f2b4\", \"M397.8 32H50.2C22.7 32 0 54.7 0 82.2v347.6C0 457.3 22.7 480 50.2 480h347.6c27.5 0 50.2-22.7 50.2-50.2V82.2c0-27.5-22.7-50.2-50.2-50.2zm-45.4 284.3c0 4.2-3.6 6-7.8 7.8-16.7 7.2-34.6 13.7-53.8 13.7-26.9 0-39.4-16.7-71.7-16.7-23.3 0-47.8 8.4-67.5 17.3-1.2.6-2.4.6-3.6 1.2V385c0 1.8 0 3.6-.6 4.8v1.2c-2.4 8.4-10.2 14.3-19.1 14.3-11.3 0-20.3-9-20.3-20.3V166.4c-7.8-6-13.1-15.5-13.1-26.3 0-18.5 14.9-33.5 33.5-33.5 18.5 0 33.5 14.9 33.5 33.5 0 10.8-4.8 20.3-13.1 26.3v18.5c1.8-.6 3.6-1.2 5.4-2.4 18.5-7.8 40.6-14.3 61.5-14.3 22.7 0 40.6 6 60.9 13.7 4.2 1.8 8.4 2.4 13.1 2.4 22.7 0 47.8-16.1 53.8-16.1 4.8 0 9 3.6 9 7.8v140.3z\"],\n    \"font-awesome-alt\": [448, 512, [], \"f35c\", \"M339.3 171.2c-6 0-29.9 15.5-52.6 15.5-4.2 0-8.4-.6-12.5-2.4-19.7-7.8-37-13.7-59.1-13.7-20.3 0-41.8 6.6-59.7 13.7-1.8.6-3.6 1.2-4.8 1.8v-17.9c7.8-6 12.5-14.9 12.5-25.7 0-17.9-14.3-32.3-32.3-32.3s-32.3 14.3-32.3 32.3c0 10.2 4.8 19.7 12.5 25.7v212.1c0 10.8 9 19.7 19.7 19.7 9 0 16.1-6 18.5-13.7V385c.6-1.8.6-3 .6-4.8V336c1.2 0 2.4-.6 3-1.2 19.7-8.4 43-16.7 65.7-16.7 31.1 0 43 16.1 69.3 16.1 18.5 0 36.4-6.6 52-13.7 4.2-1.8 7.2-3.6 7.2-7.8V178.3c1.8-4.1-2.3-7.1-7.7-7.1zM397.8 32H50.2C22.7 32 0 54.7 0 82.2v347.6C0 457.3 22.7 480 50.2 480h347.6c27.5 0 50.2-22.7 50.2-50.2V82.2c0-27.5-22.7-50.2-50.2-50.2zm14.3 397.7c0 7.8-6.6 14.3-14.3 14.3H50.2c-7.8 0-14.3-6.6-14.3-14.3V82.2c0-7.8 6.6-14.3 14.3-14.3h347.6v-.1c7.8 0 14.3 6.6 14.3 14.3z\"],\n    \"font-awesome-flag\": [448, 512, [], \"f425\", \"M444.373 359.424c0 7.168-6.144 10.24-13.312 13.312-28.672 12.288-59.392 23.552-92.16 23.552-46.08 0-67.584-28.672-122.88-28.672-39.936 0-81.92 14.336-115.712 29.696-2.048 1.024-4.096 1.024-6.144 2.048v77.824c0 21.405-16.122 34.816-33.792 34.816-19.456 0-34.816-15.36-34.816-34.816V102.4C12.245 92.16 3.029 75.776 3.029 57.344 3.029 25.6 28.629 0 60.373 0s57.344 25.6 57.344 57.344c0 18.432-8.192 34.816-22.528 45.056v31.744c4.124-1.374 58.768-28.672 114.688-28.672 65.27 0 97.676 27.648 126.976 27.648 38.912 0 81.92-27.648 92.16-27.648 8.192 0 15.36 6.144 15.36 13.312v240.64z\"],\n    \"font-awesome-logo-full\": [3992, 512, [\"Font Awesome\"], \"f4e6\", \"M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z\"],\n    \"fonticons\": [448, 512, [], \"f280\", \"M0 32v448h448V32zm187 140.9c-18.4 0-19 9.9-19 27.4v23.3c0 2.4-3.5 4.4-.6 4.4h67.4l-11.1 37.3H168v112.9c0 5.8-2 6.7 3.2 7.3l43.5 4.1v25.1H84V389l21.3-2c5.2-.6 6.7-2.3 6.7-7.9V267.7c0-2.3-2.9-2.3-5.8-2.3H84V228h28v-21c0-49.6 26.5-70 77.3-70 34.1 0 64.7 8.2 64.7 52.8l-50.7 6.1c.3-18.7-4.4-23-16.3-23zm74.3 241.8v-25.1l20.4-2.6c5.2-.6 7.6-1.7 7.6-7.3V271.8c0-4.1-2.9-6.7-6.7-7.9l-24.2-6.4 6.7-29.5h80.2v151.7c0 5.8-2.6 6.4 2.9 7.3l15.7 2.6v25.1zm80.8-255.5l9 33.2-7.3 7.3-31.2-16.6-31.2 16.6-7.3-7.3 9-33.2-21.8-24.2 3.5-9.6h27.7l15.5-28h9.3l15.5 28h27.7l3.5 9.6z\"],\n    \"fonticons-fi\": [384, 512, [], \"f3a2\", \"M114.4 224h92.4l-15.2 51.2h-76.4V433c0 8-2.8 9.2 4.4 10l59.6 5.6V483H0v-35.2l29.2-2.8c7.2-.8 9.2-3.2 9.2-10.8V278.4c0-3.2-4-3.2-8-3.2H0V224h38.4v-28.8c0-68 36.4-96 106-96 46.8 0 88.8 11.2 88.8 72.4l-69.6 8.4c.4-25.6-6-31.6-22.4-31.6-25.2 0-26 13.6-26 37.6v32c0 3.2-4.8 6-.8 6zM384 483H243.2v-34.4l28-3.6c7.2-.8 10.4-2.4 10.4-10V287c0-5.6-4-9.2-9.2-10.8l-33.2-8.8 9.2-40.4h110v208c0 8-3.6 8.8 4 10l21.6 3.6V483zm-30-347.2l12.4 45.6-10 10-42.8-22.8-42.8 22.8-10-10 12.4-45.6-30-36.4 4.8-10h38L307.2 51H320l21.2 38.4h38l4.8 13.2-30 33.2z\"],\n    \"fort-awesome\": [512, 512, [], \"f286\", \"M489.2 287.9h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6V146.2c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-6-8-4.6-11.7-4.6v-38c8.3-2 17.1-3.4 25.7-3.4 10.9 0 20.9 4.3 31.4 4.3 4.6 0 27.7-1.1 27.7-8v-60c0-2.6-2-4.6-4.6-4.6-5.1 0-15.1 4.3-24 4.3-9.7 0-20.9-4.3-32.6-4.3-8 0-16 1.1-23.7 2.9v-4.9c5.4-2.6 9.1-8.3 9.1-14.3 0-20.7-31.4-20.8-31.4 0 0 6 3.7 11.7 9.1 14.3v111.7c-3.7 0-11.7-1.4-11.7 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32H128v-32c0-2.6-2-4.6-4.6-4.6H96c-2.6 0-4.6 2-4.6 4.6v178.3H54.8v-32c0-2.6-2-4.6-4.6-4.6H22.8c-2.6 0-4.6 2-4.6 4.6V512h182.9v-96c0-72.6 109.7-72.6 109.7 0v96h182.9V292.5c.1-2.6-1.9-4.6-4.5-4.6zm-288.1-4.5c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64zm146.4 0c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64z\"],\n    \"fort-awesome-alt\": [512, 512, [], \"f3a3\", \"M208 237.4h-22.2c-2.1 0-3.7 1.6-3.7 3.7v51.7c0 2.1 1.6 3.7 3.7 3.7H208c2.1 0 3.7-1.6 3.7-3.7v-51.7c0-2.1-1.6-3.7-3.7-3.7zm118.2 0H304c-2.1 0-3.7 1.6-3.7 3.7v51.7c0 2.1 1.6 3.7 3.7 3.7h22.2c2.1 0 3.7-1.6 3.7-3.7v-51.7c-.1-2.1-1.7-3.7-3.7-3.7zm132-125.1c-2.3-3.2-4.6-6.4-7.1-9.5-9.8-12.5-20.8-24-32.8-34.4-4.5-3.9-9.1-7.6-13.9-11.2-1.6-1.2-3.2-2.3-4.8-3.5C372 34.1 340.3 20 306 13c-16.2-3.3-32.9-5-50-5s-33.9 1.7-50 5c-34.3 7.1-66 21.2-93.3 40.8-1.6 1.1-3.2 2.3-4.8 3.5-4.8 3.6-9.4 7.3-13.9 11.2-3 2.6-5.9 5.3-8.8 8s-5.7 5.5-8.4 8.4c-5.5 5.7-10.7 11.8-15.6 18-2.4 3.1-4.8 6.3-7.1 9.5C25.2 153 8.3 202.5 8.3 256c0 2 .1 4 .1 6 .1.7.1 1.3.1 2 .1 1.3.1 2.7.2 4 0 .8.1 1.5.1 2.3 0 1.3.1 2.5.2 3.7.1.8.1 1.6.2 2.4.1 1.1.2 2.3.3 3.5 0 .8.1 1.6.2 2.4.1 1.2.3 2.4.4 3.6.1.8.2 1.5.3 2.3.1 1.3.3 2.6.5 3.9.1.6.2 1.3.3 1.9l.9 5.7c.1.6.2 1.1.3 1.7.3 1.3.5 2.7.8 4 .2.8.3 1.6.5 2.4.2 1 .5 2.1.7 3.2.2.9.4 1.7.6 2.6.2 1 .4 2 .7 3 .2.9.5 1.8.7 2.7.3 1 .5 1.9.8 2.9.3.9.5 1.8.8 2.7.2.9.5 1.9.8 2.8s.5 1.8.8 2.7c.3 1 .6 1.9.9 2.8.6 1.6 1.1 3.3 1.7 4.9.4 1 .7 1.9 1 2.8.3 1 .7 2 1.1 3 .3.8.6 1.5.9 2.3l1.2 3c.3.7.6 1.5.9 2.2.4 1 .9 2 1.3 3l.9 2.1c.5 1 .9 2 1.4 3 .3.7.6 1.3.9 2 .5 1 1 2.1 1.5 3.1.2.6.5 1.1.8 1.7.6 1.1 1.1 2.2 1.7 3.3.1.2.2.3.3.5 2.2 4.1 4.4 8.2 6.8 12.2.2.4.5.8.7 1.2.7 1.1 1.3 2.2 2 3.3.3.5.6.9.9 1.4.6 1.1 1.3 2.1 2 3.2.3.5.6.9.9 1.4.7 1.1 1.4 2.1 2.1 3.2.2.4.5.8.8 1.2.7 1.1 1.5 2.2 2.3 3.3.2.2.3.5.5.7 37.5 51.7 94.4 88.5 160 99.4.9.1 1.7.3 2.6.4 1 .2 2.1.4 3.1.5s1.9.3 2.8.4c1 .2 2 .3 3 .4.9.1 1.9.2 2.9.3s1.9.2 2.9.3 2.1.2 3.1.3c.9.1 1.8.1 2.7.2 1.1.1 2.3.1 3.4.2.8 0 1.7.1 2.5.1 1.3 0 2.6.1 3.9.1.7.1 1.4.1 2.1.1 2 .1 4 .1 6 .1s4-.1 6-.1c.7 0 1.4-.1 2.1-.1 1.3 0 2.6 0 3.9-.1.8 0 1.7-.1 2.5-.1 1.1-.1 2.3-.1 3.4-.2.9 0 1.8-.1 2.7-.2 1-.1 2.1-.2 3.1-.3s1.9-.2 2.9-.3c.9-.1 1.9-.2 2.9-.3s2-.3 3-.4 1.9-.3 2.8-.4c1-.2 2.1-.3 3.1-.5.9-.1 1.7-.3 2.6-.4 65.6-11 122.5-47.7 160.1-102.4.2-.2.3-.5.5-.7.8-1.1 1.5-2.2 2.3-3.3.2-.4.5-.8.8-1.2.7-1.1 1.4-2.1 2.1-3.2.3-.5.6-.9.9-1.4.6-1.1 1.3-2.1 2-3.2.3-.5.6-.9.9-1.4.7-1.1 1.3-2.2 2-3.3.2-.4.5-.8.7-1.2 2.4-4 4.6-8.1 6.8-12.2.1-.2.2-.3.3-.5.6-1.1 1.1-2.2 1.7-3.3.2-.6.5-1.1.8-1.7.5-1 1-2.1 1.5-3.1.3-.7.6-1.3.9-2 .5-1 1-2 1.4-3l.9-2.1c.5-1 .9-2 1.3-3 .3-.7.6-1.5.9-2.2l1.2-3c.3-.8.6-1.5.9-2.3.4-1 .7-2 1.1-3s.7-1.9 1-2.8c.6-1.6 1.2-3.3 1.7-4.9.3-1 .6-1.9.9-2.8s.5-1.8.8-2.7c.2-.9.5-1.9.8-2.8s.6-1.8.8-2.7c.3-1 .5-1.9.8-2.9.2-.9.5-1.8.7-2.7.2-1 .5-2 .7-3 .2-.9.4-1.7.6-2.6.2-1 .5-2.1.7-3.2.2-.8.3-1.6.5-2.4.3-1.3.6-2.7.8-4 .1-.6.2-1.1.3-1.7l.9-5.7c.1-.6.2-1.3.3-1.9.1-1.3.3-2.6.5-3.9.1-.8.2-1.5.3-2.3.1-1.2.3-2.4.4-3.6 0-.8.1-1.6.2-2.4.1-1.1.2-2.3.3-3.5.1-.8.1-1.6.2-2.4.1 1.7.1.5.2-.7 0-.8.1-1.5.1-2.3.1-1.3.2-2.7.2-4 .1-.7.1-1.3.1-2 .1-2 .1-4 .1-6 0-53.5-16.9-103-45.8-143.7zM448 371.5c-9.4 15.5-20.6 29.9-33.6 42.9-20.6 20.6-44.5 36.7-71.2 48-13.9 5.8-28.2 10.3-42.9 13.2v-75.8c0-58.6-88.6-58.6-88.6 0v75.8c-14.7-2.9-29-7.3-42.9-13.2-26.7-11.3-50.6-27.4-71.2-48-13-13-24.2-27.4-33.6-42.9v-71.3c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7V326h29.6V182c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7H208c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-4.8 6.5-3.7 9.5-3.7V88.1c-4.4-2-7.4-6.7-7.4-11.5 0-16.8 25.4-16.8 25.4 0 0 4.8-3 9.4-7.4 11.5V92c6.3-1.4 12.7-2.3 19.2-2.3 9.4 0 18.4 3.5 26.3 3.5 7.2 0 15.2-3.5 19.4-3.5 2.1 0 3.7 1.6 3.7 3.7v48.4c0 5.6-18.7 6.5-22.4 6.5-8.6 0-16.6-3.5-25.4-3.5-7 0-14.1 1.2-20.8 2.8v30.7c3 0 9.5-1.1 9.5 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7h22.2c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7v144h29.5v-25.8c0-2.1 1.6-3.7 3.7-3.7h22.2c2.1 0 3.7 1.6 3.7 3.7z\"],\n    \"forumbee\": [448, 512, [], \"f211\", \"M5.8 309.7C2 292.7 0 275.5 0 258.3 0 135 99.8 35 223.1 35c16.6 0 33.3 2 49.3 5.5C149 87.5 51.9 186 5.8 309.7zm392.9-189.2C385 103 369 87.8 350.9 75.2c-149.6 44.3-266.3 162.1-309.7 312 12.5 18.1 28 35.6 45.2 49 43.1-151.3 161.2-271.7 312.3-315.7zm15.8 252.7c15.2-25.1 25.4-53.7 29.5-82.8-79.4 42.9-145 110.6-187.6 190.3 30-4.4 58.9-15.3 84.6-31.3 35 13.1 70.9 24.3 107 33.6-9.3-36.5-20.4-74.5-33.5-109.8zm29.7-145.5c-2.6-19.5-7.9-38.7-15.8-56.8C290.5 216.7 182 327.5 137.1 466c18.1 7.6 37 12.5 56.6 15.2C240 367.1 330.5 274.4 444.2 227.7z\"],\n    \"foursquare\": [368, 512, [], \"f180\", \"M323.1 3H49.9C12.4 3 0 31.3 0 49.1v433.8c0 20.3 12.1 27.7 18.2 30.1 6.2 2.5 22.8 4.6 32.9-7.1C180 356.5 182.2 354 182.2 354c3.1-3.4 3.4-3.1 6.8-3.1h83.4c35.1 0 40.6-25.2 44.3-39.7l48.6-243C373.8 25.8 363.1 3 323.1 3zm-16.3 73.8l-11.4 59.7c-1.2 6.5-9.5 13.2-16.9 13.2H172.1c-12 0-20.6 8.3-20.6 20.3v13c0 12 8.6 20.6 20.6 20.6h90.4c8.3 0 16.6 9.2 14.8 18.2-1.8 8.9-10.5 53.8-11.4 58.8-.9 4.9-6.8 13.5-16.9 13.5h-73.5c-13.5 0-17.2 1.8-26.5 12.6 0 0-8.9 11.4-89.5 108.3-.9.9-1.8.6-1.8-.3V75.9c0-7.7 6.8-16.6 16.6-16.6h219c8.2 0 15.6 7.7 13.5 17.5z\"],\n    \"free-code-camp\": [576, 512, [], \"f2c5\", \"M69.3 144.5c-41 68.5-36.4 163 1 227C92.5 409.7 120 423.9 120 438c0 6.8-6 13-12.8 13C87.7 451 8 375.5 8 253.2c0-111.5 78-186 97.1-186 6 0 14.9 4.8 14.9 11.1 0 12.7-28.3 28.6-50.7 66.2zm195.8 213.8c4.5 1.8 12.3 5.2 12.3-1.2 0-2.7-2.2-2.9-4.3-3.6-8.5-3.4-14-7.7-19.1-15.2-8.2-12.1-10.1-24.2-10.1-38.6 0-32.1 44.2-37.9 44.2-70 0-12.3-7.7-15.9-7.7-19.3 0-2.2.7-2.2 2.9-2.2 8 0 19.1 13.3 22.5 19.8 2.2 4.6 2.4 6 2.4 11.1 0 7-.7 14.2-.7 21.3 0 27 31.9 19.8 31.9 6.8 0-6-3.6-11.6-3.6-17.4 0-.7 0-1.2.7-1.2 3.4 0 9.4 7.7 11.1 10.1 5.8 8.9 8.5 20.8 8.5 31.4 0 32.4-29.5 49-29.5 56 0 1 2.9 7.7 12.1 1.9 29.7-15.1 53.1-47.6 53.1-89.8 0-33.6-8.7-57.7-32.1-82.6-3.9-4.1-16.4-16.9-22.5-16.9-8.2 0 7.2 18.6 7.2 31.2 0 7.2-4.8 12.3-12.3 12.3-11.6 0-14.5-25.4-15.9-33.3-5.8-33.8-12.8-58.2-46.4-74.1-10.4-5-36.5-11.8-36.5-2.2 0 2.4 2.7 4.1 4.6 5.1 9.2 5.6 19.6 21.4 19.6 38.2 0 46.1-57.7 88.2-57.7 136.2-.2 40.3 28.1 72.6 65.3 86.2zM470.4 67c-6 0-14.4 6.5-14.4 12.6 0 8.7 12.1 19.6 17.6 25.4 81.6 85.1 78.6 214.3 17.6 291-7 8.9-35.3 35.3-35.3 43.5 0 5.1 8.2 11.4 13.2 11.4 25.4 0 98.8-80.8 98.8-185.7C568 145.9 491.8 67 470.4 67zm-42.3 323.1H167c-9.4 0-15.5 7.5-15.5 16.4 0 8.5 7 15.5 15.5 15.5h261.1c9.4 0 11.9-7.5 11.9-16.4 0-8.5-3.5-15.5-11.9-15.5z\"],\n    \"freebsd\": [448, 512, [], \"f3a4\", \"M303.7 96.2c11.1-11.1 115.5-77 139.2-53.2 23.7 23.7-42.1 128.1-53.2 139.2-11.1 11.1-39.4.9-63.1-22.9-23.8-23.7-34.1-52-22.9-63.1zM109.9 68.1C73.6 47.5 22 24.6 5.6 41.1c-16.6 16.6 7.1 69.4 27.9 105.7 18.5-32.2 44.8-59.3 76.4-78.7zM406.7 174c3.3 11.3 2.7 20.7-2.7 26.1-20.3 20.3-87.5-27-109.3-70.1-18-32.3-11.1-53.4 14.9-48.7 5.7-3.6 12.3-7.6 19.6-11.6-29.8-15.5-63.6-24.3-99.5-24.3-119.1 0-215.6 96.5-215.6 215.6 0 119 96.5 215.6 215.6 215.6S445.3 380.1 445.3 261c0-38.4-10.1-74.5-27.7-105.8-3.9 7-7.6 13.3-10.9 18.8z\"],\n    \"fulcrum\": [320, 512, [], \"f50b\", \"M95.75 164.14l-35.38 43.55L25 164.14l35.38-43.55zM144.23 0l-20.54 198.18L72.72 256l51 57.82L144.23 512V300.89L103.15 256l41.08-44.89zm79.67 164.14l35.38 43.55 35.38-43.55-35.38-43.55zm-48.48 47L216.5 256l-41.08 44.89V512L196 313.82 247 256l-51-57.82L175.42 0z\"],\n    \"galactic-republic\": [496, 512, [], \"f50c\", \"M248 504C111.25 504 0 392.75 0 256S111.25 8 248 8s248 111.25 248 248-111.25 248-248 248zm0-479.47C120.37 24.53 16.53 128.37 16.53 256S120.37 487.47 248 487.47 479.47 383.63 479.47 256 375.63 24.53 248 24.53zm27.62 21.81v24.62a185.933 185.933 0 0 1 83.57 34.54l17.39-17.36c-28.75-22.06-63.3-36.89-100.96-41.8zm-55.37.07c-37.64 4.94-72.16 19.8-100.88 41.85l17.28 17.36h.08c24.07-17.84 52.55-30.06 83.52-34.67V46.41zm12.25 50.17v82.87c-10.04 2.03-19.42 5.94-27.67 11.42l-58.62-58.59-21.93 21.93 58.67 58.67c-5.47 8.23-9.45 17.59-11.47 27.62h-82.9v31h82.9c2.02 10.02 6.01 19.31 11.47 27.54l-58.67 58.69 21.93 21.93 58.62-58.62a77.873 77.873 0 0 0 27.67 11.47v82.9h31v-82.9c10.05-2.03 19.37-6.06 27.62-11.55l58.67 58.69 21.93-21.93-58.67-58.69c5.46-8.23 9.47-17.52 11.5-27.54h82.87v-31h-82.87c-2.02-10.02-6.03-19.38-11.5-27.62l58.67-58.67-21.93-21.93-58.67 58.67c-8.25-5.49-17.57-9.47-27.62-11.5V96.58h-31zm183.24 30.72l-17.36 17.36a186.337 186.337 0 0 1 34.67 83.67h24.62c-4.95-37.69-19.83-72.29-41.93-101.03zm-335.55.13c-22.06 28.72-36.91 63.26-41.85 100.91h24.65c4.6-30.96 16.76-59.45 34.59-83.52l-17.39-17.39zM38.34 283.67c4.92 37.64 19.75 72.18 41.8 100.9l17.36-17.39c-17.81-24.07-29.92-52.57-34.51-83.52H38.34zm394.7 0c-4.61 30.99-16.8 59.5-34.67 83.6l17.36 17.36c22.08-28.74 36.98-63.29 41.93-100.96h-24.62zM136.66 406.38l-17.36 17.36c28.73 22.09 63.3 36.98 100.96 41.93v-24.64c-30.99-4.63-59.53-16.79-83.6-34.65zm222.53.05c-24.09 17.84-52.58 30.08-83.57 34.67v24.57c37.67-4.92 72.21-19.79 100.96-41.85l-17.31-17.39h-.08z\"],\n    \"galactic-senate\": [512, 512, [], \"f50d\", \"M249.86 33.48v26.07C236.28 80.17 226 168.14 225.39 274.9c11.74-15.62 19.13-33.33 19.13-48.24v-16.88c-.03-5.32.75-10.53 2.19-15.65.65-2.14 1.39-4.08 2.62-5.82 1.23-1.75 3.43-3.79 6.68-3.79 3.24 0 5.45 2.05 6.68 3.79 1.23 1.75 1.97 3.68 2.62 5.82 1.44 5.12 2.22 10.33 2.19 15.65v16.88c0 14.91 7.39 32.62 19.13 48.24-.63-106.76-10.91-194.73-24.49-215.35V33.48h-12.28zm-26.34 147.77c-9.52 2.15-18.7 5.19-27.46 9.08 8.9 16.12 9.76 32.64 1.71 37.29-8 4.62-21.85-4.23-31.36-19.82-11.58 8.79-21.88 19.32-30.56 31.09 14.73 9.62 22.89 22.92 18.32 30.66-4.54 7.7-20.03 7.14-35.47-.96-5.78 13.25-9.75 27.51-11.65 42.42 9.68.18 18.67 2.38 26.18 6.04 17.78-.3 32.77-1.96 40.49-4.22 5.55-26.35 23.02-48.23 46.32-59.51.73-25.55 1.88-49.67 3.48-72.07zm64.96 0c1.59 22.4 2.75 46.52 3.47 72.07 23.29 11.28 40.77 33.16 46.32 59.51 7.72 2.26 22.71 3.92 40.49 4.22 7.51-3.66 16.5-5.85 26.18-6.04-1.9-14.91-5.86-29.17-11.65-42.42-15.44 8.1-30.93 8.66-35.47.96-4.57-7.74 3.6-21.05 18.32-30.66-8.68-11.77-18.98-22.3-30.56-31.09-9.51 15.59-23.36 24.44-31.36 19.82-8.05-4.65-7.19-21.16 1.71-37.29a147.49 147.49 0 0 0-27.45-9.08zm-32.48 8.6c-3.23 0-5.86 8.81-6.09 19.93h-.05v16.88c0 41.42-49.01 95.04-93.49 95.04-52 0-122.75-1.45-156.37 29.17v2.51c9.42 17.12 20.58 33.17 33.18 47.97C45.7 380.26 84.77 360.4 141.2 360c45.68 1.02 79.03 20.33 90.76 40.87.01.01-.01.04 0 .05 7.67 2.14 15.85 3.23 24.04 3.21 8.19.02 16.37-1.07 24.04-3.21.01-.01-.01-.04 0-.05 11.74-20.54 45.08-39.85 90.76-40.87 56.43.39 95.49 20.26 108.02 41.35 12.6-14.8 23.76-30.86 33.18-47.97v-2.51c-33.61-30.62-104.37-29.17-156.37-29.17-44.48 0-93.49-53.62-93.49-95.04v-16.88h-.05c-.23-11.12-2.86-19.93-6.09-19.93zm0 96.59c22.42 0 40.6 18.18 40.6 40.6s-18.18 40.65-40.6 40.65-40.6-18.23-40.6-40.65c0-22.42 18.18-40.6 40.6-40.6zm0 7.64c-18.19 0-32.96 14.77-32.96 32.96S237.81 360 256 360s32.96-14.77 32.96-32.96-14.77-32.96-32.96-32.96zm0 6.14c14.81 0 26.82 12.01 26.82 26.82s-12.01 26.82-26.82 26.82-26.82-12.01-26.82-26.82 12.01-26.82 26.82-26.82zm-114.8 66.67c-10.19.07-21.6.36-30.5 1.66.43 4.42 1.51 18.63 7.11 29.76 9.11-2.56 18.36-3.9 27.62-3.9 41.28.94 71.48 34.35 78.26 74.47l.11 4.7c10.4 1.91 21.19 2.94 32.21 2.94 11.03 0 21.81-1.02 32.21-2.94l.11-4.7c6.78-40.12 36.98-73.53 78.26-74.47 9.26 0 18.51 1.34 27.62 3.9 5.6-11.13 6.68-25.34 7.11-29.76-8.9-1.3-20.32-1.58-30.5-1.66-18.76.42-35.19 4.17-48.61 9.67-12.54 16.03-29.16 30.03-49.58 33.07-.09.02-.17.04-.27.05-.05.01-.11.04-.16.05-5.24 1.07-10.63 1.6-16.19 1.6-5.55 0-10.95-.53-16.19-1.6-.05-.01-.11-.04-.16-.05-.1-.02-.17-.04-.27-.05-20.42-3.03-37.03-17.04-49.58-33.07-13.42-5.49-29.86-9.25-48.61-9.67z\"],\n    \"get-pocket\": [448, 512, [], \"f265\", \"M407.6 64h-367C18.5 64 0 82.5 0 104.6v135.2C0 364.5 99.7 464 224.2 464c124 0 223.8-99.5 223.8-224.2V104.6c0-22.4-17.7-40.6-40.4-40.6zm-162 268.5c-12.4 11.8-31.4 11.1-42.4 0C89.5 223.6 88.3 227.4 88.3 209.3c0-16.9 13.8-30.7 30.7-30.7 17 0 16.1 3.8 105.2 89.3 90.6-86.9 88.6-89.3 105.5-89.3 16.9 0 30.7 13.8 30.7 30.7 0 17.8-2.9 15.7-114.8 123.2z\"],\n    \"gg\": [512, 512, [], \"f260\", \"M179.2 230.4l102.4 102.4-102.4 102.4L0 256 179.2 76.8l44.8 44.8-25.6 25.6-19.2-19.2-128 128 128 128 51.5-51.5-77.1-76.5 25.6-25.6zM332.8 76.8L230.4 179.2l102.4 102.4 25.6-25.6-77.1-76.5 51.5-51.5 128 128-128 128-19.2-19.2-25.6 25.6 44.8 44.8L512 256 332.8 76.8z\"],\n    \"gg-circle\": [512, 512, [], \"f261\", \"M257 8C120 8 9 119 9 256s111 248 248 248 248-111 248-248S394 8 257 8zm-49.5 374.8L81.8 257.1l125.7-125.7 35.2 35.4-24.2 24.2-11.1-11.1-77.2 77.2 77.2 77.2 26.6-26.6-53.1-52.9 24.4-24.4 77.2 77.2-75 75.2zm99-2.2l-35.2-35.2 24.1-24.4 11.1 11.1 77.2-77.2-77.2-77.2-26.5 26.5 53.1 52.9-24.4 24.4-77.2-77.2 75-75L432.2 255 306.5 380.6z\"],\n    \"git\": [448, 512, [], \"f1d3\", \"M18.8 221.7c0 25.3 16.2 60 41.5 68.5v1c-18.8 8.3-24 50.6 1 65.8v1C34 367 16 384.3 16 414.2c0 51.5 48.8 65.8 91.5 65.8 52 0 90.7-18.7 90.7-76 0-70.5-101-44.5-101-82.8 0-13.5 7.2-18.7 19.7-21.3 41.5-7.7 67.5-40 67.5-82.2 0-7.3-1.5-14.2-4-21 6.7-1.5 13.2-3.3 19.7-5.5v-50.5c-17.2 6.8-35.7 11.8-54.5 11.8-53.8-31-126.8 1.3-126.8 69.2zm87.7 163.8c17 0 41.2 3 41.2 25 0 21.8-19.5 26.3-37.7 26.3-17.3 0-43.3-2.7-43.3-25.2.1-22.3 22.1-26.1 39.8-26.1zM103.3 256c-22 0-31.3-13-31.3-33.8 0-49.3 61-48.8 61-.5 0 20.3-8 34.3-29.7 34.3zM432 305.5v49c-13.3 7.3-30.5 9.8-45.5 9.8-53.5 0-59.8-42.2-59.8-85.7v-87.7h.5v-1c-7 0-7.3-1.6-24 1v-47.5h24c0-22.3.3-31-1.5-41.2h56.7c-2 13.8-1.5 27.5-1.5 41.2h51v47.5s-19.3-1-51-1V281c0 14.8 3.3 32.8 21.8 32.8 9.8 0 21.3-2.8 29.3-8.3zM286 68.7c0 18.7-14.5 36.2-33.8 36.2-19.8 0-34.5-17.2-34.5-36.2 0-19.3 14.5-36.7 34.5-36.7C272 32 286 50 286 68.7zm-6.2 74.5c-1.8 14.6-1.6 199.8 0 217.8h-55.5c1.6-18.1 1.8-203 0-217.8h55.5z\"],\n    \"git-square\": [448, 512, [], \"f1d2\", \"M140.1 348.5c12.1 0 29.5 2.1 29.5 17.9 0 15.5-13.9 18.8-27 18.8-12.3 0-30.9-2-30.9-18s15.7-18.7 28.4-18.7zm-24.7-116.6c0 14.8 6.6 24.1 22.3 24.1 15.5 0 21.2-10 21.2-24.5.1-34.4-43.5-34.8-43.5.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-241 93.7c-12.3 4.8-25.5 8.4-38.9 8.4-38.5-22.1-90.7.9-90.7 49.5 0 18 11.6 42.9 29.6 48.9v.7c-13.4 5.9-17.1 36.1.7 47v.7c-19.5 6.4-32.3 18.8-32.3 40.2 0 36.8 34.8 47 65.4 47 37.1 0 64.8-13.4 64.8-54.3 0-50.4-72.1-31.8-72.1-59.1 0-9.6 5.2-13.4 14.1-15.2 29.6-5.5 48.2-28.6 48.2-58.7 0-5.2-1.1-10.2-2.9-15 4.8-1.1 9.5-2.3 14.1-3.9v-36.2zm56.8 1.8h-39.6c1.3 10.6 1.1 142.6 0 155.5h39.6c-1.1-12.8-1.2-145.1 0-155.5zm4.5-53.3c0-13.4-10-26.2-24.1-26.2-14.3 0-24.6 12.5-24.6 26.2 0 13.6 10.5 25.9 24.6 25.9 13.7 0 24.1-12.5 24.1-25.9zm104.3 53.3h-36.4c0-9.8-.4-19.6 1.1-29.5h-40.5c1.3 7.3 1.1 13.6 1.1 29.5h-17.1v33.9c11.9-1.9 12.1-.7 17.1-.7v.7h-.4v62.7c0 31.1 4.5 61.2 42.7 61.2 10.7 0 23-1.8 32.5-7v-35c-5.7 3.9-13.9 5.9-20.9 5.9-13.2 0-15.5-12.9-15.5-23.4v-65.2c22.7 0 36.4.7 36.4.7v-33.8z\"],\n    \"github\": [496, 512, [], \"f09b\", \"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"],\n    \"github-alt\": [480, 512, [], \"f113\", \"M186.1 328.7c0 20.9-10.9 55.1-36.7 55.1s-36.7-34.2-36.7-55.1 10.9-55.1 36.7-55.1 36.7 34.2 36.7 55.1zM480 278.2c0 31.9-3.2 65.7-17.5 95-37.9 76.6-142.1 74.8-216.7 74.8-75.8 0-186.2 2.7-225.6-74.8-14.6-29-20.2-63.1-20.2-95 0-41.9 13.9-81.5 41.5-113.6-5.2-15.8-7.7-32.4-7.7-48.8 0-21.5 4.9-32.3 14.6-51.8 45.3 0 74.3 9 108.8 36 29-6.9 58.8-10 88.7-10 27 0 54.2 2.9 80.4 9.2 34-26.7 63-35.2 107.8-35.2 9.8 19.5 14.6 30.3 14.6 51.8 0 16.4-2.6 32.7-7.7 48.2 27.5 32.4 39 72.3 39 114.2zm-64.3 50.5c0-43.9-26.7-82.6-73.5-82.6-18.9 0-37 3.4-56 6-14.9 2.3-29.8 3.2-45.1 3.2-15.2 0-30.1-.9-45.1-3.2-18.7-2.6-37-6-56-6-46.8 0-73.5 38.7-73.5 82.6 0 87.8 80.4 101.3 150.4 101.3h48.2c70.3 0 150.6-13.4 150.6-101.3zm-82.6-55.1c-25.8 0-36.7 34.2-36.7 55.1s10.9 55.1 36.7 55.1 36.7-34.2 36.7-55.1-10.9-55.1-36.7-55.1z\"],\n    \"github-square\": [448, 512, [], \"f092\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM277.3 415.7c-8.4 1.5-11.5-3.7-11.5-8 0-5.4.2-33 .2-55.3 0-15.6-5.2-25.5-11.3-30.7 37-4.1 76-9.2 76-73.1 0-18.2-6.5-27.3-17.1-39 1.7-4.3 7.4-22-1.7-45-13.9-4.3-45.7 17.9-45.7 17.9-13.2-3.7-27.5-5.6-41.6-5.6-14.1 0-28.4 1.9-41.6 5.6 0 0-31.8-22.2-45.7-17.9-9.1 22.9-3.5 40.6-1.7 45-10.6 11.7-15.6 20.8-15.6 39 0 63.6 37.3 69 74.3 73.1-4.8 4.3-9.1 11.7-10.6 22.3-9.5 4.3-33.8 11.7-48.3-13.9-9.1-15.8-25.5-17.1-25.5-17.1-16.2-.2-1.1 10.2-1.1 10.2 10.8 5 18.4 24.2 18.4 24.2 9.7 29.7 56.1 19.7 56.1 19.7 0 13.9.2 36.5.2 40.6 0 4.3-3 9.5-11.5 8-66-22.1-112.2-84.9-112.2-158.3 0-91.8 70.2-161.5 162-161.5S388 165.6 388 257.4c.1 73.4-44.7 136.3-110.7 158.3zm-98.1-61.1c-1.9.4-3.7-.4-3.9-1.7-.2-1.5 1.1-2.8 3-3.2 1.9-.2 3.7.6 3.9 1.9.3 1.3-1 2.6-3 3zm-9.5-.9c0 1.3-1.5 2.4-3.5 2.4-2.2.2-3.7-.9-3.7-2.4 0-1.3 1.5-2.4 3.5-2.4 1.9-.2 3.7.9 3.7 2.4zm-13.7-1.1c-.4 1.3-2.4 1.9-4.1 1.3-1.9-.4-3.2-1.9-2.8-3.2.4-1.3 2.4-1.9 4.1-1.5 2 .6 3.3 2.1 2.8 3.4zm-12.3-5.4c-.9 1.1-2.8.9-4.3-.6-1.5-1.3-1.9-3.2-.9-4.1.9-1.1 2.8-.9 4.3.6 1.3 1.3 1.8 3.3.9 4.1zm-9.1-9.1c-.9.6-2.6 0-3.7-1.5s-1.1-3.2 0-3.9c1.1-.9 2.8-.2 3.7 1.3 1.1 1.5 1.1 3.3 0 4.1zm-6.5-9.7c-.9.9-2.4.4-3.5-.6-1.1-1.3-1.3-2.8-.4-3.5.9-.9 2.4-.4 3.5.6 1.1 1.3 1.3 2.8.4 3.5zm-6.7-7.4c-.4.9-1.7 1.1-2.8.4-1.3-.6-1.9-1.7-1.5-2.6.4-.6 1.5-.9 2.8-.4 1.3.7 1.9 1.8 1.5 2.6z\"],\n    \"gitkraken\": [592, 512, [], \"f3a6\", \"M565.7 118.1c-2.3-6.1-9.3-9.2-15.3-6.6-5.7 2.4-8.5 8.9-6.3 14.6 10.9 29 16.9 60.5 16.9 93.3 0 134.6-100.3 245.7-230.2 262.7V358.4c7.9-1.5 15.5-3.6 23-6.2v104c106.7-25.9 185.9-122.1 185.9-236.8 0-91.8-50.8-171.8-125.8-213.3-5.7-3.2-13-.9-15.9 5-2.7 5.5-.6 12.2 4.7 15.1 67.9 37.6 113.9 110 113.9 193.2 0 93.3-57.9 173.1-139.8 205.4v-92.2c14.2-4.5 24.9-17.7 24.9-33.5 0-13.1-6.8-24.4-17.3-30.5 8.3-79.5 44.5-58.6 44.5-83.9V170c0-38-87.9-161.8-129-164.7-2.5-.2-5-.2-7.6 0C251.1 8.3 163.2 132 163.2 170v14.8c0 25.3 36.3 4.3 44.5 83.9-10.6 6.1-17.3 17.4-17.3 30.5 0 15.8 10.6 29 24.8 33.5v92.2c-81.9-32.2-139.8-112-139.8-205.4 0-83.1 46-155.5 113.9-193.2 5.4-3 7.4-9.6 4.7-15.1-2.9-5.9-10.1-8.2-15.9-5-75 41.5-125.8 121.5-125.8 213.3 0 114.7 79.2 210.8 185.9 236.8v-104c7.6 2.5 15.1 4.6 23 6.2v123.7C131.4 465.2 31 354.1 31 219.5c0-32.8 6-64.3 16.9-93.3 2.2-5.8-.6-12.2-6.3-14.6-6-2.6-13 .4-15.3 6.6C14.5 149.7 8 183.8 8 219.5c0 155.1 122.6 281.6 276.3 287.8V361.4c6.8.4 15 .5 23.4 0v145.8C461.4 501.1 584 374.6 584 219.5c0-35.7-6.5-69.8-18.3-101.4zM365.9 275.5c13 0 23.7 10.5 23.7 23.7 0 13.1-10.6 23.7-23.7 23.7-13 0-23.7-10.5-23.7-23.7 0-13.1 10.6-23.7 23.7-23.7zm-139.8 47.3c-13.2 0-23.7-10.7-23.7-23.7s10.5-23.7 23.7-23.7c13.1 0 23.7 10.6 23.7 23.7 0 13-10.5 23.7-23.7 23.7z\"],\n    \"gitlab\": [512, 512, [], \"f296\", \"M105.2 24.9c-3.1-8.9-15.7-8.9-18.9 0L29.8 199.7h132c-.1 0-56.6-174.8-56.6-174.8zM.9 287.7c-2.6 8 .3 16.9 7.1 22l247.9 184-226.2-294zm160.8-88l94.3 294 94.3-294zm349.4 88l-28.8-88-226.3 294 247.9-184c6.9-5.1 9.7-14 7.2-22zM425.7 24.9c-3.1-8.9-15.7-8.9-18.9 0l-56.6 174.8h132z\"],\n    \"gitter\": [384, 512, [], \"f426\", \"M66.4 322.5H16V0h50.4v322.5zM166.9 76.1h-50.4V512h50.4V76.1zm100.6 0h-50.4V512h50.4V76.1zM368 76h-50.4v247H368V76z\"],\n    \"glide\": [448, 512, [], \"f2a5\", \"M252.8 148.6c0 8.8-1.6 17.7-3.4 26.4-5.8 27.8-11.6 55.8-17.3 83.6-1.4 6.3-8.3 4.9-13.7 4.9-23.8 0-30.5-26-30.5-45.5 0-29.3 11.2-68.1 38.5-83.1 4.3-2.5 9.2-4.2 14.1-4.2 11.4 0 12.3 8.3 12.3 17.9zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-64 187c0-5.1-20.8-37.7-25.5-39.5-2.2-.9-7.2-2.3-9.6-2.3-23.1 0-38.7 10.5-58.2 21.5l-.5-.5c4.3-29.4 14.6-57.2 14.6-87.4 0-44.6-23.8-62.7-67.5-62.7-71.7 0-108 70.8-108 123.5 0 54.7 32 85 86.3 85 7.5 0 6.9-.6 6.9 2.3-10.5 80.3-56.5 82.9-56.5 58.9 0-24.4 28-36.5 28.3-38-.2-7.6-29.3-17.2-36.7-17.2-21.1 0-32.7 33-32.7 50.6 0 32.3 20.4 54.7 53.3 54.7 48.2 0 83.4-49.7 94.3-91.7 9.4-37.7 7-39.4 12.3-42.1 20-10.1 35.8-16.8 58.4-16.8 11.1 0 19 2.3 36.7 5.2 1.8.1 4.1-1.7 4.1-3.5z\"],\n    \"glide-g\": [448, 512, [], \"f2a6\", \"M407.1 211.2c-3.5-1.4-11.6-3.8-15.4-3.8-37.1 0-62.2 16.8-93.5 34.5l-.9-.9c7-47.3 23.5-91.9 23.5-140.4C320.8 29.1 282.6 0 212.4 0 97.3 0 39 113.7 39 198.4 39 286.3 90.3 335 177.6 335c12 0 11-1 11 3.8-16.9 128.9-90.8 133.1-90.8 94.6 0-39.2 45-58.6 45.5-61-.3-12.2-47-27.6-58.9-27.6-33.9.1-52.4 51.2-52.4 79.3C32 476 64.8 512 117.5 512c77.4 0 134-77.8 151.4-145.4 15.1-60.5 11.2-63.3 19.7-67.6 32.2-16.2 57.5-27 93.8-27 17.8 0 30.5 3.7 58.9 8.4 2.9 0 6.7-2.9 6.7-5.8 0-8-33.4-60.5-40.9-63.4zm-175.3-84.4c-9.3 44.7-18.6 89.6-27.8 134.3-2.3 10.2-13.3 7.8-22 7.8-38.3 0-49-41.8-49-73.1 0-47 18-109.3 61.8-133.4 7-4.1 14.8-6.7 22.6-6.7 18.6 0 20 13.3 20 28.7-.1 14.3-2.7 28.5-5.6 42.4z\"],\n    \"gofore\": [400, 512, [], \"f3a7\", \"M324 319.8h-13.2v34.7c-24.5 23.1-56.3 35.8-89.9 35.8-73.2 0-132.4-60.2-132.4-134.4 0-74.1 59.2-134.4 132.4-134.4 35.3 0 68.6 14 93.6 39.4l62.3-63.3C335 55.3 279.7 32 220.7 32 98 32 0 132.6 0 256c0 122.5 97 224 220.7 224 63.2 0 124.5-26.2 171-82.5-2-27.6-13.4-77.7-67.7-77.7zm-12.1-112.5H205.6v89H324c33.5 0 60.5 15.1 76 41.8v-30.6c0-65.2-40.4-100.2-88.1-100.2z\"],\n    \"goodreads\": [448, 512, [], \"f3a8\", \"M299.9 191.2c5.1 37.3-4.7 79-35.9 100.7-22.3 15.5-52.8 14.1-70.8 5.7-37.1-17.3-49.5-58.6-46.8-97.2 4.3-60.9 40.9-87.9 75.3-87.5 46.9-.2 71.8 31.8 78.2 78.3zM448 88v336c0 30.9-25.1 56-56 56H56c-30.9 0-56-25.1-56-56V88c0-30.9 25.1-56 56-56h336c30.9 0 56 25.1 56 56zM330 313.2s-.1-34-.1-217.3h-29v40.3c-.8.3-1.2-.5-1.6-1.2-9.6-20.7-35.9-46.3-76-46-51.9.4-87.2 31.2-100.6 77.8-4.3 14.9-5.8 30.1-5.5 45.6 1.7 77.9 45.1 117.8 112.4 115.2 28.9-1.1 54.5-17 69-45.2.5-1 1.1-1.9 1.7-2.9.2.1.4.1.6.2.3 3.8.2 30.7.1 34.5-.2 14.8-2 29.5-7.2 43.5-7.8 21-22.3 34.7-44.5 39.5-17.8 3.9-35.6 3.8-53.2-1.2-21.5-6.1-36.5-19-41.1-41.8-.3-1.6-1.3-1.3-2.3-1.3h-26.8c.8 10.6 3.2 20.3 8.5 29.2 24.2 40.5 82.7 48.5 128.2 37.4 49.9-12.3 67.3-54.9 67.4-106.3z\"],\n    \"goodreads-g\": [384, 512, [], \"f3a9\", \"M42.6 403.3h2.8c12.7 0 25.5 0 38.2.1 1.6 0 3.1-.4 3.6 2.1 7.1 34.9 30 54.6 62.9 63.9 26.9 7.6 54.1 7.8 81.3 1.8 33.8-7.4 56-28.3 68-60.4 8-21.5 10.7-43.8 11-66.5.1-5.8.3-47-.2-52.8l-.9-.3c-.8 1.5-1.7 2.9-2.5 4.4-22.1 43.1-61.3 67.4-105.4 69.1-103 4-169.4-57-172-176.2-.5-23.7 1.8-46.9 8.3-69.7C58.3 47.7 112.3.6 191.6 0c61.3-.4 101.5 38.7 116.2 70.3.5 1.1 1.3 2.3 2.4 1.9V10.6h44.3c0 280.3.1 332.2.1 332.2-.1 78.5-26.7 143.7-103 162.2-69.5 16.9-159 4.8-196-57.2-8-13.5-11.8-28.3-13-44.5zM188.9 36.5c-52.5-.5-108.5 40.7-115 133.8-4.1 59 14.8 122.2 71.5 148.6 27.6 12.9 74.3 15 108.3-8.7 47.6-33.2 62.7-97 54.8-154-9.7-71.1-47.8-120-119.6-119.7z\"],\n    \"google\": [488, 512, [], \"f1a0\", \"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\"],\n    \"google-drive\": [512, 512, [], \"f3aa\", \"M339 314.9L175.4 32h161.2l163.6 282.9H339zm-137.5 23.6L120.9 480h310.5L512 338.5H201.5zM154.1 67.4L0 338.5 80.6 480 237 208.8 154.1 67.4z\"],\n    \"google-play\": [512, 512, [], \"f3ab\", \"M325.3 234.3L104.6 13l280.8 161.2-60.1 60.1zM47 0C34 6.8 25.3 19.2 25.3 35.3v441.3c0 16.1 8.7 28.5 21.7 35.3l256.6-256L47 0zm425.2 225.6l-58.9-34.1-65.7 64.5 65.7 64.5 60.1-34.1c18-14.3 18-46.5-1.2-60.8zM104.6 499l280.8-161.2-60.1-60.1L104.6 499z\"],\n    \"google-plus\": [496, 512, [], \"f2b3\", \"M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm-70.7 372c-68.8 0-124-55.5-124-124s55.2-124 124-124c31.3 0 60.1 11 83 32.3l-33.6 32.6c-13.2-12.9-31.3-19.1-49.4-19.1-42.9 0-77.2 35.5-77.2 78.1s34.2 78.1 77.2 78.1c32.6 0 64.9-19.1 70.1-53.3h-70.1v-42.6h116.9c1.3 6.8 1.9 13.6 1.9 20.7 0 70.8-47.5 121.2-118.8 121.2zm230.2-106.2v35.5H372v-35.5h-35.5v-35.5H372v-35.5h35.5v35.5h35.2v35.5h-35.2z\"],\n    \"google-plus-g\": [640, 512, [], \"f0d5\", \"M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z\"],\n    \"google-plus-square\": [448, 512, [], \"f0d4\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM164 356c-55.3 0-100-44.7-100-100s44.7-100 100-100c27 0 49.5 9.8 67 26.2l-27.1 26.1c-7.4-7.1-20.3-15.4-39.8-15.4-34.1 0-61.9 28.2-61.9 63.2 0 34.9 27.8 63.2 61.9 63.2 39.6 0 54.4-28.5 56.8-43.1H164v-34.4h94.4c1 5 1.6 10.1 1.6 16.6 0 57.1-38.3 97.6-96 97.6zm220-81.8h-29v29h-29.2v-29h-29V245h29v-29H355v29h29v29.2z\"],\n    \"google-wallet\": [448, 512, [], \"f1ee\", \"M156.8 126.8c37.6 60.6 64.2 113.1 84.3 162.5-8.3 33.8-18.8 66.5-31.3 98.3-13.2-52.3-26.5-101.3-56-148.5 6.5-36.4 2.3-73.6 3-112.3zM109.3 200H16.1c-6.5 0-10.5 7.5-6.5 12.7C51.8 267 81.3 330.5 101.3 400h103.5c-16.2-69.7-38.7-133.7-82.5-193.5-3-4-8-6.5-13-6.5zm47.8-88c68.5 108 130 234.5 138.2 368H409c-12-138-68.4-265-143.2-368H157.1zm251.8-68.5c-1.8-6.8-8.2-11.5-15.2-11.5h-88.3c-5.3 0-9 5-7.8 10.3 13.2 46.5 22.3 95.5 26.5 146 48.2 86.2 79.7 178.3 90.6 270.8 15.8-60.5 25.3-133.5 25.3-203 0-73.6-12.1-145.1-31.1-212.6z\"],\n    \"gratipay\": [496, 512, [], \"f184\", \"M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm114.6 226.4l-113 152.7-112.7-152.7c-8.7-11.9-19.1-50.4 13.6-72 28.1-18.1 54.6-4.2 68.5 11.9 15.9 17.9 46.6 16.9 61.7 0 13.9-16.1 40.4-30 68.1-11.9 32.9 21.6 22.6 60 13.8 72z\"],\n    \"grav\": [512, 512, [], \"f2d6\", \"M301.1 212c4.4 4.4 4.4 11.9 0 16.3l-9.7 9.7c-4.4 4.7-11.9 4.7-16.6 0l-10.5-10.5c-4.4-4.7-4.4-11.9 0-16.6l9.7-9.7c4.4-4.4 11.9-4.4 16.6 0l10.5 10.8zm-30.2-19.7c3-3 3-7.8 0-10.5-2.8-3-7.5-3-10.5 0-2.8 2.8-2.8 7.5 0 10.5 3.1 2.8 7.8 2.8 10.5 0zm-26 5.3c-3 2.8-3 7.5 0 10.2 2.8 3 7.5 3 10.5 0 2.8-2.8 2.8-7.5 0-10.2-3-3-7.7-3-10.5 0zm72.5-13.3c-19.9-14.4-33.8-43.2-11.9-68.1 21.6-24.9 40.7-17.2 59.8.8 11.9 11.3 29.3 24.9 17.2 48.2-12.5 23.5-45.1 33.2-65.1 19.1zm47.7-44.5c-8.9-10-23.3 6.9-15.5 16.1 7.4 9 32.1 2.4 15.5-16.1zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-66.2 42.6c2.5-16.1-20.2-16.6-25.2-25.7-13.6-24.1-27.7-36.8-54.5-30.4 11.6-8 23.5-6.1 23.5-6.1.3-6.4 0-13-9.4-24.9 3.9-12.5.3-22.4.3-22.4 15.5-8.6 26.8-24.4 29.1-43.2 3.6-31-18.8-59.2-49.8-62.8-22.1-2.5-43.7 7.7-54.3 25.7-23.2 40.1 1.4 70.9 22.4 81.4-14.4-1.4-34.3-11.9-40.1-34.3-6.6-25.7 2.8-49.8 8.9-61.4 0 0-4.4-5.8-8-8.9 0 0-13.8 0-24.6 5.3 11.9-15.2 25.2-14.4 25.2-14.4 0-6.4-.6-14.9-3.6-21.6-5.4-11-23.8-12.9-31.7 2.8.1-.2.3-.4.4-.5-5 11.9-1.1 55.9 16.9 87.2-2.5 1.4-9.1 6.1-13 10-21.6 9.7-56.2 60.3-56.2 60.3-28.2 10.8-77.2 50.9-70.6 79.7.3 3 1.4 5.5 3 7.5-2.8 2.2-5.5 5-8.3 8.3-11.9 13.8-5.3 35.2 17.7 24.4 15.8-7.2 29.6-20.2 36.3-30.4 0 0-5.5-5-16.3-4.4 27.7-6.6 34.3-9.4 46.2-9.1 8 3.9 8-34.3 8-34.3 0-14.7-2.2-31-11.1-41.5 12.5 12.2 29.1 32.7 28 60.6-.8 18.3-15.2 23-15.2 23-9.1 16.6-43.2 65.9-30.4 106 0 0-9.7-14.9-10.2-22.1-17.4 19.4-46.5 52.3-24.6 64.5 26.6 14.7 108.8-88.6 126.2-142.3 34.6-20.8 55.4-47.3 63.9-65 22 43.5 95.3 94.5 101.1 59z\"],\n    \"gripfire\": [384, 512, [], \"f3ac\", \"M112.5 301.4c0-73.8 105.1-122.5 105.1-203 0-47.1-34-88-39.1-90.4.4 3.3.6 6.7.6 10C179.1 110.1 32 171.9 32 286.6c0 49.8 32.2 79.2 66.5 108.3 65.1 46.7 78.1 71.4 78.1 86.6 0 10.1-4.8 17-4.8 22.3 13.1-16.7 17.4-31.9 17.5-46.4 0-29.6-21.7-56.3-44.2-86.5-16-22.3-32.6-42.6-32.6-69.5zm205.3-39c-12.1-66.8-78-124.4-94.7-130.9l4 7.2c2.4 5.1 3.4 10.9 3.4 17.1 0 44.7-54.2 111.2-56.6 116.7-2.2 5.1-3.2 10.5-3.2 15.8 0 20.1 15.2 42.1 17.9 42.1 2.4 0 56.6-55.4 58.1-87.7 6.4 11.7 9.1 22.6 9.1 33.4 0 41.2-41.8 96.9-41.8 96.9 0 11.6 31.9 53.2 35.5 53.2 1 0 2.2-1.4 3.2-2.4 37.9-39.3 67.3-85 67.3-136.8 0-8-.7-16.2-2.2-24.6z\"],\n    \"grunt\": [384, 512, [], \"f3ad\", \"M61.3 189.3c-1.1 10 5.2 19.1 5.2 19.1.7-7.5 2.2-12.8 4-16.6.4 10.3 3.2 23.5 12.8 34.1 6.9 7.6 35.6 23.3 54.9 6.1 1 2.4 2.1 5.3 3 8.5 2.9 10.3-2.7 25.3-2.7 25.3s15.1-17.1 13.9-32.5c10.8-.5 21.4-8.4 21.1-19.5 0 0-18.9 10.4-35.5-8.8-9.7-11.2-40.9-42-83.1-31.8 4.3 1 8.9 2.4 13.5 4.1h-.1c-4.2 2-6.5 7.1-7 12zm28.3-1.8c19.5 11 37.4 25.7 44.9 37-5.7 3.3-21.7 10.4-38-1.7-10.3-7.6-9.8-26.2-6.9-35.3zm142.1 45.8c-1.2 15.5 13.9 32.5 13.9 32.5s-5.6-15-2.7-25.3c.9-3.2 2-6 3-8.5 19.3 17.3 48 1.5 54.8-6.1 9.6-10.6 12.3-23.8 12.8-34.1 1.8 3.8 3.4 9.1 4 16.6 0 0 6.4-9.1 5.2-19.1-.6-5-2.9-10-7-11.8h-.1c4.6-1.8 9.2-3.2 13.5-4.1-42.3-10.2-73.4 20.6-83.1 31.8-16.7 19.2-35.5 8.8-35.5 8.8-.2 10.9 10.4 18.9 21.2 19.3zm62.7-45.8c3 9.1 3.4 27.7-7 35.4-16.3 12.1-32.2 5-37.9 1.6 7.5-11.4 25.4-26 44.9-37zM160 418.5h-29.4c-5.5 0-8.2 1.6-9.5 2.9-1.9 2-2.2 4.7-.9 8.1 3.5 9.1 11.4 16.5 13.7 18.6 3.1 2.7 7.5 4.3 11.8 4.3 4.4 0 8.3-1.7 11-4.6 7.5-8.2 11.9-17.1 13-19.8.6-1.5 1.3-4.5-.9-6.8-1.8-1.8-4.7-2.7-8.8-2.7zm189.2-101.2c-2.4 17.9-13 33.8-24.6 43.7-3.1-22.7-3.7-55.5-3.7-62.4 0-14.7 9.5-24.5 12.2-26.1 2.5-1.5 5.4-3 8.3-4.6 18-9.6 40.4-21.6 40.4-43.7 0-16.2-9.3-23.2-15.4-27.8-.8-.6-1.5-1.1-2.2-1.7-2.1-1.7-3.7-3-4.3-4.4-4.4-9.8-3.6-34.2-1.7-37.6.6-.6 16.7-20.9 11.8-39.2-2-7.4-6.9-13.3-14.1-17-5.3-2.7-11.9-4.2-19.5-4.5-.1-2-.5-3.9-.9-5.9-.6-2.6-1.1-5.3-.9-8.1.4-4.7.8-9 2.2-11.3 8.4-13.3 28.8-17.6 29-17.6l12.3-2.4-8.1-9.5c-.1-.2-17.3-17.5-46.3-17.5-7.9 0-16 1.3-24.1 3.9-24.2 7.8-42.9 30.5-49.4 39.3-3.1-1-6.3-1.9-9.6-2.7-4.2-15.8 9-38.5 9-38.5s-13.6-3-33.7 15.2c-2.6-6.5-8.1-20.5-1.8-37.2C184.6 10.1 177.2 26 175 40.4c-7.6-5.4-6.7-23.1-7.2-27.6-7.5.9-29.2 21.9-28.2 48.3-2 .5-3.9 1.1-5.9 1.7-6.5-8.8-25.1-31.5-49.4-39.3-7.9-2.2-16-3.5-23.9-3.5-29 0-46.1 17.3-46.3 17.5L6 46.9l12.3 2.4c.2 0 20.6 4.3 29 17.6 1.4 2.2 1.8 6.6 2.2 11.3.2 2.8-.4 5.5-.9 8.1-.4 1.9-.8 3.9-.9 5.9-7.7.3-14.2 1.8-19.5 4.5-7.2 3.7-12.1 9.6-14.1 17-5 18.2 11.2 38.5 11.8 39.2 1.9 3.4 2.7 27.8-1.7 37.6-.6 1.4-2.2 2.7-4.3 4.4-.7.5-1.4 1.1-2.2 1.7-6.1 4.6-15.4 11.7-15.4 27.8 0 22.1 22.4 34.1 40.4 43.7 3 1.6 5.8 3.1 8.3 4.6 2.7 1.6 12.2 11.4 12.2 26.1 0 6.9-.6 39.7-3.7 62.4-11.6-9.9-22.2-25.9-24.6-43.8 0 0-29.2 22.6-20.6 70.8 5.2 29.5 23.2 46.1 47 54.7 8.8 19.1 29.4 45.7 67.3 49.6C143 504.3 163 512 192.2 512h.2c29.1 0 49.1-7.7 63.6-19.5 37.9-3.9 58.5-30.5 67.3-49.6 23.8-8.7 41.7-25.2 47-54.7 8.2-48.4-21.1-70.9-21.1-70.9zM305.7 37.7c5.6-1.8 11.6-2.7 17.7-2.7 11 0 19.9 3 24.7 5-3.1 1.4-6.4 3.2-9.7 5.3-2.4-.4-5.6-.8-9.2-.8-10.5 0-20.5 3.1-28.7 8.9-12.3 8.7-18 16.9-20.7 22.4-2.2-1.3-4.5-2.5-7.1-3.7-1.6-.8-3.1-1.5-4.7-2.2 6.1-9.1 19.9-26.5 37.7-32.2zm21 18.2c-.8 1-1.6 2.1-2.3 3.2-3.3 5.2-3.9 11.6-4.4 17.8-.5 6.4-1.1 12.5-4.4 17-4.2.8-8.1 1.7-11.5 2.7-2.3-3.1-5.6-7-10.5-11.2 1.4-4.8 5.5-16.1 13.5-22.5 5.6-4.3 12.2-6.7 19.6-7zM45.6 45.3c-3.3-2.2-6.6-4-9.7-5.3 4.8-2 13.7-5 24.7-5 6.1 0 12 .9 17.7 2.7 17.8 5.8 31.6 23.2 37.7 32.1-1.6.7-3.2 1.4-4.8 2.2-2.5 1.2-4.9 2.5-7.1 3.7-2.6-5.4-8.3-13.7-20.7-22.4-8.3-5.8-18.2-8.9-28.8-8.9-3.4.1-6.6.5-9 .9zm44.7 40.1c-4.9 4.2-8.3 8-10.5 11.2-3.4-.9-7.3-1.9-11.5-2.7C65 89.5 64.5 83.4 64 77c-.5-6.2-1.1-12.6-4.4-17.8-.7-1.1-1.5-2.2-2.3-3.2 7.4.3 14 2.6 19.5 7 8 6.3 12.1 17.6 13.5 22.4zM58.1 259.9c-2.7-1.6-5.6-3.1-8.4-4.6-14.9-8-30.2-16.3-30.2-30.5 0-11.1 4.3-14.6 8.9-18.2l.5-.4c.7-.6 1.4-1.2 2.2-1.8-.9 7.2-1.9 13.3-2.7 14.9 0 0 12.1-15 15.7-44.3 1.4-11.5-1.1-34.3-5.1-43 .2 4.9 0 9.8-.3 14.4-.4-.8-.8-1.6-1.3-2.2-3.2-4-11.8-17.5-9.4-26.6.9-3.5 3.1-6 6.7-7.8 3.8-1.9 8.8-2.9 15.1-2.9 12.3 0 25.9 3.7 32.9 6 25.1 8 55.4 30.9 64.1 37.7.2.2.4.3.4.3l5.6 3.9-3.5-5.8c-.2-.3-19.1-31.4-53.2-46.5 2-2.9 7.4-8.1 21.6-15.1 21.4-10.5 46.5-15.8 74.3-15.8 27.9 0 52.9 5.3 74.3 15.8 14.2 6.9 19.6 12.2 21.6 15.1-34 15.1-52.9 46.2-53.1 46.5l-3.5 5.8 5.6-3.9s.2-.1.4-.3c8.7-6.8 39-29.8 64.1-37.7 7-2.2 20.6-6 32.9-6 6.3 0 11.3 1 15.1 2.9 3.5 1.8 5.7 4.4 6.7 7.8 2.5 9.1-6.1 22.6-9.4 26.6-.5.6-.9 1.3-1.3 2.2-.3-4.6-.5-9.5-.3-14.4-4 8.8-6.5 31.5-5.1 43 3.6 29.3 15.7 44.3 15.7 44.3-.8-1.6-1.8-7.7-2.7-14.9.7.6 1.5 1.2 2.2 1.8l.5.4c4.6 3.7 8.9 7.1 8.9 18.2 0 14.2-15.4 22.5-30.2 30.5-2.9 1.5-5.7 3.1-8.4 4.6-8.7 5-18 16.7-19.1 34.2-.9 14.6.9 49.9 3.4 75.9-12.4 4.8-26.7 6.4-39.7 6.8-2-4.1-3.9-8.5-5.5-13.1-.7-2-19.6-51.1-26.4-62.2 5.5 39 17.5 73.7 23.5 89.6-3.5-.5-7.3-.7-11.7-.7h-117c-4.4 0-8.3.3-11.7.7 6-15.9 18.1-50.6 23.5-89.6-6.8 11.2-25.7 60.3-26.4 62.2-1.6 4.6-3.5 9-5.5 13.1-13-.4-27.2-2-39.7-6.8 2.5-26 4.3-61.2 3.4-75.9-.9-17.4-10.3-29.2-19-34.2zM34.8 404.6c-12.1-20-8.7-54.1-3.7-59.1 10.9 34.4 47.2 44.3 74.4 45.4-2.7 4.2-5.2 7.6-7 10l-1.4 1.4c-7.2 7.8-8.6 18.5-4.1 31.8-22.7-.1-46.3-9.8-58.2-29.5zm45.7 43.5c6 1.1 12.2 1.9 18.6 2.4 3.5 8 7.4 15.9 12.3 23.1-14.4-5.9-24.4-16-30.9-25.5zM192 498.2c-60.6-.1-78.3-45.8-84.9-64.7-3.7-10.5-3.4-18.2.9-23.1 2.9-3.3 9.5-7.2 24.6-7.2h118.8c15.1 0 21.8 3.9 24.6 7.2 4.2 4.8 4.5 12.6.9 23.1-6.6 18.8-24.3 64.6-84.9 64.7zm80.6-24.6c4.9-7.2 8.8-15.1 12.3-23.1 6.4-.5 12.6-1.3 18.6-2.4-6.5 9.5-16.5 19.6-30.9 25.5zm76.6-69c-12 19.7-35.6 29.3-58.1 29.7 4.5-13.3 3.1-24.1-4.1-31.8-.4-.5-.9-1-1.4-1.5-1.8-2.4-4.3-5.8-7-10 27.2-1.2 63.5-11 74.4-45.4 5 5 8.4 39.1-3.8 59zM191.9 187.7h.2c12.7-.1 27.2-17.8 27.2-17.8-9.9 6-18.8 8.1-27.3 8.3-8.5-.2-17.4-2.3-27.3-8.3 0 0 14.5 17.6 27.2 17.8zm61.7 230.7h-29.4c-4.2 0-7.2.9-8.9 2.7-2.2 2.3-1.5 5.2-.9 6.7 1 2.6 5.5 11.3 13 19.3 2.7 2.9 6.6 4.5 11 4.5s8.7-1.6 11.8-4.2c2.3-2 10.2-9.2 13.7-18.1 1.3-3.3 1-6-.9-7.9-1.3-1.3-4-2.9-9.4-3z\"],\n    \"gulp\": [256, 512, [], \"f3ae\", \"M209.8 391.1l-14.1 24.6-4.6 80.2c0 8.9-28.3 16.1-63.1 16.1s-63.1-7.2-63.1-16.1l-5.8-79.4-14.9-25.4c41.2 17.3 126 16.7 165.6 0zm-196-253.3l13.6 125.5c5.9-20 20.8-47 40-55.2 6.3-2.7 12.7-2.7 18.7.9 5.2 3 9.6 9.3 10.1 11.8 1.2 6.5-2 9.1-4.5 9.1-3 0-5.3-4.6-6.8-7.3-4.1-7.3-10.3-7.6-16.9-2.8-6.9 5-12.9 13.4-17.1 20.7-5.1 8.8-9.4 18.5-12 28.2-1.5 5.6-2.9 14.6-.6 19.9 1 2.2 2.5 3.6 4.9 3.6 5 0 12.3-6.6 15.8-10.1 4.5-4.5 10.3-11.5 12.5-16l5.2-15.5c2.6-6.8 9.9-5.6 9.9 0 0 10.2-3.7 13.6-10 34.7-5.8 19.5-7.6 25.8-7.6 25.8-.7 2.8-3.4 7.5-6.3 7.5-1.2 0-2.1-.4-2.6-1.2-1-1.4-.9-5.3-.8-6.3.2-3.2 6.3-22.2 7.3-25.2-2 2.2-4.1 4.4-6.4 6.6-5.4 5.1-14.1 11.8-21.5 11.8-3.4 0-5.6-.9-7.7-2.4l7.6 79.6c2 5 39.2 17.1 88.2 17.1 49.1 0 86.3-12.2 88.2-17.1l10.9-94.6c-5.7 5.2-12.3 11.6-19.6 14.8-5.4 2.3-17.4 3.8-17.4-5.7 0-5.2 9.1-14.8 14.4-21.5 1.4-1.7 4.7-5.9 4.7-8.1 0-2.9-6-2.2-11.7 2.5-3.2 2.7-6.2 6.3-8.7 9.7-4.3 6-6.6 11.2-8.5 15.5-6.2 14.2-4.1 8.6-9.1 22-5 13.3-4.2 11.8-5.2 14-.9 1.9-2.2 3.5-4 4.5-1.9 1-4.5.9-6.1-.3-.9-.6-1.3-1.9-1.3-3.7 0-.9.1-1.8.3-2.7 1.5-6.1 7.8-18.1 15-34.3 1.6-3.7 1-2.6.8-2.3-6.2 6-10.9 8.9-14.4 10.5-5.8 2.6-13 2.6-14.5-4.1-.1-.4-.1-.8-.2-1.2-11.8 9.2-24.3 11.7-20-8.1-4.6 8.2-12.6 14.9-22.4 14.9-4.1 0-7.1-1.4-8.6-5.1-2.3-5.5 1.3-14.9 4.6-23.8 1.7-4.5 4-9.9 7.1-16.2 1.6-3.4 4.2-5.4 7.6-4.5.6.2 1.1.4 1.6.7 2.6 1.8 1.6 4.5.3 7.2-3.8 7.5-7.1 13-9.3 20.8-.9 3.3-2 9 1.5 9 2.4 0 4.7-.8 6.9-2.4 4.6-3.4 8.3-8.5 11.1-13.5 2-3.6 4.4-8.3 5.6-12.3.5-1.7 1.1-3.3 1.8-4.8 1.1-2.5 2.6-5.1 5.2-5.1 1.3 0 2.4.5 3.2 1.5 1.7 2.2 1.3 4.5.4 6.9-2 5.6-4.7 10.6-6.9 16.7-1.3 3.5-2.7 8-2.7 11.7 0 3.4 3.7 2.6 6.8 1.2 2.4-1.1 4.8-2.8 6.8-4.5 1.2-4.9.9-3.8 26.4-68.2 1.3-3.3 3.7-4.7 6.1-4.7 1.2 0 2.2.4 3.2 1.1 1.7 1.3 1.7 4.1 1 6.2-.7 1.9-.6 1.3-4.5 10.5-5.2 12.1-8.6 20.8-13.2 31.9-1.9 4.6-7.7 18.9-8.7 22.3-.6 2.2-1.3 5.8 1 5.8 5.4 0 19.3-13.1 23.1-17 .2-.3.5-.4.9-.6.6-1.9 1.2-3.7 1.7-5.5 1.4-3.8 2.7-8.2 5.3-11.3.8-1 1.7-1.6 2.7-1.6 2.8 0 4.2 1.2 4.2 4 0 1.1-.7 5.1-1.1 6.2 1.4-1.5 2.9-3 4.5-4.5 15-13.9 25.7-6.8 25.7.2 0 7.4-8.9 17.7-13.8 23.4-1.6 1.9-4.9 5.4-5 6.4 0 1.3.9 1.8 2.2 1.8 2 0 6.4-3.5 8-4.7 5-3.9 11.8-9.9 16.6-14.1l14.8-136.8c-30.5 17.1-197.6 17.2-228.3.2zm229.7-8.5c0 21-231.2 21-231.2 0 0-8.8 51.8-15.9 115.6-15.9 9 0 17.8.1 26.3.4l12.6-48.7L228.1.6c1.4-1.4 5.8-.2 9.9 3.5s6.6 7.9 5.3 9.3l-.1.1L185.9 74l-10 40.7c39.9 2.6 67.6 8.1 67.6 14.6zm-69.4 4.6c0-.8-.9-1.5-2.5-2.1l-.2.8c0 1.3-5 2.4-11.1 2.4s-11.1-1.1-11.1-2.4c0-.1 0-.2.1-.3l.2-.7c-1.8.6-3 1.4-3 2.3 0 2.1 6.2 3.7 13.7 3.7 7.7.1 13.9-1.6 13.9-3.7z\"],\n    \"hacker-news\": [448, 512, [], \"f1d4\", \"M0 32v448h448V32H0zm21.2 197.2H21c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4zm218 53.9V384h-31.4V281.3L128 128h37.3c52.5 98.3 49.2 101.2 59.3 125.6 12.3-27 5.8-24.4 60.6-125.6H320l-80.8 155.1z\"],\n    \"hacker-news-square\": [448, 512, [], \"f3af\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.2 229.2H21c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4zm218 53.9V384h-31.4V281.3L128 128h37.3c52.5 98.3 49.2 101.2 59.3 125.6 12.3-27 5.8-24.4 60.6-125.6H320l-80.8 155.1z\"],\n    \"hackerrank\": [512, 512, [], \"f5f7\", \"M477.5 128C463 103.05 285.13 0 256.16 0S49.25 102.79 34.84 128s-14.49 230.8 0 256 192.38 128 221.32 128S463 409.08 477.49 384s14.51-231 .01-256zM316.13 414.22c-4 0-40.91-35.77-38-38.69.87-.87 6.26-1.48 17.55-1.83 0-26.23.59-68.59.94-86.32 0-2-.44-3.43-.44-5.85h-79.93c0 7.1-.46 36.2 1.37 72.88.23 4.54-1.58 6-5.74 5.94-10.13 0-20.27-.11-30.41-.08-4.1 0-5.87-1.53-5.74-6.11.92-33.44 3-84-.15-212.67v-3.17c-9.67-.35-16.38-1-17.26-1.84-2.92-2.92 34.54-38.69 38.49-38.69s41.17 35.78 38.27 38.69c-.87.87-7.9 1.49-16.77 1.84v3.16c-2.42 25.75-2 79.59-2.63 105.39h80.26c0-4.55.39-34.74-1.2-83.64-.1-3.39.95-5.17 4.21-5.2 11.07-.08 22.15-.13 33.23-.06 3.46 0 4.57 1.72 4.5 5.38C333 354.64 336 341.29 336 373.69c8.87.35 16.82 1 17.69 1.84 2.88 2.91-33.62 38.69-37.58 38.69z\"],\n    \"hips\": [640, 512, [], \"f452\", \"M251.6 157.6c0-1.9-.9-2.8-2.8-2.8h-40.9c-1.6 0-2.7 1.4-2.7 2.8v201.8c0 1.4 1.1 2.8 2.7 2.8h40.9c1.9 0 2.8-.9 2.8-2.8zM156.5 168c-16.1-11.8-36.3-17.9-60.3-18-18.1-.1-34.6 3.7-49.8 11.4V80.2c0-1.8-.9-2.7-2.8-2.7H2.7c-1.8 0-2.7.9-2.7 2.7v279.2c0 1.9.9 2.8 2.7 2.8h41c1.9 0 2.8-.9 2.8-2.8V223.3c0-.8-2.8-27 45.8-27 48.5 0 45.8 26.1 45.8 27v122.6c0 9 7.3 16.3 16.4 16.3h27.3c1.8 0 2.7-.9 2.7-2.8V223.3c0-23.4-9.3-41.8-28-55.3zm478.4 110.1c-6.8-15.7-18.4-27-34.9-34.1l-57.6-25.3c-8.6-3.6-9.2-11.2-2.6-16.1 7.4-5.5 44.3-13.9 84 6.8 1.7 1 4-.3 4-2.4v-44.7c0-1.3-.6-2.1-1.9-2.6-17.7-6.6-36.1-9.9-55.1-9.9-26.5 0-45.3 5.8-58.5 15.4-.5.4-28.4 20-22.7 53.7 3.4 19.6 15.8 34.2 37.2 43.6l53.6 23.5c11.6 5.1 15.2 13.3 12.2 21.2-3.7 9.1-13.2 13.6-36.5 13.6-24.3 0-44.7-8.9-58.4-19.1-2.1-1.4-4.4.2-4.4 2.3v34.4c0 10.4 4.9 17.3 14.6 20.7 15.6 5.5 31.6 8.2 48.2 8.2 12.7 0 25.8-1.2 36.3-4.3.7-.3 36-8.9 45.6-45.8 3.5-13.5 2.4-26.5-3.1-39.1zM376.2 149.8c-31.7 0-104.2 20.1-104.2 103.5v183.5c0 .8.6 2.7 2.7 2.7h40.9c1.9 0 2.8-.9 2.8-2.7V348c16.5 12.7 35.8 19.1 57.7 19.1 60.5 0 108.7-48.5 108.7-108.7.1-60.3-48.2-108.6-108.6-108.6zm0 170.9c-17.2 0-31.9-6.1-44-18.2-12.2-12.2-18.2-26.8-18.2-44 0-34.5 27.6-62.2 62.2-62.2 34.5 0 62.2 27.6 62.2 62.2.1 34.3-27.3 62.2-62.2 62.2zM228.3 72.5c-15.9 0-28.8 12.9-28.9 28.9 0 15.6 12.7 28.9 28.9 28.9s28.9-13.1 28.9-28.9c0-16.2-13-28.9-28.9-28.9z\"],\n    \"hire-a-helper\": [512, 512, [], \"f3b0\", \"M443.1 0H71.9C67.9 37.3 37.4 67.8 0 71.7v371.5c37.4 4.9 66 32.4 71.9 68.8h372.2c3-36.4 32.5-65.8 67.9-69.8V71.7c-36.4-5.9-65-35.3-68.9-71.7zm-37 404.9c-36.3 0-18.8-2-55.1-2-35.8 0-21 2-56.1 2-5.9 0-4.9-8.2 0-9.8 22.8-7.6 22.9-10.2 24.6-12.8 10.4-15.6 5.9-83 5.9-113 0-5.3-6.4-12.8-13.8-12.8H200.4c-7.4 0-13.8 7.5-13.8 12.8 0 30-4.5 97.4 5.9 113 1.7 2.5 1.8 5.2 24.6 12.8 4.9 1.6 6 9.8 0 9.8-35.1 0-20.3-2-56.1-2-36.3 0-18.8 2-55.1 2-7.9 0-5.8-10.8 0-10.8 10.2-3.4 13.5-3.5 21.7-13.8 7.7-12.9 7.9-44.4 7.9-127.8V151.3c0-22.2-12.2-28.3-28.6-32.4-8.8-2.2-4-11.8 1-11.8 36.5 0 20.6 2 57.1 2 32.7 0 16.5-2 49.2-2 3.3 0 8.5 8.3 1 10.8-4.9 1.6-27.6 3.7-27.6 39.3 0 45.6-.2 55.8 1 68.8 0 1.3 2.3 12.8 12.8 12.8h109.2c10.5 0 12.8-11.5 12.8-12.8 1.2-13 1-23.2 1-68.8 0-35.6-22.7-37.7-27.6-39.3-7.5-2.5-2.3-10.8 1-10.8 32.7 0 16.5 2 49.2 2 36.5 0 20.6-2 57.1-2 4.9 0 9.9 9.6 1 11.8-16.4 4.1-28.6 10.3-28.6 32.4v101.2c0 83.4.1 114.9 7.9 127.8 8.2 10.2 11.4 10.4 21.7 13.8 5.8 0 7.8 10.8 0 10.8z\"],\n    \"hooli\": [640, 512, [], \"f427\", \"M144.5 352l38.3.8c-13.2-4.6-26-10.2-38.3-16.8zm57.7-5.3v5.3l-19.4.8c36.5 12.5 69.9 14.2 94.7 7.2-19.9.2-45.8-2.6-75.3-13.3zm408.9-115.2c15.9 0 28.9-12.9 28.9-28.9s-12.9-24.5-28.9-24.5c-15.9 0-28.9 8.6-28.9 24.5s12.9 28.9 28.9 28.9zm-29 120.5H640V241.5h-57.9zm-73.7 0h57.9V156.7L508.4 184zm-31-119.4c-18.2-18.2-50.4-17.1-50.4-17.1s-32.3-1.1-50.4 17.1c-18.2 18.2-16.8 33.9-16.8 52.6s-1.4 34.3 16.8 52.5 50.4 17.1 50.4 17.1 32.3 1.1 50.4-17.1c18.2-18.2 16.8-33.8 16.8-52.5-.1-18.8 1.3-34.5-16.8-52.6zm-39.8 71.9c0 3.6-1.8 12.5-10.7 12.5s-10.7-8.9-10.7-12.5v-40.4c0-8.7 7.3-10.9 10.7-10.9s10.7 2.1 10.7 10.9zm-106.2-71.9c-18.2-18.2-50.4-17.1-50.4-17.1s-32.2-1.1-50.4 17.1c-1.9 1.9-3.7 3.9-5.3 6-38.2-29.6-72.5-46.5-102.1-61.1v-20.7l-22.5 10.6c-54.4-22.1-89-18.2-97.3.1 0 0-24.9 32.8 61.8 110.8V352h57.9v-28.6c-6.5-4.2-13-8.7-19.4-13.6-14.8-11.2-27.4-21.6-38.4-31.4v-31c13.1 14.7 30.5 31.4 53.4 50.3l4.5 3.6v-29.8c0-6.9 1.7-18.2 10.8-18.2s10.6 6.9 10.6 15V317c18 12.2 37.3 22.1 57.7 29.6v-93.9c0-18.7-13.4-37.4-40.6-37.4-15.8-.1-30.5 8.2-38.5 21.9v-54.3c41.9 20.9 83.9 46.5 99.9 58.3-10.2 14.6-9.3 28.1-9.3 43.7 0 18.7-1.4 34.3 16.8 52.5s50.4 17.1 50.4 17.1 32.3 1.1 50.4-17.1c18.2-18.2 16.7-33.8 16.7-52.5 0-18.5 1.5-34.2-16.7-52.3zM65.2 184v63.3c-48.7-54.5-38.9-76-35.2-79.1 13.5-11.4 37.5-8 64.4 2.1zm226.5 120.5c0 3.6-1.8 12.5-10.7 12.5s-10.7-8.9-10.7-12.5v-40.4c0-8.7 7.3-10.9 10.7-10.9s10.7 2.1 10.7 10.9z\"],\n    \"hornbill\": [512, 512, [], \"f592\", \"M76.38 370.3a37.8 37.8 0 1 1-32.07-32.42c-78.28-111.35 52-190.53 52-190.53-5.86 43-8.24 91.16-8.24 91.16-67.31 41.49.93 64.06 39.81 72.87a140.38 140.38 0 0 0 131.66 91.94c1.92 0 3.77-.21 5.67-.28l.11 18.86c-99.22 1.39-158.7-29.14-188.94-51.6zm108-327.7A37.57 37.57 0 0 0 181 21.45a37.95 37.95 0 1 0-31.17 54.22c-22.55 29.91-53.83 89.57-52.42 190l21.84-.15c0-.9-.14-1.77-.14-2.68A140.42 140.42 0 0 1 207 132.71c8-37.71 30.7-114.3 73.8-44.29 0 0 48.14 2.38 91.18 8.24 0 0-77.84-128-187.59-54.06zm304.19 134.17a37.94 37.94 0 1 0-53.84-28.7C403 126.13 344.89 99 251.28 100.33l.14 22.5c2.7-.15 5.39-.41 8.14-.41a140.37 140.37 0 0 1 130.49 88.76c39.1 9 105.06 31.58 38.46 72.54 0 0-2.34 48.13-8.21 91.16 0 0 133.45-81.16 49-194.61a37.45 37.45 0 0 0 19.31-3.5zM374.06 436.24c21.43-32.46 46.42-89.69 45.14-179.66l-19.52.14c.08 2.06.3 4.07.3 6.15a140.34 140.34 0 0 1-91.39 131.45c-8.85 38.95-31.44 106.66-72.77 39.49 0 0-48.12-2.34-91.19-8.22 0 0 79.92 131.34 191.9 51a37.5 37.5 0 0 0 3.64 14 37.93 37.93 0 1 0 33.89-54.29z\"],\n    \"hotjar\": [448, 512, [], \"f3b1\", \"M414.9 161.5C340.2 29 121.1 0 121.1 0S222.2 110.4 93 197.7C11.3 252.8-21 324.4 14 402.6c26.8 59.9 83.5 84.3 144.6 93.4-29.2-55.1-6.6-122.4-4.1-129.6 57.1 86.4 165 0 110.8-93.9 71 15.4 81.6 138.6 27.1 215.5 80.5-25.3 134.1-88.9 148.8-145.6 15.5-59.3 3.7-127.9-26.3-180.9z\"],\n    \"houzz\": [448, 512, [], \"f27c\", \"M275.9 330.7H171.3V480H17V32h109.5v104.5l305.1 85.6V480H275.9z\"],\n    \"html5\": [384, 512, [], \"f13b\", \"M0 32l34.9 395.8L191.5 480l157.6-52.2L384 32H0zm308.2 127.9H124.4l4.1 49.4h175.6l-13.6 148.4-97.9 27v.3h-1.1l-98.7-27.3-6-75.8h47.7L138 320l53.5 14.5 53.7-14.5 6-62.2H84.3L71.5 112.2h241.1l-4.4 47.7z\"],\n    \"hubspot\": [512, 512, [], \"f3b2\", \"M267.4 211.6c-25.1 23.7-40.8 57.3-40.8 94.6 0 29.3 9.7 56.3 26 78L203.1 434c-4.4-1.6-9.1-2.5-14-2.5-10.8 0-20.9 4.2-28.5 11.8-7.6 7.6-11.8 17.8-11.8 28.6s4.2 20.9 11.8 28.5c7.6 7.6 17.8 11.6 28.5 11.6 10.8 0 20.9-3.9 28.6-11.6 7.6-7.6 11.8-17.8 11.8-28.5 0-4.2-.6-8.2-1.9-12.1l50-50.2c22 16.9 49.4 26.9 79.3 26.9 71.9 0 130-58.3 130-130.2 0-65.2-47.7-119.2-110.2-128.7V116c17.5-7.4 28.2-23.8 28.2-42.9 0-26.1-20.9-47.9-47-47.9S311.2 47 311.2 73.1c0 19.1 10.7 35.5 28.2 42.9v61.2c-15.2 2.1-29.6 6.7-42.7 13.6-27.6-20.9-117.5-85.7-168.9-124.8 1.2-4.4 2-9 2-13.8C129.8 23.4 106.3 0 77.4 0 48.6 0 25.2 23.4 25.2 52.2c0 28.9 23.4 52.3 52.2 52.3 9.8 0 18.9-2.9 26.8-7.6l163.2 114.7zm89.5 163.6c-38.1 0-69-30.9-69-69s30.9-69 69-69 69 30.9 69 69-30.9 69-69 69z\"],\n    \"imdb\": [448, 512, [], \"f2d8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.3 229.2H21c.1-.1.2-.3.3-.4zM97 319.8H64V192h33zm113.2 0h-28.7v-86.4l-11.6 86.4h-20.6l-12.2-84.5v84.5h-29V192h42.8c3.3 19.8 6 39.9 8.7 59.9l7.6-59.9h43zm11.4 0V192h24.6c17.6 0 44.7-1.6 49 20.9 1.7 7.6 1.4 16.3 1.4 24.4 0 88.5 11.1 82.6-75 82.5zm160.9-29.2c0 15.7-2.4 30.9-22.2 30.9-9 0-15.2-3-20.9-9.8l-1.9 8.1h-29.8V192h31.7v41.7c6-6.5 12-9.2 20.9-9.2 21.4 0 22.2 12.8 22.2 30.1zM265 229.9c0-9.7 1.6-16-10.3-16v83.7c12.2.3 10.3-8.7 10.3-18.4zm85.5 26.1c0-5.4 1.1-12.7-6.2-12.7-6 0-4.9 8.9-4.9 12.7 0 .6-1.1 39.6 1.1 44.7.8 1.6 2.2 2.4 3.8 2.4 7.8 0 6.2-9 6.2-14.4z\"],\n    \"instagram\": [448, 512, [], \"f16d\", \"M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z\"],\n    \"intercom\": [448, 512, [], \"f7af\", \"M392 32H56C25.1 32 0 57.1 0 88v336c0 30.9 25.1 56 56 56h336c30.9 0 56-25.1 56-56V88c0-30.9-25.1-56-56-56zm-108.3 82.1c0-19.8 29.9-19.8 29.9 0v199.5c0 19.8-29.9 19.8-29.9 0V114.1zm-74.6-7.5c0-19.8 29.9-19.8 29.9 0v216.5c0 19.8-29.9 19.8-29.9 0V106.6zm-74.7 7.5c0-19.8 29.9-19.8 29.9 0v199.5c0 19.8-29.9 19.8-29.9 0V114.1zM59.7 144c0-19.8 29.9-19.8 29.9 0v134.3c0 19.8-29.9 19.8-29.9 0V144zm323.4 227.8c-72.8 63-241.7 65.4-318.1 0-15-12.8 4.4-35.5 19.4-22.7 65.9 55.3 216.1 53.9 279.3 0 14.9-12.9 34.3 9.8 19.4 22.7zm5.2-93.5c0 19.8-29.9 19.8-29.9 0V144c0-19.8 29.9-19.8 29.9 0v134.3z\"],\n    \"internet-explorer\": [512, 512, [], \"f26b\", \"M483.049 159.706c10.855-24.575 21.424-60.438 21.424-87.871 0-72.722-79.641-98.371-209.673-38.577-107.632-7.181-211.221 73.67-237.098 186.457 30.852-34.862 78.271-82.298 121.977-101.158C125.404 166.85 79.128 228.002 43.992 291.725 23.246 329.651 0 390.94 0 436.747c0 98.575 92.854 86.5 180.251 42.006 31.423 15.43 66.559 15.573 101.695 15.573 97.124 0 184.249-54.294 216.814-146.022H377.927c-52.509 88.593-196.819 52.996-196.819-47.436H509.9c6.407-43.581-1.655-95.715-26.851-141.162zM64.559 346.877c17.711 51.15 53.703 95.871 100.266 123.304-88.741 48.94-173.267 29.096-100.266-123.304zm115.977-108.873c2-55.151 50.276-94.871 103.98-94.871 53.418 0 101.981 39.72 103.981 94.871H180.536zm184.536-187.6c21.425-10.287 48.563-22.003 72.558-22.003 31.422 0 54.274 21.717 54.274 53.722 0 20.003-7.427 49.007-14.569 67.867-26.28-42.292-65.986-81.584-112.263-99.586z\"],\n    \"invision\": [448, 512, [], \"f7b0\", \"M407.4 32H40.6C18.2 32 0 50.2 0 72.6v366.8C0 461.8 18.2 480 40.6 480h366.8c22.4 0 40.6-18.2 40.6-40.6V72.6c0-22.4-18.2-40.6-40.6-40.6zM176.1 145.6c.4 23.4-22.4 27.3-26.6 27.4-14.9 0-27.1-12-27.1-27 .1-35.2 53.1-35.5 53.7-.4zM332.8 377c-65.6 0-34.1-74-25-106.6 14.1-46.4-45.2-59-59.9.7l-25.8 103.3H177l8.1-32.5c-31.5 51.8-94.6 44.4-94.6-4.3.1-14.3.9-14 23-104.1H81.7l9.7-35.6h76.4c-33.6 133.7-32.6 126.9-32.9 138.2 0 20.9 40.9 13.5 57.4-23.2l19.8-79.4h-32.3l9.7-35.6h68.8l-8.9 40.5c40.5-75.5 127.9-47.8 101.8 38-14.2 51.1-14.6 50.7-14.9 58.8 0 15.5 17.5 22.6 31.8-16.9L386 325c-10.5 36.7-29.4 52-53.2 52z\"],\n    \"ioxhost\": [640, 512, [], \"f208\", \"M616 160h-67.3C511.2 70.7 422.9 8 320 8 183 8 72 119 72 256c0 16.4 1.6 32.5 4.7 48H24c-13.3 0-24 10.8-24 24 0 13.3 10.7 24 24 24h67.3c37.5 89.3 125.8 152 228.7 152 137 0 248-111 248-248 0-16.4-1.6-32.5-4.7-48H616c13.3 0 24-10.8 24-24 0-13.3-10.7-24-24-24zm-96 96c0 110.5-89.5 200-200 200-75.7 0-141.6-42-175.5-104H424c13.3 0 24-10.8 24-24 0-13.3-10.7-24-24-24H125.8c-3.8-15.4-5.8-31.4-5.8-48 0-110.5 89.5-200 200-200 75.7 0 141.6 42 175.5 104H216c-13.3 0-24 10.8-24 24 0 13.3 10.7 24 24 24h298.2c3.8 15.4 5.8 31.4 5.8 48zm-304-24h208c13.3 0 24 10.7 24 24 0 13.2-10.7 24-24 24H216c-13.3 0-24-10.7-24-24 0-13.2 10.7-24 24-24z\"],\n    \"itch-io\": [512, 512, [], \"f83a\", \"M71.92 34.77C50.2 47.67 7.4 96.84 7 109.73v21.34c0 27.06 25.29 50.84 48.25 50.84 27.57 0 50.54-22.85 50.54-50 0 27.12 22.18 50 49.76 50s49-22.85 49-50c0 27.12 23.59 50 51.16 50h.5c27.57 0 51.16-22.85 51.16-50 0 27.12 21.47 50 49 50s49.76-22.85 49.76-50c0 27.12 23 50 50.54 50 23 0 48.25-23.78 48.25-50.84v-21.34c-.4-12.9-43.2-62.07-64.92-75C372.56 32.4 325.76 32 256 32S91.14 33.1 71.92 34.77zm132.32 134.39c-22 38.4-77.9 38.71-99.85.25-13.17 23.14-43.17 32.07-56 27.66-3.87 40.15-13.67 237.13 17.73 269.15 80 18.67 302.08 18.12 379.76 0 31.65-32.27 21.32-232 17.75-269.15-12.92 4.44-42.88-4.6-56-27.66-22 38.52-77.85 38.1-99.85-.24-7.1 12.49-23.05 28.94-51.76 28.94a57.54 57.54 0 0 1-51.75-28.94zm-41.58 53.77c16.47 0 31.09 0 49.22 19.78a436.91 436.91 0 0 1 88.18 0C318.22 223 332.85 223 349.31 223c52.33 0 65.22 77.53 83.87 144.45 17.26 62.15-5.52 63.67-33.95 63.73-42.15-1.57-65.49-32.18-65.49-62.79-39.25 6.43-101.93 8.79-155.55 0 0 30.61-23.34 61.22-65.49 62.79-28.42-.06-51.2-1.58-33.94-63.73 18.67-67 31.56-144.45 83.88-144.45zM256 270.79s-44.38 40.77-52.35 55.21l29-1.17v25.32c0 1.55 21.34.16 23.33.16 11.65.54 23.31 1 23.31-.16v-25.28l29 1.17c-8-14.48-52.35-55.24-52.35-55.24z\"],\n    \"itunes\": [448, 512, [], \"f3b4\", \"M223.6 80.3C129 80.3 52.5 157 52.5 251.5S129 422.8 223.6 422.8s171.2-76.7 171.2-171.2c0-94.6-76.7-171.3-171.2-171.3zm79.4 240c-3.2 13.6-13.5 21.2-27.3 23.8-12.1 2.2-22.2 2.8-31.9-5-11.8-10-12-26.4-1.4-36.8 8.4-8 20.3-9.6 38-12.8 3-.5 5.6-1.2 7.7-3.7 3.2-3.6 2.2-2 2.2-80.8 0-5.6-2.7-7.1-8.4-6.1-4 .7-91.9 17.1-91.9 17.1-5 1.1-6.7 2.6-6.7 8.3 0 116.1.5 110.8-1.2 118.5-2.1 9-7.6 15.8-14.9 19.6-8.3 4.6-23.4 6.6-31.4 5.2-21.4-4-28.9-28.7-14.4-42.9 8.4-8 20.3-9.6 38-12.8 3-.5 5.6-1.2 7.7-3.7 5-5.7.9-127 2.6-133.7.4-2.6 1.5-4.8 3.5-6.4 2.1-1.7 5.8-2.7 6.7-2.7 101-19 113.3-21.4 115.1-21.4 5.7-.4 9 3 9 8.7-.1 170.6.4 161.4-1 167.6zM345.2 32H102.8C45.9 32 0 77.9 0 134.8v242.4C0 434.1 45.9 480 102.8 480h242.4c57 0 102.8-45.9 102.8-102.8V134.8C448 77.9 402.1 32 345.2 32zM223.6 444c-106.3 0-192.5-86.2-192.5-192.5S117.3 59 223.6 59s192.5 86.2 192.5 192.5S329.9 444 223.6 444z\"],\n    \"itunes-note\": [384, 512, [], \"f3b5\", \"M381.9 388.2c-6.4 27.4-27.2 42.8-55.1 48-24.5 4.5-44.9 5.6-64.5-10.2-23.9-20.1-24.2-53.4-2.7-74.4 17-16.2 40.9-19.5 76.8-25.8 6-1.1 11.2-2.5 15.6-7.4 6.4-7.2 4.4-4.1 4.4-163.2 0-11.2-5.5-14.3-17-12.3-8.2 1.4-185.7 34.6-185.7 34.6-10.2 2.2-13.4 5.2-13.4 16.7 0 234.7 1.1 223.9-2.5 239.5-4.2 18.2-15.4 31.9-30.2 39.5-16.8 9.3-47.2 13.4-63.4 10.4-43.2-8.1-58.4-58-29.1-86.6 17-16.2 40.9-19.5 76.8-25.8 6-1.1 11.2-2.5 15.6-7.4 10.1-11.5 1.8-256.6 5.2-270.2.8-5.2 3-9.6 7.1-12.9 4.2-3.5 11.8-5.5 13.4-5.5 204-38.2 228.9-43.1 232.4-43.1 11.5-.8 18.1 6 18.1 17.6.2 344.5 1.1 326-1.8 338.5z\"],\n    \"java\": [384, 512, [], \"f4e4\", \"M277.74 312.9c9.8-6.7 23.4-12.5 23.4-12.5s-38.7 7-77.2 10.2c-47.1 3.9-97.7 4.7-123.1 1.3-60.1-8 33-30.1 33-30.1s-36.1-2.4-80.6 19c-52.5 25.4 130 37 224.5 12.1zm-85.4-32.1c-19-42.7-83.1-80.2 0-145.8C296 53.2 242.84 0 242.84 0c21.5 84.5-75.6 110.1-110.7 162.6-23.9 35.9 11.7 74.4 60.2 118.2zm114.6-176.2c.1 0-175.2 43.8-91.5 140.2 24.7 28.4-6.5 54-6.5 54s62.7-32.4 33.9-72.9c-26.9-37.8-47.5-56.6 64.1-121.3zm-6.1 270.5a12.19 12.19 0 0 1-2 2.6c128.3-33.7 81.1-118.9 19.8-97.3a17.33 17.33 0 0 0-8.2 6.3 70.45 70.45 0 0 1 11-3c31-6.5 75.5 41.5-20.6 91.4zM348 437.4s14.5 11.9-15.9 21.2c-57.9 17.5-240.8 22.8-291.6.7-18.3-7.9 16-19 26.8-21.3 11.2-2.4 17.7-2 17.7-2-20.3-14.3-131.3 28.1-56.4 40.2C232.84 509.4 401 461.3 348 437.4zM124.44 396c-78.7 22 47.9 67.4 148.1 24.5a185.89 185.89 0 0 1-28.2-13.8c-44.7 8.5-65.4 9.1-106 4.5-33.5-3.8-13.9-15.2-13.9-15.2zm179.8 97.2c-78.7 14.8-175.8 13.1-233.3 3.6 0-.1 11.8 9.7 72.4 13.6 92.2 5.9 233.8-3.3 237.1-46.9 0 0-6.4 16.5-76.2 29.7zM260.64 353c-59.2 11.4-93.5 11.1-136.8 6.6-33.5-3.5-11.6-19.7-11.6-19.7-86.8 28.8 48.2 61.4 169.5 25.9a60.37 60.37 0 0 1-21.1-12.8z\"],\n    \"jedi-order\": [448, 512, [], \"f50e\", \"M398.5 373.6c95.9-122.1 17.2-233.1 17.2-233.1 45.4 85.8-41.4 170.5-41.4 170.5 105-171.5-60.5-271.5-60.5-271.5 96.9 72.7-10.1 190.7-10.1 190.7 85.8 158.4-68.6 230.1-68.6 230.1s-.4-16.9-2.2-85.7c4.3 4.5 34.5 36.2 34.5 36.2l-24.2-47.4 62.6-9.1-62.6-9.1 20.2-55.5-31.4 45.9c-2.2-87.7-7.8-305.1-7.9-306.9v-2.4 1-1 2.4c0 1-5.6 219-7.9 306.9l-31.4-45.9 20.2 55.5-62.6 9.1 62.6 9.1-24.2 47.4 34.5-36.2c-1.8 68.8-2.2 85.7-2.2 85.7s-154.4-71.7-68.6-230.1c0 0-107-118.1-10.1-190.7 0 0-165.5 99.9-60.5 271.5 0 0-86.8-84.8-41.4-170.5 0 0-78.7 111 17.2 233.1 0 0-26.2-16.1-49.4-77.7 0 0 16.9 183.3 222 185.7h4.1c205-2.4 222-185.7 222-185.7-23.6 61.5-49.9 77.7-49.9 77.7z\"],\n    \"jenkins\": [512, 512, [], \"f3b6\", \"M487.1 425c-1.4-11.2-19-23.1-28.2-31.9-5.1-5-29-23.1-30.4-29.9-1.4-6.6 9.7-21.5 13.3-28.9 5.1-10.7 8.8-23.7 11.3-32.6 18.8-66.1 20.7-156.9-6.2-211.2-10.2-20.6-38.6-49-56.4-62.5-42-31.7-119.6-35.3-170.1-16.6-14.1 5.2-27.8 9.8-40.1 17.1-33.1 19.4-68.3 32.5-78.1 71.6-24.2 10.8-31.5 41.8-30.3 77.8.2 7 4.1 15.8 2.7 22.4-.7 3.3-5.2 7.6-6.1 9.8-11.6 27.7-2.3 64 11.1 83.7 8.1 11.9 21.5 22.4 39.2 25.2.7 10.6 3.3 19.7 8.2 30.4 3.1 6.8 14.7 19 10.4 27.7-2.2 4.4-21 13.8-27.3 17.6C89 407.2 73.7 415 54.2 429c-12.6 9-32.3 10.2-29.2 31.1 2.1 14.1 10.1 31.6 14.7 45.8.7 2 1.4 4.1 2.1 6h422c4.9-15.3 9.7-30.9 14.6-47.2 3.4-11.4 10.2-27.8 8.7-39.7zM205.9 33.7c1.8-.5 3.4.7 4.9 2.4-.2 5.2-5.4 5.1-8.9 6.8-5.4 6.7-13.4 9.8-20 17.2-6.8 7.5-14.4 27.7-23.4 30-4.5 1.1-9.7-.8-13.6-.5-10.4.7-17.7 6-28.3 7.5 13.6-29.9 56.1-54 89.3-63.4zm-104.8 93.6c13.5-14.9 32.1-24.1 54.8-25.9 11.7 29.7-8.4 65-.9 97.6 2.3 9.9 10.2 25.4-2.4 25.7.3-28.3-34.8-46.3-61.3-29.6-1.8-21.5-4.9-51.7 9.8-67.8zm36.7 200.2c-1-4.1-2.7-12.9-2.3-15.1 1.6-8.7 17.1-12.5 11-24.7-11.3-.1-13.8 10.2-24.1 11.3-26.7 2.6-45.6-35.4-44.4-58.4 1-19.5 17.6-38.2 40.1-35.8 16 1.8 21.4 19.2 24.5 34.7 9.2.5 22.5-.4 26.9-7.6-.6-17.5-8.8-31.6-8.2-47.7 1-30.3 17.5-57.6 4.8-87.4 13.6-30.9 53.5-55.3 83.1-70 36.6-18.3 94.9-3.7 129.3 15.8 19.7 11.1 34.4 32.7 48.3 50.7-19.5-5.8-36.1 4.2-33.1 20.3 16.3-14.9 44.2-.2 52.5 16.4 7.9 15.8 7.8 39.3 9 62.8 2.9 57-10.4 115.9-39.1 157.1-7.7 11-14.1 23-24.9 30.6-26 18.2-65.4 34.7-99.2 23.4-44.7-15-65-44.8-89.5-78.8.7 18.7 13.8 34.1 26.8 48.4 11.3 12.5 25 26.6 39.7 32.4-12.3-2.9-31.1-3.8-36.2 7.2-28.6-1.9-55.1-4.8-68.7-24.2-10.6-15.4-21.4-41.4-26.3-61.4zm222 124.1c4.1-3 11.1-2.9 17.4-3.6-5.4-2.7-13-3.7-19.3-2.2-.1-4.2-2-6.8-3.2-10.2 10.6-3.8 35.5-28.5 49.6-20.3 6.7 3.9 9.5 26.2 10.1 37 .4 9-.8 18-4.5 22.8-18.8-.6-35.8-2.8-50.7-7 .9-6.1-1-12.1.6-16.5zm-17.2-20c-16.8.8-26-1.2-38.3-10.8.2-.8 1.4-.5 1.5-1.4 18 8 40.8-3.3 59-4.9-7.9 5.1-14.6 11.6-22.2 17.1zm-12.1 33.2c-1.6-9.4-3.5-12-2.8-20.2 25-16.6 29.7 28.6 2.8 20.2zM226 438.6c-11.6-.7-48.1-14-38.5-23.7 9.4 6.5 27.5 4.9 41.3 7.3.8 4.4-2.8 10.2-2.8 16.4zM57.7 497.1c-4.3-12.7-9.2-25.1-14.8-36.9 30.8-23.8 65.3-48.9 102.2-63.5 2.8-1.1 23.2 25.4 26.2 27.6 16.5 11.7 37 21 56.2 30.2 1.2 8.8 3.9 20.2 8.7 35.5.7 2.3 1.4 4.7 2.2 7.2H57.7zm240.6 5.7h-.8c.3-.2.5-.4.8-.5v.5zm7.5-5.7c2.1-1.4 4.3-2.8 6.4-4.3 1.1 1.4 2.2 2.8 3.2 4.3h-9.6zm15.1-24.7c-10.8 7.3-20.6 18.3-33.3 25.2-6 3.3-27 11.7-33.4 10.2-3.6-.8-3.9-5.3-5.4-9.5-3.1-9-10.1-23.4-10.8-37-.8-17.2-2.5-46 16-42.4 14.9 2.9 32.3 9.7 43.9 16.1 7.1 3.9 11.1 8.6 21.9 9.5-.1 1.4-.1 2.8-.2 4.3-5.9 3.9-15.3 3.8-21.8 7.1 9.5.4 17 2.7 23.5 5.9-.1 3.4-.3 7-.4 10.6zm53.4 24.7h-14c-.1-3.2-2.8-5.8-6.1-5.8s-5.9 2.6-6.1 5.8h-17.4c-2.8-4.4-5.7-8.6-8.9-12.5 2.1-2.2 4-4.7 6-6.9 9 3.7 14.8-4.9 21.7-4.2 7.9.8 14.2 11.7 25.4 11l-.6 12.6zm8.7 0c.2-4 .4-7.8.6-11.5 15.6-7.3 29 1.3 35.7 11.5H383zm83.4-37c-2.3 11.2-5.8 24-9.9 37.1-.2-.1-.4-.1-.6-.1H428c.6-1.1 1.2-2.2 1.9-3.3-2.6-6.1-9-8.7-10.9-15.5 12.1-22.7 6.5-93.4-24.2-78.5 4.3-6.3 15.6-11.5 20.8-19.3 13 10.4 20.8 20.3 33.2 31.4 6.8 6 20 13.3 21.4 23.1.8 5.5-2.6 18.9-3.8 25.1zM222.2 130.5c5.4-14.9 27.2-34.7 45-32 7.7 1.2 18 8.2 12.2 17.7-30.2-7-45.2 12.6-54.4 33.1-8.1-2-4.9-13.1-2.8-18.8zm184.1 63.1c8.2-3.6 22.4-.7 29.6-5.3-4.2-11.5-10.3-21.4-9.3-37.7.5 0 1 0 1.4.1 6.8 14.2 12.7 29.2 21.4 41.7-5.7 13.5-43.6 25.4-43.1 1.2zm20.4-43zm-117.2 45.7c-6.8-10.9-19-32.5-14.5-45.3 6.5 11.9 8.6 24.4 17.8 33.3 4.1 4 12.2 9 8.2 20.2-.9 2.7-7.8 8.6-11.7 9.7-14.4 4.3-47.9.9-36.6-17.1 11.9.7 27.9 7.8 36.8-.8zm27.3 70c3.8 6.6 1.4 18.7 12.1 20.6 20.2 3.4 43.6-12.3 58.1-17.8 9-15.2-.8-20.7-8.9-30.5-16.6-20-38.8-44.8-38-74.7 6.7-4.9 7.3 7.4 8.2 9.7 8.7 20.3 30.4 46.2 46.3 63.5 3.9 4.3 10.3 8.4 11 11.2 2.1 8.2-5.4 18-4.5 23.5-21.7 13.9-45.8 29.1-81.4 25.6-7.4-6.7-10.3-21.4-2.9-31.1zm-201.3-9.2c-6.8-3.9-8.4-21-16.4-21.4-11.4-.7-9.3 22.2-9.3 35.5-7.8-7.1-9.2-29.1-3.5-40.3-6.6-3.2-9.5 3.6-13.1 5.9 4.7-34.1 49.8-15.8 42.3 20.3zm299.6 28.8c-10.1 19.2-24.4 40.4-54 41-.6-6.2-1.1-15.6 0-19.4 22.7-2.2 36.6-13.7 54-21.6zm-141.9 12.4c18.9 9.9 53.6 11 79.3 10.2 1.4 5.6 1.3 12.6 1.4 19.4-33 1.8-72-6.4-80.7-29.6zm92.2 46.7c-1.7 4.3-5.3 9.3-9.8 11.1-12.1 4.9-45.6 8.7-62.4-.3-10.7-5.7-17.5-18.5-23.4-26-2.8-3.6-16.9-12.9-.2-12.9 13.1 32.7 58 29 95.8 28.1z\"],\n    \"jira\": [496, 512, [], \"f7b1\", \"M490 241.7C417.1 169 320.6 71.8 248.5 0 83 164.9 6 241.7 6 241.7c-7.9 7.9-7.9 20.7 0 28.7C138.8 402.7 67.8 331.9 248.5 512c379.4-378 15.7-16.7 241.5-241.7 8-7.9 8-20.7 0-28.6zm-241.5 90l-76-75.7 76-75.7 76 75.7-76 75.7z\"],\n    \"joget\": [496, 512, [], \"f3b7\", \"M378.1 45C337.6 19.9 292.6 8 248.2 8 165 8 83.8 49.9 36.9 125.9c-71.9 116.6-35.6 269.3 81 341.2s269.3 35.6 341.2-80.9c71.9-116.6 35.6-269.4-81-341.2zm51.8 323.2c-40.4 65.5-110.4 101.5-182 101.5-6.8 0-13.6-.4-20.4-1-9-13.6-19.9-33.3-23.7-42.4-5.7-13.7-27.2-45.6 31.2-67.1 51.7-19.1 176.7-16.5 208.8-17.6-4 9-8.6 17.9-13.9 26.6zm-200.8-86.3c-55.5-1.4-81.7-20.8-58.5-48.2s51.1-40.7 68.9-51.2c17.9-10.5 27.3-33.7-23.6-29.7C87.3 161.5 48.6 252.1 37.6 293c-8.8-49.7-.1-102.7 28.5-149.1C128 43.4 259.6 12.2 360.1 74.1c74.8 46.1 111.2 130.9 99.3 212.7-24.9-.5-179.3-3.6-230.3-4.9zm183.8-54.8c-22.7-6-57 11.3-86.7 27.2-29.7 15.8-31.1 8.2-31.1 8.2s40.2-28.1 50.7-34.5 31.9-14 13.4-24.6c-3.2-1.8-6.7-2.7-10.4-2.7-17.8 0-41.5 18.7-67.5 35.6-31.5 20.5-65.3 31.3-65.3 31.3l169.5-1.6 46.5-23.4s3.6-9.5-19.1-15.5z\"],\n    \"joomla\": [448, 512, [], \"f1aa\", \"M.6 92.1C.6 58.8 27.4 32 60.4 32c30 0 54.5 21.9 59.2 50.2 32.6-7.6 67.1.6 96.5 30l-44.3 44.3c-20.5-20.5-42.6-16.3-55.4-3.5-14.3 14.3-14.3 37.9 0 52.2l99.5 99.5-44 44.3c-87.7-87.2-49.7-49.7-99.8-99.7-26.8-26.5-35-64.8-24.8-98.9C20.4 144.6.6 120.7.6 92.1zm129.5 116.4l44.3 44.3c10-10 89.7-89.7 99.7-99.8 14.3-14.3 37.6-14.3 51.9 0 12.8 12.8 17 35-3.5 55.4l44 44.3c31.2-31.2 38.5-67.6 28.9-101.2 29.2-4.1 51.9-29.2 51.9-59.5 0-33.2-26.8-60.1-59.8-60.1-30.3 0-55.4 22.5-59.5 51.6-33.8-9.9-71.7-1.5-98.3 25.1-18.3 19.1-71.1 71.5-99.6 99.9zm266.3 152.2c8.2-32.7-.9-68.5-26.3-93.9-11.8-12.2 5 4.7-99.5-99.7l-44.3 44.3 99.7 99.7c14.3 14.3 14.3 37.6 0 51.9-12.8 12.8-35 17-55.4-3.5l-44 44.3c27.6 30.2 68 38.8 102.7 28 5.5 27.4 29.7 48.1 58.9 48.1 33 0 59.8-26.8 59.8-60.1 0-30.2-22.5-55-51.6-59.1zm-84.3-53.1l-44-44.3c-87 86.4-50.4 50.4-99.7 99.8-14.3 14.3-37.6 14.3-51.9 0-13.1-13.4-16.9-35.3 3.2-55.4l-44-44.3c-30.2 30.2-38 65.2-29.5 98.3-26.7 6-46.2 29.9-46.2 58.2C0 453.2 26.8 480 59.8 480c28.6 0 52.5-19.8 58.6-46.7 32.7 8.2 68.5-.6 94.2-26 32.1-32 12.2-12.4 99.5-99.7z\"],\n    \"js\": [448, 512, [], \"f3b8\", \"M0 32v448h448V32H0zm243.8 349.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z\"],\n    \"js-square\": [448, 512, [], \"f3b9\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM243.8 381.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z\"],\n    \"jsfiddle\": [576, 512, [], \"f1cc\", \"M510.634 237.462c-4.727-2.621-5.664-5.748-6.381-10.776-2.352-16.488-3.539-33.619-9.097-49.095-35.895-99.957-153.99-143.386-246.849-91.646-27.37 15.25-48.971 36.369-65.493 63.903-3.184-1.508-5.458-2.71-7.824-3.686-30.102-12.421-59.049-10.121-85.331 9.167-25.531 18.737-36.422 44.548-32.676 76.408.355 3.025-1.967 7.621-4.514 9.545-39.712 29.992-56.031 78.065-41.902 124.615 13.831 45.569 57.514 79.796 105.608 81.433 30.291 1.031 60.637.546 90.959.539 84.041-.021 168.09.531 252.12-.48 52.664-.634 96.108-36.873 108.212-87.293 11.54-48.074-11.144-97.3-56.832-122.634zm21.107 156.88c-18.23 22.432-42.343 35.253-71.28 35.65-56.874.781-113.767.23-170.652.23 0 .7-163.028.159-163.728.154-43.861-.332-76.739-19.766-95.175-59.995-18.902-41.245-4.004-90.848 34.186-116.106 9.182-6.073 12.505-11.566 10.096-23.136-5.49-26.361 4.453-47.956 26.42-62.981 22.987-15.723 47.422-16.146 72.034-3.083 10.269 5.45 14.607 11.564 22.198-2.527 14.222-26.399 34.557-46.727 60.671-61.294 97.46-54.366 228.37 7.568 230.24 132.697.122 8.15 2.412 12.428 9.848 15.894 57.56 26.829 74.456 96.122 35.142 144.497zm-87.789-80.499c-5.848 31.157-34.622 55.096-66.666 55.095-16.953-.001-32.058-6.545-44.079-17.705-27.697-25.713-71.141-74.98-95.937-93.387-20.056-14.888-41.99-12.333-60.272 3.782-49.996 44.071 15.859 121.775 67.063 77.188 4.548-3.96 7.84-9.543 12.744-12.844 8.184-5.509 20.766-.884 13.168 10.622-17.358 26.284-49.33 38.197-78.863 29.301-28.897-8.704-48.84-35.968-48.626-70.179 1.225-22.485 12.364-43.06 35.414-55.965 22.575-12.638 46.369-13.146 66.991 2.474C295.68 280.7 320.467 323.97 352.185 343.47c24.558 15.099 54.254 7.363 68.823-17.506 28.83-49.209-34.592-105.016-78.868-63.46-3.989 3.744-6.917 8.932-11.41 11.72-10.975 6.811-17.333-4.113-12.809-10.353 20.703-28.554 50.464-40.44 83.271-28.214 31.429 11.714 49.108 44.366 42.76 78.186z\"],\n    \"kaggle\": [320, 512, [], \"f5fa\", \"M304.2 501.5L158.4 320.3 298.2 185c2.6-2.7 1.7-10.5-5.3-10.5h-69.2c-3.5 0-7 1.8-10.5 5.3L80.9 313.5V7.5q0-7.5-7.5-7.5H21.5Q14 0 14 7.5v497q0 7.5 7.5 7.5h51.9q7.5 0 7.5-7.5v-109l30.8-29.3 110.5 140.6c3 3.5 6.5 5.3 10.5 5.3h66.9q5.25 0 6-3z\"],\n    \"keybase\": [448, 512, [], \"f4f5\", \"M195.21 430.7a17.8 17.8 0 1 1-17.8-17.8 17.84 17.84 0 0 1 17.8 17.8zM288 412.8a17.8 17.8 0 1 0 17.8 17.8 17.84 17.84 0 0 0-17.8-17.8zm142.3-36c0 38.9-7.6 73.9-22.2 103h-27.3c23.5-38.7 30.5-94.8 22.4-134.3-16.1 29.5-52.1 38.6-85.9 28.8-127.8-37.5-192.5 19.7-234.6 50.3l18.9-59.3-39.9 42.3a173.31 173.31 0 0 0 31.2 72.3H64.11a197.27 197.27 0 0 1-22.2-51.3l-23.8 25.2c0-74.9-5.5-147.6 61.5-215.2a210.67 210.67 0 0 1 69.1-46.7c-6.8-13.5-9.5-29.2-7.8-46L121 144.7a32.68 32.68 0 0 1-30.6-34.4v-.1L92 84a32.75 32.75 0 0 1 32.5-30.6c1.3 0-.3-.1 28.2 1.7a32 32 0 0 1 22.8 11.4C182.61 56.1 190 46 200.11 32l20.6 12.1c-13.6 29-9.1 36.2-9 36.3 3.9 0 13.9-.5 32.4 5.7a76.19 76.19 0 0 1 46.1 102.3c19 6.1 51.3 19.9 82.4 51.8 36.6 37.6 57.7 87.4 57.7 136.6zM146 122.1a162.36 162.36 0 0 1 13.1-29.4c.1-2 2.2-13.1-7.8-13.8-28.5-1.8-26.3-1.6-26.7-1.6a8.57 8.57 0 0 0-8.6 8.1l-1.6 26.2a8.68 8.68 0 0 0 8.1 9.1zm25.8 61.8a52.3 52.3 0 0 0 22.3 20c0-21.2 28.5-41.9 52.8-17.5l8.4 10.3c20.8-18.8 19.4-45.3 12.1-60.9-13.8-29.1-46.9-32-54.3-31.7a24.24 24.24 0 0 1-23.7-15.3c-13.69 21.2-37.19 62.5-17.59 95.1zm82.9 68.4L235 268.4a4.46 4.46 0 0 0-.6 6.3l8.9 10.9a4.48 4.48 0 0 0 6.3.6l19.6-16 5.5 6.8c4.9 6 13.8-1.4 9-7.3-63.6-78.3-41.5-51.1-55.3-68.1-4.7-6-13.9 1.4-9 7.3 1.9 2.3 18.4 22.6 19.8 24.3l-9.6 7.9c-4.6 3.8 2.6 13.3 7.4 9.4l9.7-8 8 9.8zM373.11 278c-16.9-23.7-42.6-46.7-73.4-60.4a213.21 213.21 0 0 0-22.9-8.6 62.47 62.47 0 0 1-6.4 6.2l31.9 39.2a29.81 29.81 0 0 1-4.2 41.9c-1.3 1.1-13.1 10.7-29 4.9-2.9 2.3-10.1 9.9-22.2 9.9a28.42 28.42 0 0 1-22.1-10.5l-8.9-10.9a28.52 28.52 0 0 1-5-26.8 28.56 28.56 0 0 1-4.6-30c-7.2-1.3-26.7-6.2-42.7-21.4-55.8 20.7-88 64.4-101.3 91.2-14.9 30.2-18.8 60.9-19.9 90.2 8.2-8.7-3.9 4.1 114-120.9l-29.9 93.6c57.8-31.1 124-36 197.4-14.4 23.6 6.9 45.1 1.6 56-13.9 11.1-15.6 8.5-37.7-6.8-59.3zm-244.5-170.9l15.6 1 1-15.6-15.6-1z\"],\n    \"keycdn\": [512, 512, [], \"f3ba\", \"M63.8 409.3l60.5-59c32.1 42.8 71.1 66 126.6 67.4 30.5.7 60.3-7 86.4-22.4 5.1 5.3 18.5 19.5 20.9 22-32.2 20.7-69.6 31.1-108.1 30.2-43.3-1.1-84.6-16.7-117.7-44.4.3-.6-38.2 37.5-38.6 37.9 9.5 29.8-13.1 62.4-46.3 62.4C20.7 503.3 0 481.7 0 454.9c0-34.3 33.1-56.6 63.8-45.6zm354.9-252.4c19.1 31.3 29.6 67.4 28.7 104-1.1 44.8-19 87.5-48.6 121 .3.3 23.8 25.2 24.1 25.5 9.6-1.3 19.2 2 25.9 9.1 11.3 12 10.9 30.9-1.1 42.4-12 11.3-30.9 10.9-42.4-1.1-6.7-7-9.4-16.8-7.6-26.3-24.9-26.6-44.4-47.2-44.4-47.2 42.7-34.1 63.3-79.6 64.4-124.2.7-28.9-7.2-57.2-21.1-82.2l22.1-21zM104 53.1c6.7 7 9.4 16.8 7.6 26.3l45.9 48.1c-4.7 3.8-13.3 10.4-22.8 21.3-25.4 28.5-39.6 64.8-40.7 102.9-.7 28.9 6.1 57.2 20 82.4l-22 21.5C72.7 324 63.1 287.9 64.2 250.9c1-44.6 18.3-87.6 47.5-121.1l-25.3-26.4c-9.6 1.3-19.2-2-25.9-9.1-11.3-12-10.9-30.9 1.1-42.4C73.5 40.7 92.2 41 104 53.1zM464.9 8c26 0 47.1 22.4 47.1 48.3S490.9 104 464.9 104c-6.3.1-14-1.1-15.9-1.8l-62.9 59.7c-32.7-43.6-76.7-65.9-126.9-67.2-30.5-.7-60.3 6.8-86.2 22.4l-21.1-22C184.1 74.3 221.5 64 260 64.9c43.3 1.1 84.6 16.7 117.7 44.6l41.1-38.6c-1.5-4.7-2.2-9.6-2.2-14.5C416.5 29.7 438.9 8 464.9 8zM256.7 113.4c5.5 0 10.9.4 16.4 1.1 78.1 9.8 133.4 81.1 123.8 159.1-9.8 78.1-81.1 133.4-159.1 123.8-78.1-9.8-133.4-81.1-123.8-159.2 9.3-72.4 70.1-124.6 142.7-124.8zm-59 119.4c.6 22.7 12.2 41.8 32.4 52.2l-11 51.7h73.7l-11-51.7c20.1-10.9 32.1-29 32.4-52.2-.4-32.8-25.8-57.5-58.3-58.3-32.1.8-57.3 24.8-58.2 58.3zM256 160\"],\n    \"kickstarter\": [448, 512, [], \"f3bb\", \"M400 480H48c-26.4 0-48-21.6-48-48V80c0-26.4 21.6-48 48-48h352c26.4 0 48 21.6 48 48v352c0 26.4-21.6 48-48 48zM199.6 178.5c0-30.7-17.6-45.1-39.7-45.1-25.8 0-40 19.8-40 44.5v154.8c0 25.8 13.7 45.6 40.5 45.6 21.5 0 39.2-14 39.2-45.6v-41.8l60.6 75.7c12.3 14.9 39 16.8 55.8 0 14.6-15.1 14.8-36.8 4-50.4l-49.1-62.8 40.5-58.7c9.4-13.5 9.5-34.5-5.6-49.1-16.4-15.9-44.6-17.3-61.4 7l-44.8 64.7v-38.8z\"],\n    \"kickstarter-k\": [384, 512, [], \"f3bc\", \"M147.3 114.4c0-56.2-32.5-82.4-73.4-82.4C26.2 32 0 68.2 0 113.4v283c0 47.3 25.3 83.4 74.9 83.4 39.8 0 72.4-25.6 72.4-83.4v-76.5l112.1 138.3c22.7 27.2 72.1 30.7 103.2 0 27-27.6 27.3-67.4 7.4-92.2l-90.8-114.8 74.9-107.4c17.4-24.7 17.5-63.1-10.4-89.8-30.3-29-82.4-31.6-113.6 12.8L147.3 185v-70.6z\"],\n    \"korvue\": [446, 512, [], \"f42f\", \"M386.5 34h-327C26.8 34 0 60.8 0 93.5v327.1C0 453.2 26.8 480 59.5 480h327.1c33 0 59.5-26.8 59.5-59.5v-327C446 60.8 419.2 34 386.5 34zM87.1 120.8h96v116l61.8-116h110.9l-81.2 132H87.1v-132zm161.8 272.1l-65.7-113.6v113.6h-96V262.1h191.5l88.6 130.8H248.9z\"],\n    \"laravel\": [640, 512, [], \"f3bd\", \"M637.5 241.6c-4.2-4.8-62.8-78.1-73.1-90.5-10.3-12.4-15.4-10.2-21.7-9.3-6.4.9-80.5 13.4-89.1 14.8-8.6 1.5-14 4.9-8.7 12.3 4.7 6.6 53.4 75.7 64.2 90.9l-193.7 46.4L161.2 48.7c-6.1-9.1-7.4-12.3-21.4-11.6-14 .6-120.9 9.5-128.5 10.2-7.6.6-16 4-8.4 22s129 279.6 132.4 287.2c3.4 7.6 12.2 20 32.8 15 21.1-5.1 94.3-24.2 134.3-34.7 21.1 38.3 64.2 115.9 72.2 127 10.6 14.9 18 12.4 34.3 7.4 12.8-3.9 199.6-71.1 208-74.5 8.4-3.5 13.6-5.9 7.9-14.4-4.2-6.2-53.5-72.2-79.3-106.8 17.7-4.7 80.6-21.4 87.3-23.3 7.9-2 9-5.8 4.7-10.6zm-352.2 72c-2.3.5-110.8 26.5-116.6 27.8-5.8 1.3-5.8.7-6.5-1.3-.7-2-129-266.7-130.8-270-1.8-3.3-1.7-5.9 0-5.9s102.5-9 106-9.2c3.6-.2 3.2.6 4.5 2.8 0 0 142.2 245.4 144.6 249.7 2.6 4.3 1.1 5.6-1.2 6.1zm306 57.4c1.7 2.7 3.5 4.5-2 6.4-5.4 2-183.7 62.1-187.1 63.6-3.5 1.5-6.2 2-10.6-4.5s-62.4-106.8-62.4-106.8L518 280.6c4.7-1.5 6.2-2.5 9.2 2.2 2.9 4.8 62.4 85.5 64.1 88.2zm12.1-134.1c-4.2.9-73.6 18.1-73.6 18.1l-56.7-77.8c-1.6-2.3-2.9-4.5 1.1-5s68.4-12.2 71.3-12.8c2.9-.7 5.4-1.5 9 3.4 3.6 4.9 52.6 67 54.5 69.4 1.8 2.3-1.4 3.7-5.6 4.7z\"],\n    \"lastfm\": [512, 512, [], \"f202\", \"M225.8 367.1l-18.8-51s-30.5 34-76.2 34c-40.5 0-69.2-35.2-69.2-91.5 0-72.1 36.4-97.9 72.1-97.9 66.5 0 74.8 53.3 100.9 134.9 18.8 56.9 54 102.6 155.4 102.6 72.7 0 122-22.3 122-80.9 0-72.9-62.7-80.6-115-92.1-25.8-5.9-33.4-16.4-33.4-34 0-19.9 15.8-31.7 41.6-31.7 28.2 0 43.4 10.6 45.7 35.8l58.6-7c-4.7-52.8-41.1-74.5-100.9-74.5-52.8 0-104.4 19.9-104.4 83.9 0 39.9 19.4 65.1 68 76.8 44.9 10.6 79.8 13.8 79.8 45.7 0 21.7-21.1 30.5-61 30.5-59.2 0-83.9-31.1-97.9-73.9-32-96.8-43.6-163-161.3-163C45.7 113.8 0 168.3 0 261c0 89.1 45.7 137.2 127.9 137.2 66.2 0 97.9-31.1 97.9-31.1z\"],\n    \"lastfm-square\": [448, 512, [], \"f203\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-92.2 312.9c-63.4 0-85.4-28.6-97.1-64.1-16.3-51-21.5-84.3-63-84.3-22.4 0-45.1 16.1-45.1 61.2 0 35.2 18 57.2 43.3 57.2 28.6 0 47.6-21.3 47.6-21.3l11.7 31.9s-19.8 19.4-61.2 19.4c-51.3 0-79.9-30.1-79.9-85.8 0-57.9 28.6-92 82.5-92 73.5 0 80.8 41.4 100.8 101.9 8.8 26.8 24.2 46.2 61.2 46.2 24.9 0 38.1-5.5 38.1-19.1 0-19.9-21.8-22-49.9-28.6-30.4-7.3-42.5-23.1-42.5-48 0-40 32.3-52.4 65.2-52.4 37.4 0 60.1 13.6 63 46.6l-36.7 4.4c-1.5-15.8-11-22.4-28.6-22.4-16.1 0-26 7.3-26 19.8 0 11 4.8 17.6 20.9 21.3 32.7 7.1 71.8 12 71.8 57.5.1 36.7-30.7 50.6-76.1 50.6z\"],\n    \"leanpub\": [576, 512, [], \"f212\", \"M386.539 111.485l15.096 248.955-10.979-.275c-36.232-.824-71.64 8.783-102.657 27.997-31.016-19.214-66.424-27.997-102.657-27.997-45.564 0-82.07 10.705-123.516 27.723L93.117 129.6c28.546-11.803 61.484-18.115 92.226-18.115 41.173 0 73.836 13.175 102.657 42.544 27.723-28.271 59.013-41.721 98.539-42.544zM569.07 448c-25.526 0-47.485-5.215-70.542-15.645-34.31-15.645-69.993-24.978-107.871-24.978-38.977 0-74.934 12.901-102.657 40.623-27.723-27.723-63.68-40.623-102.657-40.623-37.878 0-73.561 9.333-107.871 24.978C55.239 442.236 32.731 448 8.303 448H6.93L49.475 98.859C88.726 76.626 136.486 64 181.775 64 218.83 64 256.984 71.685 288 93.095 319.016 71.685 357.17 64 394.225 64c45.289 0 93.049 12.626 132.3 34.859L569.07 448zm-43.368-44.741l-34.036-280.246c-30.742-13.999-67.248-21.41-101.009-21.41-38.428 0-74.385 12.077-102.657 38.702-28.272-26.625-64.228-38.702-102.657-38.702-33.761 0-70.267 7.411-101.009 21.41L50.298 403.259c47.211-19.487 82.894-33.486 135.045-33.486 37.604 0 70.817 9.606 102.657 29.644 31.84-20.038 65.052-29.644 102.657-29.644 52.151 0 87.834 13.999 135.045 33.486z\"],\n    \"less\": [640, 512, [], \"f41d\", \"M612.7 219c0-20.5 3.2-32.6 3.2-54.6 0-34.2-12.6-45.2-40.5-45.2h-20.5v24.2h6.3c14.2 0 17.3 4.7 17.3 22.1 0 16.3-1.6 32.6-1.6 51.5 0 24.2 7.9 33.6 23.6 37.3v1.6c-15.8 3.7-23.6 13.1-23.6 37.3 0 18.9 1.6 34.2 1.6 51.5 0 17.9-3.7 22.6-17.3 22.6v.5h-6.3V393h20.5c27.8 0 40.5-11 40.5-45.2 0-22.6-3.2-34.2-3.2-54.6 0-11 6.8-22.6 27.3-23.6v-27.3c-20.5-.7-27.3-12.3-27.3-23.3zm-105.6 32c-15.8-6.3-30.5-10-30.5-20.5 0-7.9 6.3-12.6 17.9-12.6s22.1 4.7 33.6 13.1l21-27.8c-13.1-10-31-20.5-55.2-20.5-35.7 0-59.9 20.5-59.9 49.4 0 25.7 22.6 38.9 41.5 46.2 16.3 6.3 32.1 11.6 32.1 22.1 0 7.9-6.3 13.1-20.5 13.1-13.1 0-26.3-5.3-40.5-16.3l-21 30.5c15.8 13.1 39.9 22.1 59.9 22.1 42 0 64.6-22.1 64.6-51s-22.5-41-43-47.8zm-358.9 59.4c-3.7 0-8.4-3.2-8.4-13.1V119.1H65.2c-28.4 0-41 11-41 45.2 0 22.6 3.2 35.2 3.2 54.6 0 11-6.8 22.6-27.3 23.6v27.3c20.5.5 27.3 12.1 27.3 23.1 0 19.4-3.2 31-3.2 53.6 0 34.2 12.6 45.2 40.5 45.2h20.5v-24.2h-6.3c-13.1 0-17.3-5.3-17.3-22.6s1.6-32.1 1.6-51.5c0-24.2-7.9-33.6-23.6-37.3v-1.6c15.8-3.7 23.6-13.1 23.6-37.3 0-18.9-1.6-34.2-1.6-51.5s3.7-22.1 17.3-22.1H93v150.8c0 32.1 11 53.1 43.1 53.1 10 0 17.9-1.6 23.6-3.7l-5.3-34.2c-3.1.8-4.6.8-6.2.8zM379.9 251c-16.3-6.3-31-10-31-20.5 0-7.9 6.3-12.6 17.9-12.6 11.6 0 22.1 4.7 33.6 13.1l21-27.8c-13.1-10-31-20.5-55.2-20.5-35.7 0-59.9 20.5-59.9 49.4 0 25.7 22.6 38.9 41.5 46.2 16.3 6.3 32.1 11.6 32.1 22.1 0 7.9-6.3 13.1-20.5 13.1-13.1 0-26.3-5.3-40.5-16.3l-20.5 30.5c15.8 13.1 39.9 22.1 59.9 22.1 42 0 64.6-22.1 64.6-51 .1-28.9-22.5-41-43-47.8zm-155-68.8c-38.4 0-75.1 32.1-74.1 82.5 0 52 34.2 82.5 79.3 82.5 18.9 0 39.9-6.8 56.2-17.9l-15.8-27.8c-11.6 6.8-22.6 10-34.2 10-21 0-37.3-10-41.5-34.2H290c.5-3.7 1.6-11 1.6-19.4.6-42.6-22.6-75.7-66.7-75.7zm-30 66.2c3.2-21 15.8-31 30.5-31 18.9 0 26.3 13.1 26.3 31h-56.8z\"],\n    \"line\": [448, 512, [], \"f3c0\", \"M272.1 204.2v71.1c0 1.8-1.4 3.2-3.2 3.2h-11.4c-1.1 0-2.1-.6-2.6-1.3l-32.6-44v42.2c0 1.8-1.4 3.2-3.2 3.2h-11.4c-1.8 0-3.2-1.4-3.2-3.2v-71.1c0-1.8 1.4-3.2 3.2-3.2H219c1 0 2.1.5 2.6 1.4l32.6 44v-42.2c0-1.8 1.4-3.2 3.2-3.2h11.4c1.8-.1 3.3 1.4 3.3 3.1zm-82-3.2h-11.4c-1.8 0-3.2 1.4-3.2 3.2v71.1c0 1.8 1.4 3.2 3.2 3.2h11.4c1.8 0 3.2-1.4 3.2-3.2v-71.1c0-1.7-1.4-3.2-3.2-3.2zm-27.5 59.6h-31.1v-56.4c0-1.8-1.4-3.2-3.2-3.2h-11.4c-1.8 0-3.2 1.4-3.2 3.2v71.1c0 .9.3 1.6.9 2.2.6.5 1.3.9 2.2.9h45.7c1.8 0 3.2-1.4 3.2-3.2v-11.4c0-1.7-1.4-3.2-3.1-3.2zM332.1 201h-45.7c-1.7 0-3.2 1.4-3.2 3.2v71.1c0 1.7 1.4 3.2 3.2 3.2h45.7c1.8 0 3.2-1.4 3.2-3.2v-11.4c0-1.8-1.4-3.2-3.2-3.2H301v-12h31.1c1.8 0 3.2-1.4 3.2-3.2V234c0-1.8-1.4-3.2-3.2-3.2H301v-12h31.1c1.8 0 3.2-1.4 3.2-3.2v-11.4c-.1-1.7-1.5-3.2-3.2-3.2zM448 113.7V399c-.1 44.8-36.8 81.1-81.7 81H81c-44.8-.1-81.1-36.9-81-81.7V113c.1-44.8 36.9-81.1 81.7-81H367c44.8.1 81.1 36.8 81 81.7zm-61.6 122.6c0-73-73.2-132.4-163.1-132.4-89.9 0-163.1 59.4-163.1 132.4 0 65.4 58 120.2 136.4 130.6 19.1 4.1 16.9 11.1 12.6 36.8-.7 4.1-3.3 16.1 14.1 8.8 17.4-7.3 93.9-55.3 128.2-94.7 23.6-26 34.9-52.3 34.9-81.5z\"],\n    \"linkedin\": [448, 512, [], \"f08c\", \"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"],\n    \"linkedin-in\": [448, 512, [], \"f0e1\", \"M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z\"],\n    \"linode\": [448, 512, [], \"f2b8\", \"M437.4 226.3c-.3-.9-.9-1.4-1.4-2l-70-38.6c-.9-.6-2-.6-3.1 0l-58.9 36c-.9.6-1.4 1.7-1.4 2.6l-.9 31.4-24-16c-.9-.6-2.3-.6-3.1 0L240 260.9l-1.4-35.1c0-.9-.6-2-1.4-2.3l-36-24.3 33.7-17.4c1.1-.6 1.7-1.7 1.7-2.9l-5.7-132.3c0-.9-.9-2-1.7-2.6L138.6.3c-.9-.3-1.7-.3-2.3-.3L12.6 38.6c-1.4.6-2.3 2-2 3.7L38 175.4c.9 3.4 34 27.4 38.6 30.9l-26.9 12.9c-1.4.9-2 2.3-1.7 3.4l20.6 100.3c.6 2.9 23.7 23.1 27.1 26.3l-17.4 10.6c-.9.6-1.7 2-1.4 3.1 1.4 7.1 15.4 77.7 16.9 79.1l65.1 69.1c.6.6 1.4.6 2.3.9.6 0 1.1-.3 1.7-.6l83.7-66.9c.9-.6 1.1-1.4 1.1-2.3l-2-46 28 23.7c1.1.9 2.9.9 4 0l66.9-53.4c.9-.6 1.1-1.4 1.1-2.3l2.3-33.4 20.3 14c1.1.9 2.6.9 3.7 0l54.6-43.7c.6-.3 1.1-1.1 1.1-2 .9-6.5 10.3-70.8 9.7-72.8zm-204.8 4.8l4 92.6-90.6 61.2-14-96.6 100.6-57.2zm-7.7-180l5.4 126-106.6 55.4L104 97.7l120.9-46.6zM44 173.1L18 48l79.7 49.4 19.4 132.9L44 173.1zm30.6 147.8L55.7 230l70 58.3 13.7 93.4-64.8-60.8zm24.3 117.7l-13.7-67.1 61.7 60.9 9.7 67.4-57.7-61.2zm64.5 64.5l-10.6-70.9 85.7-61.4 3.1 70-78.2 62.3zm82-115.1c0-3.4.9-22.9-2-25.1l-24.3-20 22.3-14.9c2.3-1.7 1.1-5.7 1.1-8l29.4 22.6.6 68.3-27.1-22.9zm94.3-25.4l-60.9 48.6-.6-68.6 65.7-46.9-4.2 66.9zm27.7-25.7l-19.1-13.4 2-34c.3-.9-.3-2-1.1-2.6L308 259.7l.6-30 64.6 40.6-5.8 66.6zm54.6-39.8l-48.3 38.3 5.7-65.1 51.1-36.6-8.5 63.4z\"],\n    \"linux\": [448, 512, [], \"f17c\", \"M220.8 123.3c1 .5 1.8 1.7 3 1.7 1.1 0 2.8-.4 2.9-1.5.2-1.4-1.9-2.3-3.2-2.9-1.7-.7-3.9-1-5.5-.1-.4.2-.8.7-.6 1.1.3 1.3 2.3 1.1 3.4 1.7zm-21.9 1.7c1.2 0 2-1.2 3-1.7 1.1-.6 3.1-.4 3.5-1.6.2-.4-.2-.9-.6-1.1-1.6-.9-3.8-.6-5.5.1-1.3.6-3.4 1.5-3.2 2.9.1 1 1.8 1.5 2.8 1.4zM420 403.8c-3.6-4-5.3-11.6-7.2-19.7-1.8-8.1-3.9-16.8-10.5-22.4-1.3-1.1-2.6-2.1-4-2.9-1.3-.8-2.7-1.5-4.1-2 9.2-27.3 5.6-54.5-3.7-79.1-11.4-30.1-31.3-56.4-46.5-74.4-17.1-21.5-33.7-41.9-33.4-72C311.1 85.4 315.7.1 234.8 0 132.4-.2 158 103.4 156.9 135.2c-1.7 23.4-6.4 41.8-22.5 64.7-18.9 22.5-45.5 58.8-58.1 96.7-6 17.9-8.8 36.1-6.2 53.3-6.5 5.8-11.4 14.7-16.6 20.2-4.2 4.3-10.3 5.9-17 8.3s-14 6-18.5 14.5c-2.1 3.9-2.8 8.1-2.8 12.4 0 3.9.6 7.9 1.2 11.8 1.2 8.1 2.5 15.7.8 20.8-5.2 14.4-5.9 24.4-2.2 31.7 3.8 7.3 11.4 10.5 20.1 12.3 17.3 3.6 40.8 2.7 59.3 12.5 19.8 10.4 39.9 14.1 55.9 10.4 11.6-2.6 21.1-9.6 25.9-20.2 12.5-.1 26.3-5.4 48.3-6.6 14.9-1.2 33.6 5.3 55.1 4.1.6 2.3 1.4 4.6 2.5 6.7v.1c8.3 16.7 23.8 24.3 40.3 23 16.6-1.3 34.1-11 48.3-27.9 13.6-16.4 36-23.2 50.9-32.2 7.4-4.5 13.4-10.1 13.9-18.3.4-8.2-4.4-17.3-15.5-29.7zM223.7 87.3c9.8-22.2 34.2-21.8 44-.4 6.5 14.2 3.6 30.9-4.3 40.4-1.6-.8-5.9-2.6-12.6-4.9 1.1-1.2 3.1-2.7 3.9-4.6 4.8-11.8-.2-27-9.1-27.3-7.3-.5-13.9 10.8-11.8 23-4.1-2-9.4-3.5-13-4.4-1-6.9-.3-14.6 2.9-21.8zM183 75.8c10.1 0 20.8 14.2 19.1 33.5-3.5 1-7.1 2.5-10.2 4.6 1.2-8.9-3.3-20.1-9.6-19.6-8.4.7-9.8 21.2-1.8 28.1 1 .8 1.9-.2-5.9 5.5-15.6-14.6-10.5-52.1 8.4-52.1zm-13.6 60.7c6.2-4.6 13.6-10 14.1-10.5 4.7-4.4 13.5-14.2 27.9-14.2 7.1 0 15.6 2.3 25.9 8.9 6.3 4.1 11.3 4.4 22.6 9.3 8.4 3.5 13.7 9.7 10.5 18.2-2.6 7.1-11 14.4-22.7 18.1-11.1 3.6-19.8 16-38.2 14.9-3.9-.2-7-1-9.6-2.1-8-3.5-12.2-10.4-20-15-8.6-4.8-13.2-10.4-14.7-15.3-1.4-4.9 0-9 4.2-12.3zm3.3 334c-2.7 35.1-43.9 34.4-75.3 18-29.9-15.8-68.6-6.5-76.5-21.9-2.4-4.7-2.4-12.7 2.6-26.4v-.2c2.4-7.6.6-16-.6-23.9-1.2-7.8-1.8-15 .9-20 3.5-6.7 8.5-9.1 14.8-11.3 10.3-3.7 11.8-3.4 19.6-9.9 5.5-5.7 9.5-12.9 14.3-18 5.1-5.5 10-8.1 17.7-6.9 8.1 1.2 15.1 6.8 21.9 16l19.6 35.6c9.5 19.9 43.1 48.4 41 68.9zm-1.4-25.9c-4.1-6.6-9.6-13.6-14.4-19.6 7.1 0 14.2-2.2 16.7-8.9 2.3-6.2 0-14.9-7.4-24.9-13.5-18.2-38.3-32.5-38.3-32.5-13.5-8.4-21.1-18.7-24.6-29.9s-3-23.3-.3-35.2c5.2-22.9 18.6-45.2 27.2-59.2 2.3-1.7.8 3.2-8.7 20.8-8.5 16.1-24.4 53.3-2.6 82.4.6-20.7 5.5-41.8 13.8-61.5 12-27.4 37.3-74.9 39.3-112.7 1.1.8 4.6 3.2 6.2 4.1 4.6 2.7 8.1 6.7 12.6 10.3 12.4 10 28.5 9.2 42.4 1.2 6.2-3.5 11.2-7.5 15.9-9 9.9-3.1 17.8-8.6 22.3-15 7.7 30.4 25.7 74.3 37.2 95.7 6.1 11.4 18.3 35.5 23.6 64.6 3.3-.1 7 .4 10.9 1.4 13.8-35.7-11.7-74.2-23.3-84.9-4.7-4.6-4.9-6.6-2.6-6.5 12.6 11.2 29.2 33.7 35.2 59 2.8 11.6 3.3 23.7.4 35.7 16.4 6.8 35.9 17.9 30.7 34.8-2.2-.1-3.2 0-4.2 0 3.2-10.1-3.9-17.6-22.8-26.1-19.6-8.6-36-8.6-38.3 12.5-12.1 4.2-18.3 14.7-21.4 27.3-2.8 11.2-3.6 24.7-4.4 39.9-.5 7.7-3.6 18-6.8 29-32.1 22.9-76.7 32.9-114.3 7.2zm257.4-11.5c-.9 16.8-41.2 19.9-63.2 46.5-13.2 15.7-29.4 24.4-43.6 25.5s-26.5-4.8-33.7-19.3c-4.7-11.1-2.4-23.1 1.1-36.3 3.7-14.2 9.2-28.8 9.9-40.6.8-15.2 1.7-28.5 4.2-38.7 2.6-10.3 6.6-17.2 13.7-21.1.3-.2.7-.3 1-.5.8 13.2 7.3 26.6 18.8 29.5 12.6 3.3 30.7-7.5 38.4-16.3 9-.3 15.7-.9 22.6 5.1 9.9 8.5 7.1 30.3 17.1 41.6 10.6 11.6 14 19.5 13.7 24.6zM173.3 148.7c2 1.9 4.7 4.5 8 7.1 6.6 5.2 15.8 10.6 27.3 10.6 11.6 0 22.5-5.9 31.8-10.8 4.9-2.6 10.9-7 14.8-10.4s5.9-6.3 3.1-6.6-2.6 2.6-6 5.1c-4.4 3.2-9.7 7.4-13.9 9.8-7.4 4.2-19.5 10.2-29.9 10.2s-18.7-4.8-24.9-9.7c-3.1-2.5-5.7-5-7.7-6.9-1.5-1.4-1.9-4.6-4.3-4.9-1.4-.1-1.8 3.7 1.7 6.5z\"],\n    \"lyft\": [512, 512, [], \"f3c3\", \"M0 81.1h77.8v208.7c0 33.1 15 52.8 27.2 61-12.7 11.1-51.2 20.9-80.2-2.8C7.8 334 0 310.7 0 289V81.1zm485.9 173.5v-22h23.8v-76.8h-26.1c-10.1-46.3-51.2-80.7-100.3-80.7-56.6 0-102.7 46-102.7 102.7V357c16 2.3 35.4-.3 51.7-14 17.1-14 24.8-37.2 24.8-59v-6.7h38.8v-76.8h-38.8v-23.3c0-34.6 52.2-34.6 52.2 0v77.1c0 56.6 46 102.7 102.7 102.7v-76.5c-14.5 0-26.1-11.7-26.1-25.9zm-294.3-99v113c0 15.4-23.8 15.4-23.8 0v-113H91v132.7c0 23.8 8 54 45 63.9 37 9.8 58.2-10.6 58.2-10.6-2.1 13.4-14.5 23.3-34.9 25.3-15.5 1.6-35.2-3.6-45-7.8v70.3c25.1 7.5 51.5 9.8 77.6 4.7 47.1-9.1 76.8-48.4 76.8-100.8V155.1h-77.1v.5z\"],\n    \"magento\": [448, 512, [], \"f3c4\", \"M445.7 127.9V384l-63.4 36.5V164.7L223.8 73.1 65.2 164.7l.4 255.9L2.3 384V128.1L224.2 0l221.5 127.9zM255.6 420.5L224 438.9l-31.8-18.2v-256l-63.3 36.6.1 255.9 94.9 54.9 95.1-54.9v-256l-63.4-36.6v255.9z\"],\n    \"mailchimp\": [448, 512, [], \"f59e\", \"M232.7 73.1l-10-8.4 3.6 12.6c2-1.4 4.2-2.8 6.4-4.2zM110.9 314.3a4.31 4.31 0 0 1-1.7-2.4c-.4-1.8-.2-2.9 1.4-4 1.2-.8 2.2-1.2 2.2-1.7 0-1-4-2-6.8.8a8.68 8.68 0 0 0 .7 11.7c4.2 4.5 10.6 5.5 11.6 11.2a21.12 21.12 0 0 1 .2 2.6 16.21 16.21 0 0 1-.3 2.5c-1.2 5.4-6.4 10.6-14.9 9.3-1.6-.2-2.6-.4-2.9 0-.7.9 3 5.1 9.7 4.9 9.5-.2 17.4-9.9 15.5-20.7-1.9-9.5-11.2-11.5-14.7-14.2zm4.5-10.4c2.4 3.4 1.6 5.3 2.6 6.3a1.06 1.06 0 0 0 1.4.2c1.3-.6 2-2.7 2.1-4.2.3-3.6-1.6-7.7-4.1-10.5a24.19 24.19 0 0 0-14.3-7.7 30.67 30.67 0 0 0-12.1.7 23.35 23.35 0 0 0-2.5.7C74.1 295 67.9 309 70.9 323c.7 3.4 2.2 7.2 4.6 9.7 2.9 3.2 6.2 2.6 4.8-.4a25.81 25.81 0 0 1-2.3-10.2c-.2-6.2 1.2-12.7 5.2-17.7a23.8 23.8 0 0 1 7-5.5 7.74 7.74 0 0 1 1.6-.7 2.35 2.35 0 0 1 .8-.2 25 25 0 0 1 2.6-.7c9.8-2.2 17 2.1 20.2 6.6zm96.3-235.4l-4.9-17.7-2.9 8.8 1.7 6.9zm10.7 11.6l-20.6-6.3 13.6 11.4c2-1.5 4.3-3.3 7-5.1zm91.4 185.3c3.5 2 7.6 1.4 9-1.2s-.3-6.3-3.9-8.2-7.6-1.4-9 1.2.4 6.3 3.9 8.2zm-37.7-1.7c2.5.2 4.2.3 4.6-.4.9-1.5-5.8-6.5-14.9-5a29.92 29.92 0 0 0-3.2.8 3.58 3.58 0 0 0-1.1.4 18.83 18.83 0 0 0-6.1 3.8c-2.2 2.1-2.8 4-2.1 4.5s2.1-.2 4.4-1.2a36.59 36.59 0 0 1 18.4-2.9zm160.5 59.9a23.8 23.8 0 0 0-16.3-12.9 67.48 67.48 0 0 0-6.2-17.6c1.3-1.5 2.6-3 2.8-3.3 10.4-12.9 3.6-31.9-14.2-36.3-10-9.6-19.1-14.2-26.5-17.9-7.1-3.6-4.3-2.2-11-5.2-1.8-8.7-2.4-29-5.2-43.2-2.5-12.8-7.7-22.1-15.6-28.1-3.2-6.8-7.6-13.7-12.9-18.8 24.8-38.1 31.4-75.7 13.2-95.4-8.1-8.8-20.1-12.9-34.5-12.9-20.3 0-45.2 8.3-70.3 23.5 0 0-16.4-13.2-16.7-13.5C153-13.2-45.2 230.7 24.7 284l18.1 13.8c-11.3 31.5 4.4 69.1 37.3 81.2a56.71 56.71 0 0 0 23.3 3.5s53.1 97.4 165.1 97.4c129.6 0 162.5-126.7 162.9-127.9 0 0 10.5-15.5 5.2-28.4zM30.1 267.8c-14.2-24 10.5-73.2 28.1-101.2C101.7 97.5 174 43 206.8 50.7l9-3.5s24.7 20.8 24.7 20.9c17-10.2 38.6-20.6 58.8-22.6-12.3 2.8-27.3 9.2-45.1 20-.4.2-42 28.3-67.4 53.5-13.8 13.7-69.5 80.4-69.4 80.3 10.2-19.2 16.9-28.7 32.9-48.9 9.1-11.4 18.8-22.6 28.7-32.8 4.6-4.8 9.3-9.4 13.9-13.7 3.2-3 6.4-5.9 9.7-8.6 1.5-1.3 3-2.5 4.4-3.7l-32.6-26.9 1.7 12.1L200 97.6s-21 14.1-31.4 23c-41.8 35.7-82.8 90.4-98.1 143.7h.7c-7.6 4.2-15.1 10.9-21.7 20-.1 0-17-12.4-19.4-16.5zm69.1 100.1c-25 0-45.3-21.4-45.3-47.7s20.3-47.7 45.3-47.7a42.53 42.53 0 0 1 18.2 4s9.6 4.9 12.3 27.8a111.07 111.07 0 0 0 4.2-13.1 82.38 82.38 0 0 1 4.2 30.8c2.7-3.6 5.5-10.3 5.5-10.3 5.2 29.4-16.2 56.2-44.4 56.2zM155 199.4s19.5-37.1 62.3-61.6c-3.2-.5-11 .5-12.4.6 7.8-6.7 22.2-11.2 32.2-13.2-2.9-1.9-9.9-2.3-13.3-2.4h-2.2c9.4-5.2 26.8-8.3 42.7-5.5-2-2.6-6.5-4.6-9.7-5.5-.3-.1-1.5-.4-1.5-.4l1.2-.3c9.5-1.8 20.7.1 29.5 3.7-1-2.3-3.5-5-5.3-6.7-.2-.2-1.3-1-1.3-1a69.13 69.13 0 0 1 24.7 10.5 30.36 30.36 0 0 0-4.7-6.3c8.8 2.5 18.7 8.8 23 17.8a6.89 6.89 0 0 1 .4 1c-16.7-12.8-65.4-9.2-114.2 22.4-22.4 14.6-38.7 30.4-51.4 46.9zm263.4 146.3c-.6 1.2-6.7 34.4-41.9 62-44.4 34.9-102.7 31.3-124.7 11.8-11.8-11-16.9-26.7-16.9-26.7s-1.3 8.9-1.6 12.3c-8.9-15.1-8.1-33.5-8.1-33.5s-4.7 8.8-6.9 13.8c-6.5-16.6-3.2-33.8-3.2-33.8l-5.2 7.7s-2.4-18.8 3.5-34.5c6.4-16.7 18.7-28.9 21.1-30.4-9.4-3-20.1-11.5-20.1-11.5a30.21 30.21 0 0 0 7.3-.4s-18.9-13.5-22.2-34.3c2.7 3.4 8.5 7.2 8.5 7.2-1.9-5.4-3-17.5-1.2-29.4 3.6-22.7 22.3-37.4 43.4-37.3 22.5.2 37.7 4.9 56.6-12.5 4-3.7 7.2-6.9 12.8-8.1a17.25 17.25 0 0 1 13.8 1.5c10.2 6.1 12.5 22 13.6 33.7 4.1 43.3 2.4 35.6 19.9 44.5 8.4 4.2 17.7 8.3 28.4 19.7l.1.1h.1c9 .2 13.6 7.3 9.5 12.5-30.2 36.1-72.5 53.4-119.5 54.8-1.9 0-6.3.1-6.3.1-19 .6-25.2 25.2-13.3 40 7.5 9.4 22 12.4 34 12.5l.2-.1c51.5 1 103.1-35.4 112.1-55.4.1-.2.6-1.4.6-1.4-2.1 2.4-52.2 49.6-113.1 47.9a67.44 67.44 0 0 1-12.9-1.6c-8.3-1.9-14.5-5.6-17-13.8a98.53 98.53 0 0 0 18.9 1.7c44 0 75.6-20 72.3-20.2a1.09 1.09 0 0 0-.5.1c-5.1 1.2-58 21.7-91.4 11.2a13.52 13.52 0 0 1 .5-2.9c3-10 8.2-8.6 16.8-8.9a185.12 185.12 0 0 0 73.5-17.4c19.6-9.3 34.6-21.3 40-27.4 7 11.8 7 26.9 7 26.9a20.25 20.25 0 0 1 6.4-1c11.3 0 13.7 10.2 5.1 20.5zM269 358.9zm.7 4.1c0-.1-.1-.1-.1-.2 0 .1 0 .1.1.2 0-.1-.1-.2-.1-.4 0 .2 0 .3.1.4zm62.9-110.4c-.5 3.5 1.1 6.7 3.7 7.1s5.1-2.1 5.7-5.7-1.1-6.7-3.7-7.1-5.1 2.2-5.7 5.7zm-58-1.2c4 1.6 6.8 2.8 7.5 1.9.4-.4.1-1.5-.8-2.9-2.5-3.7-7.3-6.8-11.6-8.4a30.66 30.66 0 0 0-29.5 5.1c-4.1 3.4-6 6.8-4.1 7.1 1.2.2 3.6-.8 7-2.1 13.5-5.1 21.1-4.5 31.5-.7zm46.7-29.2a43 43 0 0 0 2.1 11.7 27.11 27.11 0 0 1 14.5 2.6c-.3-12.3-7.5-26.2-12.9-24.3-3.2 1.1-3.8 6.6-3.7 10z\"],\n    \"mandalorian\": [448, 512, [], \"f50f\", \"M232.27 511.89c-1-3.26-1.69-15.83-1.39-24.58.55-15.89 1-24.72 1.4-28.76.64-6.2 2.87-20.72 3.28-21.38.6-1 .4-27.87-.24-33.13-.31-2.58-.63-11.9-.69-20.73-.13-16.47-.53-20.12-2.73-24.76-1.1-2.32-1.23-3.84-1-11.43a92.38 92.38 0 0 0-.34-12.71c-2-13-3.46-27.7-3.25-33.9s.43-7.15 2.06-9.67c3.05-4.71 6.51-14 8.62-23.27 2.26-9.86 3.88-17.18 4.59-20.74a109.54 109.54 0 0 1 4.42-15.05c2.27-6.25 2.49-15.39.37-15.39-.3 0-1.38 1.22-2.41 2.71s-4.76 4.8-8.29 7.36c-8.37 6.08-11.7 9.39-12.66 12.58s-1 7.23-.16 7.76c.34.21 1.29 2.4 2.11 4.88a28.83 28.83 0 0 1 .72 15.36c-.39 1.77-1 5.47-1.46 8.23s-1 6.46-1.25 8.22a9.85 9.85 0 0 1-1.55 4.26c-1 1-1.14.91-2.05-.53a14.87 14.87 0 0 1-1.44-4.75c-.25-1.74-1.63-7.11-3.08-11.93-3.28-10.9-3.52-16.15-1-21a14.24 14.24 0 0 0 1.67-4.61c0-2.39-2.2-5.32-7.41-9.89-7-6.18-8.63-7.92-10.23-11.3-1.71-3.6-3.06-4.06-4.54-1.54-1.78 3-2.6 9.11-3 22l-.34 12.19 2 2.25c3.21 3.7 12.07 16.45 13.78 19.83 3.41 6.74 4.34 11.69 4.41 23.56s.95 22.75 2 24.71c.36.66.51 1.35.34 1.52s.41 2.09 1.29 4.27a38.14 38.14 0 0 1 2.06 9 91 91 0 0 0 1.71 10.37c2.23 9.56 2.77 14.08 2.39 20.14-.2 3.27-.53 11.07-.73 17.32-1.31 41.76-1.85 58-2 61.21-.12 2-.39 11.51-.6 21.07-.36 16.3-1.3 27.37-2.42 28.65-.64.73-8.07-4.91-12.52-9.49-3.75-3.87-4-4.79-2.83-9.95.7-3 2.26-18.29 3.33-32.62.36-4.78.81-10.5 1-12.71.83-9.37 1.66-20.35 2.61-34.78.56-8.46 1.33-16.44 1.72-17.73s.89-9.89 1.13-19.11l.43-16.77-2.26-4.3c-1.72-3.28-4.87-6.94-13.22-15.34-6-6.07-11.84-12.3-12.91-13.85l-1.95-2.81.75-10.9c1.09-15.71 1.1-48.57 0-59.06l-.89-8.7-3.28-4.52c-5.86-8.08-5.8-7.75-6.22-33.27-.1-6.07-.38-11.5-.63-12.06-.83-1.87-3.05-2.66-8.54-3.05-8.86-.62-11-1.9-23.85-14.55-6.15-6-12.34-12-13.75-13.19-2.81-2.42-2.79-2-.56-9.63l1.35-4.65-1.69-3a32.22 32.22 0 0 0-2.59-4.07c-1.33-1.51-5.5-10.89-6-13.49a4.24 4.24 0 0 1 .87-3.9c2.23-2.86 3.4-5.68 4.45-10.73 2.33-11.19 7.74-26.09 10.6-29.22 3.18-3.47 7.7-1 9.41 5 1.34 4.79 1.37 9.79.1 18.55a101.2 101.2 0 0 0-1 11.11c0 4 .19 4.69 2.25 7.39 3.33 4.37 7.73 7.41 15.2 10.52a18.67 18.67 0 0 1 4.72 2.85c11.17 10.72 18.62 16.18 22.95 16.85 5.18.8 8 4.54 10 13.39 1.31 5.65 4 11.14 5.46 11.14a9.38 9.38 0 0 0 3.33-1.39c2-1.22 2.25-1.73 2.25-4.18a132.88 132.88 0 0 0-2-17.84c-.37-1.66-.78-4.06-.93-5.35s-.61-3.85-1-5.69c-2.55-11.16-3.65-15.46-4.1-16-1.55-2-4.08-10.2-4.93-15.92-1.64-11.11-4-14.23-12.91-17.39A43.15 43.15 0 0 1 165.24 78c-1.15-1-4-3.22-6.35-5.06s-4.41-3.53-4.6-3.76a22.7 22.7 0 0 0-2.69-2c-6.24-4.22-8.84-7-11.26-12l-2.44-5-.22-13-.22-13 6.91-6.55c3.95-3.75 8.48-7.35 10.59-8.43 3.31-1.69 4.45-1.89 11.37-2 8.53-.19 10.12 0 11.66 1.56s1.36 6.4-.29 8.5a6.66 6.66 0 0 0-1.34 2.32c0 .58-2.61 4.91-5.42 9a30.39 30.39 0 0 0-2.37 6.82c20.44 13.39 21.55 3.77 14.07 29L194 66.92c3.11-8.66 6.47-17.26 8.61-26.22.29-7.63-12-4.19-15.4-8.68-2.33-5.93 3.13-14.18 6.06-19.2 1.6-2.34 6.62-4.7 8.82-4.15.88.22 4.16-.35 7.37-1.28a45.3 45.3 0 0 1 7.55-1.68 29.57 29.57 0 0 0 6-1.29c3.65-1.11 4.5-1.17 6.35-.4a29.54 29.54 0 0 0 5.82 1.36 18.18 18.18 0 0 1 6 1.91 22.67 22.67 0 0 0 5 2.17c2.51.68 3 .57 7.05-1.67l4.35-2.4L268.32 5c10.44-.4 10.81-.47 15.26-2.68L288.16 0l2.46 1.43c1.76 1 3.14 2.73 4.85 6 2.36 4.51 2.38 4.58 1.37 7.37-.88 2.44-.89 3.3-.1 6.39a35.76 35.76 0 0 0 2.1 5.91 13.55 13.55 0 0 1 1.31 4c.31 4.33 0 5.3-2.41 6.92-2.17 1.47-7 7.91-7 9.34a14.77 14.77 0 0 1-1.07 3c-5 11.51-6.76 13.56-14.26 17-9.2 4.2-12.3 5.19-16.21 5.19-3.1 0-4 .25-4.54 1.26a18.33 18.33 0 0 1-4.09 3.71 13.62 13.62 0 0 0-4.38 4.78 5.89 5.89 0 0 1-2.49 2.91 6.88 6.88 0 0 0-2.45 1.71 67.62 67.62 0 0 1-7 5.38c-3.33 2.34-6.87 5-7.87 6A7.27 7.27 0 0 1 224 100a5.76 5.76 0 0 0-2.13 1.65c-1.31 1.39-1.49 2.11-1.14 4.6a36.45 36.45 0 0 0 1.42 5.88c1.32 3.8 1.31 7.86 0 10.57s-.89 6.65 1.35 9.59c2 2.63 2.16 4.56.71 8.84a33.45 33.45 0 0 0-1.06 8.91c0 4.88.22 6.28 1.46 8.38s1.82 2.48 3.24 2.32c2-.23 2.3-1.05 4.71-12.12 2.18-10 3.71-11.92 13.76-17.08 2.94-1.51 7.46-4 10-5.44s6.79-3.69 9.37-4.91a40.09 40.09 0 0 0 15.22-11.67c7.11-8.79 10-16.22 12.85-33.3a18.37 18.37 0 0 1 2.86-7.73 20.39 20.39 0 0 0 2.89-7.31c1-5.3 2.85-9.08 5.58-11.51 4.7-4.18 6-1.09 4.59 10.87-.46 3.86-1.1 10.33-1.44 14.38l-.61 7.36 4.45 4.09 4.45 4.09.11 8.42c.06 4.63.47 9.53.92 10.89l.82 2.47-6.43 6.28c-8.54 8.33-12.88 13.93-16.76 21.61-1.77 3.49-3.74 7.11-4.38 8-2.18 3.11-6.46 13-8.76 20.26l-2.29 7.22-7 6.49c-3.83 3.57-8 7.25-9.17 8.17-3.05 2.32-4.26 5.15-4.26 10a14.62 14.62 0 0 0 1.59 7.26 42 42 0 0 1 2.09 4.83 9.28 9.28 0 0 0 1.57 2.89c1.4 1.59 1.92 16.12.83 23.22-.68 4.48-3.63 12-4.7 12-1.79 0-4.06 9.27-5.07 20.74-.18 2-.62 5.94-1 8.7s-1 10-1.35 16.05c-.77 12.22-.19 18.77 2 23.15 3.41 6.69.52 12.69-11 22.84l-4 3.49.07 5.19a40.81 40.81 0 0 0 1.14 8.87c4.61 16 4.73 16.92 4.38 37.13-.46 26.4-.26 40.27.63 44.15a61.31 61.31 0 0 1 1.08 7c.17 2 .66 5.33 1.08 7.36.47 2.26.78 11 .79 22.74v19.06l-1.81 2.63c-2.71 3.91-15.11 13.54-15.49 12.29zm29.53-45.11c-.18-.3-.33-6.87-.33-14.59 0-14.06-.89-27.54-2.26-34.45-.4-2-.81-9.7-.9-17.06-.15-11.93-1.4-24.37-2.64-26.38-.66-1.07-3-17.66-3-21.3 0-4.23 1-6 5.28-9.13s4.86-3.14 5.48-.72c.28 1.1 1.45 5.62 2.6 10 3.93 15.12 4.14 16.27 4.05 21.74-.1 5.78-.13 6.13-1.74 17.73-1 7.07-1.17 12.39-1 28.43.17 19.4-.64 35.73-2 41.27-.71 2.78-2.8 5.48-3.43 4.43zm-71-37.58a101 101 0 0 1-1.73-10.79 100.5 100.5 0 0 0-1.73-10.79 37.53 37.53 0 0 1-1-6.49c-.31-3.19-.91-7.46-1.33-9.48-1-4.79-3.35-19.35-3.42-21.07 0-.74-.34-4.05-.7-7.36-.67-6.21-.84-27.67-.22-28.29 1-1 6.63 2.76 11.33 7.43l5.28 5.25-.45 6.47c-.25 3.56-.6 10.23-.78 14.83s-.49 9.87-.67 11.71-.61 9.36-.94 16.72c-.79 17.41-1.94 31.29-2.65 32a.62.62 0 0 1-1-.14zm-87.18-266.59c21.07 12.79 17.84 14.15 28.49 17.66 13 4.29 18.87 7.13 23.15 16.87C111.6 233.28 86.25 255 78.55 268c-31 52-6 101.59 62.75 87.21-14.18 29.23-78 28.63-98.68-4.9-24.68-39.95-22.09-118.3 61-187.66zm210.79 179c56.66 6.88 82.32-37.74 46.54-89.23 0 0-26.87-29.34-64.28-68 3-15.45 9.49-32.12 30.57-53.82 89.2 63.51 92 141.61 92.46 149.36 4.3 70.64-78.7 91.18-105.29 61.71z\"],\n    \"markdown\": [640, 512, [], \"f60f\", \"M593.8 59.1H46.2C20.7 59.1 0 79.8 0 105.2v301.5c0 25.5 20.7 46.2 46.2 46.2h547.7c25.5 0 46.2-20.7 46.1-46.1V105.2c0-25.4-20.7-46.1-46.2-46.1zM338.5 360.6H277v-120l-61.5 76.9-61.5-76.9v120H92.3V151.4h61.5l61.5 76.9 61.5-76.9h61.5v209.2zm135.3 3.1L381.5 256H443V151.4h61.5V256H566z\"],\n    \"mastodon\": [448, 512, [], \"f4f6\", \"M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z\"],\n    \"maxcdn\": [512, 512, [], \"f136\", \"M461.1 442.7h-97.4L415.6 200c2.3-10.2.9-19.5-4.4-25.7-5-6.1-13.7-9.6-24.2-9.6h-49.3l-59.5 278h-97.4l59.5-278h-83.4l-59.5 278H0l59.5-278-44.6-95.4H387c39.4 0 75.3 16.3 98.3 44.9 23.3 28.6 31.8 67.4 23.6 105.9l-47.8 222.6z\"],\n    \"medapps\": [320, 512, [], \"f3c6\", \"M118.3 238.4c3.5-12.5 6.9-33.6 13.2-33.6 8.3 1.8 9.6 23.4 18.6 36.6 4.6-23.5 5.3-85.1 14.1-86.7 9-.7 19.7 66.5 22 77.5 9.9 4.1 48.9 6.6 48.9 6.6 1.9 7.3-24 7.6-40 7.8-4.6 14.8-5.4 27.7-11.4 28-4.7.2-8.2-28.8-17.5-49.6l-9.4 65.5c-4.4 13-15.5-22.5-21.9-39.3-3.3-.1-62.4-1.6-47.6-7.8l31-5zM228 448c21.2 0 21.2-32 0-32H92c-21.2 0-21.2 32 0 32h136zm-24 64c21.2 0 21.2-32 0-32h-88c-21.2 0-21.2 32 0 32h88zm34.2-141.5c3.2-18.9 5.2-36.4 11.9-48.8 7.9-14.7 16.1-28.1 24-41 24.6-40.4 45.9-75.2 45.9-125.5C320 69.6 248.2 0 160 0S0 69.6 0 155.2c0 50.2 21.3 85.1 45.9 125.5 7.9 12.9 16 26.3 24 41 6.7 12.5 8.7 29.8 11.9 48.9 3.5 21 36.1 15.7 32.6-5.1-3.6-21.7-5.6-40.7-15.3-58.6C66.5 246.5 33 211.3 33 155.2 33 87.3 90 32 160 32s127 55.3 127 123.2c0 56.1-33.5 91.3-66.1 151.6-9.7 18-11.7 37.4-15.3 58.6-3.4 20.6 29 26.4 32.6 5.1z\"],\n    \"medium\": [448, 512, [], \"f23a\", \"M0 32v448h448V32H0zm372.2 106.1l-24 23c-2.1 1.6-3.1 4.2-2.7 6.7v169.3c-.4 2.6.6 5.2 2.7 6.7l23.5 23v5.1h-118V367l24.3-23.6c2.4-2.4 2.4-3.1 2.4-6.7V199.8l-67.6 171.6h-9.1L125 199.8v115c-.7 4.8 1 9.7 4.4 13.2l31.6 38.3v5.1H71.2v-5.1l31.6-38.3c3.4-3.5 4.9-8.4 4.1-13.2v-133c.4-3.7-1-7.3-3.8-9.8L75 138.1V133h87.3l67.4 148L289 133.1h83.2v5z\"],\n    \"medium-m\": [512, 512, [], \"f3c7\", \"M71.5 142.3c.6-5.9-1.7-11.8-6.1-15.8L20.3 72.1V64h140.2l108.4 237.7L364.2 64h133.7v8.1l-38.6 37c-3.3 2.5-5 6.7-4.3 10.8v272c-.7 4.1 1 8.3 4.3 10.8l37.7 37v8.1H307.3v-8.1l39.1-37.9c3.8-3.8 3.8-5 3.8-10.8V171.2L241.5 447.1h-14.7L100.4 171.2v184.9c-1.1 7.8 1.5 15.6 7 21.2l50.8 61.6v8.1h-144v-8L65 377.3c5.4-5.6 7.9-13.5 6.5-21.2V142.3z\"],\n    \"medrt\": [544, 512, [], \"f3c8\", \"M113.7 256c0 121.8 83.9 222.8 193.5 241.1-18.7 4.5-38.2 6.9-58.2 6.9C111.4 504 0 393 0 256S111.4 8 248.9 8c20.1 0 39.6 2.4 58.2 6.9C197.5 33.2 113.7 134.2 113.7 256m297.4 100.3c-77.7 55.4-179.6 47.5-240.4-14.6 5.5 14.1 12.7 27.7 21.7 40.5 61.6 88.2 182.4 109.3 269.7 47 87.3-62.3 108.1-184.3 46.5-272.6-9-12.9-19.3-24.3-30.5-34.2 37.4 78.8 10.7 178.5-67 233.9m-218.8-244c-1.4 1-2.7 2.1-4 3.1 64.3-17.8 135.9 4 178.9 60.5 35.7 47 42.9 106.6 24.4 158 56.7-56.2 67.6-142.1 22.3-201.8-50-65.5-149.1-74.4-221.6-19.8M296 224c-4.4 0-8-3.6-8-8v-40c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v40c0 4.4-3.6 8-8 8h-40c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h40c4.4 0 8 3.6 8 8v40c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-40c0-4.4 3.6-8 8-8h40c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-40z\"],\n    \"meetup\": [512, 512, [], \"f2e0\", \"M99 414.3c1.1 5.7-2.3 11.1-8 12.3-5.4 1.1-10.9-2.3-12-8-1.1-5.4 2.3-11.1 7.7-12.3 5.4-1.2 11.1 2.3 12.3 8zm143.1 71.4c-6.3 4.6-8 13.4-3.7 20 4.6 6.6 13.4 8.3 20 3.7 6.3-4.6 8-13.4 3.4-20-4.2-6.5-13.1-8.3-19.7-3.7zm-86-462.3c6.3-1.4 10.3-7.7 8.9-14-1.1-6.6-7.4-10.6-13.7-9.1-6.3 1.4-10.3 7.7-9.1 14 1.4 6.6 7.6 10.6 13.9 9.1zM34.4 226.3c-10-6.9-23.7-4.3-30.6 6-6.9 10-4.3 24 5.7 30.9 10 7.1 23.7 4.6 30.6-5.7 6.9-10.4 4.3-24.1-5.7-31.2zm272-170.9c10.6-6.3 13.7-20 7.7-30.3-6.3-10.6-19.7-14-30-7.7s-13.7 20-7.4 30.6c6 10.3 19.4 13.7 29.7 7.4zm-191.1 58c7.7-5.4 9.4-16 4.3-23.7s-15.7-9.4-23.1-4.3c-7.7 5.4-9.4 16-4.3 23.7 5.1 7.8 15.6 9.5 23.1 4.3zm372.3 156c-7.4 1.7-12.3 9.1-10.6 16.9 1.4 7.4 8.9 12.3 16.3 10.6 7.4-1.4 12.3-8.9 10.6-16.6-1.5-7.4-8.9-12.3-16.3-10.9zm39.7-56.8c-1.1-5.7-6.6-9.1-12-8-5.7 1.1-9.1 6.9-8 12.6 1.1 5.4 6.6 9.1 12.3 8 5.4-1.5 9.1-6.9 7.7-12.6zM447 138.9c-8.6 6-10.6 17.7-4.9 26.3 5.7 8.6 17.4 10.6 26 4.9 8.3-6 10.3-17.7 4.6-26.3-5.7-8.7-17.4-10.9-25.7-4.9zm-6.3 139.4c26.3 43.1 15.1 100-26.3 129.1-17.4 12.3-37.1 17.7-56.9 17.1-12 47.1-69.4 64.6-105.1 32.6-1.1.9-2.6 1.7-3.7 2.9-39.1 27.1-92.3 17.4-119.4-22.3-9.7-14.3-14.6-30.6-15.1-46.9-65.4-10.9-90-94-41.1-139.7-28.3-46.9.6-107.4 53.4-114.9C151.6 70 234.1 38.6 290.1 82c67.4-22.3 136.3 29.4 130.9 101.1 41.1 12.6 52.8 66.9 19.7 95.2zm-70 74.3c-3.1-20.6-40.9-4.6-43.1-27.1-3.1-32 43.7-101.1 40-128-3.4-24-19.4-29.1-33.4-29.4-13.4-.3-16.9 2-21.4 4.6-2.9 1.7-6.6 4.9-11.7-.3-6.3-6-11.1-11.7-19.4-12.9-12.3-2-17.7 2-26.6 9.7-3.4 2.9-12 12.9-20 9.1-3.4-1.7-15.4-7.7-24-11.4-16.3-7.1-40 4.6-48.6 20-12.9 22.9-38 113.1-41.7 125.1-8.6 26.6 10.9 48.6 36.9 47.1 11.1-.6 18.3-4.6 25.4-17.4 4-7.4 41.7-107.7 44.6-112.6 2-3.4 8.9-8 14.6-5.1 5.7 3.1 6.9 9.4 6 15.1-1.1 9.7-28 70.9-28.9 77.7-3.4 22.9 26.9 26.6 38.6 4 3.7-7.1 45.7-92.6 49.4-98.3 4.3-6.3 7.4-8.3 11.7-8 3.1 0 8.3.9 7.1 10.9-1.4 9.4-35.1 72.3-38.9 87.7-4.6 20.6 6.6 41.4 24.9 50.6 11.4 5.7 62.5 15.7 58.5-11.1zm5.7 92.3c-10.3 7.4-12.9 22-5.7 32.6 7.1 10.6 21.4 13.1 32 6 10.6-7.4 13.1-22 6-32.6-7.4-10.6-21.7-13.5-32.3-6z\"],\n    \"megaport\": [496, 512, [], \"f5a3\", \"M214.5 209.6v66.2l33.5 33.5 33.3-33.3v-66.4l-33.4-33.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm145.1 414.4L367 441.6l-26-19.2v-65.5l-33.4-33.4-33.4 33.4v65.5L248 441.6l-26.1-19.2v-65.5l-33.4-33.4-33.5 33.4v65.5l-26.1 19.2-26.1-19.2v-87l59.5-59.5V188l59.5-59.5V52.9l26.1-19.2L274 52.9v75.6l59.5 59.5v87.6l59.7 59.7v87.1z\"],\n    \"mendeley\": [640, 512, [], \"f7b3\", \"M624.6 325.2c-12.3-12.4-29.7-19.2-48.4-17.2-43.3-1-49.7-34.9-37.5-98.8 22.8-57.5-14.9-131.5-87.4-130.8-77.4.7-81.7 82-130.9 82-48.1 0-54-81.3-130.9-82-72.9-.8-110.1 73.3-87.4 130.8 12.2 63.9 5.8 97.8-37.5 98.8-21.2-2.3-37 6.5-53 22.5-19.9 19.7-19.3 94.8 42.6 102.6 47.1 5.9 81.6-42.9 61.2-87.8-47.3-103.7 185.9-106.1 146.5-8.2-.1.1-.2.2-.3.4-26.8 42.8 6.8 97.4 58.8 95.2 52.1 2.1 85.4-52.6 58.8-95.2-.1-.2-.2-.3-.3-.4-39.4-97.9 193.8-95.5 146.5 8.2-4.6 10-6.7 21.3-5.7 33 4.9 53.4 68.7 74.1 104.9 35.2 17.8-14.8 23.1-65.6 0-88.3zm-303.9-19.1h-.6c-43.4 0-62.8-37.5-62.8-62.8 0-34.7 28.2-62.8 62.8-62.8h.6c34.7 0 62.8 28.1 62.8 62.8 0 25-19.2 62.8-62.8 62.8z\"],\n    \"microsoft\": [448, 512, [], \"f3ca\", \"M0 32h214.6v214.6H0V32zm233.4 0H448v214.6H233.4V32zM0 265.4h214.6V480H0V265.4zm233.4 0H448V480H233.4V265.4z\"],\n    \"mix\": [448, 512, [], \"f3cb\", \"M0 64v348.9c0 56.2 88 58.1 88 0V174.3c7.9-52.9 88-50.4 88 6.5v175.3c0 57.9 96 58 96 0V240c5.3-54.7 88-52.5 88 4.3v23.8c0 59.9 88 56.6 88 0V64H0z\"],\n    \"mixcloud\": [640, 512, [], \"f289\", \"M424.43 219.729C416.124 134.727 344.135 68 256.919 68c-72.266 0-136.224 46.516-159.205 114.074-54.545 8.029-96.63 54.822-96.63 111.582 0 62.298 50.668 112.966 113.243 112.966h289.614c52.329 0 94.969-42.362 94.969-94.693 0-45.131-32.118-83.063-74.48-92.2zm-20.489 144.53H114.327c-39.04 0-70.881-31.564-70.881-70.604s31.841-70.604 70.881-70.604c18.827 0 36.548 7.475 49.838 20.766 19.963 19.963 50.133-10.227 30.18-30.18-14.675-14.398-32.672-24.365-52.053-29.349 19.935-44.3 64.79-73.926 114.628-73.926 69.496 0 125.979 56.483 125.979 125.702 0 13.568-2.215 26.857-6.369 39.594-8.943 27.517 32.133 38.939 40.147 13.29 2.769-8.306 4.984-16.889 6.369-25.472 19.381 7.476 33.502 26.303 33.502 48.453 0 28.795-23.535 52.33-52.607 52.33zm235.069-52.33c0 44.024-12.737 86.386-37.102 122.657-4.153 6.092-10.798 9.414-17.72 9.414-16.317 0-27.127-18.826-17.443-32.949 19.381-29.349 29.903-63.682 29.903-99.122s-10.521-69.773-29.903-98.845c-15.655-22.831 19.361-47.24 35.163-23.534 24.366 35.993 37.102 78.356 37.102 122.379zm-70.88 0c0 31.565-9.137 62.021-26.857 88.325-4.153 6.091-10.798 9.136-17.72 9.136-17.201 0-27.022-18.979-17.443-32.948 13.013-19.104 19.658-41.255 19.658-64.513 0-22.981-6.645-45.408-19.658-64.512-15.761-22.986 19.008-47.095 35.163-23.535 17.719 26.026 26.857 56.483 26.857 88.047z\"],\n    \"mizuni\": [496, 512, [], \"f3cc\", \"M248 8C111 8 0 119.1 0 256c0 137 111 248 248 248s248-111 248-248C496 119.1 385 8 248 8zm-80 351.9c-31.4 10.6-58.8 27.3-80 48.2V136c0-22.1 17.9-40 40-40s40 17.9 40 40v223.9zm120-9.9c-12.9-2-26.2-3.1-39.8-3.1-13.8 0-27.2 1.1-40.2 3.1V136c0-22.1 17.9-40 40-40s40 17.9 40 40v214zm120 57.7c-21.2-20.8-48.6-37.4-80-48V136c0-22.1 17.9-40 40-40s40 17.9 40 40v271.7z\"],\n    \"modx\": [448, 512, [], \"f285\", \"M356 241.8l36.7 23.7V480l-133-83.8L356 241.8zM440 75H226.3l-23 37.8 153.5 96.5L440 75zm-89 142.8L55.2 32v214.5l46 29L351 217.8zM97 294.2L8 437h213.7l125-200.5L97 294.2z\"],\n    \"monero\": [496, 512, [], \"f3d0\", \"M352 384h108.4C417 455.9 338.1 504 248 504S79 455.9 35.6 384H144V256.2L248 361l104-105v128zM88 336V128l159.4 159.4L408 128v208h74.8c8.5-25.1 13.2-52 13.2-80C496 119 385 8 248 8S0 119 0 256c0 28 4.6 54.9 13.2 80H88z\"],\n    \"napster\": [496, 512, [], \"f3d2\", \"M298.3 373.6c-14.2 13.6-31.3 24.1-50.4 30.5-19-6.4-36.2-16.9-50.3-30.5h100.7zm44-199.6c20-16.9 43.6-29.2 69.6-36.2V299c0 219.4-328 217.6-328 .3V137.7c25.9 6.9 49.6 19.6 69.5 36.4 56.8-40 132.5-39.9 188.9-.1zm-208.8-58.5c64.4-60 164.3-60.1 228.9-.2-7.1 3.5-13.9 7.3-20.6 11.5-58.7-30.5-129.2-30.4-187.9.1-6.3-4-13.9-8.2-20.4-11.4zM43.8 93.2v69.3c-58.4 36.5-58.4 121.1.1 158.3 26.4 245.1 381.7 240.3 407.6 1.5l.3-1.7c58.7-36.3 58.9-121.7.2-158.2V93.2c-17.3.5-34 3-50.1 7.4-82-91.5-225.5-91.5-307.5.1-16.3-4.4-33.1-7-50.6-7.5zM259.2 352s36-.3 61.3-1.5c10.2-.5 21.1-4 25.5-6.5 26.3-15.1 25.4-39.2 26.2-47.4-79.5-.6-99.9-3.9-113 55.4zm-135.5-55.3c.8 8.2-.1 32.3 26.2 47.4 4.4 2.5 15.2 6 25.5 6.5 25.3 1.1 61.3 1.5 61.3 1.5-13.2-59.4-33.7-56.1-113-55.4zm169.1 123.4c-3.2-5.3-6.9-7.3-6.9-7.3-24.8 7.3-52.2 6.9-75.9 0 0 0-2.9 1.5-6.4 6.6-2.8 4.1-3.7 9.6-3.7 9.6 29.1 17.6 67.1 17.6 96.2 0-.1-.1-.3-4-3.3-8.9z\"],\n    \"neos\": [512, 512, [], \"f612\", \"M415.44 512h-95.11L212.12 357.46v91.1L125.69 512H28V29.82L68.47 0h108.05l123.74 176.13V63.45L386.69 0h97.69v461.5zM38.77 35.27V496l72-52.88V194l215.5 307.64h84.79l52.35-38.17h-78.27L69 13zm82.54 466.61l80-58.78v-101l-79.76-114.4v220.94L49 501.89h72.34zM80.63 10.77l310.6 442.57h82.37V10.77h-79.75v317.56L170.91 10.77zM311 191.65l72 102.81V15.93l-72 53v122.72z\"],\n    \"nimblr\": [384, 512, [], \"f5a8\", \"M246.6 299.29c15.57 0 27.15 11.46 27.15 27s-11.62 27-27.15 27c-15.7 0-27.15-11.57-27.15-27s11.55-27 27.15-27zM113 326.25c0-15.61 11.68-27 27.15-27s27.15 11.46 27.15 27-11.47 27-27.15 27c-15.44 0-27.15-11.31-27.15-27M191.76 159C157 159 89.45 178.77 59.25 227L14 0v335.48C14 433.13 93.61 512 191.76 512s177.76-78.95 177.76-176.52S290.13 159 191.76 159zm0 308.12c-73.27 0-132.51-58.9-132.51-131.59s59.24-131.59 132.51-131.59 132.51 58.86 132.51 131.54S265 467.07 191.76 467.07z\"],\n    \"nintendo-switch\": [448, 512, [], \"f418\", \"M95.9 33.5c-44.6 8-80.5 41-91.8 84.4C0 133.6-.3 142.8.2 264.4.4 376 .5 378.6 2.4 387.3c10.3 46.5 43.3 79.6 90.3 90.5 6.1 1.4 13.9 1.7 64.1 1.9 51.9.4 57.3.3 58.7-1.1 1.4-1.4 1.5-19.3 1.5-222.2 0-150.5-.3-221.3-.9-222.6-.9-1.7-2.5-1.8-56.9-1.7-44.2.1-57.5.4-63.3 1.4zm83.9 222.6V444l-37.8-.5c-34.8-.4-38.5-.6-45.5-2.3-29.9-7.7-52-30.7-58.3-60.7-2-9.4-2-240.1-.1-249.3 5.6-26.1 23.7-47.7 48-57.4 12.2-4.9 17.9-5.5 57.6-5.6l35.9-.1v188zm-75.9-131.2c-5.8 1.1-14.7 5.6-19.5 9.7-9.7 8.4-14.6 20.4-13.8 34.5.4 7.3.8 9.3 3.8 15.2 4.4 9 10.9 15.6 19.9 20 6.2 3.1 7.8 3.4 15.9 3.7 7.3.3 9.9 0 14.8-1.7 20.1-6.8 32.3-26.3 28.8-46.4-3.9-23.7-26.6-39.7-49.9-35zm158.2-92.3c-.4.3-.6 100.8-.6 223.5 0 202.3.1 222.8 1.5 223.4 2.5.9 74.5.6 83.4-.4 37.7-4.3 71-27.2 89-61.2 2.3-4.4 5.4-11.7 7-16.2 5.8-17.4 5.7-12.8 5.7-146.1 0-106.4-.2-122.3-1.5-129-9.2-48.3-46.1-84.8-94.5-93.1-6.5-1.1-16.5-1.4-48.8-1.4-22.4-.1-40.9.2-41.2.5zm99.1 202.1c14.5 3.8 26.3 14.8 31.2 28.9 3.1 8.7 3 21.5-.1 29.5-5.7 14.7-16.8 25-31.1 28.8-23.2 6-47.9-8-54.6-31-2-7-1.9-18.9.4-26.2 6.9-22.7 31-36.1 54.2-30z\"],\n    \"node\": [640, 512, [], \"f419\", \"M316.3 452c-2.1 0-4.2-.6-6.1-1.6L291 439c-2.9-1.6-1.5-2.2-.5-2.5 3.8-1.3 4.6-1.6 8.7-4 .4-.2 1-.1 1.4.1l14.8 8.8c.5.3 1.3.3 1.8 0L375 408c.5-.3.9-.9.9-1.6v-66.7c0-.7-.3-1.3-.9-1.6l-57.8-33.3c-.5-.3-1.2-.3-1.8 0l-57.8 33.3c-.6.3-.9 1-.9 1.6v66.7c0 .6.4 1.2.9 1.5l15.8 9.1c8.6 4.3 13.9-.8 13.9-5.8v-65.9c0-.9.7-1.7 1.7-1.7h7.3c.9 0 1.7.7 1.7 1.7v65.9c0 11.5-6.2 18-17.1 18-3.3 0-6 0-13.3-3.6l-15.2-8.7c-3.7-2.2-6.1-6.2-6.1-10.5v-66.7c0-4.3 2.3-8.4 6.1-10.5l57.8-33.4c3.7-2.1 8.5-2.1 12.1 0l57.8 33.4c3.7 2.2 6.1 6.2 6.1 10.5v66.7c0 4.3-2.3 8.4-6.1 10.5l-57.8 33.4c-1.7 1.1-3.8 1.7-6 1.7zm46.7-65.8c0-12.5-8.4-15.8-26.2-18.2-18-2.4-19.8-3.6-19.8-7.8 0-3.5 1.5-8.1 14.8-8.1 11.9 0 16.3 2.6 18.1 10.6.2.8.8 1.3 1.6 1.3h7.5c.5 0 .9-.2 1.2-.5.3-.4.5-.8.4-1.3-1.2-13.8-10.3-20.2-28.8-20.2-16.5 0-26.3 7-26.3 18.6 0 12.7 9.8 16.1 25.6 17.7 18.9 1.9 20.4 4.6 20.4 8.3 0 6.5-5.2 9.2-17.4 9.2-15.3 0-18.7-3.8-19.8-11.4-.1-.8-.8-1.4-1.7-1.4h-7.5c-.9 0-1.7.7-1.7 1.7 0 9.7 5.3 21.3 30.6 21.3 18.5 0 29-7.2 29-19.8zm54.5-50.1c0 6.1-5 11.1-11.1 11.1s-11.1-5-11.1-11.1c0-6.3 5.2-11.1 11.1-11.1 6-.1 11.1 4.8 11.1 11.1zm-1.8 0c0-5.2-4.2-9.3-9.4-9.3-5.1 0-9.3 4.1-9.3 9.3 0 5.2 4.2 9.4 9.3 9.4 5.2-.1 9.4-4.3 9.4-9.4zm-4.5 6.2h-2.6c-.1-.6-.5-3.8-.5-3.9-.2-.7-.4-1.1-1.3-1.1h-2.2v5h-2.4v-12.5h4.3c1.5 0 4.4 0 4.4 3.3 0 2.3-1.5 2.8-2.4 3.1 1.7.1 1.8 1.2 2.1 2.8.1 1 .3 2.7.6 3.3zm-2.8-8.8c0-1.7-1.2-1.7-1.8-1.7h-2v3.5h1.9c1.6 0 1.9-1.1 1.9-1.8zM137.3 191c0-2.7-1.4-5.1-3.7-6.4l-61.3-35.3c-1-.6-2.2-.9-3.4-1h-.6c-1.2 0-2.3.4-3.4 1L3.7 184.6C1.4 185.9 0 188.4 0 191l.1 95c0 1.3.7 2.5 1.8 3.2 1.1.7 2.5.7 3.7 0L42 268.3c2.3-1.4 3.7-3.8 3.7-6.4v-44.4c0-2.6 1.4-5.1 3.7-6.4l15.5-8.9c1.2-.7 2.4-1 3.7-1 1.3 0 2.6.3 3.7 1l15.5 8.9c2.3 1.3 3.7 3.8 3.7 6.4v44.4c0 2.6 1.4 5.1 3.7 6.4l36.4 20.9c1.1.7 2.6.7 3.7 0 1.1-.6 1.8-1.9 1.8-3.2l.2-95zM472.5 87.3v176.4c0 2.6-1.4 5.1-3.7 6.4l-61.3 35.4c-2.3 1.3-5.1 1.3-7.4 0l-61.3-35.4c-2.3-1.3-3.7-3.8-3.7-6.4v-70.8c0-2.6 1.4-5.1 3.7-6.4l61.3-35.4c2.3-1.3 5.1-1.3 7.4 0l15.3 8.8c1.7 1 3.9-.3 3.9-2.2v-94c0-2.8 3-4.6 5.5-3.2l36.5 20.4c2.3 1.2 3.8 3.7 3.8 6.4zm-46 128.9c0-.7-.4-1.3-.9-1.6l-21-12.2c-.6-.3-1.3-.3-1.9 0l-21 12.2c-.6.3-.9.9-.9 1.6v24.3c0 .7.4 1.3.9 1.6l21 12.1c.6.3 1.3.3 1.8 0l21-12.1c.6-.3.9-.9.9-1.6v-24.3zm209.8-.7c2.3-1.3 3.7-3.8 3.7-6.4V192c0-2.6-1.4-5.1-3.7-6.4l-60.9-35.4c-2.3-1.3-5.1-1.3-7.4 0l-61.3 35.4c-2.3 1.3-3.7 3.8-3.7 6.4v70.8c0 2.7 1.4 5.1 3.7 6.4l60.9 34.7c2.2 1.3 5 1.3 7.3 0l36.8-20.5c2.5-1.4 2.5-5 0-6.4L550 241.6c-1.2-.7-1.9-1.9-1.9-3.2v-22.2c0-1.3.7-2.5 1.9-3.2l19.2-11.1c1.1-.7 2.6-.7 3.7 0l19.2 11.1c1.1.7 1.9 1.9 1.9 3.2v17.4c0 2.8 3.1 4.6 5.6 3.2l36.7-21.3zM559 219c-.4.3-.7.7-.7 1.2v13.6c0 .5.3 1 .7 1.2l11.8 6.8c.4.3 1 .3 1.4 0L584 235c.4-.3.7-.7.7-1.2v-13.6c0-.5-.3-1-.7-1.2l-11.8-6.8c-.4-.3-1-.3-1.4 0L559 219zm-254.2 43.5v-70.4c0-2.6-1.6-5.1-3.9-6.4l-61.1-35.2c-2.1-1.2-5-1.4-7.4 0l-61.1 35.2c-2.3 1.3-3.9 3.7-3.9 6.4v70.4c0 2.8 1.9 5.2 4 6.4l61.2 35.2c2.4 1.4 5.2 1.3 7.4 0l61-35.2c1.8-1 3.1-2.7 3.6-4.7.1-.5.2-1.1.2-1.7zm-74.3-124.9l-.8.5h1.1l-.3-.5zm76.2 130.2l-.4-.7v.9l.4-.2z\"],\n    \"node-js\": [448, 512, [], \"f3d3\", \"M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8 12.3-4.3 14.8-5.2 27.9-12.7 1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58-57.4-7.6-63.2-11.5-63.2-24.9 0-11.1 4.9-25.9 47.4-25.9 37.9 0 51.9 8.2 57.7 33.8.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6-52.7 0-84.1 22.2-84.1 59.5 0 40.4 31.3 51.6 81.8 56.6 60.5 5.9 65.2 14.8 65.2 26.7 0 20.6-16.6 29.4-55.5 29.4-48.9 0-59.6-12.3-63.2-36.6-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3 0 31.1 16.9 68.2 97.8 68.2 58.4-.1 92-23.2 92-63.4z\"],\n    \"npm\": [576, 512, [], \"f3d4\", \"M288 288h-32v-64h32v64zm288-128v192H288v32H160v-32H0V160h576zm-416 32H32v128h64v-96h32v96h32V192zm160 0H192v160h64v-32h64V192zm224 0H352v128h64v-96h32v96h32v-96h32v96h32V192z\"],\n    \"ns8\": [640, 512, [], \"f3d5\", \"M187.1 159.9l-34.2 113.7-54.5-113.7H49L0 320h44.9L76 213.5 126.6 320h56.9L232 159.9h-44.9zm452.5-.9c-2.9-18-23.9-28.1-42.1-31.3-44.6-7.8-101.9 16.3-88.5 58.8v.1c-43.8 8.7-74.3 26.8-94.2 48.2-3-9.8-13.6-16.6-34-16.6h-87.6c-9.3 0-12.9-2.3-11.5-7.4 1.6-5.5 1.9-6.8 3.7-12.2 2.1-6.4 7.8-7.1 13.3-7.1h133.5l9.7-31.5c-139.7 0-144.5-.5-160.1 1.2-12.3 1.3-23.5 4.8-30.6 15-6.8 9.9-14.4 35.6-17.6 47.1-5.4 19.4-.6 28.6 32.8 28.6h87.3c7.8 0 8.8 2.7 7.7 6.6-1.1 4.4-2.8 10-4.5 14.6-1.6 4.2-4.7 7.4-13.8 7.4H216.3L204.7 320c139.9 0 145.3-.6 160.9-2.3 6.6-.7 13-2.1 18.5-4.9.2 3.7.5 7.3 1.2 10.8 5.4 30.5 27.4 52.3 56.8 59.5 48.6 11.9 108.7-16.8 135.1-68 18.7-36.2 14.1-76.2-3.4-105.5h.1c29.6-5.9 70.3-22 65.7-50.6zM530.7 263.7c-5.9 29.5-36.6 47.8-61.6 43.9-30.9-4.8-38.5-39.5-14.1-64.8 16.2-16.8 45.2-24 68.5-26.9 6.7 14.1 10.3 32 7.2 47.8zm21.8-83.1c-4.2-6-9.8-18.5-2.5-26.3 6.7-7.2 20.9-10.1 31.8-7.7 15.3 3.4 19.7 15.9 4.9 24.4-10.7 6.1-23.6 8.1-34.2 9.6z\"],\n    \"nutritionix\": [400, 512, [], \"f3d6\", \"M88 8.1S221.4-.1 209 112.5c0 0 19.1-74.9 103-40.6 0 0-17.7 74-88 56 0 0 14.6-54.6 66.1-56.6 0 0-39.9-10.3-82.1 48.8 0 0-19.8-94.5-93.6-99.7 0 0 75.2 19.4 77.6 107.5 0 .1-106.4 7-104-119.8zm312 315.6c0 48.5-9.7 95.3-32 132.3-42.2 30.9-105 48-168 48-62.9 0-125.8-17.1-168-48C9.7 419 0 372.2 0 323.7 0 275.3 17.7 229 40 192c42.2-30.9 97.1-48.6 160-48.6 63 0 117.8 17.6 160 48.6 22.3 37 40 83.3 40 131.7zM120 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM192 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM264 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM336 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm24-39.6c-4.8-22.3-7.4-36.9-16-56-38.8-19.9-90.5-32-144-32S94.8 180.1 56 200c-8.8 19.5-11.2 33.9-16 56 42.2-7.9 98.7-14.8 160-14.8s117.8 6.9 160 14.8z\"],\n    \"odnoklassniki\": [320, 512, [], \"f263\", \"M275.1 334c-27.4 17.4-65.1 24.3-90 26.9l20.9 20.6 76.3 76.3c27.9 28.6-17.5 73.3-45.7 45.7-19.1-19.4-47.1-47.4-76.3-76.6L84 503.4c-28.2 27.5-73.6-17.6-45.4-45.7 19.4-19.4 47.1-47.4 76.3-76.3l20.6-20.6c-24.6-2.6-62.9-9.1-90.6-26.9-32.6-21-46.9-33.3-34.3-59 7.4-14.6 27.7-26.9 54.6-5.7 0 0 36.3 28.9 94.9 28.9s94.9-28.9 94.9-28.9c26.9-21.1 47.1-8.9 54.6 5.7 12.4 25.7-1.9 38-34.5 59.1zM30.3 129.7C30.3 58 88.6 0 160 0s129.7 58 129.7 129.7c0 71.4-58.3 129.4-129.7 129.4s-129.7-58-129.7-129.4zm66 0c0 35.1 28.6 63.7 63.7 63.7s63.7-28.6 63.7-63.7c0-35.4-28.6-64-63.7-64s-63.7 28.6-63.7 64z\"],\n    \"odnoklassniki-square\": [448, 512, [], \"f264\", \"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"],\n    \"old-republic\": [496, 512, [], \"f510\", \"M235.76 10.23c7.5-.31 15-.28 22.5-.09 3.61.14 7.2.4 10.79.73 4.92.27 9.79 1.03 14.67 1.62 2.93.43 5.83.98 8.75 1.46 7.9 1.33 15.67 3.28 23.39 5.4 12.24 3.47 24.19 7.92 35.76 13.21 26.56 12.24 50.94 29.21 71.63 49.88 20.03 20.09 36.72 43.55 48.89 69.19 1.13 2.59 2.44 5.1 3.47 7.74 2.81 6.43 5.39 12.97 7.58 19.63 4.14 12.33 7.34 24.99 9.42 37.83.57 3.14 1.04 6.3 1.4 9.47.55 3.83.94 7.69 1.18 11.56.83 8.34.84 16.73.77 25.1-.07 4.97-.26 9.94-.75 14.89-.24 3.38-.51 6.76-.98 10.12-.39 2.72-.63 5.46-1.11 8.17-.9 5.15-1.7 10.31-2.87 15.41-4.1 18.5-10.3 36.55-18.51 53.63-15.77 32.83-38.83 62.17-67.12 85.12a246.503 246.503 0 0 1-56.91 34.86c-6.21 2.68-12.46 5.25-18.87 7.41-3.51 1.16-7.01 2.38-10.57 3.39-6.62 1.88-13.29 3.64-20.04 5-4.66.91-9.34 1.73-14.03 2.48-5.25.66-10.5 1.44-15.79 1.74-6.69.66-13.41.84-20.12.81-6.82.03-13.65-.12-20.45-.79-3.29-.23-6.57-.5-9.83-.95-2.72-.39-5.46-.63-8.17-1.11-4.12-.72-8.25-1.37-12.35-2.22-4.25-.94-8.49-1.89-12.69-3.02-8.63-2.17-17.08-5.01-25.41-8.13-10.49-4.12-20.79-8.75-30.64-14.25-2.14-1.15-4.28-2.29-6.35-3.57-11.22-6.58-21.86-14.1-31.92-22.34-34.68-28.41-61.41-66.43-76.35-108.7-3.09-8.74-5.71-17.65-7.8-26.68-1.48-6.16-2.52-12.42-3.58-18.66-.4-2.35-.61-4.73-.95-7.09-.6-3.96-.75-7.96-1.17-11.94-.8-9.47-.71-18.99-.51-28.49.14-3.51.34-7.01.7-10.51.31-3.17.46-6.37.92-9.52.41-2.81.65-5.65 1.16-8.44.7-3.94 1.3-7.9 2.12-11.82 3.43-16.52 8.47-32.73 15.26-48.18 1.15-2.92 2.59-5.72 3.86-8.59 8.05-16.71 17.9-32.56 29.49-47.06 20-25.38 45.1-46.68 73.27-62.47 7.5-4.15 15.16-8.05 23.07-11.37 15.82-6.88 32.41-11.95 49.31-15.38 3.51-.67 7.04-1.24 10.56-1.85 2.62-.47 5.28-.7 7.91-1.08 3.53-.53 7.1-.68 10.65-1.04 2.46-.24 4.91-.36 7.36-.51m8.64 24.41c-9.23.1-18.43.99-27.57 2.23-7.3 1.08-14.53 2.6-21.71 4.3-13.91 3.5-27.48 8.34-40.46 14.42-10.46 4.99-20.59 10.7-30.18 17.22-4.18 2.92-8.4 5.8-12.34 9.03-5.08 3.97-9.98 8.17-14.68 12.59-2.51 2.24-4.81 4.7-7.22 7.06-28.22 28.79-48.44 65.39-57.5 104.69-2.04 8.44-3.54 17.02-4.44 25.65-1.1 8.89-1.44 17.85-1.41 26.8.11 7.14.38 14.28 1.22 21.37.62 7.12 1.87 14.16 3.2 21.18 1.07 4.65 2.03 9.32 3.33 13.91 6.29 23.38 16.5 45.7 30.07 65.75 8.64 12.98 18.78 24.93 29.98 35.77 16.28 15.82 35.05 29.04 55.34 39.22 7.28 3.52 14.66 6.87 22.27 9.63 5.04 1.76 10.06 3.57 15.22 4.98 11.26 3.23 22.77 5.6 34.39 7.06 2.91.29 5.81.61 8.72.9 13.82 1.08 27.74 1 41.54-.43 4.45-.6 8.92-.99 13.35-1.78 3.63-.67 7.28-1.25 10.87-2.1 4.13-.98 8.28-1.91 12.36-3.07 26.5-7.34 51.58-19.71 73.58-36.2 15.78-11.82 29.96-25.76 42.12-41.28 3.26-4.02 6.17-8.31 9.13-12.55 3.39-5.06 6.58-10.25 9.6-15.54 2.4-4.44 4.74-8.91 6.95-13.45 5.69-12.05 10.28-24.62 13.75-37.49 2.59-10.01 4.75-20.16 5.9-30.45 1.77-13.47 1.94-27.1 1.29-40.65-.29-3.89-.67-7.77-1-11.66-2.23-19.08-6.79-37.91-13.82-55.8-5.95-15.13-13.53-29.63-22.61-43.13-12.69-18.8-28.24-35.68-45.97-49.83-25.05-20-54.47-34.55-85.65-42.08-7.78-1.93-15.69-3.34-23.63-4.45-3.91-.59-7.85-.82-11.77-1.24-7.39-.57-14.81-.72-22.22-.58zM139.26 83.53c13.3-8.89 28.08-15.38 43.3-20.18-3.17 1.77-6.44 3.38-9.53 5.29-11.21 6.68-21.52 14.9-30.38 24.49-6.8 7.43-12.76 15.73-17.01 24.89-3.29 6.86-5.64 14.19-6.86 21.71-.93 4.85-1.3 9.81-1.17 14.75.13 13.66 4.44 27.08 11.29 38.82 5.92 10.22 13.63 19.33 22.36 27.26 4.85 4.36 10.24 8.09 14.95 12.6 2.26 2.19 4.49 4.42 6.43 6.91 2.62 3.31 4.89 6.99 5.99 11.1.9 3.02.66 6.2.69 9.31.02 4.1-.04 8.2.03 12.3.14 3.54-.02 7.09.11 10.63.08 2.38.02 4.76.05 7.14.16 5.77.06 11.53.15 17.3.11 2.91.02 5.82.13 8.74.03 1.63.13 3.28-.03 4.91-.91.12-1.82.18-2.73.16-10.99 0-21.88-2.63-31.95-6.93-6-2.7-11.81-5.89-17.09-9.83-5.75-4.19-11.09-8.96-15.79-14.31-6.53-7.24-11.98-15.39-16.62-23.95-1.07-2.03-2.24-4.02-3.18-6.12-1.16-2.64-2.62-5.14-3.67-7.82-4.05-9.68-6.57-19.94-8.08-30.31-.49-4.44-1.09-8.88-1.2-13.35-.7-15.73.84-31.55 4.67-46.82 2.12-8.15 4.77-16.18 8.31-23.83 6.32-14.2 15.34-27.18 26.3-38.19 6.28-6.2 13.13-11.84 20.53-16.67zm175.37-20.12c2.74.74 5.41 1.74 8.09 2.68 6.36 2.33 12.68 4.84 18.71 7.96 13.11 6.44 25.31 14.81 35.82 24.97 10.2 9.95 18.74 21.6 25.14 34.34 1.28 2.75 2.64 5.46 3.81 8.26 6.31 15.1 10 31.26 11.23 47.57.41 4.54.44 9.09.45 13.64.07 11.64-1.49 23.25-4.3 34.53-1.97 7.27-4.35 14.49-7.86 21.18-3.18 6.64-6.68 13.16-10.84 19.24-6.94 10.47-15.6 19.87-25.82 27.22-10.48 7.64-22.64 13.02-35.4 15.38-3.51.69-7.08 1.08-10.66 1.21-1.85.06-3.72.16-5.56-.1-.28-2.15 0-4.31-.01-6.46-.03-3.73.14-7.45.1-11.17.19-7.02.02-14.05.21-21.07.03-2.38-.03-4.76.03-7.14.17-5.07-.04-10.14.14-15.21.1-2.99-.24-6.04.51-8.96.66-2.5 1.78-4.86 3.09-7.08 4.46-7.31 11.06-12.96 17.68-18.26 5.38-4.18 10.47-8.77 15.02-13.84 7.68-8.37 14.17-17.88 18.78-28.27 2.5-5.93 4.52-12.1 5.55-18.46.86-4.37 1.06-8.83 1.01-13.27-.02-7.85-1.4-15.65-3.64-23.17-1.75-5.73-4.27-11.18-7.09-16.45-3.87-6.93-8.65-13.31-13.96-19.2-9.94-10.85-21.75-19.94-34.6-27.1-1.85-1.02-3.84-1.82-5.63-2.97zm-100.8 58.45c.98-1.18 1.99-2.33 3.12-3.38-.61.93-1.27 1.81-1.95 2.68-3.1 3.88-5.54 8.31-7.03 13.06-.87 3.27-1.68 6.6-1.73 10-.07 2.52-.08 5.07.32 7.57 1.13 7.63 4.33 14.85 8.77 21.12 2 2.7 4.25 5.27 6.92 7.33 1.62 1.27 3.53 2.09 5.34 3.05 3.11 1.68 6.32 3.23 9.07 5.48 2.67 2.09 4.55 5.33 4.4 8.79-.01 73.67 0 147.34-.01 221.02 0 1.35-.08 2.7.04 4.04.13 1.48.82 2.83 1.47 4.15.86 1.66 1.78 3.34 3.18 4.62.85.77 1.97 1.4 3.15 1.24 1.5-.2 2.66-1.35 3.45-2.57.96-1.51 1.68-3.16 2.28-4.85.76-2.13.44-4.42.54-6.63.14-4.03-.02-8.06.14-12.09.03-5.89.03-11.77.06-17.66.14-3.62.03-7.24.11-10.86.15-4.03-.02-8.06.14-12.09.03-5.99.03-11.98.07-17.97.14-3.62.02-7.24.11-10.86.14-3.93-.02-7.86.14-11.78.03-5.99.03-11.98.06-17.97.16-3.94-.01-7.88.19-11.82.29 1.44.13 2.92.22 4.38.19 3.61.42 7.23.76 10.84.32 3.44.44 6.89.86 10.32.37 3.1.51 6.22.95 9.31.57 4.09.87 8.21 1.54 12.29 1.46 9.04 2.83 18.11 5.09 26.99 1.13 4.82 2.4 9.61 4 14.3 2.54 7.9 5.72 15.67 10.31 22.62 1.73 2.64 3.87 4.98 6.1 7.21.27.25.55.51.88.71.6.25 1.31-.07 1.7-.57.71-.88 1.17-1.94 1.7-2.93 4.05-7.8 8.18-15.56 12.34-23.31.7-1.31 1.44-2.62 2.56-3.61 1.75-1.57 3.84-2.69 5.98-3.63 2.88-1.22 5.9-2.19 9.03-2.42 6.58-.62 13.11.75 19.56 1.85 3.69.58 7.4 1.17 11.13 1.41 3.74.1 7.48.05 11.21-.28 8.55-.92 16.99-2.96 24.94-6.25 5.3-2.24 10.46-4.83 15.31-7.93 11.46-7.21 21.46-16.57 30.04-27.01 1.17-1.42 2.25-2.9 3.46-4.28-1.2 3.24-2.67 6.37-4.16 9.48-1.25 2.9-2.84 5.61-4.27 8.42-5.16 9.63-11.02 18.91-17.75 27.52-4.03 5.21-8.53 10.05-13.33 14.57-6.64 6.05-14.07 11.37-22.43 14.76-8.21 3.37-17.31 4.63-26.09 3.29-3.56-.58-7.01-1.69-10.41-2.88-2.79-.97-5.39-2.38-8.03-3.69-3.43-1.71-6.64-3.81-9.71-6.08 2.71 3.06 5.69 5.86 8.7 8.61 4.27 3.76 8.74 7.31 13.63 10.23 3.98 2.45 8.29 4.4 12.84 5.51 1.46.37 2.96.46 4.45.6-1.25 1.1-2.63 2.04-3.99 2.98-9.61 6.54-20.01 11.86-30.69 16.43-20.86 8.7-43.17 13.97-65.74 15.34-4.66.24-9.32.36-13.98.36-4.98-.11-9.97-.13-14.92-.65-11.2-.76-22.29-2.73-33.17-5.43-10.35-2.71-20.55-6.12-30.3-10.55-8.71-3.86-17.12-8.42-24.99-13.79-1.83-1.31-3.74-2.53-5.37-4.08 6.6-1.19 13.03-3.39 18.99-6.48 5.74-2.86 10.99-6.66 15.63-11.07 2.24-2.19 4.29-4.59 6.19-7.09-3.43 2.13-6.93 4.15-10.62 5.78-4.41 2.16-9.07 3.77-13.81 5.02-5.73 1.52-11.74 1.73-17.61 1.14-8.13-.95-15.86-4.27-22.51-8.98-4.32-2.94-8.22-6.43-11.96-10.06-9.93-10.16-18.2-21.81-25.66-33.86-3.94-6.27-7.53-12.75-11.12-19.22-1.05-2.04-2.15-4.05-3.18-6.1 2.85 2.92 5.57 5.97 8.43 8.88 8.99 8.97 18.56 17.44 29.16 24.48 7.55 4.9 15.67 9.23 24.56 11.03 3.11.73 6.32.47 9.47.81 2.77.28 5.56.2 8.34.3 5.05.06 10.11.04 15.16-.16 3.65-.16 7.27-.66 10.89-1.09 2.07-.25 4.11-.71 6.14-1.2 3.88-.95 8.11-.96 11.83.61 4.76 1.85 8.44 5.64 11.38 9.71 2.16 3.02 4.06 6.22 5.66 9.58 1.16 2.43 2.46 4.79 3.55 7.26 1 2.24 2.15 4.42 3.42 6.52.67 1.02 1.4 2.15 2.62 2.55 1.06-.75 1.71-1.91 2.28-3.03 2.1-4.16 3.42-8.65 4.89-13.05 2.02-6.59 3.78-13.27 5.19-20.02 2.21-9.25 3.25-18.72 4.54-28.13.56-3.98.83-7.99 1.31-11.97.87-10.64 1.9-21.27 2.24-31.94.08-1.86.24-3.71.25-5.57.01-4.35.25-8.69.22-13.03-.01-2.38-.01-4.76 0-7.13.05-5.07-.2-10.14-.22-15.21-.2-6.61-.71-13.2-1.29-19.78-.73-5.88-1.55-11.78-3.12-17.51-2.05-7.75-5.59-15.03-9.8-21.82-3.16-5.07-6.79-9.88-11.09-14.03-3.88-3.86-8.58-7.08-13.94-8.45-1.5-.41-3.06-.45-4.59-.64.07-2.99.7-5.93 1.26-8.85 1.59-7.71 3.8-15.3 6.76-22.6 1.52-4.03 3.41-7.9 5.39-11.72 3.45-6.56 7.62-12.79 12.46-18.46zm31.27 1.7c.35-.06.71-.12 1.07-.19.19 1.79.09 3.58.1 5.37v38.13c-.01 1.74.13 3.49-.15 5.22-.36-.03-.71-.05-1.06-.05-.95-3.75-1.72-7.55-2.62-11.31-.38-1.53-.58-3.09-1.07-4.59-1.7-.24-3.43-.17-5.15-.2-5.06-.01-10.13 0-15.19-.01-1.66-.01-3.32.09-4.98-.03-.03-.39-.26-.91.16-1.18 1.28-.65 2.72-.88 4.06-1.35 3.43-1.14 6.88-2.16 10.31-3.31 1.39-.48 2.9-.72 4.16-1.54.04-.56.02-1.13-.05-1.68-1.23-.55-2.53-.87-3.81-1.28-3.13-1.03-6.29-1.96-9.41-3.02-1.79-.62-3.67-1-5.41-1.79-.03-.37-.07-.73-.11-1.09 5.09-.19 10.2.06 15.3-.12 3.36-.13 6.73.08 10.09-.07.12-.39.26-.77.37-1.16 1.08-4.94 2.33-9.83 3.39-14.75zm5.97-.2c.36.05.72.12 1.08.2.98 3.85 1.73 7.76 2.71 11.61.36 1.42.56 2.88 1.03 4.27 2.53.18 5.07-.01 7.61.05 5.16.12 10.33.12 15.49.07.76-.01 1.52.03 2.28.08-.04.36-.07.72-.1 1.08-1.82.83-3.78 1.25-5.67 1.89-3.73 1.23-7.48 2.39-11.22 3.57-.57.17-1.12.42-1.67.64-.15.55-.18 1.12-.12 1.69.87.48 1.82.81 2.77 1.09 4.88 1.52 9.73 3.14 14.63 4.6.38.13.78.27 1.13.49.4.27.23.79.15 1.18-1.66.13-3.31.03-4.97.04-5.17.01-10.33-.01-15.5.01-1.61.03-3.22-.02-4.82.21-.52 1.67-.72 3.42-1.17 5.11-.94 3.57-1.52 7.24-2.54 10.78-.36.01-.71.02-1.06.06-.29-1.73-.15-3.48-.15-5.22v-38.13c.02-1.78-.08-3.58.11-5.37zM65.05 168.33c1.12-2.15 2.08-4.4 3.37-6.46-1.82 7.56-2.91 15.27-3.62 23-.8 7.71-.85 15.49-.54 23.23 1.05 19.94 5.54 39.83 14.23 57.88 2.99 5.99 6.35 11.83 10.5 17.11 6.12 7.47 12.53 14.76 19.84 21.09 4.8 4.1 9.99 7.78 15.54 10.8 3.27 1.65 6.51 3.39 9.94 4.68 5.01 2.03 10.19 3.61 15.42 4.94 3.83.96 7.78 1.41 11.52 2.71 5 1.57 9.47 4.61 13.03 8.43 4.93 5.23 8.09 11.87 10.2 18.67.99 2.9 1.59 5.91 2.17 8.92.15.75.22 1.52.16 2.29-6.5 2.78-13.26 5.06-20.26 6.18-4.11.78-8.29.99-12.46 1.08-10.25.24-20.47-1.76-30.12-5.12-3.74-1.42-7.49-2.85-11.03-4.72-8.06-3.84-15.64-8.7-22.46-14.46-2.92-2.55-5.83-5.13-8.4-8.03-9.16-9.83-16.3-21.41-21.79-33.65-2.39-5.55-4.61-11.18-6.37-16.96-1.17-3.94-2.36-7.89-3.26-11.91-.75-2.94-1.22-5.95-1.87-8.92-.46-2.14-.69-4.32-1.03-6.48-.85-5.43-1.28-10.93-1.33-16.43.11-6.18.25-12.37 1.07-18.5.4-2.86.67-5.74 1.15-8.6.98-5.7 2.14-11.37 3.71-16.93 3.09-11.65 7.48-22.95 12.69-33.84zm363.73-6.44c1.1 1.66 1.91 3.48 2.78 5.26 2.1 4.45 4.24 8.9 6.02 13.49 7.61 18.76 12.3 38.79 13.04 59.05.02 1.76.07 3.52.11 5.29.13 9.57-1.27 19.09-3.18 28.45-.73 3.59-1.54 7.17-2.58 10.69-4.04 14.72-10 29-18.41 41.78-8.21 12.57-19.01 23.55-31.84 31.41-5.73 3.59-11.79 6.64-18.05 9.19-5.78 2.19-11.71 4.03-17.8 5.11-6.4 1.05-12.91 1.52-19.4 1.23-7.92-.48-15.78-2.07-23.21-4.85-1.94-.8-3.94-1.46-5.84-2.33-.21-1.51.25-2.99.53-4.46 1.16-5.74 3.03-11.36 5.7-16.58 2.37-4.51 5.52-8.65 9.46-11.9 2.43-2.05 5.24-3.61 8.16-4.83 3.58-1.5 7.47-1.97 11.24-2.83 7.23-1.71 14.37-3.93 21.15-7 10.35-4.65 19.71-11.38 27.65-19.46 1.59-1.61 3.23-3.18 4.74-4.87 3.37-3.76 6.71-7.57 9.85-11.53 7.48-10.07 12.82-21.59 16.71-33.48 1.58-5.3 3.21-10.6 4.21-16.05.63-2.87 1.04-5.78 1.52-8.68.87-6.09 1.59-12.22 1.68-18.38.12-6.65.14-13.32-.53-19.94-.73-7.99-1.87-15.96-3.71-23.78z\"],\n    \"opencart\": [640, 512, [], \"f23d\", \"M423.3 440.7c0 25.3-20.3 45.6-45.6 45.6s-45.8-20.3-45.8-45.6 20.6-45.8 45.8-45.8c25.4 0 45.6 20.5 45.6 45.8zm-253.9-45.8c-25.3 0-45.6 20.6-45.6 45.8s20.3 45.6 45.6 45.6 45.8-20.3 45.8-45.6-20.5-45.8-45.8-45.8zm291.7-270C158.9 124.9 81.9 112.1 0 25.7c34.4 51.7 53.3 148.9 373.1 144.2 333.3-5 130 86.1 70.8 188.9 186.7-166.7 319.4-233.9 17.2-233.9z\"],\n    \"openid\": [448, 512, [], \"f19b\", \"M271.5 432l-68 32C88.5 453.7 0 392.5 0 318.2c0-71.5 82.5-131 191.7-144.3v43c-71.5 12.5-124 53-124 101.3 0 51 58.5 93.3 135.7 103v-340l68-33.2v384zM448 291l-131.3-28.5 36.8-20.7c-19.5-11.5-43.5-20-70-24.8v-43c46.2 5.5 87.7 19.5 120.3 39.3l35-19.8L448 291z\"],\n    \"opera\": [496, 512, [], \"f26a\", \"M313.9 32.7c-170.2 0-252.6 223.8-147.5 355.1 36.5 45.4 88.6 75.6 147.5 75.6 36.3 0 70.3-11.1 99.4-30.4-43.8 39.2-101.9 63-165.3 63-3.9 0-8 0-11.9-.3C104.6 489.6 0 381.1 0 248 0 111 111 0 248 0h.8c63.1.3 120.7 24.1 164.4 63.1-29-19.4-63.1-30.4-99.3-30.4zm101.8 397.7c-40.9 24.7-90.7 23.6-132-5.8 56.2-20.5 97.7-91.6 97.7-176.6 0-84.7-41.2-155.8-97.4-176.6 41.8-29.2 91.2-30.3 132.9-5 105.9 98.7 105.5 265.7-1.2 364z\"],\n    \"optin-monster\": [576, 512, [], \"f23c\", \"M572.6 421.4c5.6-9.5 4.7-15.2-5.4-11.6-3-4.9-7-9.5-11.1-13.8 2.9-9.7-.7-14.2-10.8-9.2-4.6-3.2-10.3-6.5-15.9-9.2 0-15.1-11.6-11.6-17.6-5.7-10.4-1.5-18.7-.3-26.8 5.7.3-6.5.3-13 .3-19.7 12.6 0 40.2-11 45.9-36.2 1.4-6.8 1.6-13.8-.3-21.9-3-13.5-14.3-21.3-25.1-25.7-.8-5.9-7.6-14.3-14.9-15.9s-12.4 4.9-14.1 10.3c-8.5 0-19.2 2.8-21.1 8.4-5.4-.5-11.1-1.4-16.8-1.9 2.7-1.9 5.4-3.5 8.4-4.6 5.4-9.2 14.6-11.4 25.7-11.6V256c19.5-.5 43-5.9 53.8-18.1 12.7-13.8 14.6-37.3 12.4-55.1-2.4-17.3-9.7-37.6-24.6-48.1-8.4-5.9-21.6-.8-22.7 9.5-2.2 19.6 1.2 30-38.6 25.1-10.3-23.8-24.6-44.6-42.7-60C341 49.6 242.9 55.5 166.4 71.7c19.7 4.6 41.1 8.6 59.7 16.5-26.2 2.4-52.7 11.3-76.2 23.2-32.8 17-44 29.9-56.7 42.4 14.9-2.2 28.9-5.1 43.8-3.8-9.7 5.4-18.4 12.2-26.5 20-25.8.9-23.8-5.3-26.2-25.9-1.1-10.5-14.3-15.4-22.7-9.7-28.1 19.9-33.5 79.9-12.2 103.5 10.8 12.2 35.1 17.3 54.9 17.8-.3 1.1-.3 1.9-.3 2.7 10.8.5 19.5 2.7 24.6 11.6 3 1.1 5.7 2.7 8.1 4.6-5.4.5-11.1 1.4-16.5 1.9-3.3-6.6-13.7-8.1-21.1-8.1-1.6-5.7-6.5-12.2-14.1-10.3-6.8 1.9-14.1 10-14.9 15.9-22.5 9.5-30.1 26.8-25.1 47.6 5.3 24.8 33 36.2 45.9 36.2v19.7c-6.6-5-14.3-7.5-26.8-5.7-5.5-5.5-17.3-10.1-17.3 5.7-5.9 2.7-11.4 5.9-15.9 9.2-9.8-4.9-13.6-1.7-11.1 9.2-4.1 4.3-7.8 8.6-11.1 13.8-10.2-3.7-11 2.2-5.4 11.6-1.1 3.5-1.6 7-1.9 10.8-.5 31.6 44.6 64 73.5 65.1 17.3.5 34.6-8.4 43-23.5 113.2 4.9 226.7 4.1 340.2 0 8.1 15.1 25.4 24.3 42.7 23.5 29.2-1.1 74.3-33.5 73.5-65.1.2-3.7-.7-7.2-1.7-10.7zm-73.8-254c1.1-3 2.4-8.4 2.4-14.6 0-5.9 6.8-8.1 14.1-.8 11.1 11.6 14.9 40.5 13.8 51.1-4.1-13.6-13-29-30.3-35.7zm-4.6 6.7c19.5 6.2 28.6 27.6 29.7 48.9-1.1 2.7-3 5.4-4.9 7.6-5.7 5.9-15.4 10-26.2 12.2 4.3-21.3.3-47.3-12.7-63 4.9-.8 10.9-2.4 14.1-5.7zm-24.1 6.8c13.8 11.9 20 39.2 14.1 63.5-4.1.5-8.1.8-11.6.8-1.9-21.9-6.8-44-14.3-64.6 3.7.3 8.1.3 11.8.3zM47.5 203c-1.1-10.5 2.4-39.5 13.8-51.1 7-7.3 14.1-5.1 14.1.8 0 6.2 1.4 11.6 2.4 14.6-17.3 6.8-26.2 22.2-30.3 35.7zm9.7 27.6c-1.9-2.2-3.5-4.9-4.9-7.6 1.4-21.3 10.3-42.7 29.7-48.9 3.2 3.2 9.2 4.9 14.1 5.7-13 15.7-17 41.6-12.7 63-10.8-2.2-20.5-6-26.2-12.2zm47.9 14.6c-4.1 0-8.1-.3-12.7-.8-4.6-18.6-1.9-38.9 5.4-53v.3l12.2-5.1c4.9-1.9 9.7-3.8 14.9-4.9-10.7 19.7-17.4 41.3-19.8 63.5zm184-162.7c41.9 0 76.2 34 76.2 75.9 0 42.2-34.3 76.2-76.2 76.2s-76.2-34-76.2-76.2c0-41.8 34.3-75.9 76.2-75.9zm115.6 174.3c-.3 17.8-7 48.9-23 57-13.2 6.6-6.5-7.5-16.5-58.1 13.3.3 26.6.3 39.5 1.1zm-54-1.6c.8 4.9 3.8 40.3-1.6 41.9-11.6 3.5-40 4.3-51.1-1.1-4.1-3-4.6-35.9-4.3-41.1v.3c18.9-.3 38.1-.3 57 0zM278.3 309c-13 3.5-41.6 4.1-54.6-1.6-6.5-2.7-3.8-42.4-1.9-51.6 19.2-.5 38.4-.5 57.8-.8v.3c1.1 8.3 3.3 51.2-1.3 53.7zm-106.5-51.1c12.2-.8 24.6-1.4 36.8-1.6-2.4 15.4-3 43.5-4.9 52.2-1.1 6.8-4.3 6.8-9.7 4.3-21.9-9.8-27.6-35.2-22.2-54.9zm-35.4 31.3c7.8-1.1 15.7-1.9 23.5-2.7 1.6 6.2 3.8 11.9 7 17.6 10 17 44 35.7 45.1 7 6.2 14.9 40.8 12.2 54.9 10.8 15.7-1.4 23.8-1.4 26.8-14.3 12.4 4.3 30.8 4.1 44 3 11.3-.8 20.8-.5 24.6-8.9 1.1 5.1 1.9 11.6 4.6 16.8 10.8 21.3 37.3 1.4 46.8-31.6 8.6.8 17.6 1.9 26.5 2.7-.4 1.3-3.8 7.3 7.3 11.6-47.6 47-95.7 87.8-163.2 107-63.2-20.8-112.1-59.5-155.9-106.5 9.6-3.4 10.4-8.8 8-12.5zm-21.6 172.5c-3.8 17.8-21.9 29.7-39.7 28.9-19.2-.8-46.5-17-59.2-36.5-2.7-31.1 43.8-61.3 66.2-54.6 14.9 4.3 27.8 30.8 33.5 54 0 3-.3 5.7-.8 8.2zm-8.7-66c-.5-13.5-.5-27-.3-40.5h.3c2.7-1.6 5.7-3.8 7.8-6.5 6.5-1.6 13-5.1 15.1-9.2 3.3-7.1-7-7.5-5.4-12.4 2.7-1.1 5.7-2.2 7.8-3.5 29.2 29.2 58.6 56.5 97.3 77-36.8 11.3-72.4 27.6-105.9 47-1.2-18.6-7.7-35.9-16.7-51.9zm337.6 64.6c-103 3.5-206.2 4.1-309.4 0 0 .3 0 .3-.3.3v-.3h.3c35.1-21.6 72.2-39.2 112.4-50.8 11.6 5.1 23 9.5 34.9 13.2 2.2.8 2.2.8 4.3 0 14.3-4.1 28.4-9.2 42.2-15.4 41.5 11.7 78.8 31.7 115.6 53zm10.5-12.4c-35.9-19.5-73-35.9-111.9-47.6 38.1-20 71.9-47.3 103.5-76.7 2.2 1.4 4.6 2.4 7.6 3.2 0 .8.3 1.9.5 2.4-4.6 2.7-7.8 6.2-5.9 10.3 2.2 3.8 8.6 7.6 15.1 8.9 2.4 2.7 5.1 5.1 8.1 6.8 0 13.8-.3 27.6-.8 41.3l.3-.3c-9.3 15.9-15.5 37-16.5 51.7zm105.9 6.2c-12.7 19.5-40 35.7-59.2 36.5-19.3.9-40.5-13.2-40.5-37 5.7-23.2 18.9-49.7 33.5-54 22.7-6.9 69.2 23.4 66.2 54.5zM372.9 75.2c-3.8-72.1-100.8-79.7-126-23.5 44.6-24.3 90.3-15.7 126 23.5zM74.8 407.1c-15.7 1.6-49.5 25.4-49.5 43.2 0 11.6 15.7 19.5 32.2 14.9 12.2-3.2 31.1-17.6 35.9-27.3 6-11.6-3.7-32.7-18.6-30.8zm215.9-176.2c28.6 0 51.9-21.6 51.9-48.4 0-36.1-40.5-58.1-72.2-44.3 9.5 3 16.5 11.6 16.5 21.6 0 23.3-33.3 32-46.5 11.3-7.3 34.1 19.4 59.8 50.3 59.8zM68 474.1c.5 6.5 12.2 12.7 21.6 9.5 6.8-2.7 14.6-10.5 17.3-16.2 3-7-1.1-20-9.7-18.4-8.9 1.6-29.7 16.7-29.2 25.1zm433.2-67c-14.9-1.9-24.6 19.2-18.9 30.8 4.9 9.7 24.1 24.1 36.2 27.3 16.5 4.6 32.2-3.2 32.2-14.9 0-17.8-33.8-41.6-49.5-43.2zM478.8 449c-8.4-1.6-12.4 11.3-9.5 18.4 2.4 5.7 10.3 13.5 17.3 16.2 9.2 3.2 21.1-3 21.3-9.5.9-8.4-20.2-23.5-29.1-25.1z\"],\n    \"osi\": [512, 512, [], \"f41a\", \"M8 266.44C10.3 130.64 105.4 34 221.8 18.34c138.8-18.6 255.6 75.8 278 201.1 21.3 118.8-44 230-151.6 274-9.3 3.8-14.4 1.7-18-7.7q-26.7-69.45-53.4-139c-3.1-8.1-1-13.2 7-16.8 24.2-11 39.3-29.4 43.3-55.8a71.47 71.47 0 0 0-64.5-82.2c-39-3.4-71.8 23.7-77.5 59.7-5.2 33 11.1 63.7 41.9 77.7 9.6 4.4 11.5 8.6 7.8 18.4q-26.85 69.9-53.7 139.9c-2.6 6.9-8.3 9.3-15.5 6.5-52.6-20.3-101.4-61-130.8-119-24.9-49.2-25.2-87.7-26.8-108.7zm20.9-1.9c.4 6.6.6 14.3 1.3 22.1 6.3 71.9 49.6 143.5 131 183.1 3.2 1.5 4.4.8 5.6-2.3q22.35-58.65 45-117.3c1.3-3.3.6-4.8-2.4-6.7-31.6-19.9-47.3-48.5-45.6-86 1-21.6 9.3-40.5 23.8-56.3 30-32.7 77-39.8 115.5-17.6a91.64 91.64 0 0 1 45.2 90.4c-3.6 30.6-19.3 53.9-45.7 69.8-2.7 1.6-3.5 2.9-2.3 6q22.8 58.8 45.2 117.7c1.2 3.1 2.4 3.8 5.6 2.3 35.5-16.6 65.2-40.3 88.1-72 34.8-48.2 49.1-101.9 42.3-161-13.7-117.5-119.4-214.8-255.5-198-106.1 13-195.3 102.5-197.1 225.8z\"],\n    \"page4\": [496, 512, [], \"f3d7\", \"M248 504C111 504 0 393 0 256S111 8 248 8c20.9 0 41.3 2.6 60.7 7.5L42.3 392H248v112zm0-143.6V146.8L98.6 360.4H248zm96 31.6v92.7c45.7-19.2 84.5-51.7 111.4-92.7H344zm57.4-138.2l-21.2 8.4 21.2 8.3v-16.7zm-20.3 54.5c-6.7 0-8 6.3-8 12.9v7.7h16.2v-10c0-5.9-2.3-10.6-8.2-10.6zM496 256c0 37.3-8.2 72.7-23 104.4H344V27.3C433.3 64.8 496 153.1 496 256zM360.4 143.6h68.2V96h-13.9v32.6h-13.9V99h-13.9v29.6h-12.7V96h-13.9v47.6zm68.1 185.3H402v-11c0-15.4-5.6-25.2-20.9-25.2-15.4 0-20.7 10.6-20.7 25.9v25.3h68.2v-15zm0-103l-68.2 29.7V268l68.2 29.5v-16.6l-14.4-5.7v-26.5l14.4-5.9v-16.9zm-4.8-68.5h-35.6V184H402v-12.2h11c8.6 15.8 1.3 35.3-18.6 35.3-22.5 0-28.3-25.3-15.5-37.7l-11.6-10.6c-16.2 17.5-12.2 63.9 27.1 63.9 34 0 44.7-35.9 29.3-65.3z\"],\n    \"pagelines\": [384, 512, [], \"f18c\", \"M384 312.7c-55.1 136.7-187.1 54-187.1 54-40.5 81.8-107.4 134.4-184.6 134.7-16.1 0-16.6-24.4 0-24.4 64.4-.3 120.5-42.7 157.2-110.1-41.1 15.9-118.6 27.9-161.6-82.2 109-44.9 159.1 11.2 178.3 45.5 9.9-24.4 17-50.9 21.6-79.7 0 0-139.7 21.9-149.5-98.1 119.1-47.9 152.6 76.7 152.6 76.7 1.6-16.7 3.3-52.6 3.3-53.4 0 0-106.3-73.7-38.1-165.2 124.6 43 61.4 162.4 61.4 162.4.5 1.6.5 23.8 0 33.4 0 0 45.2-89 136.4-57.5-4.2 134-141.9 106.4-141.9 106.4-4.4 27.4-11.2 53.4-20 77.5 0 0 83-91.8 172-20z\"],\n    \"palfed\": [576, 512, [], \"f3d8\", \"M384.9 193.9c0-47.4-55.2-44.2-95.4-29.8-1.3 39.4-2.5 80.7-3 119.8.7 2.8 2.6 6.2 15.1 6.2 36.8 0 83.4-42.8 83.3-96.2zm-194.5 72.2c.2 0 6.5-2.7 11.2-2.7 26.6 0 20.7 44.1-14.4 44.1-21.5 0-37.1-18.1-37.1-43 0-42 42.9-95.6 100.7-126.5 1-12.4 3-22 10.5-28.2 11.2-9 26.6-3.5 29.5 11.1 72.2-22.2 135.2 1 135.2 72 0 77.9-79.3 152.6-140.1 138.2-.1 39.4.9 74.4 2.7 100v.2c.2 3.4.6 12.5-5.3 19.1-9.6 10.6-33.4 10-36.4-22.3-4.1-44.4.2-206.1 1.4-242.5-21.5 15-58.5 50.3-58.5 75.9.2 2.5.4 4 .6 4.6zM8 181.1s-.1 37.4 38.4 37.4h30l22.4 217.2s0 44.3 44.7 44.3h288.9s44.7-.4 44.7-44.3l22.4-217.2h30s38.4 1.2 38.4-37.4c0 0 .1-37.4-38.4-37.4h-30.1c-7.3-25.6-30.2-74.3-119.4-74.3h-28V50.3s-2.7-18.4-21.1-18.4h-85.8s-21.1 0-21.1 18.4v19.1h-28.1s-105 4.2-120.5 74.3h-29S8 142.5 8 181.1z\"],\n    \"patreon\": [512, 512, [], \"f3d9\", \"M512 194.8c0 101.3-82.4 183.8-183.8 183.8-101.7 0-184.4-82.4-184.4-183.8 0-101.6 82.7-184.3 184.4-184.3C429.6 10.5 512 93.2 512 194.8zM0 501.5h90v-491H0v491z\"],\n    \"paypal\": [384, 512, [], \"f1ed\", \"M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4.7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9.7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z\"],\n    \"penny-arcade\": [640, 512, [], \"f704\", \"M421.91 164.27c-4.49 19.45-1.4 6.06-15.1 65.29l39.73-10.61c-22.34-49.61-17.29-38.41-24.63-54.68zm-206.09 51.11c-20.19 5.4-11.31 3.03-39.63 10.58l4.46 46.19c28.17-7.59 20.62-5.57 34.82-9.34 42.3-9.79 32.85-56.42.35-47.43zm326.16-26.19l-45.47-99.2c-5.69-12.37-19.46-18.84-32.62-15.33-70.27 18.75-38.72 10.32-135.59 36.23a27.618 27.618 0 0 0-18.89 17.41C144.26 113.27 0 153.75 0 226.67c0 33.5 30.67 67.11 80.9 95.37l1.74 17.88a27.891 27.891 0 0 0-17.77 28.67l4.3 44.48c1.39 14.31 13.43 25.21 27.8 25.2 5.18-.01-3.01 1.78 122.53-31.76 12.57-3.37 21.12-15.02 20.58-28.02 216.59 45.5 401.99-5.98 399.89-84.83.01-28.15-22.19-66.56-97.99-104.47zM255.14 298.3l-21.91 5.88-48.44 12.91 2.46 23.55 20.53-5.51 4.51 44.51-115.31 30.78-4.3-44.52 20.02-5.35-11.11-114.64-20.12 5.39-4.35-44.5c178.15-47.54 170.18-46.42 186.22-46.65 56.66-1.13 64.15 71.84 42.55 104.43a86.7 86.7 0 0 1-50.75 33.72zm199.18 16.62l-3.89-39.49 14.9-3.98-6.61-14.68-57.76 15.42-4.1 17.54 19.2-5.12 4.05 39.54-112.85 30.07-4.46-44.43 20.99-5.59 33.08-126.47-17.15 4.56-4.2-44.48c93.36-24.99 65.01-17.41 135.59-36.24l66.67 145.47 20.79-5.56 4.3 44.48-108.55 28.96z\"],\n    \"periscope\": [448, 512, [], \"f3da\", \"M370 63.6C331.4 22.6 280.5 0 226.6 0 111.9 0 18.5 96.2 18.5 214.4c0 75.1 57.8 159.8 82.7 192.7C137.8 455.5 192.6 512 226.6 512c41.6 0 112.9-94.2 120.9-105 24.6-33.1 82-118.3 82-192.6 0-56.5-21.1-110.1-59.5-150.8zM226.6 493.9c-42.5 0-190-167.3-190-279.4 0-107.4 83.9-196.3 190-196.3 100.8 0 184.7 89 184.7 196.3.1 112.1-147.4 279.4-184.7 279.4zM338 206.8c0 59.1-51.1 109.7-110.8 109.7-100.6 0-150.7-108.2-92.9-181.8v.4c0 24.5 20.1 44.4 44.8 44.4 24.7 0 44.8-19.9 44.8-44.4 0-18.2-11.1-33.8-26.9-40.7 76.6-19.2 141 39.3 141 112.4z\"],\n    \"phabricator\": [496, 512, [], \"f3db\", \"M323 262.1l-.1-13s21.7-19.8 21.1-21.2l-9.5-20c-.6-1.4-29.5-.5-29.5-.5l-9.4-9.3s.2-28.5-1.2-29.1l-20.1-9.2c-1.4-.6-20.7 21-20.7 21l-13.1-.2s-20.5-21.4-21.9-20.8l-20 8.3c-1.4.5.2 28.9.2 28.9l-9.1 9.1s-29.2-.9-29.7.4l-8.1 19.8c-.6 1.4 21 21 21 21l.1 12.9s-21.7 19.8-21.1 21.2l9.5 20c.6 1.4 29.5.5 29.5.5l9.4 9.3s-.2 31.8 1.2 32.3l20.1 8.3c1.4.6 20.7-23.5 20.7-23.5l13.1.2s20.5 23.8 21.8 23.3l20-7.5c1.4-.6-.2-32.1-.2-32.1l9.1-9.1s29.2.9 29.7-.5l8.1-19.8c.7-1.1-20.9-20.7-20.9-20.7zm-44.9-8.7c.7 17.1-12.8 31.6-30.1 32.4-17.3.8-32.1-12.5-32.8-29.6-.7-17.1 12.8-31.6 30.1-32.3 17.3-.8 32.1 12.5 32.8 29.5zm201.2-37.9l-97-97-.1.1c-75.1-73.3-195.4-72.8-269.8 1.6-50.9 51-27.8 27.9-95.7 95.3-22.3 22.3-22.3 58.7 0 81 69.9 69.4 46.4 46 97.4 97l.1-.1c75.1 73.3 195.4 72.9 269.8-1.6 51-50.9 27.9-27.9 95.3-95.3 22.3-22.3 22.3-58.7 0-81zM140.4 363.8c-59.6-59.5-59.6-156 0-215.5 59.5-59.6 156-59.5 215.6 0 59.5 59.5 59.6 156 0 215.6-59.6 59.5-156 59.4-215.6-.1z\"],\n    \"phoenix-framework\": [640, 512, [], \"f3dc\", \"M212.9 344.3c3.8-.1 22.8-1.4 25.6-2.2-2.4-2.6-43.6-1-68-49.6-4.3-8.6-7.5-17.6-6.4-27.6 2.9-25.5 32.9-30 52-18.5 36 21.6 63.3 91.3 113.7 97.5 37 4.5 84.6-17 108.2-45.4-.6-.1-.8-.2-1-.1-.4.1-.8.2-1.1.3-33.3 12.1-94.3 9.7-134.7-14.8-37.6-22.8-53.1-58.7-51.8-74.6 1.8-21.3 22.9-23.2 35.9-19.6 14.4 3.9 24.4 17.6 38.9 27.4 15.6 10.4 32.9 13.7 51.3 10.3 14.9-2.7 34.4-12.3 36.5-14.5-1.1-.1-1.8-.1-2.5-.2-6.2-.6-12.4-.8-18.5-1.7C279.8 194.5 262.1 47.4 138.5 37.9 94.2 34.5 39.1 46 2.2 72.9c-.8.6-1.5 1.2-2.2 1.8.1.2.1.3.2.5.8 0 1.6-.1 2.4-.2 6.3-1 12.5-.8 18.7.3 23.8 4.3 47.7 23.1 55.9 76.5 5.3 34.3-.7 50.8 8 86.1 19 77.1 91 107.6 127.7 106.4zM75.3 64.9c-.9-1-.9-1.2-1.3-2 12.1-2.6 24.2-4.1 36.6-4.8-1.1 14.7-22.2 21.3-35.3 6.8zm196.9 350.5c-42.8 1.2-92-26.7-123.5-61.4-4.6-5-16.8-20.2-18.6-23.4l.4-.4c6.6 4.1 25.7 18.6 54.8 27 24.2 7 48.1 6.3 71.6-3.3 22.7-9.3 41-.5 43.1 2.9-18.5 3.8-20.1 4.4-24 7.9-5.1 4.4-4.6 11.7 7 17.2 26.2 12.4 63-2.8 97.2 25.4 2.4 2 8.1 7.8 10.1 10.7-.1.2-.3.3-.4.5-4.8-1.5-16.4-7.5-40.2-9.3-24.7-2-46.3 5.3-77.5 6.2zm174.8-252c16.4-5.2 41.3-13.4 66.5-3.3 16.1 6.5 26.2 18.7 32.1 34.6 3.5 9.4 5.1 19.7 5.1 28.7-.2 0-.4 0-.6.1-.2-.4-.4-.9-.5-1.3-5-22-29.9-43.8-67.6-29.9-50.2 18.6-130.4 9.7-176.9-48-.7-.9-2.4-1.7-1.3-3.2.1-.2 2.1.6 3 1.3 18.1 13.4 38.3 21.9 60.3 26.2 30.5 6.1 54.6 2.9 79.9-5.2zm102.7 117.5c-32.4.2-33.8 50.1-103.6 64.4-18.2 3.7-38.7 4.6-44.9 4.2v-.4c2.8-1.5 14.7-2.6 29.7-16.6 7.9-7.3 15.3-15.1 22.8-22.9 19.5-20.2 41.4-42.2 81.9-39 23.1 1.8 29.3 8.2 36.1 12.7.3.2.4.5.7.9-.5 0-.7.1-.9 0-7-2.7-14.3-3.3-21.8-3.3zm-12.3-24.1c-.1.2-.1.4-.2.6-28.9-4.4-48-7.9-68.5 4-17 9.9-31.4 20.5-62 24.4-27.1 3.4-45.1 2.4-66.1-8-.3-.2-.6-.4-1-.6 0-.2.1-.3.1-.5 24.9 3.8 36.4 5.1 55.5-5.8 22.3-12.9 40.1-26.6 71.3-31 29.6-4.1 51.3 2.5 70.9 16.9zM268.6 97.3c-.6-.6-1.1-1.2-2.1-2.3 7.6 0 29.7-1.2 53.4 8.4 19.7 8 32.2 21 50.2 32.9 11.1 7.3 23.4 9.3 36.4 8.1 4.3-.4 8.5-1.2 12.8-1.7.4-.1.9 0 1.5.3-.6.4-1.2.9-1.8 1.2-8.1 4-16.7 6.3-25.6 7.1-26.1 2.6-50.3-3.7-73.4-15.4-19.3-9.9-36.4-22.9-51.4-38.6zM640 335.7c-3.5 3.1-22.7 11.6-42.7 5.3-12.3-3.9-19.5-14.9-31.6-24.1-10-7.6-20.9-7.9-28.1-8.4.6-.8.9-1.2 1.2-1.4 14.8-9.2 30.5-12.2 47.3-6.5 12.5 4.2 19.2 13.5 30.4 24.2 10.8 10.4 21 9.9 23.1 10.5.1-.1.2 0 .4.4zm-212.5 137c2.2 1.2 1.6 1.5 1.5 2-18.5-1.4-33.9-7.6-46.8-22.2-21.8-24.7-41.7-27.9-48.6-29.7.5-.2.8-.4 1.1-.4 13.1.1 26.1.7 38.9 3.9 25.3 6.4 35 25.4 41.6 35.3 3.2 4.8 7.3 8.3 12.3 11.1z\"],\n    \"phoenix-squadron\": [512, 512, [], \"f511\", \"M96 63.38C142.49 27.25 201.55 7.31 260.51 8.81c29.58-.38 59.11 5.37 86.91 15.33-24.13-4.63-49-6.34-73.38-2.45C231.17 27 191 48.84 162.21 80.87c5.67-1 10.78-3.67 16-5.86 18.14-7.87 37.49-13.26 57.23-14.83 19.74-2.13 39.64-.43 59.28 1.92-14.42 2.79-29.12 4.57-43 9.59-34.43 11.07-65.27 33.16-86.3 62.63-13.8 19.71-23.63 42.86-24.67 67.13-.35 16.49 5.22 34.81 19.83 44a53.27 53.27 0 0 0 37.52 6.74c15.45-2.46 30.07-8.64 43.6-16.33 11.52-6.82 22.67-14.55 32-24.25 3.79-3.22 2.53-8.45 2.62-12.79-2.12-.34-4.38-1.11-6.3.3a203 203 0 0 1-35.82 15.37c-20 6.17-42.16 8.46-62.1.78 12.79 1.73 26.06.31 37.74-5.44 20.23-9.72 36.81-25.2 54.44-38.77a526.57 526.57 0 0 1 88.9-55.31c25.71-12 52.94-22.78 81.57-24.12-15.63 13.72-32.15 26.52-46.78 41.38-14.51 14-27.46 29.5-40.11 45.18-3.52 4.6-8.95 6.94-13.58 10.16a150.7 150.7 0 0 0-51.89 60.1c-9.33 19.68-14.5 41.85-11.77 63.65 1.94 13.69 8.71 27.59 20.9 34.91 12.9 8 29.05 8.07 43.48 5.1 32.8-7.45 61.43-28.89 81-55.84 20.44-27.52 30.52-62.2 29.16-96.35-.52-7.5-1.57-15-1.66-22.49 8 19.48 14.82 39.71 16.65 60.83 2 14.28.75 28.76-1.62 42.9-1.91 11-5.67 21.51-7.78 32.43a165 165 0 0 0 39.34-81.07 183.64 183.64 0 0 0-14.21-104.64c20.78 32 32.34 69.58 35.71 107.48.49 12.73.49 25.51 0 38.23A243.21 243.21 0 0 1 482 371.34c-26.12 47.34-68 85.63-117.19 108-78.29 36.23-174.68 31.32-248-14.68A248.34 248.34 0 0 1 25.36 366 238.34 238.34 0 0 1 0 273.08v-31.34C3.93 172 40.87 105.82 96 63.38m222 80.33a79.13 79.13 0 0 0 16-4.48c5-1.77 9.24-5.94 10.32-11.22-8.96 4.99-17.98 9.92-26.32 15.7z\"],\n    \"php\": [640, 512, [], \"f457\", \"M320 104.5c171.4 0 303.2 72.2 303.2 151.5S491.3 407.5 320 407.5c-171.4 0-303.2-72.2-303.2-151.5S148.7 104.5 320 104.5m0-16.8C143.3 87.7 0 163 0 256s143.3 168.3 320 168.3S640 349 640 256 496.7 87.7 320 87.7zM218.2 242.5c-7.9 40.5-35.8 36.3-70.1 36.3l13.7-70.6c38 0 63.8-4.1 56.4 34.3zM97.4 350.3h36.7l8.7-44.8c41.1 0 66.6 3 90.2-19.1 26.1-24 32.9-66.7 14.3-88.1-9.7-11.2-25.3-16.7-46.5-16.7h-70.7L97.4 350.3zm185.7-213.6h36.5l-8.7 44.8c31.5 0 60.7-2.3 74.8 10.7 14.8 13.6 7.7 31-8.3 113.1h-37c15.4-79.4 18.3-86 12.7-92-5.4-5.8-17.7-4.6-47.4-4.6l-18.8 96.6h-36.5l32.7-168.6zM505 242.5c-8 41.1-36.7 36.3-70.1 36.3l13.7-70.6c38.2 0 63.8-4.1 56.4 34.3zM384.2 350.3H421l8.7-44.8c43.2 0 67.1 2.5 90.2-19.1 26.1-24 32.9-66.7 14.3-88.1-9.7-11.2-25.3-16.7-46.5-16.7H417l-32.8 168.7z\"],\n    \"pied-piper\": [448, 512, [], \"f2ae\", \"M32 419L0 479.2l.8-328C.8 85.3 54 32 120 32h327.2c-93 28.9-189.9 94.2-253.9 168.6C122.7 282 82.6 338 32 419M448 32S305.2 98.8 261.6 199.1c-23.2 53.6-28.9 118.1-71 158.6-28.9 27.8-69.8 38.2-105.3 56.3-23.2 12-66.4 40.5-84.9 66h328.4c66 0 119.3-53.3 119.3-119.2-.1 0-.1-328.8-.1-328.8z\"],\n    \"pied-piper-alt\": [576, 512, [], \"f1a8\", \"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"],\n    \"pied-piper-hat\": [640, 512, [], \"f4e5\", \"M640 24.9c-80.8 53.6-89.4 92.5-96.4 104.4-6.7 12.2-11.7 60.3-23.3 83.6-11.7 23.6-54.2 42.2-66.1 50-11.7 7.8-28.3 38.1-41.9 64.2-108.1-4.4-167.4 38.8-259.2 93.6 29.4-9.7 43.3-16.7 43.3-16.7 94.2-36 139.3-68.3 281.1-49.2 1.1 0 1.9.6 2.8.8 3.9 2.2 5.3 6.9 3.1 10.8l-53.9 95.8c-2.5 4.7-7.8 7.2-13.1 6.1-126.8-23.8-226.9 17.3-318.9 18.6C24.1 488 0 453.4 0 451.8c0-1.1.6-1.7 1.7-1.7 0 0 38.3 0 103.1-15.3C178.4 294.5 244 245.4 315.4 245.4c0 0 71.7 0 90.6 61.9 22.8-39.7 28.3-49.2 28.3-49.2 5.3-9.4 35-77.2 86.4-141.4 51.5-64 90.4-79.9 119.3-91.8z\"],\n    \"pied-piper-pp\": [448, 512, [], \"f1a7\", \"M205.3 174.6c0 21.1-14.2 38.1-31.7 38.1-7.1 0-12.8-1.2-17.2-3.7v-68c4.4-2.7 10.1-4.2 17.2-4.2 17.5 0 31.7 16.9 31.7 37.8zm52.6 67c-7.1 0-12.8 1.5-17.2 4.2v68c4.4 2.5 10.1 3.7 17.2 3.7 17.4 0 31.7-16.9 31.7-37.8 0-21.1-14.3-38.1-31.7-38.1zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM185 255.1c41 0 74.2-35.6 74.2-79.6 0-44-33.2-79.6-74.2-79.6-12 0-24.1 3.2-34.6 8.8h-45.7V311l51.8-10.1v-50.6c8.6 3.1 18.1 4.8 28.5 4.8zm158.4 25.3c0-44-33.2-79.6-73.9-79.6-3.2 0-6.4.2-9.6.7-3.7 12.5-10.1 23.8-19.2 33.4-13.8 15-32.2 23.8-51.8 24.8V416l51.8-10.1v-50.6c8.6 3.2 18.2 4.7 28.7 4.7 40.8 0 74-35.6 74-79.6z\"],\n    \"pinterest\": [496, 512, [], \"f0d2\", \"M496 256c0 137-111 248-248 248-25.6 0-50.2-3.9-73.4-11.1 10.1-16.5 25.2-43.5 30.8-65 3-11.6 15.4-59 15.4-59 8.1 15.4 31.7 28.5 56.8 28.5 74.8 0 128.7-68.8 128.7-154.3 0-81.9-66.9-143.2-152.9-143.2-107 0-163.9 71.8-163.9 150.1 0 36.4 19.4 81.7 50.3 96.1 4.7 2.2 7.2 1.2 8.3-3.3.8-3.4 5-20.3 6.9-28.1.6-2.5.3-4.7-1.7-7.1-10.1-12.5-18.3-35.3-18.3-56.6 0-54.7 41.4-107.6 112-107.6 60.9 0 103.6 41.5 103.6 100.9 0 67.1-33.9 113.6-78 113.6-24.3 0-42.6-20.1-36.7-44.8 7-29.5 20.5-61.3 20.5-82.6 0-19-10.2-34.9-31.4-34.9-24.9 0-44.9 25.7-44.9 60.2 0 22 7.4 36.8 7.4 36.8s-24.5 103.8-29 123.2c-5 21.4-3 51.6-.9 71.2C65.4 450.9 0 361.1 0 256 0 119 111 8 248 8s248 111 248 248z\"],\n    \"pinterest-p\": [384, 512, [], \"f231\", \"M204 6.5C101.4 6.5 0 74.9 0 185.6 0 256 39.6 296 63.6 296c9.9 0 15.6-27.6 15.6-35.4 0-9.3-23.7-29.1-23.7-67.8 0-80.4 61.2-137.4 140.4-137.4 68.1 0 118.5 38.7 118.5 109.8 0 53.1-21.3 152.7-90.3 152.7-24.9 0-46.2-18-46.2-43.8 0-37.8 26.4-74.4 26.4-113.4 0-66.2-93.9-54.2-93.9 25.8 0 16.8 2.1 35.4 9.6 50.7-13.8 59.4-42 147.9-42 209.1 0 18.9 2.7 37.5 4.5 56.4 3.4 3.8 1.7 3.4 6.9 1.5 50.4-69 48.6-82.5 71.4-172.8 12.3 23.4 44.1 36 69.3 36 106.2 0 153.9-103.5 153.9-196.8C384 71.3 298.2 6.5 204 6.5z\"],\n    \"pinterest-square\": [448, 512, [], \"f0d3\", \"M448 80v352c0 26.5-21.5 48-48 48H154.4c9.8-16.4 22.4-40 27.4-59.3 3-11.5 15.3-58.4 15.3-58.4 8 15.3 31.4 28.2 56.3 28.2 74.1 0 127.4-68.1 127.4-152.7 0-81.1-66.2-141.8-151.4-141.8-106 0-162.2 71.1-162.2 148.6 0 36 19.2 80.8 49.8 95.1 4.7 2.2 7.1 1.2 8.2-3.3.8-3.4 5-20.1 6.8-27.8.6-2.5.3-4.6-1.7-7-10.1-12.3-18.3-34.9-18.3-56 0-54.2 41-106.6 110.9-106.6 60.3 0 102.6 41.1 102.6 99.9 0 66.4-33.5 112.4-77.2 112.4-24.1 0-42.1-19.9-36.4-44.4 6.9-29.2 20.3-60.7 20.3-81.8 0-53-75.5-45.7-75.5 25 0 21.7 7.3 36.5 7.3 36.5-31.4 132.8-36.1 134.5-29.6 192.6l2.2.8H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48z\"],\n    \"playstation\": [576, 512, [], \"f3df\", \"M570.9 372.3c-11.3 14.2-38.8 24.3-38.8 24.3L327 470.2v-54.3l150.9-53.8c17.1-6.1 19.8-14.8 5.8-19.4-13.9-4.6-39.1-3.3-56.2 2.9L327 381.1v-56.4c23.2-7.8 47.1-13.6 75.7-16.8 40.9-4.5 90.9.6 130.2 15.5 44.2 14 49.2 34.7 38 48.9zm-224.4-92.5v-139c0-16.3-3-31.3-18.3-35.6-11.7-3.8-19 7.1-19 23.4v347.9l-93.8-29.8V32c39.9 7.4 98 24.9 129.2 35.4C424.1 94.7 451 128.7 451 205.2c0 74.5-46 102.8-104.5 74.6zM43.2 410.2c-45.4-12.8-53-39.5-32.3-54.8 19.1-14.2 51.7-24.9 51.7-24.9l134.5-47.8v54.5l-96.8 34.6c-17.1 6.1-19.7 14.8-5.8 19.4 13.9 4.6 39.1 3.3 56.2-2.9l46.4-16.9v48.8c-51.6 9.3-101.4 7.3-153.9-10z\"],\n    \"product-hunt\": [512, 512, [], \"f288\", \"M326.3 218.8c0 20.5-16.7 37.2-37.2 37.2h-70.3v-74.4h70.3c20.5 0 37.2 16.7 37.2 37.2zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-128.1-37.2c0-47.9-38.9-86.8-86.8-86.8H169.2v248h49.6v-74.4h70.3c47.9 0 86.8-38.9 86.8-86.8z\"],\n    \"pushed\": [432, 512, [], \"f3e1\", \"M407 111.9l-98.5-9 14-33.4c10.4-23.5-10.8-40.4-28.7-37L22.5 76.9c-15.1 2.7-26 18.3-21.4 36.6l105.1 348.3c6.5 21.3 36.7 24.2 47.7 7l35.3-80.8 235.2-231.3c16.4-16.8 4.3-42.9-17.4-44.8zM297.6 53.6c5.1-.7 7.5 2.5 5.2 7.4L286 100.9 108.6 84.6l189-31zM22.7 107.9c-3.1-5.1 1-10 6.1-9.1l248.7 22.7-96.9 230.7L22.7 107.9zM136 456.4c-2.6 4-7.9 3.1-9.4-1.2L43.5 179.7l127.7 197.6c-7 15-35.2 79.1-35.2 79.1zm272.8-314.5L210.1 337.3l89.7-213.7 106.4 9.7c4 1.1 5.7 5.3 2.6 8.6z\"],\n    \"python\": [448, 512, [], \"f3e2\", \"M439.8 200.5c-7.7-30.9-22.3-54.2-53.4-54.2h-40.1v47.4c0 36.8-31.2 67.8-66.8 67.8H172.7c-29.2 0-53.4 25-53.4 54.3v101.8c0 29 25.2 46 53.4 54.3 33.8 9.9 66.3 11.7 106.8 0 26.9-7.8 53.4-23.5 53.4-54.3v-40.7H226.2v-13.6h160.2c31.1 0 42.6-21.7 53.4-54.2 11.2-33.5 10.7-65.7 0-108.6zM286.2 404c11.1 0 20.1 9.1 20.1 20.3 0 11.3-9 20.4-20.1 20.4-11 0-20.1-9.2-20.1-20.4.1-11.3 9.1-20.3 20.1-20.3zM167.8 248.1h106.8c29.7 0 53.4-24.5 53.4-54.3V91.9c0-29-24.4-50.7-53.4-55.6-35.8-5.9-74.7-5.6-106.8.1-45.2 8-53.4 24.7-53.4 55.6v40.7h106.9v13.6h-147c-31.1 0-58.3 18.7-66.8 54.2-9.8 40.7-10.2 66.1 0 108.6 7.6 31.6 25.7 54.2 56.8 54.2H101v-48.8c0-35.3 30.5-66.4 66.8-66.4zm-6.7-142.6c-11.1 0-20.1-9.1-20.1-20.3.1-11.3 9-20.4 20.1-20.4 11 0 20.1 9.2 20.1 20.4s-9 20.3-20.1 20.3z\"],\n    \"qq\": [448, 512, [], \"f1d6\", \"M433.754 420.445c-11.526 1.393-44.86-52.741-44.86-52.741 0 31.345-16.136 72.247-51.051 101.786 16.842 5.192 54.843 19.167 45.803 34.421-7.316 12.343-125.51 7.881-159.632 4.037-34.122 3.844-152.316 8.306-159.632-4.037-9.045-15.25 28.918-29.214 45.783-34.415-34.92-29.539-51.059-70.445-51.059-101.792 0 0-33.334 54.134-44.859 52.741-5.37-.65-12.424-29.644 9.347-99.704 10.261-33.024 21.995-60.478 40.144-105.779C60.683 98.063 108.982.006 224 0c113.737.006 163.156 96.133 160.264 214.963 18.118 45.223 29.912 72.85 40.144 105.778 21.768 70.06 14.716 99.053 9.346 99.704z\"],\n    \"quinscape\": [512, 512, [], \"f459\", \"M313.6 474.6h-1a158.1 158.1 0 0 1 0-316.2c94.9 0 168.2 83.1 157 176.6 4 5.1 8.2 9.6 11.2 15.3 13.4-30.3 20.3-62.4 20.3-97.7C501.1 117.5 391.6 8 256.5 8S12 117.5 12 252.6s109.5 244.6 244.5 244.6a237.36 237.36 0 0 0 70.4-10.1c-5.2-3.5-8.9-8.1-13.3-12.5zm-.1-.1l.4.1zm78.4-168.9a99.2 99.2 0 1 0 99.2 99.2 99.18 99.18 0 0 0-99.2-99.2z\"],\n    \"quora\": [448, 512, [], \"f2c4\", \"M440.5 386.7h-29.3c-1.5 13.5-10.5 30.8-33 30.8-20.5 0-35.3-14.2-49.5-35.8 44.2-34.2 74.7-87.5 74.7-153C403.5 111.2 306.8 32 205 32 105.3 32 7.3 111.7 7.3 228.7c0 134.1 131.3 221.6 249 189C276 451.3 302 480 351.5 480c81.8 0 90.8-75.3 89-93.3zM297 329.2C277.5 300 253.3 277 205.5 277c-30.5 0-54.3 10-69 22.8l12.2 24.3c6.2-3 13-4 19.8-4 35.5 0 53.7 30.8 69.2 61.3-10 3-20.7 4.2-32.7 4.2-75 0-107.5-53-107.5-156.7C97.5 124.5 130 71 205 71c76.2 0 108.7 53.5 108.7 157.7.1 41.8-5.4 75.6-16.7 100.5z\"],\n    \"r-project\": [581, 512, [], \"f4f7\", \"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"],\n    \"raspberry-pi\": [407, 512, [], \"f7bb\", \"M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z\"],\n    \"ravelry\": [512, 512, [], \"f2d9\", \"M407.4 61.5C331.6 22.1 257.8 31 182.9 66c-11.3 5.2-15.5 10.6-19.9 19-10.3 19.2-16.2 37.4-19.9 52.7-21.2 25.6-36.4 56.1-43.3 89.9-10.6 18-20.9 41.4-23.1 71.4 0 0-.7 7.6-.5 7.9-35.3-4.6-76.2-27-76.2-27 9.1 14.5 61.3 32.3 76.3 37.9 0 0 1.7 98 64.5 131.2-11.3-17.2-13.3-20.2-13.3-20.2S94.8 369 100.4 324.7c.7 0 1.5.2 2.2.2 23.9 87.4 103.2 151.4 196.9 151.4 6.2 0 12.1-.2 18-.7 14 1.5 27.6.5 40.1-3.9 6.9-2.2 13.8-6.4 20.2-10.8 70.2-39.1 100.9-82 123.1-147.7 5.4-16 8.1-35.5 9.8-52.2 8.7-82.3-30.6-161.6-103.3-199.5zM138.8 163.2s-1.2 12.3-.7 19.7c-3.4 2.5-10.1 8.1-18.2 16.7 5.2-12.8 11.3-25.1 18.9-36.4zm-31.2 121.9c4.4-17.2 13.3-39.1 29.8-55.1 0 0 1.7 48 15.8 90.1l-41.4-6.9c-2.2-9.2-3.5-18.5-4.2-28.1zm7.9 42.8c14.8 3.2 34 7.6 43.1 9.1 27.3 76.8 108.3 124.3 108.3 124.3 1 .5 1.7.7 2.7 1-73.1-11.6-132.7-64.7-154.1-134.4zM386 444.1c-14.5 4.7-36.2 8.4-64.7 3.7 0 0-91.1-23.1-127.5-107.8 38.2.7 52.4-.2 78-3.9 39.4-5.7 79-16.2 115-33 11.8-5.4 11.1-19.4 9.6-29.8-2-12.8-11.1-12.1-21.4-4.7 0 0-82 58.6-189.8 53.7-18.7-32-26.8-110.8-26.8-110.8 41.4-35.2 83.2-59.6 168.4-52.4.2-6.4 3-27.1-20.4-28.1 0 0-93.5-11.1-146 33.5 2.5-16.5 5.9-29.3 11.1-39.4 34.2-30.8 79-49.5 128.3-49.5 106.4 0 193 87.1 193 194.5-.2 76-43.8 142-106.8 174z\"],\n    \"react\": [512, 512, [], \"f41b\", \"M418.2 177.2c-5.4-1.8-10.8-3.5-16.2-5.1.9-3.7 1.7-7.4 2.5-11.1 12.3-59.6 4.2-107.5-23.1-123.3-26.3-15.1-69.2.6-112.6 38.4-4.3 3.7-8.5 7.6-12.5 11.5-2.7-2.6-5.5-5.2-8.3-7.7-45.5-40.4-91.1-57.4-118.4-41.5-26.2 15.2-34 60.3-23 116.7 1.1 5.6 2.3 11.1 3.7 16.7-6.4 1.8-12.7 3.8-18.6 5.9C38.3 196.2 0 225.4 0 255.6c0 31.2 40.8 62.5 96.3 81.5 4.5 1.5 9 3 13.6 4.3-1.5 6-2.8 11.9-4 18-10.5 55.5-2.3 99.5 23.9 114.6 27 15.6 72.4-.4 116.6-39.1 3.5-3.1 7-6.3 10.5-9.7 4.4 4.3 9 8.4 13.6 12.4 42.8 36.8 85.1 51.7 111.2 36.6 27-15.6 35.8-62.9 24.4-120.5-.9-4.4-1.9-8.9-3-13.5 3.2-.9 6.3-1.9 9.4-2.9 57.7-19.1 99.5-50 99.5-81.7 0-30.3-39.4-59.7-93.8-78.4zM282.9 92.3c37.2-32.4 71.9-45.1 87.7-36 16.9 9.7 23.4 48.9 12.8 100.4-.7 3.4-1.4 6.7-2.3 10-22.2-5-44.7-8.6-67.3-10.6-13-18.6-27.2-36.4-42.6-53.1 3.9-3.7 7.7-7.2 11.7-10.7zM167.2 307.5c5.1 8.7 10.3 17.4 15.8 25.9-15.6-1.7-31.1-4.2-46.4-7.5 4.4-14.4 9.9-29.3 16.3-44.5 4.6 8.8 9.3 17.5 14.3 26.1zm-30.3-120.3c14.4-3.2 29.7-5.8 45.6-7.8-5.3 8.3-10.5 16.8-15.4 25.4-4.9 8.5-9.7 17.2-14.2 26-6.3-14.9-11.6-29.5-16-43.6zm27.4 68.9c6.6-13.8 13.8-27.3 21.4-40.6s15.8-26.2 24.4-38.9c15-1.1 30.3-1.7 45.9-1.7s31 .6 45.9 1.7c8.5 12.6 16.6 25.5 24.3 38.7s14.9 26.7 21.7 40.4c-6.7 13.8-13.9 27.4-21.6 40.8-7.6 13.3-15.7 26.2-24.2 39-14.9 1.1-30.4 1.6-46.1 1.6s-30.9-.5-45.6-1.4c-8.7-12.7-16.9-25.7-24.6-39s-14.8-26.8-21.5-40.6zm180.6 51.2c5.1-8.8 9.9-17.7 14.6-26.7 6.4 14.5 12 29.2 16.9 44.3-15.5 3.5-31.2 6.2-47 8 5.4-8.4 10.5-17 15.5-25.6zm14.4-76.5c-4.7-8.8-9.5-17.6-14.5-26.2-4.9-8.5-10-16.9-15.3-25.2 16.1 2 31.5 4.7 45.9 8-4.6 14.8-10 29.2-16.1 43.4zM256.2 118.3c10.5 11.4 20.4 23.4 29.6 35.8-19.8-.9-39.7-.9-59.5 0 9.8-12.9 19.9-24.9 29.9-35.8zM140.2 57c16.8-9.8 54.1 4.2 93.4 39 2.5 2.2 5 4.6 7.6 7-15.5 16.7-29.8 34.5-42.9 53.1-22.6 2-45 5.5-67.2 10.4-1.3-5.1-2.4-10.3-3.5-15.5-9.4-48.4-3.2-84.9 12.6-94zm-24.5 263.6c-4.2-1.2-8.3-2.5-12.4-3.9-21.3-6.7-45.5-17.3-63-31.2-10.1-7-16.9-17.8-18.8-29.9 0-18.3 31.6-41.7 77.2-57.6 5.7-2 11.5-3.8 17.3-5.5 6.8 21.7 15 43 24.5 63.6-9.6 20.9-17.9 42.5-24.8 64.5zm116.6 98c-16.5 15.1-35.6 27.1-56.4 35.3-11.1 5.3-23.9 5.8-35.3 1.3-15.9-9.2-22.5-44.5-13.5-92 1.1-5.6 2.3-11.2 3.7-16.7 22.4 4.8 45 8.1 67.9 9.8 13.2 18.7 27.7 36.6 43.2 53.4-3.2 3.1-6.4 6.1-9.6 8.9zm24.5-24.3c-10.2-11-20.4-23.2-30.3-36.3 9.6.4 19.5.6 29.5.6 10.3 0 20.4-.2 30.4-.7-9.2 12.7-19.1 24.8-29.6 36.4zm130.7 30c-.9 12.2-6.9 23.6-16.5 31.3-15.9 9.2-49.8-2.8-86.4-34.2-4.2-3.6-8.4-7.5-12.7-11.5 15.3-16.9 29.4-34.8 42.2-53.6 22.9-1.9 45.7-5.4 68.2-10.5 1 4.1 1.9 8.2 2.7 12.2 4.9 21.6 5.7 44.1 2.5 66.3zm18.2-107.5c-2.8.9-5.6 1.8-8.5 2.6-7-21.8-15.6-43.1-25.5-63.8 9.6-20.4 17.7-41.4 24.5-62.9 5.2 1.5 10.2 3.1 15 4.7 46.6 16 79.3 39.8 79.3 58 0 19.6-34.9 44.9-84.8 61.4zm-149.7-15c25.3 0 45.8-20.5 45.8-45.8s-20.5-45.8-45.8-45.8c-25.3 0-45.8 20.5-45.8 45.8s20.5 45.8 45.8 45.8z\"],\n    \"reacteurope\": [576, 512, [], \"f75d\", \"M250.6 211.74l5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.1-.1-2.3-6.8-2.3 6.8-7.2.1 5.7 4.3zm63.7 0l5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.2-.1-2.3-6.8-2.3 6.8-7.2.1 5.7 4.3zm-91.3 50.5h-3.4c-4.8 0-3.8 4-3.8 12.1 0 4.7-2.3 6.1-5.8 6.1s-5.8-1.4-5.8-6.1v-36.6c0-4.7 2.3-6.1 5.8-6.1s5.8 1.4 5.8 6.1c0 7.2-.7 10.5 3.8 10.5h3.4c4.7-.1 3.8-3.9 3.8-12.3 0-9.9-6.7-14.1-16.8-14.1h-.2c-10.1 0-16.8 4.2-16.8 14.1V276c0 10.4 6.7 14.1 16.8 14.1h.2c10.1 0 16.8-3.8 16.8-14.1 0-9.86 1.1-13.76-3.8-13.76zm-80.7 17.4h-14.7v-19.3H139c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-11.4v-18.3H142c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-21.7c-2.4-.1-3.7 1.3-3.7 3.8v59.1c0 2.5 1.3 3.8 3.8 3.8h21.9c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8zm-42-18.5c4.6-2 7.3-6 7.3-12.4v-11.9c0-10.1-6.7-14.1-16.8-14.1H77.4c-2.5 0-3.8 1.3-3.8 3.8v59.1c0 2.5 1.3 3.8 3.8 3.8h3.4c2.5 0 3.8-1.3 3.8-3.8v-22.9h5.6l7.4 23.5a4.1 4.1 0 0 0 4.3 3.2h3.3c2.8 0 4-1.8 3.2-4.4zm-3.8-14c0 4.8-2.5 6.1-6.1 6.1h-5.8v-20.9h5.8c3.6 0 6.1 1.3 6.1 6.1zM176 226a3.82 3.82 0 0 0-4.2-3.4h-6.9a3.68 3.68 0 0 0-4 3.4l-11 59.2c-.5 2.7.9 4.1 3.4 4.1h3a3.74 3.74 0 0 0 4.1-3.5l1.8-11.3h12.2l1.8 11.3a3.74 3.74 0 0 0 4.1 3.5h3.5c2.6 0 3.9-1.4 3.4-4.1zm-12.3 39.3l4.7-29.7 4.7 29.7zm89.3 20.2v-53.2h7.5c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-25.8c-2.5 0-3.8 1.3-3.8 3.8v2.1c0 2.5 1.3 3.8 3.8 3.8h7.3v53.2c0 2.5 1.3 3.8 3.8 3.8h3.4c2.5.04 3.8-1.3 3.8-3.76zm248-.8h-19.4V258h16.1a1.89 1.89 0 0 0 2-2v-.8a1.89 1.89 0 0 0-2-2h-16.1v-25.8h19.1a1.89 1.89 0 0 0 2-2v-.8a1.77 1.77 0 0 0-2-1.9h-22.2a1.62 1.62 0 0 0-2 1.8v63a1.81 1.81 0 0 0 2 1.9H501a1.81 1.81 0 0 0 2-1.9v-.8a1.84 1.84 0 0 0-2-1.96zm-93.1-62.9h-.8c-10.1 0-15.3 4.7-15.3 14.1V276c0 9.3 5.2 14.1 15.3 14.1h.8c10.1 0 15.3-4.8 15.3-14.1v-40.1c0-9.36-5.2-14.06-15.3-14.06zm10.2 52.4c-.1 8-3 11.1-10.5 11.1s-10.5-3.1-10.5-11.1v-36.6c0-7.9 3-11.1 10.5-11.1s10.5 3.2 10.5 11.1zm-46.5-14.5c6.1-1.6 9.2-6.1 9.2-13.3v-9.7c0-9.4-5.2-14.1-15.3-14.1h-13.7a1.81 1.81 0 0 0-2 1.9v63a1.81 1.81 0 0 0 2 1.9h1.2a1.74 1.74 0 0 0 1.9-1.9v-26.9h11.6l10.4 27.2a2.32 2.32 0 0 0 2.3 1.5h1.5c1.4 0 2-1 1.5-2.3zm-6.4-3.9H355v-28.5h10.2c7.5 0 10.5 3.1 10.5 11.1v6.4c0 7.84-3 11.04-10.5 11.04zm85.9-33.1h-13.7a1.62 1.62 0 0 0-2 1.8v63a1.81 1.81 0 0 0 2 1.9h1.2a1.74 1.74 0 0 0 1.9-1.9v-26.1h10.6c10.1 0 15.3-4.8 15.3-14.1v-10.5c0-9.4-5.2-14.1-15.3-14.1zm10.2 22.8c0 7.9-3 11.1-10.5 11.1h-10.2v-29.2h10.2c7.5-.1 10.5 3.1 10.5 11zM259.5 308l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm227.6-136.1a364.42 364.42 0 0 0-35.6-11.3c19.6-78 11.6-134.7-22.3-153.9C394.7-12.66 343.3 11 291 61.94q5.1 4.95 10.2 10.2c82.5-80 119.6-53.5 120.9-52.8 22.4 12.7 36 55.8 15.5 137.8a587.83 587.83 0 0 0-84.6-13C281.1 43.64 212.4 2 170.8 2 140 2 127 23 123.2 29.74c-18.1 32-13.3 84.2.1 133.8-70.5 20.3-120.7 54.1-120.3 95 .5 59.6 103.2 87.8 122.1 92.8-20.5 81.9-10.1 135.6 22.3 153.9 28 15.8 75.1 6 138.2-55.2q-5.1-4.95-10.2-10.2c-82.5 80-119.7 53.5-120.9 52.8-22.3-12.6-36-55.6-15.5-137.9 12.4 2.9 41.8 9.5 84.6 13 71.9 100.4 140.6 142 182.1 142 30.8 0 43.8-21 47.6-27.7 18-31.9 13.3-84.1-.1-133.8 152.3-43.8 156.2-130.2 33.9-176.3zM135.9 36.84c2.9-5.1 11.9-20.3 34.9-20.3 36.8 0 98.8 39.6 163.3 126.2a714 714 0 0 0-93.9.9 547.76 547.76 0 0 1 42.2-52.4Q277.3 86 272.2 81a598.25 598.25 0 0 0-50.7 64.2 569.69 569.69 0 0 0-84.4 14.6c-.2-1.4-24.3-82.2-1.2-123zm304.8 438.3c-2.9 5.1-11.8 20.3-34.9 20.3-36.7 0-98.7-39.4-163.3-126.2a695.38 695.38 0 0 0 93.9-.9 547.76 547.76 0 0 1-42.2 52.4q5.1 5.25 10.2 10.2a588.47 588.47 0 0 0 50.7-64.2c47.3-4.7 80.3-13.5 84.4-14.6 22.7 84.4 4.5 117 1.2 123zm9.1-138.6c-3.6-11.9-7.7-24.1-12.4-36.4a12.67 12.67 0 0 1-10.7-5.7l-.1.1a19.61 19.61 0 0 1-5.4 3.6c5.7 14.3 10.6 28.4 14.7 42.2a535.3 535.3 0 0 1-72 13c3.5-5.3 17.2-26.2 32.2-54.2a24.6 24.6 0 0 1-6-3.2c-1.1 1.2-3.6 4.2-10.9 4.2-6.2 11.2-17.4 30.9-33.9 55.2a711.91 711.91 0 0 1-112.4 1c-7.9-11.2-21.5-31.1-36.8-57.8a21 21 0 0 1-3-1.5c-1.9 1.6-3.9 3.2-12.6 3.2 6.3 11.2 17.5 30.7 33.8 54.6a548.81 548.81 0 0 1-72.2-11.7q5.85-21 14.1-42.9c-3.2 0-5.4.2-8.4-1a17.58 17.58 0 0 1-6.9 1c-4.9 13.4-9.1 26.5-12.7 39.4C-31.7 297-12.1 216 126.7 175.64c3.6 11.9 7.7 24.1 12.4 36.4 10.4 0 12.9 3.4 14.4 5.3a12 12 0 0 1 2.3-2.2c-5.8-14.7-10.9-29.2-15.2-43.3 7-1.8 32.4-8.4 72-13-15.9 24.3-26.7 43.9-32.8 55.3a14.22 14.22 0 0 1 6.4 8 23.42 23.42 0 0 1 10.2-8.4c6.5-11.7 17.9-31.9 34.8-56.9a711.72 711.72 0 0 1 112.4-1c31.5 44.6 28.9 48.1 42.5 64.5a21.42 21.42 0 0 1 10.4-7.4c-6.4-11.4-17.6-31-34.3-55.5 40.4 4.1 65 10 72.2 11.7-4 14.4-8.9 29.2-14.6 44.2a20.74 20.74 0 0 1 6.8 4.3l.1.1a12.72 12.72 0 0 1 8.9-5.6c4.9-13.4 9.2-26.6 12.8-39.5a359.71 359.71 0 0 1 34.5 11c106.1 39.9 74 87.9 72.6 90.4-19.8 35.1-80.1 55.2-105.7 62.5zm-114.4-114h-1.2a1.74 1.74 0 0 0-1.9 1.9v49.8c0 7.9-2.6 11.1-10.1 11.1s-10.1-3.1-10.1-11.1v-49.8a1.69 1.69 0 0 0-1.9-1.9H309a1.81 1.81 0 0 0-2 1.9v51.5c0 9.6 5 14.1 15.1 14.1h.4c10.1 0 15.1-4.6 15.1-14.1v-51.5a2 2 0 0 0-2.2-1.9zM321.7 308l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm-31.1 7.4l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm5.1-30.8h-19.4v-26.7h16.1a1.89 1.89 0 0 0 2-2v-.8a1.89 1.89 0 0 0-2-2h-16.1v-25.8h19.1a1.89 1.89 0 0 0 2-2v-.8a1.77 1.77 0 0 0-2-1.9h-22.2a1.81 1.81 0 0 0-2 1.9v63a1.81 1.81 0 0 0 2 1.9h22.5a1.77 1.77 0 0 0 2-1.9v-.8a1.83 1.83 0 0 0-2-2.06zm-7.4-99.4L286 192l-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.1-.1z\"],\n    \"readme\": [576, 512, [], \"f4d5\", \"M528.3 46.5H388.5c-48.1 0-89.9 33.3-100.4 80.3-10.6-47-52.3-80.3-100.4-80.3H48c-26.5 0-48 21.5-48 48v245.8c0 26.5 21.5 48 48 48h89.7c102.2 0 132.7 24.4 147.3 75 .7 2.8 5.2 2.8 6 0 14.7-50.6 45.2-75 147.3-75H528c26.5 0 48-21.5 48-48V94.6c0-26.4-21.3-47.9-47.7-48.1zM242 311.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5V289c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5V251zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm259.3 121.7c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5V228c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5v-22.8c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5V190z\"],\n    \"rebel\": [512, 512, [], \"f1d0\", \"M256.5 504C117.2 504 9 387.8 13.2 249.9 16 170.7 56.4 97.7 129.7 49.5c.3 0 1.9-.6 1.1.8-5.8 5.5-111.3 129.8-14.1 226.4 49.8 49.5 90 2.5 90 2.5 38.5-50.1-.6-125.9-.6-125.9-10-24.9-45.7-40.1-45.7-40.1l28.8-31.8c24.4 10.5 43.2 38.7 43.2 38.7.8-29.6-21.9-61.4-21.9-61.4L255.1 8l44.3 50.1c-20.5 28.8-21.9 62.6-21.9 62.6 13.8-23 43.5-39.3 43.5-39.3l28.5 31.8c-27.4 8.9-45.4 39.9-45.4 39.9-15.8 28.5-27.1 89.4.6 127.3 32.4 44.6 87.7-2.8 87.7-2.8 102.7-91.9-10.5-225-10.5-225-6.1-5.5.8-2.8.8-2.8 50.1 36.5 114.6 84.4 116.2 204.8C500.9 400.2 399 504 256.5 504z\"],\n    \"red-river\": [448, 512, [], \"f3e3\", \"M353.2 32H94.8C42.4 32 0 74.4 0 126.8v258.4C0 437.6 42.4 480 94.8 480h258.4c52.4 0 94.8-42.4 94.8-94.8V126.8c0-52.4-42.4-94.8-94.8-94.8zM144.9 200.9v56.3c0 27-21.9 48.9-48.9 48.9V151.9c0-13.2 10.7-23.9 23.9-23.9h154.2c0 27-21.9 48.9-48.9 48.9h-56.3c-12.3-.6-24.6 11.6-24 24zm176.3 72h-56.3c-12.3-.6-24.6 11.6-24 24v56.3c0 27-21.9 48.9-48.9 48.9V247.9c0-13.2 10.7-23.9 23.9-23.9h154.2c0 27-21.9 48.9-48.9 48.9z\"],\n    \"reddit\": [512, 512, [], \"f1a1\", \"M201.5 305.5c-13.8 0-24.9-11.1-24.9-24.6 0-13.8 11.1-24.9 24.9-24.9 13.6 0 24.6 11.1 24.6 24.9 0 13.6-11.1 24.6-24.6 24.6zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-132.3-41.2c-9.4 0-17.7 3.9-23.8 10-22.4-15.5-52.6-25.5-86.1-26.6l17.4-78.3 55.4 12.5c0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.3 24.9-24.9s-11.1-24.9-24.9-24.9c-9.7 0-18 5.8-22.1 13.8l-61.2-13.6c-3-.8-6.1 1.4-6.9 4.4l-19.1 86.4c-33.2 1.4-63.1 11.3-85.5 26.8-6.1-6.4-14.7-10.2-24.1-10.2-34.9 0-46.3 46.9-14.4 62.8-1.1 5-1.7 10.2-1.7 15.5 0 52.6 59.2 95.2 132 95.2 73.1 0 132.3-42.6 132.3-95.2 0-5.3-.6-10.8-1.9-15.8 31.3-16 19.8-62.5-14.9-62.5zM302.8 331c-18.2 18.2-76.1 17.9-93.6 0-2.2-2.2-6.1-2.2-8.3 0-2.5 2.5-2.5 6.4 0 8.6 22.8 22.8 87.3 22.8 110.2 0 2.5-2.2 2.5-6.1 0-8.6-2.2-2.2-6.1-2.2-8.3 0zm7.7-75c-13.6 0-24.6 11.1-24.6 24.9 0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.1 24.9-24.6 0-13.8-11-24.9-24.9-24.9z\"],\n    \"reddit-alien\": [512, 512, [], \"f281\", \"M440.3 203.5c-15 0-28.2 6.2-37.9 15.9-35.7-24.7-83.8-40.6-137.1-42.3L293 52.3l88.2 19.8c0 21.6 17.6 39.2 39.2 39.2 22 0 39.7-18.1 39.7-39.7s-17.6-39.7-39.7-39.7c-15.4 0-28.7 9.3-35.3 22l-97.4-21.6c-4.9-1.3-9.7 2.2-11 7.1L246.3 177c-52.9 2.2-100.5 18.1-136.3 42.8-9.7-10.1-23.4-16.3-38.4-16.3-55.6 0-73.8 74.6-22.9 100.1-1.8 7.9-2.6 16.3-2.6 24.7 0 83.8 94.4 151.7 210.3 151.7 116.4 0 210.8-67.9 210.8-151.7 0-8.4-.9-17.2-3.1-25.1 49.9-25.6 31.5-99.7-23.8-99.7zM129.4 308.9c0-22 17.6-39.7 39.7-39.7 21.6 0 39.2 17.6 39.2 39.7 0 21.6-17.6 39.2-39.2 39.2-22 .1-39.7-17.6-39.7-39.2zm214.3 93.5c-36.4 36.4-139.1 36.4-175.5 0-4-3.5-4-9.7 0-13.7 3.5-3.5 9.7-3.5 13.2 0 27.8 28.5 120 29 149 0 3.5-3.5 9.7-3.5 13.2 0 4.1 4 4.1 10.2.1 13.7zm-.8-54.2c-21.6 0-39.2-17.6-39.2-39.2 0-22 17.6-39.7 39.2-39.7 22 0 39.7 17.6 39.7 39.7-.1 21.5-17.7 39.2-39.7 39.2z\"],\n    \"reddit-square\": [448, 512, [], \"f1a2\", \"M283.2 345.5c2.7 2.7 2.7 6.8 0 9.2-24.5 24.5-93.8 24.6-118.4 0-2.7-2.4-2.7-6.5 0-9.2 2.4-2.4 6.5-2.4 8.9 0 18.7 19.2 81 19.6 100.5 0 2.4-2.3 6.6-2.3 9 0zm-91.3-53.8c0-14.9-11.9-26.8-26.5-26.8-14.9 0-26.8 11.9-26.8 26.8 0 14.6 11.9 26.5 26.8 26.5 14.6 0 26.5-11.9 26.5-26.5zm90.7-26.8c-14.6 0-26.5 11.9-26.5 26.8 0 14.6 11.9 26.5 26.5 26.5 14.9 0 26.8-11.9 26.8-26.5 0-14.9-11.9-26.8-26.8-26.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-99.7 140.6c-10.1 0-19 4.2-25.6 10.7-24.1-16.7-56.5-27.4-92.5-28.6l18.7-84.2 59.5 13.4c0 14.6 11.9 26.5 26.5 26.5 14.9 0 26.8-12.2 26.8-26.8 0-14.6-11.9-26.8-26.8-26.8-10.4 0-19.3 6.2-23.8 14.9l-65.7-14.6c-3.3-.9-6.5 1.5-7.4 4.8l-20.5 92.8c-35.7 1.5-67.8 12.2-91.9 28.9-6.5-6.8-15.8-11-25.9-11-37.5 0-49.8 50.4-15.5 67.5-1.2 5.4-1.8 11-1.8 16.7 0 56.5 63.7 102.3 141.9 102.3 78.5 0 142.2-45.8 142.2-102.3 0-5.7-.6-11.6-2.1-17 33.6-17.2 21.2-67.2-16.1-67.2z\"],\n    \"redhat\": [512, 512, [], \"f7bc\", \"M312.4 401.2c1.3 1.3 3.6 5.6.8 11.1-1.6 2.9-3.2 4.9-6.2 7.3-3.6 2.9-10.6 6.2-20.3.1-5.2-3.3-5.5-4.4-12.7-3.4-5.1.7-7.1-4.5-5.3-8.8 1.9-4.3 9.4-7.7 18.8-2.2 4.2 2.5 10.8 7.7 16.6 3.1 2.4-1.9 3.8-3.2 7.2-7 .3-.5.8-.5 1.1-.2M256 29.7C114.6 29.7 0 144.3 0 285.6c0 28.6 4.7 56.1 13.3 81.8h17.8c15.8 0 30.4-3.8 42.8-10.2 3.1-1.6 6.6-2.6 10.4-2.6 19.1 0 18.3 15.3 30.3 22.9.7.4 7.5 4.3 15.8 3.9 3.4-.2 8.5-1 9.8-4.5 1.4-4-.3-7-5.3-9.1-9.7-4.1-9.5-11-15.8-18.2-3.9-4.3-8.6-8.5-9.5-17.8-.9-9.1 4.2-19.9 14.7-22.7 4-1.1 12.8-1.8 21.5 5 8.3 6.4 13.9 16.9 16.3 21.2 1.7 3 7.8 6.5 12.7 2.1 4.9-4.5 9.4-4.5 13.1 1.2 3.1 4.9 26.2 35.6 51.1 36.4 25.3.8 38.8-5.7 49.9-5.3 7.7.3 11.5 4.2 15.9 4.9 7.8 1.2 13.3-5.8 21.9-5.4 6.9.3 14.5 5 22.3 5 7.8 0 24.1-9.4 23.9-5.5-.4 6.8-5.7 18.9-6.9 24.5-.9 3.9-.1 13.2-2.4 20.8-2.1 7.6-9.2 17.4-11.1 20.1-6.3 9.4-10.8 12.2-16 22.1-5.7 11-15.1 21.2-17.6 24.5-.4.5-.4.9-.1 1.2 2 1.9 18.8-2.2 25.3-8.3 6.3-5.9 17.3-24 34.7-27.8 8.8-2 12.3-5 13-8.1.5-2.7-.6-2.9-.6-4.8 0-1.6.9-3 2.3-3.7 14.4-6 43.3-12.4 77.7-4.5 26-40.1 41.1-87.8 41.1-139.1C512 144.3 397.4 29.7 256 29.7zm208.2 250.8c-12.3 67.4-122.5 90-229.7 57.6-102.2-30.9-191.9-92.5-181.6-128.6 6-21 39.4-30 83.8-25.2-6.7 13.7-6.2 29.9 23.2 47.8 36 20.4 96.7 37.8 113.1 36.1 6.1-.6 11.6-3.7 6.1-7.3-24.8-16.6 7-36.4-55.7-48.4-82.9-15.8-79.6-39.2-77.2-52.7 0 0 7.4-33.1 10.4-44.7 3.1-11.6 11-38.3 64.3-26.3 30.8 6.9 47.5-1.7 55.9-3.9 23.1-5.9 48.6-1.8 62.7 12.7 14.6 15 34.7 61.3 44.3 95.9 4.9 17.6 3.6 26 1.1 32-1.8 4-2.8 6.6-8.9 16.9-1.1 1.8-.2 3.8 2.2 2.6 16-8.2 19.6-19.1 22.1-27.6 43.7 9.9 69.4 32.5 63.9 63.1zM229.6 135c-26.3 0-34.4 7-45.8-7.1-2.3-2.9-9.6-5.6-13.6 3.6-4 9.3 3.4 19.2 9.6 20.5 0 0 10.3 19.1 18.1 10.8 5.5-5.9 8.6-9.1 38.2-11.2 27.9-2.1 13.4-16.6-6.5-16.6zm61.1-40.2c-9.8 1-18.3 3.4-24.1 6.4-.7.3-.7 1.5.5 1.5 34.2-5.4 48.9 8.1 18.3 15.1-1.2.3-1.2 1.9 0 2.2 4.3 1.2 9.3 2 14.6 2.1 16.4.3 29.9-5.6 30.1-13.2.2-6.4-12.4-16.9-39.4-14.1z\"],\n    \"renren\": [512, 512, [], \"f18b\", \"M214 169.1c0 110.4-61 205.4-147.6 247.4C30 373.2 8 317.7 8 256.6 8 133.9 97.1 32.2 214 12.5v156.6zM255 504c-42.9 0-83.3-11-118.5-30.4C193.7 437.5 239.9 382.9 255 319c15.5 63.9 61.7 118.5 118.8 154.7C338.7 493 298.3 504 255 504zm190.6-87.5C359 374.5 298 279.6 298 169.1V12.5c116.9 19.7 206 121.4 206 244.1 0 61.1-22 116.6-58.4 159.9z\"],\n    \"replyd\": [448, 512, [], \"f3e6\", \"M320 480H128C57.6 480 0 422.4 0 352V160C0 89.6 57.6 32 128 32h192c70.4 0 128 57.6 128 128v192c0 70.4-57.6 128-128 128zM193.4 273.2c-6.1-2-11.6-3.1-16.4-3.1-7.2 0-13.5 1.9-18.9 5.6-5.4 3.7-9.6 9-12.8 15.8h-1.1l-4.2-18.3h-28v138.9h36.1v-89.7c1.5-5.4 4.4-9.8 8.7-13.2 4.3-3.4 9.8-5.1 16.2-5.1 4.6 0 9.8 1 15.6 3.1l4.8-34zm115.2 103.4c-3.2 2.4-7.7 4.8-13.7 7.1-6 2.3-12.8 3.5-20.4 3.5-12.2 0-21.1-3-26.5-8.9-5.5-5.9-8.5-14.7-9-26.4h83.3c.9-4.8 1.6-9.4 2.1-13.9.5-4.4.7-8.6.7-12.5 0-10.7-1.6-19.7-4.7-26.9-3.2-7.2-7.3-13-12.5-17.2-5.2-4.3-11.1-7.3-17.8-9.2-6.7-1.8-13.5-2.8-20.6-2.8-21.1 0-37.5 6.1-49.2 18.3s-17.5 30.5-17.5 55c0 22.8 5.2 40.7 15.6 53.7 10.4 13.1 26.8 19.6 49.2 19.6 10.7 0 20.9-1.5 30.4-4.6 9.5-3.1 17.1-6.8 22.6-11.2l-12-23.6zm-21.8-70.3c3.8 5.4 5.3 13.1 4.6 23.1h-51.7c.9-9.4 3.7-17 8.2-22.6 4.5-5.6 11.5-8.5 21-8.5 8.2-.1 14.1 2.6 17.9 8zm79.9 2.5c4.1 3.9 9.4 5.8 16.1 5.8 7 0 12.6-1.9 16.7-5.8s6.1-9.1 6.1-15.6-2-11.6-6.1-15.4c-4.1-3.8-9.6-5.7-16.7-5.7-6.7 0-12 1.9-16.1 5.7-4.1 3.8-6.1 8.9-6.1 15.4s2 11.7 6.1 15.6zm0 100.5c4.1 3.9 9.4 5.8 16.1 5.8 7 0 12.6-1.9 16.7-5.8s6.1-9.1 6.1-15.6-2-11.6-6.1-15.4c-4.1-3.8-9.6-5.7-16.7-5.7-6.7 0-12 1.9-16.1 5.7-4.1 3.8-6.1 8.9-6.1 15.4 0 6.6 2 11.7 6.1 15.6z\"],\n    \"researchgate\": [448, 512, [], \"f4f8\", \"M0 32v448h448V32H0zm262.2 334.4c-6.6 3-33.2 6-50-14.2-9.2-10.6-25.3-33.3-42.2-63.6-8.9 0-14.7 0-21.4-.6v46.4c0 23.5 6 21.2 25.8 23.9v8.1c-6.9-.3-23.1-.8-35.6-.8-13.1 0-26.1.6-33.6.8v-8.1c15.5-2.9 22-1.3 22-23.9V225c0-22.6-6.4-21-22-23.9V193c25.8 1 53.1-.6 70.9-.6 31.7 0 55.9 14.4 55.9 45.6 0 21.1-16.7 42.2-39.2 47.5 13.6 24.2 30 45.6 42.2 58.9 7.2 7.8 17.2 14.7 27.2 14.7v7.3zm22.9-135c-23.3 0-32.2-15.7-32.2-32.2V167c0-12.2 8.8-30.4 34-30.4s30.4 17.9 30.4 17.9l-10.7 7.2s-5.5-12.5-19.7-12.5c-7.9 0-19.7 7.3-19.7 19.7v26.8c0 13.4 6.6 23.3 17.9 23.3 14.1 0 21.5-10.9 21.5-26.8h-17.9v-10.7h30.4c0 20.5 4.7 49.9-34 49.9zm-116.5 44.7c-9.4 0-13.6-.3-20-.8v-69.7c6.4-.6 15-.6 22.5-.6 23.3 0 37.2 12.2 37.2 34.5 0 21.9-15 36.6-39.7 36.6z\"],\n    \"resolving\": [496, 512, [], \"f3e7\", \"M281.2 278.2c46-13.3 49.6-23.5 44-43.4L314 195.5c-6.1-20.9-18.4-28.1-71.1-12.8L54.7 236.8l28.6 98.6 197.9-57.2zM248.5 8C131.4 8 33.2 88.7 7.2 197.5l221.9-63.9c34.8-10.2 54.2-11.7 79.3-8.2 36.3 6.1 52.7 25 61.4 55.2l10.7 37.8c8.2 28.1 1 50.6-23.5 73.6-19.4 17.4-31.2 24.5-61.4 33.2L203 351.8l220.4 27.1 9.7 34.2-48.1 13.3-286.8-37.3 23 80.2c36.8 22 80.3 34.7 126.3 34.7 137 0 248.5-111.4 248.5-248.3C497 119.4 385.5 8 248.5 8zM38.3 388.6L0 256.8c0 48.5 14.3 93.4 38.3 131.8z\"],\n    \"rev\": [448, 512, [], \"f5b2\", \"M289.67 274.89a65.57 65.57 0 1 1-65.56-65.56 65.64 65.64 0 0 1 65.56 65.56zm139.55-5.05h-.13a204.69 204.69 0 0 0-74.32-153l-45.38 26.2a157.07 157.07 0 0 1 71.81 131.84C381.2 361.5 310.73 432 224.11 432S67 361.5 67 274.88c0-81.88 63-149.27 143-156.43v39.12l108.77-62.79L210 32v38.32c-106.7 7.25-191 96-191 204.57 0 111.59 89.12 202.29 200.06 205v.11h210.16V269.84z\"],\n    \"rocketchat\": [576, 512, [], \"f3e8\", \"M486.41 107.57c-76.93-50.83-179.18-62.4-264.12-47.07C127.26-31.16 20.77 11 0 23.12c0 0 73.08 62.1 61.21 116.49-86.52 88.2-45.39 186.4 0 232.77C73.08 426.77 0 488.87 0 488.87c20.57 12.16 126.77 54.19 222.29-37 84.75 15.23 187 3.76 264.12-47.16 119.26-76.14 119.65-220.61 0-297.15zM294.18 404.22a339.53 339.53 0 0 1-88.11-11.37l-19.77 19.09a179.74 179.74 0 0 1-36.59 27.39A143.14 143.14 0 0 1 98 454.06c1-1.78 1.88-3.56 2.77-5.24q29.67-55 16-98.69c-32.53-25.61-52-58.34-52-94.13 0-82 102.74-148.43 229.41-148.43S523.59 174 523.59 256 420.85 404.22 294.18 404.22zM184.12 291.3a34.32 34.32 0 0 1-34.8-33.72c-.7-45.39 67.83-46.38 68.52-1.09v.51a34 34 0 0 1-33.72 34.32zm73.77-33.72c-.79-45.39 67.74-46.48 68.53-1.19v.61c.39 45.08-67.74 45.57-68.53.58zm143.38 33.72a34.33 34.33 0 0 1-34.81-33.72c-.69-45.39 67.84-46.38 68.53-1.09v.51a33.89 33.89 0 0 1-33.72 34.32z\"],\n    \"rockrms\": [496, 512, [], \"f3e9\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm157.4 419.5h-90l-112-131.3c-17.9-20.4-3.9-56.1 26.6-56.1h75.3l-84.6-99.3-84.3 98.9h-90L193.5 67.2c14.4-18.4 41.3-17.3 54.5 0l157.7 185.1c19 22.8 2 57.2-27.6 56.1-.6 0-74.2.2-74.2.2l101.5 118.9z\"],\n    \"safari\": [512, 512, [], \"f267\", \"M236.9 256.8c0-9.1 6.6-17.7 16.3-17.7 8.9 0 17.4 6.4 17.4 16.1 0 9.1-6.4 17.7-16.1 17.7-9 0-17.6-6.7-17.6-16.1zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-26.6 0c0-122.3-99.1-221.4-221.4-221.4S34.6 133.7 34.6 256 133.7 477.4 256 477.4 477.4 378.3 477.4 256zm-72.5 96.6c0 3.6 13 10.2 16.3 12.2-27.4 41.5-69.8 71.4-117.9 83.3l-4.4-18.5c-.3-2.5-1.9-2.8-4.2-2.8-1.9 0-3 2.8-2.8 4.2l4.4 18.8c-13.3 2.8-26.8 4.2-40.4 4.2-36.3 0-72-10.2-103-29.1 1.7-2.8 12.2-18 12.2-20.2 0-1.9-1.7-3.6-3.6-3.6-3.9 0-12.2 16.6-14.7 19.9-41.8-27.7-72-70.6-83.6-119.6l19.1-4.2c2.2-.6 2.8-2.2 2.8-4.2 0-1.9-2.8-3-4.4-2.8L62 294.5c-2.5-12.7-3.9-25.5-3.9-38.5 0-37.1 10.5-73.6 30.2-104.9 2.8 1.7 16.1 10.8 18.3 10.8 1.9 0 3.6-1.4 3.6-3.3 0-3.9-14.7-11.3-18-13.6 28.2-41.2 71.1-70.9 119.8-81.9l4.2 18.5c.6 2.2 2.2 2.8 4.2 2.8s3-2.8 2.8-4.4L219 61.7c12.2-2.2 24.6-3.6 37.1-3.6 37.1 0 73.3 10.5 104.9 30.2-1.9 2.8-10.8 15.8-10.8 18 0 1.9 1.4 3.6 3.3 3.6 3.9 0 11.3-14.4 13.3-17.7 41 27.7 70.3 70 81.7 118.2l-15.5 3.3c-2.5.6-2.8 2.2-2.8 4.4 0 1.9 2.8 3 4.2 2.8l15.8-3.6c2.5 12.7 3.9 25.7 3.9 38.7 0 36.3-10 72-28.8 102.7-2.8-1.4-14.4-9.7-16.6-9.7-2.1 0-3.8 1.7-3.8 3.6zm-33.2-242.2c-13 12.2-134.2 123.7-137.6 129.5l-96.6 160.5c12.7-11.9 134.2-124 137.3-129.3l96.9-160.7z\"],\n    \"salesforce\": [640, 512, [], \"f83b\", \"M248.89 245.64h-26.35c.69-5.16 3.32-14.12 13.64-14.12 6.75 0 11.97 3.82 12.71 14.12zm136.66-13.88c-.47 0-14.11-1.77-14.11 20s13.63 20 14.11 20c13 0 14.11-13.54 14.11-20 0-21.76-13.66-20-14.11-20zm-243.22 23.76a8.63 8.63 0 0 0-3.29 7.29c0 4.78 2.08 6.05 3.29 7.05 4.7 3.7 15.07 2.12 20.93.95v-16.94c-5.32-1.07-16.73-1.96-20.93 1.65zM640 232c0 87.58-80 154.39-165.36 136.43-18.37 33-70.73 70.75-132.2 41.63-41.16 96.05-177.89 92.18-213.81-5.17C8.91 428.78-50.19 266.52 53.36 205.61 18.61 126.18 76 32 167.67 32a124.24 124.24 0 0 1 98.56 48.7c20.7-21.4 49.4-34.81 81.15-34.81 42.34 0 79 23.52 98.8 58.57C539 63.78 640 132.69 640 232zm-519.55 31.8c0-11.76-11.69-15.17-17.87-17.17-5.27-2.11-13.41-3.51-13.41-8.94 0-9.46 17-6.66 25.17-2.12 0 0 1.17.71 1.64-.47.24-.7 2.36-6.58 2.59-7.29a1.13 1.13 0 0 0-.7-1.41c-12.33-7.63-40.7-8.51-40.7 12.7 0 12.46 11.49 15.44 17.88 17.17 4.72 1.58 13.17 3 13.17 8.7 0 4-3.53 7.06-9.17 7.06a31.76 31.76 0 0 1-19-6.35c-.47-.23-1.42-.71-1.65.71l-2.4 7.47c-.47.94.23 1.18.23 1.41 1.75 1.4 10.3 6.59 22.82 6.59 13.17 0 21.4-7.06 21.4-18.11zm32-42.58c-10.13 0-18.66 3.17-21.4 5.18a1 1 0 0 0-.24 1.41l2.59 7.06a1 1 0 0 0 1.18.7c.65 0 6.8-4 16.93-4 4 0 7.06.71 9.18 2.36 3.6 2.8 3.06 8.29 3.06 10.58-4.79-.3-19.11-3.44-29.41 3.76a16.92 16.92 0 0 0-7.34 14.54c0 5.9 1.51 10.4 6.59 14.35 12.24 8.16 36.28 2 38.1 1.41 1.58-.32 3.53-.66 3.53-1.88v-33.88c.04-4.61.32-21.64-22.78-21.64zM199 200.24a1.11 1.11 0 0 0-1.18-1.18H188a1.11 1.11 0 0 0-1.17 1.18v79a1.11 1.11 0 0 0 1.17 1.18h9.88a1.11 1.11 0 0 0 1.18-1.18zm55.75 28.93c-2.1-2.31-6.79-7.53-17.65-7.53-3.51 0-14.16.23-20.7 8.94-6.35 7.63-6.58 18.11-6.58 21.41 0 3.12.15 14.26 7.06 21.17 2.64 2.91 9.06 8.23 22.81 8.23 10.82 0 16.47-2.35 18.58-3.76.47-.24.71-.71.24-1.88l-2.35-6.83a1.26 1.26 0 0 0-1.41-.7c-2.59.94-6.35 2.82-15.29 2.82-17.42 0-16.85-14.74-16.94-16.7h37.17a1.23 1.23 0 0 0 1.17-.94c-.29 0 2.07-14.7-6.09-24.23zm36.69 52.69c13.17 0 21.41-7.06 21.41-18.11 0-11.76-11.7-15.17-17.88-17.17-4.14-1.66-13.41-3.38-13.41-8.94 0-3.76 3.29-6.35 8.47-6.35a38.11 38.11 0 0 1 16.7 4.23s1.18.71 1.65-.47c.23-.7 2.35-6.58 2.58-7.29a1.13 1.13 0 0 0-.7-1.41c-7.91-4.9-16.74-4.94-20.23-4.94-12 0-20.46 7.29-20.46 17.64 0 12.46 11.48 15.44 17.87 17.17 6.11 2 13.17 3.26 13.17 8.7 0 4-3.52 7.06-9.17 7.06a31.8 31.8 0 0 1-19-6.35 1 1 0 0 0-1.65.71l-2.35 7.52c-.47.94.23 1.18.23 1.41 1.72 1.4 10.33 6.59 22.79 6.59zM357.09 224c0-.71-.24-1.18-1.18-1.18h-11.76c0-.14.94-8.94 4.47-12.47 4.16-4.15 11.76-1.64 12-1.64 1.17.47 1.41 0 1.64-.47l2.83-7.77c.7-.94 0-1.17-.24-1.41-5.09-2-17.35-2.87-24.46 4.24-5.48 5.48-7 13.92-8 19.52h-8.47a1.28 1.28 0 0 0-1.17 1.18l-1.42 7.76c0 .7.24 1.17 1.18 1.17h8.23c-8.51 47.9-8.75 50.21-10.35 55.52-1.08 3.62-3.29 6.9-5.88 7.76-.09 0-3.88 1.68-9.64-.24 0 0-.94-.47-1.41.71-.24.71-2.59 6.82-2.83 7.53s0 1.41.47 1.41c5.11 2 13 1.77 17.88 0 6.28-2.28 9.72-7.89 11.53-12.94 2.75-7.71 2.81-9.79 11.76-59.74h12.23a1.29 1.29 0 0 0 1.18-1.18zm53.39 16c-.56-1.68-5.1-18.11-25.17-18.11-15.25 0-23 10-25.16 18.11-1 3-3.18 14 0 23.52.09.3 4.41 18.12 25.16 18.12 14.95 0 22.9-9.61 25.17-18.12 3.21-9.61 1.01-20.52 0-23.52zm45.4-16.7c-5-1.65-16.62-1.9-22.11 5.41v-4.47a1.11 1.11 0 0 0-1.18-1.17h-9.4a1.11 1.11 0 0 0-1.18 1.17v55.28a1.12 1.12 0 0 0 1.18 1.18h9.64a1.12 1.12 0 0 0 1.18-1.18v-27.77c0-2.91.05-11.37 4.46-15.05 4.9-4.9 12-3.36 13.41-3.06a1.57 1.57 0 0 0 1.41-.94 74 74 0 0 0 3.06-8 1.16 1.16 0 0 0-.47-1.41zm46.81 54.1l-2.12-7.29c-.47-1.18-1.41-.71-1.41-.71-4.23 1.82-10.15 1.89-11.29 1.89-4.64 0-17.17-1.13-17.17-19.76 0-6.23 1.85-19.76 16.47-19.76a34.85 34.85 0 0 1 11.52 1.65s.94.47 1.18-.71c.94-2.59 1.64-4.47 2.59-7.53.23-.94-.47-1.17-.71-1.17-11.59-3.87-22.34-2.53-27.76 0-1.59.74-16.23 6.49-16.23 27.52 0 2.9-.58 30.11 28.94 30.11a44.45 44.45 0 0 0 15.52-2.83 1.3 1.3 0 0 0 .47-1.42zm53.87-39.52c-.8-3-5.37-16.23-22.35-16.23-16 0-23.52 10.11-25.64 18.59a38.58 38.58 0 0 0-1.65 11.76c0 25.87 18.84 29.4 29.88 29.4 10.82 0 16.46-2.35 18.58-3.76.47-.24.71-.71.24-1.88l-2.36-6.83a1.26 1.26 0 0 0-1.41-.7c-2.59.94-6.35 2.82-15.29 2.82-17.42 0-16.85-14.74-16.93-16.7h37.16a1.25 1.25 0 0 0 1.18-.94c-.24-.01.94-7.07-1.41-15.54zm-23.29-6.35c-10.33 0-13 9-13.64 14.12H546c-.88-11.92-7.62-14.13-12.73-14.13z\"],\n    \"sass\": [640, 512, [], \"f41e\", \"M301.84 378.92c-.3.6-.6 1.08 0 0zm249.13-87a131.16 131.16 0 0 0-58 13.5c-5.9-11.9-12-22.3-13-30.1-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2-1.4-6.6-14.3-6.7-24 2.5-25.29 5.9a122.83 122.83 0 0 0-5.3 19.1c-2.3 11.7-25.79 53.5-39.09 75.3-4.4-8.5-8.1-16-8.9-22-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2-1.4-6.6-14.29-6.7-24 2.5-25.3 5.9-2.7 11.4-5.3 19.1-33.89 77.3-42.08 95.4c-4.2 9.2-7.8 16.6-10.4 21.6-.4.8-.7 1.3-.9 1.7.3-.5.5-1 .5-.8-2.2 4.3-3.5 6.7-3.5 6.7v.1c-1.7 3.2-3.6 6.1-4.5 6.1-.6 0-1.9-8.4.3-19.9 4.7-24.2 15.8-61.8 15.7-63.1-.1-.7 2.1-7.2-7.3-10.7-9.1-3.3-12.4 2.2-13.2 2.2s-1.4 2-1.4 2 10.1-42.4-19.39-42.4c-18.4 0-44 20.2-56.58 38.5-7.9 4.3-25 13.6-43 23.5-6.9 3.8-14 7.7-20.7 11.4-.5-.5-.9-1-1.4-1.5-35.79-38.2-101.87-65.2-99.07-116.5 1-18.7 7.5-67.8 127.07-127.4 98-48.8 176.35-35.4 189.84-5.6 19.4 42.5-41.89 121.6-143.66 133-38.79 4.3-59.18-10.7-64.28-16.3-5.3-5.9-6.1-6.2-8.1-5.1-3.3 1.8-1.2 7 0 10.1 3 7.9 15.5 21.9 36.79 28.9 18.7 6.1 64.18 9.5 119.17-11.8 61.78-23.8 109.87-90.1 95.77-145.6C386.52 18.32 293-.18 204.57 31.22c-52.69 18.7-109.67 48.1-150.66 86.4-48.69 45.6-56.48 85.3-53.28 101.9 11.39 58.9 92.57 97.3 125.06 125.7-1.6.9-3.1 1.7-4.5 2.5-16.29 8.1-78.18 40.5-93.67 74.7-17.5 38.8 2.9 66.6 16.29 70.4 41.79 11.6 84.58-9.3 107.57-43.6s20.2-79.1 9.6-99.5c-.1-.3-.3-.5-.4-.8 4.2-2.5 8.5-5 12.8-7.5 8.29-4.9 16.39-9.4 23.49-13.3-4 10.8-6.9 23.8-8.4 42.6-1.8 22 7.3 50.5 19.1 61.7 5.2 4.9 11.49 5 15.39 5 13.8 0 20-11.4 26.89-25 8.5-16.6 16-35.9 16-35.9s-9.4 52.2 16.3 52.2c9.39 0 18.79-12.1 23-18.3v.1s.2-.4.7-1.2c1-1.5 1.5-2.4 1.5-2.4v-.3c3.8-6.5 12.1-21.4 24.59-46 16.2-31.8 31.69-71.5 31.69-71.5a201.24 201.24 0 0 0 6.2 25.8c2.8 9.5 8.7 19.9 13.4 30-3.8 5.2-6.1 8.2-6.1 8.2a.31.31 0 0 0 .1.2c-3 4-6.4 8.3-9.9 12.5-12.79 15.2-28 32.6-30 37.6-2.4 5.9-1.8 10.3 2.8 13.7 3.4 2.6 9.4 3 15.69 2.5 11.5-.8 19.6-3.6 23.5-5.4a82.2 82.2 0 0 0 20.19-10.6c12.5-9.2 20.1-22.4 19.4-39.8-.4-9.6-3.5-19.2-7.3-28.2 1.1-1.6 2.3-3.3 3.4-5C434.8 301.72 450.1 270 450.1 270a201.24 201.24 0 0 0 6.2 25.8c2.4 8.1 7.09 17 11.39 25.7-18.59 15.1-30.09 32.6-34.09 44.1-7.4 21.3-1.6 30.9 9.3 33.1 4.9 1 11.9-1.3 17.1-3.5a79.46 79.46 0 0 0 21.59-11.1c12.5-9.2 24.59-22.1 23.79-39.6-.3-7.9-2.5-15.8-5.4-23.4 15.7-6.6 36.09-10.2 62.09-7.2 55.68 6.5 66.58 41.3 64.48 55.8s-13.8 22.6-17.7 25-5.1 3.3-4.8 5.1c.5 2.6 2.3 2.5 5.6 1.9 4.6-.8 29.19-11.8 30.29-38.7 1.6-34-31.09-71.4-89-71.1zm-429.18 144.7c-18.39 20.1-44.19 27.7-55.28 21.3C54.61 451 59.31 421.42 82 400c13.8-13 31.59-25 43.39-32.4 2.7-1.6 6.6-4 11.4-6.9.8-.5 1.2-.7 1.2-.7.9-.6 1.9-1.1 2.9-1.7 8.29 30.4.3 57.2-19.1 78.3zm134.36-91.4c-6.4 15.7-19.89 55.7-28.09 53.6-7-1.8-11.3-32.3-1.4-62.3 5-15.1 15.6-33.1 21.9-40.1 10.09-11.3 21.19-14.9 23.79-10.4 3.5 5.9-12.2 49.4-16.2 59.2zm111 53c-2.7 1.4-5.2 2.3-6.4 1.6-.9-.5 1.1-2.4 1.1-2.4s13.9-14.9 19.4-21.7c3.2-4 6.9-8.7 10.89-13.9 0 .5.1 1 .1 1.6-.13 17.9-17.32 30-25.12 34.8zm85.58-19.5c-2-1.4-1.7-6.1 5-20.7 2.6-5.7 8.59-15.3 19-24.5a36.18 36.18 0 0 1 1.9 10.8c-.1 22.5-16.2 30.9-25.89 34.4z\"],\n    \"schlix\": [448, 512, [], \"f3ea\", \"M350.5 157.7l-54.2-46.1 73.4-39 78.3 44.2-97.5 40.9zM192 122.1l45.7-28.2 34.7 34.6-55.4 29-25-35.4zm-65.1 6.6l31.9-22.1L176 135l-36.7 22.5-12.4-28.8zm-23.3 88.2l-8.8-34.8 29.6-18.3 13.1 35.3-33.9 17.8zm-21.2-83.7l23.9-18.1 8.9 24-26.7 18.3-6.1-24.2zM59 206.5l-3.6-28.4 22.3-15.5 6.1 28.7L59 206.5zm-30.6 16.6l20.8-12.8 3.3 33.4-22.9 12-1.2-32.6zM1.4 268l19.2-10.2.4 38.2-21 8.8L1.4 268zm59.1 59.3l-28.3 8.3-1.6-46.8 25.1-10.7 4.8 49.2zM99 263.2l-31.1 13-5.2-40.8L90.1 221l8.9 42.2zM123.2 377l-41.6 5.9-8.1-63.5 35.2-10.8 14.5 68.4zm28.5-139.9l21.2 57.1-46.2 13.6-13.7-54.1 38.7-16.6zm85.7 230.5l-70.9-3.3-24.3-95.8 55.2-8.6 40 107.7zm-84.9-279.7l42.2-22.4 28 45.9-50.8 21.3-19.4-44.8zm41 94.9l61.3-18.7 52.8 86.6-79.8 11.3-34.3-79.2zm51.4-85.6l67.3-28.8 65.5 65.4-88.6 26.2-44.2-62.8z\"],\n    \"scribd\": [384, 512, [], \"f28a\", \"M42.3 252.7c-16.1-19-24.7-45.9-24.8-79.9 0-100.4 75.2-153.1 167.2-153.1 98.6-1.6 156.8 49 184.3 70.6l-50.5 72.1-37.3-24.6 26.9-38.6c-36.5-24-79.4-36.5-123-35.8-50.7-.8-111.7 27.2-111.7 76.2 0 18.7 11.2 20.7 28.6 15.6 23.3-5.3 41.9.6 55.8 14 26.4 24.3 23.2 67.6-.7 91.9-29.2 29.5-85.2 27.3-114.8-8.4zm317.7 5.9c-15.5-18.8-38.9-29.4-63.2-28.6-38.1-2-71.1 28-70.5 67.2-.7 16.8 6 33 18.4 44.3 14.1 13.9 33 19.7 56.3 14.4 17.4-5.1 28.6-3.1 28.6 15.6 0 4.3-.5 8.5-1.4 12.7-16.7 40.9-59.5 64.4-121.4 64.4-51.9.2-102.4-16.4-144.1-47.3l33.7-39.4-35.6-27.4L0 406.3l15.4 13.8c52.5 46.8 120.4 72.5 190.7 72.2 51.4 0 94.4-10.5 133.6-44.1 57.1-51.4 54.2-149.2 20.3-189.6z\"],\n    \"searchengin\": [460, 512, [], \"f3eb\", \"M220.6 130.3l-67.2 28.2V43.2L98.7 233.5l54.7-24.2v130.3l67.2-209.3zm-83.2-96.7l-1.3 4.7-15.2 52.9C80.6 106.7 52 145.8 52 191.5c0 52.3 34.3 95.9 83.4 105.5v53.6C57.5 340.1 0 272.4 0 191.6c0-80.5 59.8-147.2 137.4-158zm311.4 447.2c-11.2 11.2-23.1 12.3-28.6 10.5-5.4-1.8-27.1-19.9-60.4-44.4-33.3-24.6-33.6-35.7-43-56.7-9.4-20.9-30.4-42.6-57.5-52.4l-9.7-14.7c-24.7 16.9-53 26.9-81.3 28.7l2.1-6.6 15.9-49.5c46.5-11.9 80.9-54 80.9-104.2 0-54.5-38.4-102.1-96-107.1V32.3C254.4 37.4 320 106.8 320 191.6c0 33.6-11.2 64.7-29 90.4l14.6 9.6c9.8 27.1 31.5 48 52.4 57.4s32.2 9.7 56.8 43c24.6 33.2 42.7 54.9 44.5 60.3s.7 17.3-10.5 28.5zm-9.9-17.9c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8 8-3.6 8-8z\"],\n    \"sellcast\": [448, 512, [], \"f2da\", \"M353.4 32H94.7C42.6 32 0 74.6 0 126.6v258.7C0 437.4 42.6 480 94.7 480h258.7c52.1 0 94.7-42.6 94.7-94.6V126.6c0-52-42.6-94.6-94.7-94.6zm-50 316.4c-27.9 48.2-89.9 64.9-138.2 37.2-22.9 39.8-54.9 8.6-42.3-13.2l15.7-27.2c5.9-10.3 19.2-13.9 29.5-7.9 18.6 10.8-.1-.1 18.5 10.7 27.6 15.9 63.4 6.3 79.4-21.3 15.9-27.6 6.3-63.4-21.3-79.4-17.8-10.2-.6-.4-18.6-10.6-24.6-14.2-3.4-51.9 21.6-37.5 18.6 10.8-.1-.1 18.5 10.7 48.4 28 65.1 90.3 37.2 138.5zm21.8-208.8c-17 29.5-16.3 28.8-19 31.5-6.5 6.5-16.3 8.7-26.5 3.6-18.6-10.8.1.1-18.5-10.7-27.6-15.9-63.4-6.3-79.4 21.3s-6.3 63.4 21.3 79.4c0 0 18.5 10.6 18.6 10.6 24.6 14.2 3.4 51.9-21.6 37.5-18.6-10.8.1.1-18.5-10.7-48.2-27.8-64.9-90.1-37.1-138.4 27.9-48.2 89.9-64.9 138.2-37.2l4.8-8.4c14.3-24.9 52-3.3 37.7 21.5z\"],\n    \"sellsy\": [640, 512, [], \"f213\", \"M539.71 237.308c3.064-12.257 4.29-24.821 4.29-37.384C544 107.382 468.618 32 376.076 32c-77.22 0-144.634 53.012-163.02 127.781-15.322-13.176-34.934-20.53-55.157-20.53-46.271 0-83.962 37.69-83.962 83.961 0 7.354.92 15.015 3.065 22.369-42.9 20.225-70.785 63.738-70.785 111.234C6.216 424.843 61.68 480 129.401 480h381.198c67.72 0 123.184-55.157 123.184-123.184.001-56.384-38.916-106.025-94.073-119.508zM199.88 401.554c0 8.274-7.048 15.321-15.321 15.321H153.61c-8.274 0-15.321-7.048-15.321-15.321V290.626c0-8.273 7.048-15.321 15.321-15.321h30.949c8.274 0 15.321 7.048 15.321 15.321v110.928zm89.477 0c0 8.274-7.048 15.321-15.322 15.321h-30.949c-8.274 0-15.321-7.048-15.321-15.321V270.096c0-8.274 7.048-15.321 15.321-15.321h30.949c8.274 0 15.322 7.048 15.322 15.321v131.458zm89.477 0c0 8.274-7.047 15.321-15.321 15.321h-30.949c-8.274 0-15.322-7.048-15.322-15.321V238.84c0-8.274 7.048-15.321 15.322-15.321h30.949c8.274 0 15.321 7.048 15.321 15.321v162.714zm87.027 0c0 8.274-7.048 15.321-15.322 15.321h-28.497c-8.274 0-15.321-7.048-15.321-15.321V176.941c0-8.579 7.047-15.628 15.321-15.628h28.497c8.274 0 15.322 7.048 15.322 15.628v224.613z\"],\n    \"servicestack\": [496, 512, [], \"f3ec\", \"M88 216c81.7 10.2 273.7 102.3 304 232H0c99.5-8.1 184.5-137 88-232zm32-152c32.3 35.6 47.7 83.9 46.4 133.6C249.3 231.3 373.7 321.3 400 448h96C455.3 231.9 222.8 79.5 120 64z\"],\n    \"shirtsinbulk\": [448, 512, [], \"f214\", \"M100 410.3l30.6 13.4 4.4-9.9-30.6-13.4zm39.4 17.5l30.6 13.4 4.4-9.9-30.6-13.4zm172.1-14l4.4 9.9 30.6-13.4-4.4-9.9zM179.1 445l30.3 13.7 4.4-9.9-30.3-13.4zM60.4 392.8L91 406.2l4.4-9.6-30.6-13.7zm211.4 38.5l4.4 9.9 30.6-13.4-4.4-9.9zm-39.3 17.5l4.4 9.9 30.6-13.7-4.4-9.6zm118.4-52.2l4.4 9.6 30.6-13.4-4.4-9.9zM170 46.6h-33.5v10.5H170zm-47.2 0H89.2v10.5h33.5zm-47.3 0H42.3v10.5h33.3zm141.5 0h-33.2v10.5H217zm94.5 0H278v10.5h33.5zm47.3 0h-33.5v10.5h33.5zm-94.6 0H231v10.5h33.2zm141.5 0h-33.3v10.5h33.3zM52.8 351.1H42v33.5h10.8zm70-215.9H89.2v10.5h33.5zm-70 10.6h22.8v-10.5H42v33.5h10.8zm168.9 228.6c50.5 0 91.3-40.8 91.3-91.3 0-50.2-40.8-91.3-91.3-91.3-50.2 0-91.3 41.1-91.3 91.3 0 50.5 41.1 91.3 91.3 91.3zm-48.2-111.1c0-25.4 29.5-31.8 49.6-31.8 16.9 0 29.2 5.8 44.3 12l-8.8 16.9h-.9c-6.4-9.9-24.8-13.1-35.6-13.1-9 0-29.8 1.8-29.8 14.9 0 21.6 78.5-10.2 78.5 37.9 0 25.4-31.5 31.2-51 31.2-18.1 0-32.4-2.9-47.2-12.2l9-18.4h.9c6.1 12.2 23.6 14.9 35.9 14.9 8.7 0 32.7-1.2 32.7-14.3 0-26.1-77.6 6.3-77.6-38zM52.8 178.4H42V212h10.8zm342.4 206.2H406v-33.5h-10.8zM52.8 307.9H42v33.5h10.8zM0 3.7v406l221.7 98.6L448 409.7V3.7zm418.8 387.1L222 476.5 29.2 390.8V120.7h389.7v270.1zm0-299.3H29.2V32.9h389.7v58.6zm-366 130.1H42v33.5h10.8zm0 43.2H42v33.5h10.8zM170 135.2h-33.5v10.5H170zm225.2 163.1H406v-33.5h-10.8zm0-43.2H406v-33.5h-10.8zM217 135.2h-33.2v10.5H217zM395.2 212H406v-33.5h-10.8zm0 129.5H406V308h-10.8zm-131-206.3H231v10.5h33.2zm47.3 0H278v10.5h33.5zm83.7 33.6H406v-33.5h-33.5v10.5h22.8zm-36.4-33.6h-33.5v10.5h33.5z\"],\n    \"shopware\": [512, 512, [], \"f5b5\", \"M403.5 455.41A246.17 246.17 0 0 1 256 504C118.81 504 8 393 8 256 8 118.81 119 8 256 8a247.39 247.39 0 0 1 165.7 63.5 3.57 3.57 0 0 1-2.86 6.18A418.62 418.62 0 0 0 362.13 74c-129.36 0-222.4 53.47-222.4 155.35 0 109 92.13 145.88 176.83 178.73 33.64 13 65.4 25.36 87 41.59a3.58 3.58 0 0 1 0 5.72zM503 233.09a3.64 3.64 0 0 0-1.27-2.44c-51.76-43-93.62-60.48-144.48-60.48-84.13 0-80.25 52.17-80.25 53.63 0 42.6 52.06 62 112.34 84.49 31.07 11.59 63.19 23.57 92.68 39.93a3.57 3.57 0 0 0 5-1.82A249 249 0 0 0 503 233.09z\"],\n    \"simplybuilt\": [512, 512, [], \"f215\", \"M481.2 64h-106c-14.5 0-26.6 11.8-26.6 26.3v39.6H163.3V90.3c0-14.5-12-26.3-26.6-26.3h-106C16.1 64 4.3 75.8 4.3 90.3v331.4c0 14.5 11.8 26.3 26.6 26.3h450.4c14.8 0 26.6-11.8 26.6-26.3V90.3c-.2-14.5-12-26.3-26.7-26.3zM149.8 355.8c-36.6 0-66.4-29.7-66.4-66.4 0-36.9 29.7-66.6 66.4-66.6 36.9 0 66.6 29.7 66.6 66.6 0 36.7-29.7 66.4-66.6 66.4zm212.4 0c-36.9 0-66.6-29.7-66.6-66.6 0-36.6 29.7-66.4 66.6-66.4 36.6 0 66.4 29.7 66.4 66.4 0 36.9-29.8 66.6-66.4 66.6z\"],\n    \"sistrix\": [448, 512, [], \"f3ee\", \"M448 449L301.2 300.2c20-27.9 31.9-62.2 31.9-99.2 0-93.1-74.7-168.9-166.5-168.9C74.7 32 0 107.8 0 200.9s74.7 168.9 166.5 168.9c39.8 0 76.3-14.2 105-37.9l146 148.1 30.5-31zM166.5 330.8c-70.6 0-128.1-58.3-128.1-129.9S95.9 71 166.5 71s128.1 58.3 128.1 129.9-57.4 129.9-128.1 129.9z\"],\n    \"sith\": [448, 512, [], \"f512\", \"M0 32l69.71 118.75-58.86-11.52 69.84 91.03a146.741 146.741 0 0 0 0 51.45l-69.84 91.03 58.86-11.52L0 480l118.75-69.71-11.52 58.86 91.03-69.84c17.02 3.04 34.47 3.04 51.48 0l91.03 69.84-11.52-58.86L448 480l-69.71-118.78 58.86 11.52-69.84-91.03c3.03-17.01 3.04-34.44 0-51.45l69.84-91.03-58.86 11.52L448 32l-118.75 69.71 11.52-58.9-91.06 69.87c-8.5-1.52-17.1-2.29-25.71-2.29s-17.21.78-25.71 2.29l-91.06-69.87 11.52 58.9L0 32zm224 99.78c31.8 0 63.6 12.12 87.85 36.37 48.5 48.5 48.49 127.21 0 175.7s-127.2 48.46-175.7-.03c-48.5-48.5-48.49-127.21 0-175.7 24.24-24.25 56.05-36.34 87.85-36.34zm0 36.66c-22.42 0-44.83 8.52-61.92 25.61-34.18 34.18-34.19 89.68 0 123.87s89.65 34.18 123.84 0c34.18-34.18 34.19-89.68 0-123.87-17.09-17.09-39.5-25.61-61.92-25.61z\"],\n    \"sketch\": [512, 512, [], \"f7c6\", \"M27.5 162.2L9 187.1h90.5l6.9-130.7-78.9 105.8zM396.3 45.7L267.7 32l135.7 147.2-7.1-133.5zM112.2 218.3l-11.2-22H9.9L234.8 458zm2-31.2h284l-81.5-88.5L256.3 33zm297.3 9.1L277.6 458l224.8-261.7h-90.9zM415.4 69L406 56.4l.9 17.3 6.1 113.4h90.3zM113.5 93.5l-4.6 85.6L244.7 32 116.1 45.7zm287.7 102.7h-290l42.4 82.9L256.3 480l144.9-283.8z\"],\n    \"skyatlas\": [640, 512, [], \"f216\", \"M640 329.3c0 65.9-52.5 114.4-117.5 114.4-165.9 0-196.6-249.7-359.7-249.7-146.9 0-147.1 212.2 5.6 212.2 42.5 0 90.9-17.8 125.3-42.5 5.6-4.1 16.9-16.3 22.8-16.3s10.9 5 10.9 10.9c0 7.8-13.1 19.1-18.7 24.1-40.9 35.6-100.3 61.2-154.7 61.2-83.4.1-154-59-154-144.9s67.5-149.1 152.8-149.1c185.3 0 222.5 245.9 361.9 245.9 99.9 0 94.8-139.7 3.4-139.7-17.5 0-35 11.6-46.9 11.6-8.4 0-15.9-7.2-15.9-15.6 0-11.6 5.3-23.7 5.3-36.3 0-66.6-50.9-114.7-116.9-114.7-53.1 0-80 36.9-88.8 36.9-6.2 0-11.2-5-11.2-11.2 0-5.6 4.1-10.3 7.8-14.4 25.3-28.8 64.7-43.7 102.8-43.7 79.4 0 139.1 58.4 139.1 137.8 0 6.9-.3 13.7-1.2 20.6 11.9-3.1 24.1-4.7 35.9-4.7 60.7 0 111.9 45.3 111.9 107.2z\"],\n    \"skype\": [448, 512, [], \"f17e\", \"M424.7 299.8c2.9-14 4.7-28.9 4.7-43.8 0-113.5-91.9-205.3-205.3-205.3-14.9 0-29.7 1.7-43.8 4.7C161.3 40.7 137.7 32 112 32 50.2 32 0 82.2 0 144c0 25.7 8.7 49.3 23.3 68.2-2.9 14-4.7 28.9-4.7 43.8 0 113.5 91.9 205.3 205.3 205.3 14.9 0 29.7-1.7 43.8-4.7 19 14.6 42.6 23.3 68.2 23.3 61.8 0 112-50.2 112-112 .1-25.6-8.6-49.2-23.2-68.1zm-194.6 91.5c-65.6 0-120.5-29.2-120.5-65 0-16 9-30.6 29.5-30.6 31.2 0 34.1 44.9 88.1 44.9 25.7 0 42.3-11.4 42.3-26.3 0-18.7-16-21.6-42-28-62.5-15.4-117.8-22-117.8-87.2 0-59.2 58.6-81.1 109.1-81.1 55.1 0 110.8 21.9 110.8 55.4 0 16.9-11.4 31.8-30.3 31.8-28.3 0-29.2-33.5-75-33.5-25.7 0-42 7-42 22.5 0 19.8 20.8 21.8 69.1 33 41.4 9.3 90.7 26.8 90.7 77.6 0 59.1-57.1 86.5-112 86.5z\"],\n    \"slack\": [448, 512, [], \"f198\", \"M94.12 315.1c0 25.9-21.16 47.06-47.06 47.06S0 341 0 315.1c0-25.9 21.16-47.06 47.06-47.06h47.06v47.06zm23.72 0c0-25.9 21.16-47.06 47.06-47.06s47.06 21.16 47.06 47.06v117.84c0 25.9-21.16 47.06-47.06 47.06s-47.06-21.16-47.06-47.06V315.1zm47.06-188.98c-25.9 0-47.06-21.16-47.06-47.06S139 32 164.9 32s47.06 21.16 47.06 47.06v47.06H164.9zm0 23.72c25.9 0 47.06 21.16 47.06 47.06s-21.16 47.06-47.06 47.06H47.06C21.16 243.96 0 222.8 0 196.9s21.16-47.06 47.06-47.06H164.9zm188.98 47.06c0-25.9 21.16-47.06 47.06-47.06 25.9 0 47.06 21.16 47.06 47.06s-21.16 47.06-47.06 47.06h-47.06V196.9zm-23.72 0c0 25.9-21.16 47.06-47.06 47.06-25.9 0-47.06-21.16-47.06-47.06V79.06c0-25.9 21.16-47.06 47.06-47.06 25.9 0 47.06 21.16 47.06 47.06V196.9zM283.1 385.88c25.9 0 47.06 21.16 47.06 47.06 0 25.9-21.16 47.06-47.06 47.06-25.9 0-47.06-21.16-47.06-47.06v-47.06h47.06zm0-23.72c-25.9 0-47.06-21.16-47.06-47.06 0-25.9 21.16-47.06 47.06-47.06h117.84c25.9 0 47.06 21.16 47.06 47.06 0 25.9-21.16 47.06-47.06 47.06H283.1z\"],\n    \"slack-hash\": [448, 512, [], \"f3ef\", \"M446.2 270.4c-6.2-19-26.9-29.1-46-22.9l-45.4 15.1-30.3-90 45.4-15.1c19.1-6.2 29.1-26.8 23-45.9-6.2-19-26.9-29.1-46-22.9l-45.4 15.1-15.7-47c-6.2-19-26.9-29.1-46-22.9-19.1 6.2-29.1 26.8-23 45.9l15.7 47-93.4 31.2-15.7-47c-6.2-19-26.9-29.1-46-22.9-19.1 6.2-29.1 26.8-23 45.9l15.7 47-45.3 15c-19.1 6.2-29.1 26.8-23 45.9 5 14.5 19.1 24 33.6 24.6 6.8 1 12-1.6 57.7-16.8l30.3 90L78 354.8c-19 6.2-29.1 26.9-23 45.9 5 14.5 19.1 24 33.6 24.6 6.8 1 12-1.6 57.7-16.8l15.7 47c5.9 16.9 24.7 29 46 22.9 19.1-6.2 29.1-26.8 23-45.9l-15.7-47 93.6-31.3 15.7 47c5.9 16.9 24.7 29 46 22.9 19.1-6.2 29.1-26.8 23-45.9l-15.7-47 45.4-15.1c19-6 29.1-26.7 22.9-45.7zm-254.1 47.2l-30.3-90.2 93.5-31.3 30.3 90.2-93.5 31.3z\"],\n    \"slideshare\": [512, 512, [], \"f1e7\", \"M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z\"],\n    \"snapchat\": [496, 512, [], \"f2ab\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm169.5 338.9c-3.5 8.1-18.1 14-44.8 18.2-1.4 1.9-2.5 9.8-4.3 15.9-1.1 3.7-3.7 5.9-8.1 5.9h-.2c-6.2 0-12.8-2.9-25.8-2.9-17.6 0-23.7 4-37.4 13.7-14.5 10.3-28.4 19.1-49.2 18.2-21 1.6-38.6-11.2-48.5-18.2-13.8-9.7-19.8-13.7-37.4-13.7-12.5 0-20.4 3.1-25.8 3.1-5.4 0-7.5-3.3-8.3-6-1.8-6.1-2.9-14.1-4.3-16-13.8-2.1-44.8-7.5-45.5-21.4-.2-3.6 2.3-6.8 5.9-7.4 46.3-7.6 67.1-55.1 68-57.1 0-.1.1-.2.2-.3 2.5-5 3-9.2 1.6-12.5-3.4-7.9-17.9-10.7-24-13.2-15.8-6.2-18-13.4-17-18.3 1.6-8.5 14.4-13.8 21.9-10.3 5.9 2.8 11.2 4.2 15.7 4.2 3.3 0 5.5-.8 6.6-1.4-1.4-23.9-4.7-58 3.8-77.1C183.1 100 230.7 96 244.7 96c.6 0 6.1-.1 6.7-.1 34.7 0 68 17.8 84.3 54.3 8.5 19.1 5.2 53.1 3.8 77.1 1.1.6 2.9 1.3 5.7 1.4 4.3-.2 9.2-1.6 14.7-4.2 4-1.9 9.6-1.6 13.6 0 6.3 2.3 10.3 6.8 10.4 11.9.1 6.5-5.7 12.1-17.2 16.6-1.4.6-3.1 1.1-4.9 1.7-6.5 2.1-16.4 5.2-19 11.5-1.4 3.3-.8 7.5 1.6 12.5.1.1.1.2.2.3.9 2 21.7 49.5 68 57.1 4 1 7.1 5.5 4.9 10.8z\"],\n    \"snapchat-ghost\": [512, 512, [], \"f2ac\", \"M510.846 392.673c-5.211 12.157-27.239 21.089-67.36 27.318-2.064 2.786-3.775 14.686-6.507 23.956-1.625 5.566-5.623 8.869-12.128 8.869l-.297-.005c-9.395 0-19.203-4.323-38.852-4.323-26.521 0-35.662 6.043-56.254 20.588-21.832 15.438-42.771 28.764-74.027 27.399-31.646 2.334-58.025-16.908-72.871-27.404-20.714-14.643-29.828-20.582-56.241-20.582-18.864 0-30.736 4.72-38.852 4.72-8.073 0-11.213-4.922-12.422-9.04-2.703-9.189-4.404-21.263-6.523-24.13-20.679-3.209-67.31-11.344-68.498-32.15a10.627 10.627 0 0 1 8.877-11.069c69.583-11.455 100.924-82.901 102.227-85.934.074-.176.155-.344.237-.515 3.713-7.537 4.544-13.849 2.463-18.753-5.05-11.896-26.872-16.164-36.053-19.796-23.715-9.366-27.015-20.128-25.612-27.504 2.437-12.836 21.725-20.735 33.002-15.453 8.919 4.181 16.843 6.297 23.547 6.297 5.022 0 8.212-1.204 9.96-2.171-2.043-35.936-7.101-87.29 5.687-115.969C158.122 21.304 229.705 15.42 250.826 15.42c.944 0 9.141-.089 10.11-.089 52.148 0 102.254 26.78 126.723 81.643 12.777 28.65 7.749 79.792 5.695 116.009 1.582.872 4.357 1.942 8.599 2.139 6.397-.286 13.815-2.389 22.069-6.257 6.085-2.846 14.406-2.461 20.48.058l.029.01c9.476 3.385 15.439 10.215 15.589 17.87.184 9.747-8.522 18.165-25.878 25.018-2.118.835-4.694 1.655-7.434 2.525-9.797 3.106-24.6 7.805-28.616 17.271-2.079 4.904-1.256 11.211 2.46 18.748.087.168.166.342.239.515 1.301 3.03 32.615 74.46 102.23 85.934 6.427 1.058 11.163 7.877 7.725 15.859z\"],\n    \"snapchat-square\": [448, 512, [], \"f2ad\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6.5 314.9c-3.5 8.1-18.1 14-44.8 18.2-1.4 1.9-2.5 9.8-4.3 15.9-1.1 3.7-3.7 5.9-8.1 5.9h-.2c-6.2 0-12.8-2.9-25.8-2.9-17.6 0-23.7 4-37.4 13.7-14.5 10.3-28.4 19.1-49.2 18.2-21 1.6-38.6-11.2-48.5-18.2-13.8-9.7-19.8-13.7-37.4-13.7-12.5 0-20.4 3.1-25.8 3.1-5.4 0-7.5-3.3-8.3-6-1.8-6.1-2.9-14.1-4.3-16-13.8-2.1-44.8-7.5-45.5-21.4-.2-3.6 2.3-6.8 5.9-7.4 46.3-7.6 67.1-55.1 68-57.1 0-.1.1-.2.2-.3 2.5-5 3-9.2 1.6-12.5-3.4-7.9-17.9-10.7-24-13.2-15.8-6.2-18-13.4-17-18.3 1.6-8.5 14.4-13.8 21.9-10.3 5.9 2.8 11.2 4.2 15.7 4.2 3.3 0 5.5-.8 6.6-1.4-1.4-23.9-4.7-58 3.8-77.1C159.1 100 206.7 96 220.7 96c.6 0 6.1-.1 6.7-.1 34.7 0 68 17.8 84.3 54.3 8.5 19.1 5.2 53.1 3.8 77.1 1.1.6 2.9 1.3 5.7 1.4 4.3-.2 9.2-1.6 14.7-4.2 4-1.9 9.6-1.6 13.6 0 6.3 2.3 10.3 6.8 10.4 11.9.1 6.5-5.7 12.1-17.2 16.6-1.4.6-3.1 1.1-4.9 1.7-6.5 2.1-16.4 5.2-19 11.5-1.4 3.3-.8 7.5 1.6 12.5.1.1.1.2.2.3.9 2 21.7 49.5 68 57.1 4 1 7.1 5.5 4.9 10.8z\"],\n    \"soundcloud\": [640, 512, [], \"f1be\", \"M111.4 256.3l5.8 65-5.8 68.3c-.3 2.5-2.2 4.4-4.4 4.4s-4.2-1.9-4.2-4.4l-5.6-68.3 5.6-65c0-2.2 1.9-4.2 4.2-4.2 2.2 0 4.1 2 4.4 4.2zm21.4-45.6c-2.8 0-4.7 2.2-5 5l-5 105.6 5 68.3c.3 2.8 2.2 5 5 5 2.5 0 4.7-2.2 4.7-5l5.8-68.3-5.8-105.6c0-2.8-2.2-5-4.7-5zm25.5-24.1c-3.1 0-5.3 2.2-5.6 5.3l-4.4 130 4.4 67.8c.3 3.1 2.5 5.3 5.6 5.3 2.8 0 5.3-2.2 5.3-5.3l5.3-67.8-5.3-130c0-3.1-2.5-5.3-5.3-5.3zM7.2 283.2c-1.4 0-2.2 1.1-2.5 2.5L0 321.3l4.7 35c.3 1.4 1.1 2.5 2.5 2.5s2.2-1.1 2.5-2.5l5.6-35-5.6-35.6c-.3-1.4-1.1-2.5-2.5-2.5zm23.6-21.9c-1.4 0-2.5 1.1-2.5 2.5l-6.4 57.5 6.4 56.1c0 1.7 1.1 2.8 2.5 2.8s2.5-1.1 2.8-2.5l7.2-56.4-7.2-57.5c-.3-1.4-1.4-2.5-2.8-2.5zm25.3-11.4c-1.7 0-3.1 1.4-3.3 3.3L47 321.3l5.8 65.8c.3 1.7 1.7 3.1 3.3 3.1 1.7 0 3.1-1.4 3.1-3.1l6.9-65.8-6.9-68.1c0-1.9-1.4-3.3-3.1-3.3zm25.3-2.2c-1.9 0-3.6 1.4-3.6 3.6l-5.8 70 5.8 67.8c0 2.2 1.7 3.6 3.6 3.6s3.6-1.4 3.9-3.6l6.4-67.8-6.4-70c-.3-2.2-2-3.6-3.9-3.6zm241.4-110.9c-1.1-.8-2.8-1.4-4.2-1.4-2.2 0-4.2.8-5.6 1.9-1.9 1.7-3.1 4.2-3.3 6.7v.8l-3.3 176.7 1.7 32.5 1.7 31.7c.3 4.7 4.2 8.6 8.9 8.6s8.6-3.9 8.6-8.6l3.9-64.2-3.9-177.5c-.4-3-2-5.8-4.5-7.2zm-26.7 15.3c-1.4-.8-2.8-1.4-4.4-1.4s-3.1.6-4.4 1.4c-2.2 1.4-3.6 3.9-3.6 6.7l-.3 1.7-2.8 160.8s0 .3 3.1 65.6v.3c0 1.7.6 3.3 1.7 4.7 1.7 1.9 3.9 3.1 6.4 3.1 2.2 0 4.2-1.1 5.6-2.5 1.7-1.4 2.5-3.3 2.5-5.6l.3-6.7 3.1-58.6-3.3-162.8c-.3-2.8-1.7-5.3-3.9-6.7zm-111.4 22.5c-3.1 0-5.8 2.8-5.8 6.1l-4.4 140.6 4.4 67.2c.3 3.3 2.8 5.8 5.8 5.8 3.3 0 5.8-2.5 6.1-5.8l5-67.2-5-140.6c-.2-3.3-2.7-6.1-6.1-6.1zm376.7 62.8c-10.8 0-21.1 2.2-30.6 6.1-6.4-70.8-65.8-126.4-138.3-126.4-17.8 0-35 3.3-50.3 9.4-6.1 2.2-7.8 4.4-7.8 9.2v249.7c0 5 3.9 8.6 8.6 9.2h218.3c43.3 0 78.6-35 78.6-78.3.1-43.6-35.2-78.9-78.5-78.9zm-296.7-60.3c-4.2 0-7.5 3.3-7.8 7.8l-3.3 136.7 3.3 65.6c.3 4.2 3.6 7.5 7.8 7.5 4.2 0 7.5-3.3 7.5-7.5l3.9-65.6-3.9-136.7c-.3-4.5-3.3-7.8-7.5-7.8zm-53.6-7.8c-3.3 0-6.4 3.1-6.4 6.7l-3.9 145.3 3.9 66.9c.3 3.6 3.1 6.4 6.4 6.4 3.6 0 6.4-2.8 6.7-6.4l4.4-66.9-4.4-145.3c-.3-3.6-3.1-6.7-6.7-6.7zm26.7 3.4c-3.9 0-6.9 3.1-6.9 6.9L227 321.3l3.9 66.4c.3 3.9 3.1 6.9 6.9 6.9s6.9-3.1 6.9-6.9l4.2-66.4-4.2-141.7c0-3.9-3-6.9-6.9-6.9z\"],\n    \"sourcetree\": [448, 512, [], \"f7d3\", \"M427.2 203c0-112.1-90.9-203-203-203C112.1-.2 21.2 90.6 21 202.6A202.86 202.86 0 0 0 161.5 396v101.7a14.3 14.3 0 0 0 14.3 14.3h96.4a14.3 14.3 0 0 0 14.3-14.3V396.1A203.18 203.18 0 0 0 427.2 203zm-271.6 0c0-90.8 137.3-90.8 137.3 0-.1 89.9-137.3 91-137.3 0z\"],\n    \"speakap\": [448, 512, [], \"f3f3\", \"M64 391.78C-15.41 303.59-8 167.42 80.64 87.64s224.8-73 304.21 15.24 72 224.36-16.64 304.14c-18.74 16.87 64 43.09 42 52.26-82.06 34.21-253.91 35-346.23-67.5zm213.31-211.6l38.5-40.86c-9.61-8.89-32-26.83-76.17-27.6-52.33-.91-95.86 28.3-96.77 80-.2 11.33.29 36.72 29.42 54.83 34.46 21.42 86.52 21.51 86 52.26-.37 21.28-26.42 25.81-38.59 25.6-3-.05-30.23-.46-47.61-24.62l-40 42.61c28.16 27 59 32.62 83.49 33.05 10.23.18 96.42.33 97.84-81 .28-15.81-2.07-39.72-28.86-56.59-34.36-21.64-85-19.45-84.43-49.75.41-23.25 31-25.37 37.53-25.26.43 0 26.62.26 39.62 17.37z\"],\n    \"speaker-deck\": [512, 512, [], \"f83c\", \"M213.86 296H100a100 100 0 0 1 0-200h132.84a40 40 0 0 1 0 80H98c-26.47 0-26.45 40 0 40h113.82a100 100 0 0 1 0 200H40a40 40 0 0 1 0-80h173.86c26.48 0 26.46-40 0-40zM298 416a120.21 120.21 0 0 0 51.11-80h64.55a19.83 19.83 0 0 0 19.66-20V196a19.83 19.83 0 0 0-19.66-20H296.42a60.77 60.77 0 0 0 0-80h136.93c43.44 0 78.65 35.82 78.65 80v160c0 44.18-35.21 80-78.65 80z\"],\n    \"spotify\": [496, 512, [], \"f1bc\", \"M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm100.7 364.9c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4zm26.9-65.6c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm31-76.2c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3z\"],\n    \"squarespace\": [512, 512, [], \"f5be\", \"M186.12 343.34c-9.65 9.65-9.65 25.29 0 34.94 9.65 9.65 25.29 9.65 34.94 0L378.24 221.1c19.29-19.29 50.57-19.29 69.86 0s19.29 50.57 0 69.86L293.95 445.1c19.27 19.29 50.53 19.31 69.82.04l.04-.04 119.25-119.24c38.59-38.59 38.59-101.14 0-139.72-38.59-38.59-101.15-38.59-139.72 0l-157.22 157.2zm244.53-104.8c-9.65-9.65-25.29-9.65-34.93 0l-157.2 157.18c-19.27 19.29-50.53 19.31-69.82.05l-.05-.05c-9.64-9.64-25.27-9.65-34.92-.01l-.01.01c-9.65 9.64-9.66 25.28-.02 34.93l.02.02c38.58 38.57 101.14 38.57 139.72 0l157.2-157.2c9.65-9.65 9.65-25.29.01-34.93zm-261.99 87.33l157.18-157.18c9.64-9.65 9.64-25.29 0-34.94-9.64-9.64-25.27-9.64-34.91 0L133.72 290.93c-19.28 19.29-50.56 19.3-69.85.01l-.01-.01c-19.29-19.28-19.31-50.54-.03-69.84l.03-.03L218.03 66.89c-19.28-19.29-50.55-19.3-69.85-.02l-.02.02L28.93 186.14c-38.58 38.59-38.58 101.14 0 139.72 38.6 38.59 101.13 38.59 139.73.01zm-87.33-52.4c9.64 9.64 25.27 9.64 34.91 0l157.21-157.19c19.28-19.29 50.55-19.3 69.84-.02l.02.02c9.65 9.65 25.29 9.65 34.93 0 9.65-9.65 9.65-25.29 0-34.93-38.59-38.59-101.13-38.59-139.72 0L81.33 238.54c-9.65 9.64-9.65 25.28-.01 34.93h.01z\"],\n    \"stack-exchange\": [448, 512, [], \"f18d\", \"M17.7 332.3h412.7v22c0 37.7-29.3 68-65.3 68h-19L259.3 512v-89.7H83c-36 0-65.3-30.3-65.3-68v-22zm0-23.6h412.7v-85H17.7v85zm0-109.4h412.7v-85H17.7v85zM365 0H83C47 0 17.7 30.3 17.7 67.7V90h412.7V67.7C430.3 30.3 401 0 365 0z\"],\n    \"stack-overflow\": [384, 512, [], \"f16c\", \"M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2 39.7L129.2 179l-16.7 36.5L293.7 300zM262 32l-32 24 119.3 160.3 32-24zm20.5 328h-200v39.7h200zm39.7 80H42.7V320h-40v160h359.5V320h-40z\"],\n    \"staylinked\": [440, 512, [], \"f3f5\", \"M382.7 292.5l2.7 2.7-170-167.3c-3.5-3.5-9.7-3.7-13.8-.5L144.3 171c-4.2 3.2-4.6 8.7-1.1 12.2l68.1 64.3c3.6 3.5 9.9 3.7 14 .5l.1-.1c4.1-3.2 10.4-3 14 .5l84 81.3c3.6 3.5 3.2 9-.9 12.2l-93.2 74c-4.2 3.3-10.5 3.1-14.2-.4L63.2 268c-3.5-3.5-9.7-3.7-13.9-.5L3.5 302.4c-4.2 3.2-4.7 8.7-1.2 12.2L211 510.7s7.4 6.8 17.3-.8l198-163.9c4-3.2 4.4-8.7.7-12.2zm54.5-83.4L226.7 2.5c-1.5-1.2-8-5.5-16.3 1.1L3.6 165.7c-4.2 3.2-4.8 8.7-1.2 12.2l42.3 41.7 171.7 165.1c3.7 3.5 10.1 3.7 14.3.4l50.2-38.8-.3-.3 7.7-6c4.2-3.2 4.6-8.7.9-12.2l-57.1-54.4c-3.6-3.5-10-3.7-14.2-.5l-.1.1c-4.2 3.2-10.5 3.1-14.2-.4L109 180.8c-3.6-3.5-3.1-8.9 1.1-12.2l92.2-71.5c4.1-3.2 10.3-3 13.9.5l160.4 159c3.7 3.5 10 3.7 14.1.5l45.8-35.8c4.1-3.2 4.4-8.7.7-12.2z\"],\n    \"steam\": [496, 512, [], \"f1b6\", \"M496 256c0 137-111.2 248-248.4 248-113.8 0-209.6-76.3-239-180.4l95.2 39.3c6.4 32.1 34.9 56.4 68.9 56.4 39.2 0 71.9-32.4 70.2-73.5l84.5-60.2c52.1 1.3 95.8-40.9 95.8-93.5 0-51.6-42-93.5-93.7-93.5s-93.7 42-93.7 93.5v1.2L176.6 279c-15.5-.9-30.7 3.4-43.5 12.1L0 236.1C10.2 108.4 117.1 8 247.6 8 384.8 8 496 119 496 256zM155.7 384.3l-30.5-12.6a52.79 52.79 0 0 0 27.2 25.8c26.9 11.2 57.8-1.6 69-28.4 5.4-13 5.5-27.3.1-40.3-5.4-13-15.5-23.2-28.5-28.6-12.9-5.4-26.7-5.2-38.9-.6l31.5 13c19.8 8.2 29.2 30.9 20.9 50.7-8.3 19.9-31 29.2-50.8 21zm173.8-129.9c-34.4 0-62.4-28-62.4-62.3s28-62.3 62.4-62.3 62.4 28 62.4 62.3-27.9 62.3-62.4 62.3zm.1-15.6c25.9 0 46.9-21 46.9-46.8 0-25.9-21-46.8-46.9-46.8s-46.9 21-46.9 46.8c.1 25.8 21.1 46.8 46.9 46.8z\"],\n    \"steam-square\": [448, 512, [], \"f1b7\", \"M185.2 356.5c7.7-18.5-1-39.7-19.6-47.4l-29.5-12.2c11.4-4.3 24.3-4.5 36.4.5 12.2 5.1 21.6 14.6 26.7 26.7 5 12.2 5 25.6-.1 37.7-10.5 25.1-39.4 37-64.6 26.5-11.6-4.8-20.4-13.6-25.4-24.2l28.5 11.8c18.6 7.8 39.9-.9 47.6-19.4zM400 32H48C21.5 32 0 53.5 0 80v160.7l116.6 48.1c12-8.2 26.2-12.1 40.7-11.3l55.4-80.2v-1.1c0-48.2 39.3-87.5 87.6-87.5s87.6 39.3 87.6 87.5c0 49.2-40.9 88.7-89.6 87.5l-79 56.3c1.6 38.5-29.1 68.8-65.7 68.8-31.8 0-58.5-22.7-64.5-52.7L0 319.2V432c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-99.7 222.5c-32.2 0-58.4-26.1-58.4-58.3s26.2-58.3 58.4-58.3 58.4 26.2 58.4 58.3-26.2 58.3-58.4 58.3zm.1-14.6c24.2 0 43.9-19.6 43.9-43.8 0-24.2-19.6-43.8-43.9-43.8-24.2 0-43.9 19.6-43.9 43.8 0 24.2 19.7 43.8 43.9 43.8z\"],\n    \"steam-symbol\": [448, 512, [], \"f3f6\", \"M395.5 177.5c0 33.8-27.5 61-61 61-33.8 0-61-27.3-61-61s27.3-61 61-61c33.5 0 61 27.2 61 61zm52.5.2c0 63-51 113.8-113.7 113.8L225 371.3c-4 43-40.5 76.8-84.5 76.8-40.5 0-74.7-28.8-83-67L0 358V250.7L97.2 290c15.1-9.2 32.2-13.3 52-11.5l71-101.7c.5-62.3 51.5-112.8 114-112.8C397 64 448 115 448 177.7zM203 363c0-34.7-27.8-62.5-62.5-62.5-4.5 0-9 .5-13.5 1.5l26 10.5c25.5 10.2 38 39 27.7 64.5-10.2 25.5-39.2 38-64.7 27.5-10.2-4-20.5-8.3-30.7-12.2 10.5 19.7 31.2 33.2 55.2 33.2 34.7 0 62.5-27.8 62.5-62.5zm207.5-185.3c0-42-34.3-76.2-76.2-76.2-42.3 0-76.5 34.2-76.5 76.2 0 42.2 34.3 76.2 76.5 76.2 41.9.1 76.2-33.9 76.2-76.2z\"],\n    \"sticker-mule\": [576, 512, [], \"f3f7\", \"M561.7 199.6c-1.3.3.3 0 0 0zm-6.2-77.4c-7.7-22.3-5.1-7.2-13.4-36.9-1.6-6.5-3.6-14.5-6.2-20-4.4-8.7-4.6-7.5-4.6-9.5 0-5.3 30.7-45.3 19-46.9-5.7-.6-12.2 11.6-20.6 17-8.6 4.2-8 5-10.3 5-2.6 0-5.7-3-6.2-5-2-5.7 1.9-25.9-3.6-25.9-3.6 0-12.3 24.8-17 25.8-5.2 1.3-27.9-11.4-75.1 18-25.3 13.2-86.9 65.2-87 65.3-6.7 4.7-20 4.7-35.5 16-44.4 30.1-109.6 9.4-110.7 9-110.6-26.8-128-15.2-159 11.5-20.8 17.9-23.7 36.5-24.2 38.9-4.2 20.4 5.2 48.3 6.7 64.3 1.8 19.3-2.7 17.7 7.7 98.3.5 1 4.1 0 5.1 1.5 0 8.4-3.8 12.1-4.1 13-1.5 4.5-1.5 10.5 0 16 2.3 8.2 8.2 37.2 8.2 46.9 0 41.8.4 44 2.6 49.4 3.9 10 12.5 9.1 17 12 3.1 3.5-.5 8.5 1 12.5.5 2 3.6 4 6.2 5 9.2 3.6 27 .3 29.9-2.5 1.6-1.5.5-4.5 3.1-5 5.1 0 10.8-.5 14.4-2.5 5.1-2.5 4.1-6 1.5-10.5-.4-.8-7-13.3-9.8-16-2.1-2-5.1-3-7.2-4.5-5.8-4.9-10.3-19.4-10.3-19.5-4.6-19.4-10.3-46.3-4.1-66.8 4.6-17.2 39.5-87.7 39.6-87.8 4.1-6.5 17-11.5 27.3-7 6 1.9 19.3 22 65.4 30.9 47.9 8.7 97.4-2 112.2-2 2.8 2-1.9 13-.5 38.9 0 26.4-.4 13.7-4.1 29.9-2.2 9.7 3.4 23.2-1.5 46.9-1.4 9.8-9.9 32.7-8.2 43.4.5 1 1 2 1.5 3.5.5 4.5 1.5 8.5 4.6 10 7.3 3.6 12-3.5 9.8 11.5-.7 3.1-2.6 12 1.5 15 4.4 3.7 30.6 3.4 36.5.5 2.6-1.5 1.6-4.5 6.4-7.4 1.9-.9 11.3-.4 11.3-6.5.3-1.8-9.2-19.9-9.3-20-2.6-3.5-9.2-4.5-11.3-8-6.9-10.1-1.7-52.6.5-59.4 3-11 5.6-22.4 8.7-32.4 11-42.5 10.3-50.6 16.5-68.3.8-1.8 6.4-23.1 10.3-29.9 9.3-17 21.7-32.4 33.5-47.4 18-22.9 34-46.9 52-69.8 6.1-7 8.2-13.7 18-8 10.8 5.7 21.6 7 31.9 17 14.6 12.8 10.2 18.2 11.8 22.9 1.5 5 7.7 10.5 14.9 9.5 10.4-2 13-2.5 13.4-2.5 2.6-.5 5.7-5 7.2-8 3.1-5.5 7.2-9 7.2-16.5 0-7.7-.4-2.8-20.6-52.9z\"],\n    \"strava\": [384, 512, [], \"f428\", \"M158.4 0L7 292h89.2l62.2-116.1L220.1 292h88.5zm150.2 292l-43.9 88.2-44.6-88.2h-67.6l112.2 220 111.5-220z\"],\n    \"stripe\": [640, 512, [], \"f429\", \"M165 144.7l-43.3 9.2-.2 142.4c0 26.3 19.8 43.3 46.1 43.3 14.6 0 25.3-2.7 31.2-5.9v-33.8c-5.7 2.3-33.7 10.5-33.7-15.7V221h33.7v-37.8h-33.7zm89.1 51.6l-2.7-13.1H213v153.2h44.3V233.3c10.5-13.8 28.2-11.1 33.9-9.3v-40.8c-6-2.1-26.7-6-37.1 13.1zm92.3-72.3l-44.6 9.5v36.2l44.6-9.5zM44.9 228.3c0-6.9 5.8-9.6 15.1-9.7 13.5 0 30.7 4.1 44.2 11.4v-41.8c-14.7-5.8-29.4-8.1-44.1-8.1-36 0-60 18.8-60 50.2 0 49.2 67.5 41.2 67.5 62.4 0 8.2-7.1 10.9-17 10.9-14.7 0-33.7-6.1-48.6-14.2v40c16.5 7.1 33.2 10.1 48.5 10.1 36.9 0 62.3-15.8 62.3-47.8 0-52.9-67.9-43.4-67.9-63.4zM640 261.6c0-45.5-22-81.4-64.2-81.4s-67.9 35.9-67.9 81.1c0 53.5 30.3 78.2 73.5 78.2 21.2 0 37.1-4.8 49.2-11.5v-33.4c-12.1 6.1-26 9.8-43.6 9.8-17.3 0-32.5-6.1-34.5-26.9h86.9c.2-2.3.6-11.6.6-15.9zm-87.9-16.8c0-20 12.3-28.4 23.4-28.4 10.9 0 22.5 8.4 22.5 28.4zm-112.9-64.6c-17.4 0-28.6 8.2-34.8 13.9l-2.3-11H363v204.8l44.4-9.4.1-50.2c6.4 4.7 15.9 11.2 31.4 11.2 31.8 0 60.8-23.2 60.8-79.6.1-51.6-29.3-79.7-60.5-79.7zm-10.6 122.5c-10.4 0-16.6-3.8-20.9-8.4l-.3-66c4.6-5.1 11-8.8 21.2-8.8 16.2 0 27.4 18.2 27.4 41.4.1 23.9-10.9 41.8-27.4 41.8zm-126.7 33.7h44.6V183.2h-44.6z\"],\n    \"stripe-s\": [384, 512, [], \"f42a\", \"M155.3 154.6c0-22.3 18.6-30.9 48.4-30.9 43.4 0 98.5 13.3 141.9 36.7V26.1C298.3 7.2 251.1 0 203.8 0 88.1 0 11 60.4 11 161.4c0 157.9 216.8 132.3 216.8 200.4 0 26.4-22.9 34.9-54.7 34.9-47.2 0-108.2-19.5-156.1-45.5v128.5a396.09 396.09 0 0 0 156 32.4c118.6 0 200.3-51 200.3-153.6 0-170.2-218-139.7-218-203.9z\"],\n    \"studiovinari\": [512, 512, [], \"f3f8\", \"M480.3 187.7l4.2 28v28l-25.1 44.1-39.8 78.4-56.1 67.5-79.1 37.8-17.7 24.5-7.7 12-9.6 4s17.3-63.6 19.4-63.6c2.1 0 20.3.7 20.3.7l66.7-38.6-92.5 26.1-55.9 36.8-22.8 28-6.6 1.4 20.8-73.6 6.9-5.5 20.7 12.9 88.3-45.2 56.8-51.5 14.8-68.4-125.4 23.3 15.2-18.2-173.4-53.3 81.9-10.5-166-122.9L133.5 108 32.2 0l252.9 126.6-31.5-38L378 163 234.7 64l18.7 38.4-49.6-18.1L158.3 0l194.6 122L310 66.2l108 96.4 12-8.9-21-16.4 4.2-37.8L451 89.1l29.2 24.7 11.5 4.2-7 6.2 8.5 12-13.1 7.4-10.3 20.2 10.5 23.9z\"],\n    \"stumbleupon\": [512, 512, [], \"f1a4\", \"M502.9 266v69.7c0 62.1-50.3 112.4-112.4 112.4-61.8 0-112.4-49.8-112.4-111.3v-70.2l34.3 16 51.1-15.2V338c0 14.7 12 26.5 26.7 26.5S417 352.7 417 338v-72h85.9zm-224.7-58.2l34.3 16 51.1-15.2V173c0-60.5-51.1-109-112.1-109-60.8 0-112.1 48.2-112.1 108.2v162.4c0 14.9-12 26.7-26.7 26.7S86 349.5 86 334.6V266H0v69.7C0 397.7 50.3 448 112.4 448c61.6 0 112.4-49.5 112.4-110.8V176.9c0-14.7 12-26.7 26.7-26.7s26.7 12 26.7 26.7v30.9z\"],\n    \"stumbleupon-circle\": [496, 512, [], \"f1a3\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 177.5c-9.8 0-17.8 8-17.8 17.8v106.9c0 40.9-33.9 73.9-74.9 73.9-41.4 0-74.9-33.5-74.9-74.9v-46.5h57.3v45.8c0 10 8 17.8 17.8 17.8s17.8-7.9 17.8-17.8V200.1c0-40 34.2-72.1 74.7-72.1 40.7 0 74.7 32.3 74.7 72.6v23.7l-34.1 10.1-22.9-10.7v-20.6c.1-9.6-7.9-17.6-17.7-17.6zm167.6 123.6c0 41.4-33.5 74.9-74.9 74.9-41.2 0-74.9-33.2-74.9-74.2V263l22.9 10.7 34.1-10.1v47.1c0 9.8 8 17.6 17.8 17.6s17.8-7.9 17.8-17.6v-48h57.3c-.1 45.9-.1 46.4-.1 46.4z\"],\n    \"superpowers\": [448, 512, [], \"f2dd\", \"M448 32c-83.3 11-166.8 22-250 33-92 12.5-163.3 86.7-169 180-3.3 55.5 18 109.5 57.8 148.2L0 480c83.3-11 166.5-22 249.8-33 91.8-12.5 163.3-86.8 168.7-179.8 3.5-55.5-18-109.5-57.7-148.2L448 32zm-79.7 232.3c-4.2 79.5-74 139.2-152.8 134.5-79.5-4.7-140.7-71-136.3-151 4.5-79.2 74.3-139.3 153-134.5 79.3 4.7 140.5 71 136.1 151z\"],\n    \"supple\": [640, 512, [], \"f3f9\", \"M640 262.5c0 64.1-109 116.1-243.5 116.1-24.8 0-48.6-1.8-71.1-5 7.7.4 15.5.6 23.4.6 134.5 0 243.5-56.9 243.5-127.1 0-29.4-19.1-56.4-51.2-78 60 21.1 98.9 55.1 98.9 93.4zM47.7 227.9c-.1-70.2 108.8-127.3 243.3-127.6 7.9 0 15.6.2 23.3.5-22.5-3.2-46.3-4.9-71-4.9C108.8 96.3-.1 148.5 0 212.6c.1 38.3 39.1 72.3 99.3 93.3-32.3-21.5-51.5-48.6-51.6-78zm60.2 39.9s10.5 13.2 29.3 13.2c17.9 0 28.4-11.5 28.4-25.1 0-28-40.2-25.1-40.2-39.7 0-5.4 5.3-9.1 12.5-9.1 5.7 0 11.3 2.6 11.3 6.6v3.9h14.2v-7.9c0-12.1-15.4-16.8-25.4-16.8-16.5 0-28.5 10.2-28.5 24.1 0 26.6 40.2 25.4 40.2 39.9 0 6.6-5.8 10.1-12.3 10.1-11.9 0-20.7-10.1-20.7-10.1l-8.8 10.9zm120.8-73.6v54.4c0 11.3-7.1 17.8-17.8 17.8-10.7 0-17.8-6.5-17.8-17.7v-54.5h-15.8v55c0 18.9 13.4 31.9 33.7 31.9 20.1 0 33.4-13 33.4-31.9v-55h-15.7zm34.4 85.4h15.8v-29.5h15.5c16 0 27.2-11.5 27.2-28.1s-11.2-27.8-27.2-27.8h-39.1v13.4h7.8v72zm15.8-43v-29.1h12.9c8.7 0 13.7 5.7 13.7 14.4 0 8.9-5.1 14.7-14 14.7h-12.6zm57 43h15.8v-29.5h15.5c16 0 27.2-11.5 27.2-28.1s-11.2-27.8-27.2-27.8h-39.1v13.4h7.8v72zm15.7-43v-29.1h12.9c8.7 0 13.7 5.7 13.7 14.4 0 8.9-5 14.7-14 14.7h-12.6zm57.1 34.8c0 5.8 2.4 8.2 8.2 8.2h37.6c5.8 0 8.2-2.4 8.2-8.2v-13h-14.3v5.2c0 1.7-1 2.6-2.6 2.6h-18.6c-1.7 0-2.6-1-2.6-2.6v-61.2c0-5.7-2.4-8.2-8.2-8.2H401v13.4h5.2c1.7 0 2.6 1 2.6 2.6v61.2zm63.4 0c0 5.8 2.4 8.2 8.2 8.2H519c5.7 0 8.2-2.4 8.2-8.2v-13h-14.3v5.2c0 1.7-1 2.6-2.6 2.6h-19.7c-1.7 0-2.6-1-2.6-2.6v-20.3h27.7v-13.4H488v-22.4h19.2c1.7 0 2.6 1 2.6 2.6v5.2H524v-13c0-5.7-2.5-8.2-8.2-8.2h-51.6v13.4h7.8v63.9zm58.9-76v5.9h1.6v-5.9h2.7v-1.2h-7v1.2h2.7zm5.7-1.2v7.1h1.5v-5.7l2.3 5.7h1.3l2.3-5.7v5.7h1.5v-7.1h-2.3l-2.1 5.1-2.1-5.1h-2.4z\"],\n    \"suse\": [640, 512, [], \"f7d6\", \"M471.08 102.66s-.3 18.3-.3 20.3c-9.1-3-74.4-24.1-135.7-26.3-51.9-1.8-122.8-4.3-223 57.3-19.4 12.4-73.9 46.1-99.6 109.7C7 277-.12 307 7 335.06a111 111 0 0 0 16.5 35.7c17.4 25 46.6 41.6 78.1 44.4 44.4 3.9 78.1-16 90-53.3 8.2-25.8 0-63.6-31.5-82.9-25.6-15.7-53.3-12.1-69.2-1.6-13.9 9.2-21.8 23.5-21.6 39.2.3 27.8 24.3 42.6 41.5 42.6a49 49 0 0 0 15.8-2.7c6.5-1.8 13.3-6.5 13.3-14.9 0-12.1-11.6-14.8-16.8-13.9-2.9.5-4.5 2-11.8 2.4-2-.2-12-3.1-12-14V316c.2-12.3 13.2-18 25.5-16.9 32.3 2.8 47.7 40.7 28.5 65.7-18.3 23.7-76.6 23.2-99.7-20.4-26-49.2 12.7-111.2 87-98.4 33.2 5.7 83.6 35.5 102.4 104.3h45.9c-5.7-17.6-8.9-68.3 42.7-68.3 56.7 0 63.9 39.9 79.8 68.3H460c-12.8-18.3-21.7-38.7-18.9-55.8 5.6-33.8 39.7-18.4 82.4-17.4 66.5.4 102.1-27 103.1-28 3.7-3.1 6.5-15.8 7-17.7 1.3-5.1-3.2-2.4-3.2-2.4-8.7 5.2-30.5 15.2-50.9 15.6-25.3.5-76.2-25.4-81.6-28.2-.3-.4.1 1.2-11-25.5 88.4 58.3 118.3 40.5 145.2 21.7.8-.6 4.3-2.9 3.6-5.7-13.8-48.1-22.4-62.7-34.5-69.6-37-21.6-125-34.7-129.2-35.3.1-.1-.9-.3-.9.7zm60.4 72.8a37.54 37.54 0 0 1 38.9-36.3c33.4 1.2 48.8 42.3 24.4 65.2-24.2 22.7-64.4 4.6-63.3-28.9zm38.6-25.3a26.27 26.27 0 1 0 25.4 27.2 26.19 26.19 0 0 0-25.4-27.2zm4.3 28.8c-15.4 0-15.4-15.6 0-15.6s15.4 15.64 0 15.64z\"],\n    \"symfony\": [512, 512, [], \"f83d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm133.74 143.54c-11.47.41-19.4-6.45-19.77-16.87-.27-9.18 6.68-13.44 6.53-18.85-.23-6.55-10.16-6.82-12.87-6.67-39.78 1.29-48.59 57-58.89 113.85 21.43 3.15 36.65-.72 45.14-6.22 12-7.75-3.34-15.72-1.42-24.56 4-18.16 32.55-19 32 5.3-.36 17.86-25.92 41.81-77.6 35.7-10.76 59.52-18.35 115-58.2 161.72-29 34.46-58.4 39.82-71.58 40.26-24.65.85-41-12.31-41.58-29.84-.56-17 14.45-26.26 24.31-26.59 21.89-.75 30.12 25.67 14.88 34-12.09 9.71.11 12.61 2.05 12.55 10.42-.36 17.34-5.51 22.18-9 24-20 33.24-54.86 45.35-118.35 8.19-49.66 17-78 18.23-82-16.93-12.75-27.08-28.55-49.85-34.72-15.61-4.23-25.12-.63-31.81 7.83-7.92 10-5.29 23 2.37 30.7l12.63 14c15.51 17.93 24 31.87 20.8 50.62-5.06 29.93-40.72 52.9-82.88 39.94-36-11.11-42.7-36.56-38.38-50.62 7.51-24.15 42.36-11.72 34.62 13.6-2.79 8.6-4.92 8.68-6.28 13.07-4.56 14.77 41.85 28.4 51-1.39 4.47-14.52-5.3-21.71-22.25-39.85-28.47-31.75-16-65.49 2.95-79.67C204.23 140.13 251.94 197 262 205.29c37.17-109 100.53-105.46 102.43-105.53 25.16-.81 44.19 10.59 44.83 28.65.25 7.69-4.17 22.59-19.52 23.13z\"],\n    \"teamspeak\": [512, 512, [], \"f4f9\", \"M244.2 346.79c2.4-12.3-12-30-32.4-48.7-20.9-19.2-48.2-39.1-63.4-46.6-21.7-12-41.7-1.8-46.3 22.7-5 26.2 0 51.4 14.5 73.9 10.2 15.5 25.4 22.7 43.4 24 11.6.6 52.5 2.2 61.7-1 11.9-4.3 20.1-11.8 22.5-24.3zm205 20.8a5.22 5.22 0 0 0-8.3 2.4c-8 25.4-44.7 112.5-172.1 121.5-149.7 10.5 80.3 43.6 145.4-6.4 22.7-17.4 47.6-35 46.6-85.4-.4-10.1-4.9-26.69-11.6-32.1zm62-122.4c-.3-18.9-8.6-33.4-26-42.2-2.9-1.3-5-2.7-5.9-6.4A222.64 222.64 0 0 0 438.9 103c-1.1-1.5-3.5-3.2-2.2-5 8.5-11.5-.3-18-7-24.4Q321.4-31.11 177.4 13.09c-40.1 12.3-73.9 35.6-102 67.4-4 4.3-6.7 9.1-3 14.5 3 4 1.3 6.2-1 9.3C51.6 132 38.2 162.59 32.1 196c-.7 4.3-2.9 6-6.4 7.8-14.2 7-22.5 18.5-24.9 34L0 264.29v20.9c0 30.8 21 50.4 51.8 49 7.7-.3 11.7-4.3 12-11.5 2-77.5-2.4-95.4 3.7-125.8C92.1 72.39 234.3 5 345.3 65.39 411.4 102 445.7 159 447.6 234.79c.8 28.2 0 56.5 0 84.6 0 7 2.2 12.5 9.4 14.2 24.1 5 49.2-12 53.2-36.7 2.9-17.1 1-34.5 1-51.7zm-159.6 131.5c36.5 2.8 59.3-28.5 58.4-60.5-2.1-45.2-66.2-16.5-87.8-8-73.2 28.1-45 54.9-22.2 60.8z\"],\n    \"telegram\": [496, 512, [], \"f2c6\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm121.8 169.9l-40.7 191.8c-3 13.6-11.1 16.9-22.4 10.5l-62-45.7-29.9 28.8c-3.3 3.3-6.1 6.1-12.5 6.1l4.4-63.1 114.9-103.8c5-4.4-1.1-6.9-7.7-2.5l-142 89.4-61.2-19.1c-13.3-4.2-13.6-13.3 2.8-19.7l239.1-92.2c11.1-4 20.8 2.7 17.2 19.5z\"],\n    \"telegram-plane\": [448, 512, [], \"f3fe\", \"M446.7 98.6l-67.6 318.8c-5.1 22.5-18.4 28.1-37.3 17.5l-103-75.9-49.7 47.8c-5.5 5.5-10.1 10.1-20.7 10.1l7.4-104.9 190.9-172.5c8.3-7.4-1.8-11.5-12.9-4.1L117.8 284 16.2 252.2c-22.1-6.9-22.5-22.1 4.6-32.7L418.2 66.4c18.4-6.9 34.5 4.1 28.5 32.2z\"],\n    \"tencent-weibo\": [384, 512, [], \"f1d5\", \"M72.3 495.8c1.4 19.9-27.6 22.2-29.7 2.9C31 368.8 73.7 259.2 144 185.5c-15.6-34 9.2-77.1 50.6-77.1 30.3 0 55.1 24.6 55.1 55.1 0 44-49.5 70.8-86.9 45.1-65.7 71.3-101.4 169.8-90.5 287.2zM192 .1C66.1.1-12.3 134.3 43.7 242.4 52.4 259.8 79 246.9 70 229 23.7 136.4 91 29.8 192 29.8c75.4 0 136.9 61.4 136.9 136.9 0 90.8-86.9 153.9-167.7 133.1-19.1-4.1-25.6 24.4-6.6 29.1 110.7 23.2 204-60 204-162.3C358.6 74.7 284 .1 192 .1z\"],\n    \"the-red-yeti\": [512, 512, [], \"f69d\", \"M488.23 241.7l20.7 7.1c-9.6-23.9-23.9-37-31.7-44.8l7.1-18.2c.2 0 12.3-27.8-2.5-30.7-.6-11.3-6.6-27-18.4-27-7.6-10.6-17.7-12.3-30.7-5.9a122.2 122.2 0 0 0-25.3 16.5c-5.3-6.4-3 .4-3-29.8-37.1-24.3-45.4-11.7-74.8 3l.5.5a239.36 239.36 0 0 0-68.4-13.3c-5.5-8.7-18.6-19.1-25.1-25.1l24.8 7.1c-5.5-5.5-26.8-12.9-34.2-15.2 18.2-4.1 29.8-20.8 42.5-33-34.9-10.1-67.9-5.9-97.9 11.8l12-44.2L182 0c-31.6 24.2-33 41.9-33.7 45.5-.9-2.4-6.3-19.6-15.2-27a35.12 35.12 0 0 0-.5 25.3c3 8.4 5.9 14.8 8.4 18.9-16-3.3-28.3-4.9-49.2 0h-3.7l33 14.3a194.26 194.26 0 0 0-46.7 67.4l-1.7 8.4 1.7 1.7 7.6-4.7c-3.3 11.6-5.3 19.4-6.6 25.8a200.18 200.18 0 0 0-27.8 40.3c-15 1-31.8 10.8-40.3 14.3l3 3.4 28.8 1c-.5 1-.7 2.2-1.2 3.2-7.3 6.4-39.8 37.7-33 80.7l20.2-22.4c.5 1.7.7 3.4 1.2 5.2 0 25.5.4 89.6 64.9 150.5 43.6 40 96 60.2 157.5 60.2 121.7 0 223-87.3 223-211.5 6.8-9.7-1.2 3 16.7-25.1l13 14.3 2.5-.5A181.84 181.84 0 0 0 495 255a44.74 44.74 0 0 0-6.8-13.3zM398 111.2l-.5 21.9c5.5 18.1 16.9 17.2 22.4 17.2l-3.4-4.7 22.4-5.4a242.44 242.44 0 0 1-27 0c12.8-2.1 33.3-29 43-11.3 3.4 7.6 6.4 17.2 9.3 27.8l1.7-5.9a56.38 56.38 0 0 1-1.7-15.2c5.4.5 8.8 3.4 9.3 10.1.5 6.4 1.7 14.8 3.4 25.3l4.7-11.3c4.6 0 4.5-3.6-2.5 20.7-20.9-8.7-35.1-8.4-46.5-8.4l18.2-16c-25.3 8.2-33 10.8-54.8 20.9-1.1-5.4-5-13.5-16-19.9-3.2 3.8-2.8.9-.7 14.8h-2.5a62.32 62.32 0 0 0-8.4-23.1l4.2-3.4c8.4-7.1 11.8-14.3 10.6-21.9-.5-6.4-5.4-13.5-13.5-20.7 5.6-3.4 15.2-.4 28.3 8.5zm-39.6-10.1c2.7 1.9 11.4 5.4 18.9 17.2 4.2 8.4 4 9.8 3.4 11.1-.5 2.4-.5 4.3-3 7.1-1.7 2.5-5.4 4.7-11.8 7.6-7.6-13-16.5-23.6-27.8-31.2zM91 143.1l1.2-1.7c1.2-2.9 4.2-7.6 9.3-15.2l2.5-3.4-13 12.3 5.4-4.7-10.1 9.3-4.2 1.2c12.3-24.1 23.1-41.3 32.5-50.2 9.3-9.3 16-16 20.2-19.4l-6.4 1.2c-11.3-4.2-19.4-7.1-24.8-8.4 2.5-.5 3.7-.5 3.2-.5 10.3 0 17.5.5 20.9 1.2a52.35 52.35 0 0 0 16 2.5l.5-1.7-8.4-35.8 13.5 29a42.89 42.89 0 0 0 5.9-14.3c1.7-6.4 5.4-13 10.1-19.4s7.6-10.6 9.3-11.3a234.68 234.68 0 0 0-6.4 25.3l-1.7 7.1-.5 4.7 2.5 2.5C190.4 39.9 214 34 239.8 34.5l21.1.5c-11.8 13.5-27.8 21.9-48.5 24.8a201.26 201.26 0 0 1-23.4 2.9l-.2-.5-2.5-1.2a20.75 20.75 0 0 0-14 2c-2.5-.2-4.9-.5-7.1-.7l-2.5 1.7.5 1.2c2 .2 3.9.5 6.2.7l-2 3.4 3.4-.5-10.6 11.3c-4.2 3-5.4 6.4-4.2 9.3l5.4-3.4h1.2a39.4 39.4 0 0 1 25.3-15.2v-3c6.4.5 13 1 19.4 1.2 6.4 0 8.4.5 5.4 1.2a189.6 189.6 0 0 1 20.7 13.5c13.5 10.1 23.6 21.9 30 35.4 8.8 18.2 13.5 37.1 13.5 56.6a141.13 141.13 0 0 1-3 28.3 209.91 209.91 0 0 1-16 46l2.5.5c18.2-19.7 41.9-16 49.2-16l-6.4 5.9 22.4 17.7-1.7 30.7c-5.4-12.3-16.5-21.1-33-27.8 16.5 14.8 23.6 21.1 21.9 20.2-4.8-2.8-3.5-1.9-10.8-3.7 4.1 4.1 17.5 18.8 18.2 20.7l.2.2-.2.2c0 1.8 1.6-1.2-14 22.9-75.2-15.3-106.27-42.7-141.2-63.2l11.8 1.2c-11.8-18.5-15.6-17.7-38.4-26.1L149 225c-8.8-3-18.2-3-28.3.5l7.6-10.6-1.2-1.7c-14.9 4.3-19.8 9.2-22.6 11.3-1.1-5.5-2.8-12.4-12.3-28.8l-1.2 27-13.2-5c1.5-25.2 5.4-50.5 13.2-74.6zm276.5 330c-49.9 25-56.1 22.4-59 23.9-29.8-11.8-50.9-31.7-63.5-58.8l30 16.5c-9.8-9.3-18.3-16.5-38.4-44.3l11.8 23.1-17.7-7.6c14.2 21.1 23.5 51.7 66.6 73.5-120.8 24.2-199-72.1-200.9-74.3a262.57 262.57 0 0 0 35.4 24.8c3.4 1.7 7.1 2.5 10.1 1.2l-16-20.7c9.2 4.2 9.5 4.5 69.1 29-42.5-20.7-73.8-40.8-93.2-60.2-.5 6.4-1.2 10.1-1.2 10.1a80.25 80.25 0 0 1 20.7 26.6c-39-18.9-57.6-47.6-71.3-82.6 49.9 55.1 118.9 37.5 120.5 37.1 34.8 16.4 69.9 23.6 113.9 10.6 3.3 0 20.3 17 25.3 39.1l4.2-3-2.5-23.6c9 9 24.9 22.6 34.4 13-15.6-5.3-23.5-9.5-29.5-31.7 4.6 4.2 7.6 9 27.8 15l1.2-1.2-10.5-14.2c11.7-4.8-3.5 1 32-10.8 4.3 34.3 9 49.2.7 89.5zm115.3-214.4l-2.5.5 3 9.3c-3.5 5.9-23.7 44.3-71.6 79.7-39.5 29.8-76.6 39.1-80.9 40.3l-7.6-7.1-1.2 3 14.3 16-7.1-4.7 3.4 4.2h-1.2l-21.9-13.5 9.3 26.6-19-27.9-1.2 2.5 7.6 29c-6.1-8.2-21-32.6-56.8-39.6l32.5 21.2a214.82 214.82 0 0 1-93.2-6.4c-4.2-1.2-8.9-2.5-13.5-4.2l1.2-3-44.8-22.4 26.1 22.4c-57.7 9.1-113-25.4-126.4-83.4l-2.5-16.4-22.27 22.3c19.5-57.5 25.6-57.9 51.4-70.1-9.1-5.3-1.6-3.3-38.4-9.3 15.8-5.8 33-15.4 73 5.2a18.5 18.5 0 0 1 3.7-1.7c.6-3.2.4-.8 1-11.8 3.9 10 3.6 8.7 3 9.3l1.7.5c12.7-6.5 8.9-4.5 17-8.9l-5.4 13.5 22.3-5.8-8.4 8.4 2.5 2.5c4.5-1.8 30.3 3.4 40.8 16l-23.6-2.5c39.4 23 51.5 54 55.8 69.6l1.7-1.2c-2.8-22.3-12.4-33.9-16-40.1 4.2 5 39.2 34.6 110.4 46-11.3-.5-23.1 5.4-34.9 18.9l46.7-20.2-9.3 21.9c7.6-10.1 14.8-23.6 21.2-39.6v-.5l1.2-3-1.2 16c13.5-41.8 25.3-78.5 35.4-109.7l13.5-27.8v-2l-5.4-4.2h10.1l5.9 4.2 2.5-1.2-3.4-16 12.3 18.9 41.8-20.2-14.8 13 .5 2.9 17.7-.5a184 184 0 0 1 33 4.2l-23.6 2.5-1.2 3 26.6 23.1a254.21 254.21 0 0 1 27 32c-11.2-3.3-10.3-3.4-21.2-3.4l12.3 32.5zm-6.1-71.3l-3.9 13-14.3-11.8zm-254.8 7.1c1.7 10.6 4.7 17.7 8.8 21.9-9.3 6.6-27.5 13.9-46.5 16l.5 1.2a50.22 50.22 0 0 0 24.8-2.5l-7.1 13c4.2-1.7 10.1-7.1 17.7-14.8 11.9-5.5 12.7-5.1 20.2-16-12.7-6.4-15.7-13.7-18.4-18.8zm3.7-102.3c-6.4-3.4-10.6 3-12.3 18.9s2.5 29.5 11.8 39.6 18.2 10.6 26.1 3 3.4-23.6-11.3-47.7a39.57 39.57 0 0 0-14.27-13.8zm-4.7 46.3c5.4 2.2 10.5 1.9 12.3-10.6v-4.7l-1.2.5c-4.3-3.1-2.5-4.5-1.7-6.2l.5-.5c-.9-1.2-5-8.1-12.5 4.7-.5-13.5.5-21.9 3-24.8 1.2-2.5 4.7-1.2 11.3 4.2 6.4 5.4 11.3 16 15.2 32.5 6.5 28-19.8 26.2-26.9 4.9zm-45-5.5c1.6.3 9.3-1.1 9.3-14.8h-.5c-5.4-1.1-2.2-5.5-.7-5.9-1.7-3-3.4-4.2-5.4-4.7-8.1 0-11.6 12.7-8.1 21.2a7.51 7.51 0 0 0 5.43 4.2zM216 82.9l-2.5.5.5 3a48.94 48.94 0 0 1 26.1 5.9c-2.5-5.5-10-14.3-28.3-14.3l.5 2.5zm-71.8 49.4c21.7 16.8 16.5 21.4 46.5 23.6l-2.9-4.7a42.67 42.67 0 0 0 14.8-28.3c1.7-16-1.2-29.5-8.8-41.3l13-7.6a2.26 2.26 0 0 0-.5-1.7 14.21 14.21 0 0 0-13.5 1.7c-12.7 6.7-28 20.9-29 22.4-1.7 1.7-3.4 5.9-5.4 13.5a99.61 99.61 0 0 0-2.9 23.6c-4.7-8-10.5-6.4-19.9-5.9l7.1 7.6c-16.5 0-23.3 15.4-23.6 16 6.8 0 4.6-7.6 30-12.3-4.3-6.3-3.3-5-4.9-6.6zm18.7-18.7c1.2-7.6 3.4-13 6.4-17.2 5.4-6.4 10.6-10.1 16-11.8 4.2-1.7 7.1 1.2 10.1 9.3a72.14 72.14 0 0 1 3 25.3c-.5 9.3-3.4 17.2-8.4 23.1-2.9 3.4-5.4 5.9-6.4 7.6a39.21 39.21 0 0 1-11.3-.5l-7.1-3.4-5.4-6.4c.8-10 1.3-18.8 3.1-26zm42 56.1c-34.8 14.4-34.7 14-36.1 14.3-20.8 4.7-19-24.4-18.9-24.8l5.9-1.2-.5-2.5c-20.2-2.6-31 4.2-32.5 4.9.5.5 3 3.4 5.9 9.3 4.2-6.4 8.8-10.1 15.2-10.6a83.47 83.47 0 0 0 1.7 33.7c.1.5 2.6 17.4 27.5 24.1 11.3 3 27 1.2 48.9-5.4l-9.2.5c-4.2-14.8-6.4-24.8-5.9-29.5 11.3-8.8 21.9-11.3 30.7-7.6h2.5l-11.8-7.6-7.1.5c-5.9 1.2-12.3 4.2-19.4 8.4z\"],\n    \"themeco\": [448, 512, [], \"f5c6\", \"M202.9 8.43c9.9-5.73 26-5.82 35.95-.21L430 115.85c10 5.6 18 19.44 18 30.86V364c0 11.44-8.06 25.29-18 31L238.81 503.74c-9.93 5.66-26 5.57-35.85-.21L17.86 395.12C8 389.34 0 375.38 0 364V146.71c0-11.44 8-25.36 17.91-31.08zm-77.4 199.83c-15.94 0-31.89.14-47.83.14v101.45H96.8V280h28.7c49.71 0 49.56-71.74 0-71.74zm140.14 100.29l-30.73-34.64c37-7.51 34.8-65.23-10.87-65.51-16.09 0-32.17-.14-48.26-.14v101.59h19.13v-33.91h18.41l29.56 33.91h22.76zm-41.59-82.32c23.34 0 23.26 32.46 0 32.46h-29.13v-32.46zm-95.56-1.6c21.18 0 21.11 38.85 0 38.85H96.18v-38.84zm192.65-18.25c-68.46 0-71 105.8 0 105.8 69.48-.01 69.41-105.8 0-105.8zm0 17.39c44.12 0 44.8 70.86 0 70.86s-44.43-70.86 0-70.86z\"],\n    \"themeisle\": [512, 512, [], \"f2b2\", \"M208 88.286c0-10 6.286-21.714 17.715-21.714 11.142 0 17.714 11.714 17.714 21.714 0 10.285-6.572 21.714-17.714 21.714C214.286 110 208 98.571 208 88.286zm304 160c0 36.001-11.429 102.286-36.286 129.714-22.858 24.858-87.428 61.143-120.857 70.572l-1.143.286v32.571c0 16.286-12.572 30.571-29.143 30.571-10 0-19.429-5.714-24.572-14.286-5.427 8.572-14.856 14.286-24.856 14.286-10 0-19.429-5.714-24.858-14.286-5.142 8.572-14.571 14.286-24.57 14.286-10.286 0-19.429-5.714-24.858-14.286-5.143 8.572-14.571 14.286-24.571 14.286-18.857 0-29.429-15.714-29.429-32.857-16.286 12.285-35.715 19.428-56.571 19.428-22 0-43.429-8.285-60.286-22.857 10.285-.286 20.571-2.286 30.285-5.714-20.857-5.714-39.428-18.857-52-36.286 21.37 4.645 46.209 1.673 67.143-11.143-22-22-56.571-58.857-68.572-87.428C1.143 321.714 0 303.714 0 289.429c0-49.714 20.286-160 86.286-160 10.571 0 18.857 4.858 23.143 14.857a158.792 158.792 0 0 1 12-15.428c2-2.572 5.714-5.429 7.143-8.286 7.999-12.571 11.714-21.142 21.714-34C182.571 45.428 232 17.143 285.143 17.143c6 0 12 .285 17.714 1.143C313.714 6.571 328.857 0 344.572 0c14.571 0 29.714 6 40 16.286.857.858 1.428 2.286 1.428 3.428 0 3.714-10.285 13.429-12.857 16.286 4.286 1.429 15.714 6.858 15.714 12 0 2.857-2.857 5.143-4.571 7.143 31.429 27.714 49.429 67.143 56.286 108 4.286-5.143 10.285-8.572 17.143-8.572 10.571 0 20.857 7.144 28.571 14.001C507.143 187.143 512 221.714 512 248.286zM188 89.428c0 18.286 12.571 37.143 32.286 37.143 19.714 0 32.285-18.857 32.285-37.143 0-18-12.571-36.857-32.285-36.857-19.715 0-32.286 18.858-32.286 36.857zM237.714 194c0-19.714 3.714-39.143 8.571-58.286-52.039 79.534-13.531 184.571 68.858 184.571 21.428 0 42.571-7.714 60-20 2-7.429 3.714-14.857 3.714-22.572 0-14.286-6.286-21.428-20.572-21.428-4.571 0-9.143.857-13.429 1.714-63.343 12.668-107.142 3.669-107.142-63.999zm-41.142 254.858c0-11.143-8.858-20.857-20.286-20.857-11.429 0-20 9.715-20 20.857v32.571c0 11.143 8.571 21.142 20 21.142 11.428 0 20.286-9.715 20.286-21.142v-32.571zm49.143 0c0-11.143-8.572-20.857-20-20.857-11.429 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.857 21.142 20.286 21.142 11.428 0 20-10 20-21.142v-32.571zm49.713 0c0-11.143-8.857-20.857-20.285-20.857-11.429 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.857 21.142 20.286 21.142 11.428 0 20.285-9.715 20.285-21.142v-32.571zm49.715 0c0-11.143-8.857-20.857-20.286-20.857-11.428 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.858 21.142 20.286 21.142 11.429 0 20.286-10 20.286-21.142v-32.571zM421.714 286c-30.857 59.142-90.285 102.572-158.571 102.572-96.571 0-160.571-84.572-160.571-176.572 0-16.857 2-33.429 6-49.714-20 33.715-29.714 72.572-29.714 111.429 0 60.286 24.857 121.715 71.429 160.857 5.143-9.714 14.857-16.286 26-16.286 10 0 19.428 5.714 24.571 14.286 5.429-8.571 14.571-14.286 24.858-14.286 10 0 19.428 5.714 24.571 14.286 5.429-8.571 14.857-14.286 24.858-14.286 10 0 19.428 5.714 24.857 14.286 5.143-8.571 14.571-14.286 24.572-14.286 10.857 0 20.857 6.572 25.714 16 43.427-36.286 68.569-92 71.426-148.286zm10.572-99.714c0-53.714-34.571-105.714-92.572-105.714-30.285 0-58.571 15.143-78.857 36.857C240.862 183.812 233.41 254 302.286 254c28.805 0 97.357-28.538 84.286 36.857 28.857-26 45.714-65.714 45.714-104.571z\"],\n    \"think-peaks\": [576, 512, [], \"f731\", \"M465.4 409.4l87.1-150.2-32-.3-55.1 95L259.2 0 23 407.4l32 .3L259.2 55.6zm-355.3-44.1h32.1l117.4-202.5L463 511.9l32.5.1-235.8-404.6z\"],\n    \"trade-federation\": [496, 512, [], \"f513\", \"M248 8.8c-137 0-248 111-248 248s111 248 248 248 248-111 248-248-111-248-248-248zm0 482.8c-129.7 0-234.8-105.1-234.8-234.8S118.3 22 248 22s234.8 105.1 234.8 234.8S377.7 491.6 248 491.6zm155.1-328.5v-46.8H209.3V198H54.2l36.7 46h117.7v196.8h48.8V245h83.3v-47h-83.3v-34.8h145.7zm-73.3 45.1v23.9h-82.9v197.4h-26.8V232.1H96.3l-20.1-23.9h143.9v-80.6h171.8V152h-145v56.2zm-161.3-69l-12.4-20.7 2.1 23.8-23.5 5.4 23.3 5.4-2.1 24 12.3-20.5 22.2 9.5-15.7-18.1 15.8-18.1zm-29.6-19.7l9.3-11.5-12.7 5.9-8-12.4 1.7 13.9-14.3 3.8 13.7 2.7-.8 14.7 6.8-12.2 13.8 5.3zm165.4 145.2l-13.1 5.6-7.3-12.2 1.3 14.2-13.9 3.2 13.9 3.2-1.2 14.2 7.3-12.2 13.1 5.5-9.4-10.7zm106.9-77.2l-20.9 9.1-12-19.6 2.2 22.7-22.3 5.4 22.2 4.9-1.8 22.9 11.5-19.6 21.2 8.8-15.1-17zM248 29.9c-125.3 0-226.9 101.6-226.9 226.9S122.7 483.7 248 483.7s226.9-101.6 226.9-226.9S373.3 29.9 248 29.9zM342.6 196v51h-83.3v195.7h-52.7V245.9H89.9l-40-49.9h157.4v-81.6h197.8v50.7H259.4V196zM248 43.2c60.3 0 114.8 25 153.6 65.2H202.5V190H45.1C73.1 104.8 153.4 43.2 248 43.2zm0 427.1c-117.9 0-213.6-95.6-213.6-213.5 0-21.2 3.1-41.8 8.9-61.1L87.1 252h114.7v196.8h64.6V253h83.3v-62.7h-83.2v-19.2h145.6v-50.8c30.8 37 49.3 84.6 49.3 136.5.1 117.9-95.5 213.5-213.4 213.5zM178.8 275l-11-21.4 1.7 24.5-23.7 3.9 23.8 5.9-3.7 23.8 13-20.9 21.5 10.8-15.8-18.8 16.9-17.1z\"],\n    \"trello\": [448, 512, [], \"f181\", \"M392.3 32H56.1C25.1 32 0 57.1 0 88c-.1 0 0-4 0 336 0 30.9 25.1 56 56 56h336.2c30.8-.2 55.7-25.2 55.7-56V88c.1-30.8-24.8-55.8-55.6-56zM197 371.3c-.2 14.7-12.1 26.6-26.9 26.6H87.4c-14.8.1-26.9-11.8-27-26.6V117.1c0-14.8 12-26.9 26.9-26.9h82.9c14.8 0 26.9 12 26.9 26.9v254.2zm193.1-112c0 14.8-12 26.9-26.9 26.9h-81c-14.8 0-26.9-12-26.9-26.9V117.2c0-14.8 12-26.9 26.8-26.9h81.1c14.8 0 26.9 12 26.9 26.9v142.1z\"],\n    \"tripadvisor\": [576, 512, [], \"f262\", \"M166.4 280.521c0 13.236-10.73 23.966-23.966 23.966s-23.966-10.73-23.966-23.966 10.73-23.966 23.966-23.966 23.966 10.729 23.966 23.966zm264.962-23.956c-13.23 0-23.956 10.725-23.956 23.956 0 13.23 10.725 23.956 23.956 23.956 13.23 0 23.956-10.725 23.956-23.956-.001-13.231-10.726-23.956-23.956-23.956zm89.388 139.49c-62.667 49.104-153.276 38.109-202.379-24.559l-30.979 46.325-30.683-45.939c-48.277 60.39-135.622 71.891-197.885 26.055-64.058-47.158-77.759-137.316-30.601-201.374A186.762 186.762 0 0 0 0 139.416l90.286-.05a358.48 358.48 0 0 1 197.065-54.03 350.382 350.382 0 0 1 192.181 53.349l96.218.074a185.713 185.713 0 0 0-28.352 57.649c46.793 62.747 34.964 151.37-26.648 199.647zM259.366 281.761c-.007-63.557-51.535-115.075-115.092-115.068C80.717 166.7 29.2 218.228 29.206 281.785c.007 63.557 51.535 115.075 115.092 115.068 63.513-.075 114.984-51.539 115.068-115.052v-.04zm28.591-10.455c5.433-73.44 65.51-130.884 139.12-133.022a339.146 339.146 0 0 0-139.727-27.812 356.31 356.31 0 0 0-140.164 27.253c74.344 1.582 135.299 59.424 140.771 133.581zm251.706-28.767c-21.992-59.634-88.162-90.148-147.795-68.157-59.634 21.992-90.148 88.162-68.157 147.795v.032c22.038 59.607 88.198 90.091 147.827 68.113 59.615-22.004 90.113-88.162 68.125-147.783zm-326.039 37.975v.115c-.057 39.328-31.986 71.163-71.314 71.106-39.328-.057-71.163-31.986-71.106-71.314.057-39.328 31.986-71.163 71.314-71.106 39.259.116 71.042 31.94 71.106 71.199zm-24.512 0v-.084c-.051-25.784-20.994-46.645-46.778-46.594-25.784.051-46.645 20.994-46.594 46.777.051 25.784 20.994 46.645 46.777 46.594 25.726-.113 46.537-20.968 46.595-46.693zm313.423 0v.048c-.02 39.328-31.918 71.194-71.247 71.173s-71.194-31.918-71.173-71.247c.02-39.328 31.918-71.194 71.247-71.173 39.29.066 71.121 31.909 71.173 71.199zm-24.504-.008c-.009-25.784-20.918-46.679-46.702-46.67-25.784.009-46.679 20.918-46.67 46.702.009 25.784 20.918 46.678 46.702 46.67 25.765-.046 46.636-20.928 46.67-46.693v-.009z\"],\n    \"tumblr\": [320, 512, [], \"f173\", \"M309.8 480.3c-13.6 14.5-50 31.7-97.4 31.7-120.8 0-147-88.8-147-140.6v-144H17.9c-5.5 0-10-4.5-10-10v-68c0-7.2 4.5-13.6 11.3-16 62-21.8 81.5-76 84.3-117.1.8-11 6.5-16.3 16.1-16.3h70.9c5.5 0 10 4.5 10 10v115.2h83c5.5 0 10 4.4 10 9.9v81.7c0 5.5-4.5 10-10 10h-83.4V360c0 34.2 23.7 53.6 68 35.8 4.8-1.9 9-3.2 12.7-2.2 3.5.9 5.8 3.4 7.4 7.9l22 64.3c1.8 5 3.3 10.6-.4 14.5z\"],\n    \"tumblr-square\": [448, 512, [], \"f174\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-82.3 364.2c-8.5 9.1-31.2 19.8-60.9 19.8-75.5 0-91.9-55.5-91.9-87.9v-90h-29.7c-3.4 0-6.2-2.8-6.2-6.2v-42.5c0-4.5 2.8-8.5 7.1-10 38.8-13.7 50.9-47.5 52.7-73.2.5-6.9 4.1-10.2 10-10.2h44.3c3.4 0 6.2 2.8 6.2 6.2v72h51.9c3.4 0 6.2 2.8 6.2 6.2v51.1c0 3.4-2.8 6.2-6.2 6.2h-52.1V321c0 21.4 14.8 33.5 42.5 22.4 3-1.2 5.6-2 8-1.4 2.2.5 3.6 2.1 4.6 4.9l13.8 40.2c1 3.2 2 6.7-.3 9.1z\"],\n    \"twitch\": [448, 512, [], \"f1e8\", \"M40.1 32L10 108.9v314.3h107V480h60.2l56.8-56.8h87l117-117V32H40.1zm357.8 254.1L331 353H224l-56.8 56.8V353H76.9V72.1h321v214zM331 149v116.9h-40.1V149H331zm-107 0v116.9h-40.1V149H224z\"],\n    \"twitter\": [512, 512, [], \"f099\", \"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"],\n    \"twitter-square\": [448, 512, [], \"f081\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-48.9 158.8c.2 2.8.2 5.7.2 8.5 0 86.7-66 186.6-186.6 186.6-37.2 0-71.7-10.8-100.7-29.4 5.3.6 10.4.8 15.8.8 30.7 0 58.9-10.4 81.4-28-28.8-.6-53-19.5-61.3-45.5 10.1 1.5 19.2 1.5 29.6-1.2-30-6.1-52.5-32.5-52.5-64.4v-.8c8.7 4.9 18.9 7.9 29.6 8.3a65.447 65.447 0 0 1-29.2-54.6c0-12.2 3.2-23.4 8.9-33.1 32.3 39.8 80.8 65.8 135.2 68.6-9.3-44.5 24-80.6 64-80.6 18.9 0 35.9 7.9 47.9 20.7 14.8-2.8 29-8.3 41.6-15.8-4.9 15.2-15.2 28-28.8 36.1 13.2-1.4 26-5.1 37.8-10.2-8.9 13.1-20.1 24.7-32.9 34z\"],\n    \"typo3\": [448, 512, [], \"f42b\", \"M178.7 78.4c0-24.7 5.4-32.4 13.9-39.4-69.5 8.5-149.3 34-176.3 66.4-5.4 7.7-9.3 20.8-9.3 37.1C7 246 113.8 480 191.1 480c36.3 0 97.3-59.5 146.7-139-7 2.3-11.6 2.3-18.5 2.3-57.2 0-140.6-198.5-140.6-264.9zM301.5 32c-30.1 0-41.7 5.4-41.7 36.3 0 66.4 53.8 198.5 101.7 198.5 26.3 0 78.8-99.7 78.8-182.3 0-40.9-67-52.5-138.8-52.5z\"],\n    \"uber\": [448, 512, [], \"f402\", \"M414.1 32H33.9C15.2 32 0 47.2 0 65.9V446c0 18.8 15.2 34 33.9 34H414c18.7 0 33.9-15.2 33.9-33.9V65.9C448 47.2 432.8 32 414.1 32zM237.6 391.1C163 398.6 96.4 344.2 88.9 269.6h94.4V290c0 3.7 3 6.8 6.8 6.8H258c3.7 0 6.8-3 6.8-6.8v-67.9c0-3.7-3-6.8-6.8-6.8h-67.9c-3.7 0-6.8 3-6.8 6.8v20.4H88.9c7-69.4 65.4-122.2 135.1-122.2 69.7 0 128.1 52.8 135.1 122.2 7.5 74.5-46.9 141.1-121.5 148.6z\"],\n    \"ubuntu\": [496, 512, [], \"f7df\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm52.7 93c8.8-15.2 28.3-20.5 43.5-11.7 15.3 8.8 20.5 28.3 11.7 43.6-8.8 15.2-28.3 20.5-43.5 11.7-15.3-8.9-20.5-28.4-11.7-43.6zM87.4 287.9c-17.6 0-31.9-14.3-31.9-31.9 0-17.6 14.3-31.9 31.9-31.9 17.6 0 31.9 14.3 31.9 31.9 0 17.6-14.3 31.9-31.9 31.9zm28.1 3.1c22.3-17.9 22.4-51.9 0-69.9 8.6-32.8 29.1-60.7 56.5-79.1l23.7 39.6c-51.5 36.3-51.5 112.5 0 148.8L172 370c-27.4-18.3-47.8-46.3-56.5-79zm228.7 131.7c-15.3 8.8-34.7 3.6-43.5-11.7-8.8-15.3-3.6-34.8 11.7-43.6 15.2-8.8 34.7-3.6 43.5 11.7 8.8 15.3 3.6 34.8-11.7 43.6zm.3-69.5c-26.7-10.3-56.1 6.6-60.5 35-5.2 1.4-48.9 14.3-96.7-9.4l22.5-40.3c57 26.5 123.4-11.7 128.9-74.4l46.1.7c-2.3 34.5-17.3 65.5-40.3 88.4zm-5.9-105.3c-5.4-62-71.3-101.2-128.9-74.4l-22.5-40.3c47.9-23.7 91.5-10.8 96.7-9.4 4.4 28.3 33.8 45.3 60.5 35 23.1 22.9 38 53.9 40.2 88.5l-46 .6z\"],\n    \"uikit\": [448, 512, [], \"f403\", \"M443.9 128v256L218 512 0 384V169.7l87.6 45.1v117l133.5 75.5 135.8-75.5v-151l-101.1-57.6 87.6-53.1L443.9 128zM308.6 49.1L223.8 0l-88.6 54.8 86 47.3 87.4-53z\"],\n    \"uniregistry\": [384, 512, [], \"f404\", \"M192 480c39.5 0 76.2-11.8 106.8-32.2H85.3C115.8 468.2 152.5 480 192 480zm-89.1-193.1v-12.4H0v12.4c0 2.5 0 5 .1 7.4h103.1c-.2-2.4-.3-4.9-.3-7.4zm20.5 57H8.5c2.6 8.5 5.8 16.8 9.6 24.8h138.3c-12.9-5.7-24.1-14.2-33-24.8zm-17.7-34.7H1.3c.9 7.6 2.2 15 3.9 22.3h109.7c-4-6.9-7.2-14.4-9.2-22.3zm-2.8-69.3H0v17.3h102.9zm0-173.2H0v4.9h102.9zm0-34.7H0v2.5h102.9zm0 69.3H0v7.4h102.9zm0 104H0v14.8h102.9zm0-69.3H0v9.9h102.9zm0 34.6H0V183h102.9zm166.2 160.9h109.7c1.8-7.3 3.1-14.7 3.9-22.3H278.3c-2.1 7.9-5.2 15.4-9.2 22.3zm12-185.7H384V136H281.1zm0 37.2H384v-12.4H281.1zm0-74.3H384v-7.4H281.1zm0-76.7v2.5H384V32zm-203 410.9h227.7c11.8-8.7 22.7-18.6 32.2-29.7H44.9c9.6 11 21.4 21 33.2 29.7zm203-371.3H384v-4.9H281.1zm0 148.5H384v-14.8H281.1zM38.8 405.7h305.3c6.7-8.5 12.6-17.6 17.8-27.2H23c5.2 9.6 9.2 18.7 15.8 27.2zm188.8-37.1H367c3.7-8 5.8-16.2 8.5-24.8h-115c-8.8 10.7-20.1 19.2-32.9 24.8zm53.5-81.7c0 2.5-.1 5-.4 7.4h103.1c.1-2.5.2-4.9.2-7.4v-12.4H281.1zm0-29.7H384v-17.3H281.1z\"],\n    \"untappd\": [640, 512, [], \"f405\", \"M401.3 49.9c-79.8 160.1-84.6 152.5-87.9 173.2l-5.2 32.8c-1.9 12-6.6 23.5-13.7 33.4L145.6 497.1c-7.6 10.6-20.4 16.2-33.4 14.6-40.3-5-77.8-32.2-95.3-68.5-5.7-11.8-4.5-25.8 3.1-36.4l148.9-207.9c7.1-9.9 16.4-18 27.2-23.7l29.3-15.5c18.5-9.8 9.7-11.9 135.6-138.9 1-4.8 1-7.3 3.6-8 3-.7 6.6-1 6.3-4.6l-.4-4.6c-.2-1.9 1.3-3.6 3.2-3.6 4.5-.1 13.2 1.2 25.6 10 12.3 8.9 16.4 16.8 17.7 21.1.6 1.8-.6 3.7-2.4 4.2l-4.5 1.1c-3.4.9-2.5 4.4-2.3 7.4.1 2.8-2.3 3.6-6.5 6.1zM230.1 36.4c3.4.9 2.5 4.4 2.3 7.4-.2 2.7 2.1 3.5 6.4 6 7.9 15.9 15.3 30.5 22.2 44 .7 1.3 2.3 1.5 3.3.5 11.2-12 24.6-26.2 40.5-42.6 1.3-1.4 1.4-3.5.1-4.9-8-8.2-16.5-16.9-25.6-26.1-1-4.7-1-7.3-3.6-8-3-.8-6.6-1-6.3-4.6.3-3.3 1.4-8.1-2.8-8.2-4.5-.1-13.2 1.1-25.6 10-12.3 8.9-16.4 16.8-17.7 21.1-1.4 4.2 3.6 4.6 6.8 5.4zM620 406.7L471.2 198.8c-13.2-18.5-26.6-23.4-56.4-39.1-11.2-5.9-14.2-10.9-30.5-28.9-1-1.1-2.9-.9-3.6.5-46.3 88.8-47.1 82.8-49 94.8-1.7 10.7-1.3 20 .3 29.8 1.9 12 6.6 23.5 13.7 33.4l148.9 207.9c7.6 10.6 20.2 16.2 33.1 14.7 40.3-4.9 78-32 95.7-68.6 5.4-11.9 4.3-25.9-3.4-36.6z\"],\n    \"ups\": [384, 512, [], \"f7e0\", \"M103.2 303c-5.2 3.6-32.6 13.1-32.6-19V180H37.9v102.6c0 74.9 80.2 51.1 97.9 39V180h-32.6zM4 74.82v220.9c0 103.7 74.9 135.2 187.7 184.1 112.4-48.9 187.7-80.2 187.7-184.1V74.82c-116.3-61.6-281.8-49.6-375.4 0zm358.1 220.9c0 86.6-53.2 113.6-170.4 165.3-117.5-51.8-170.5-78.7-170.5-165.3v-126.4c102.3-93.8 231.6-100 340.9-89.8zm-209.6-107.4v212.8h32.7v-68.7c24.4 7.3 71.7-2.6 71.7-78.5 0-97.4-80.7-80.92-104.4-65.6zm32.7 117.3v-100.3c8.4-4.2 38.4-12.7 38.4 49.3 0 67.9-36.4 51.8-38.4 51zm79.1-86.4c.1 47.3 51.6 42.5 52.2 70.4.6 23.5-30.4 23-50.8 4.9v30.1c36.2 21.5 81.9 8.1 83.2-33.5 1.7-51.5-54.1-46.6-53.4-73.2.6-20.3 30.6-20.5 48.5-2.2v-28.4c-28.5-22-79.9-9.2-79.7 31.9z\"],\n    \"usb\": [640, 512, [], \"f287\", \"M641.5 256c0 3.1-1.7 6.1-4.5 7.5L547.9 317c-1.4.8-2.8 1.4-4.5 1.4-1.4 0-3.1-.3-4.5-1.1-2.8-1.7-4.5-4.5-4.5-7.8v-35.6H295.7c25.3 39.6 40.5 106.9 69.6 106.9H392V354c0-5 3.9-8.9 8.9-8.9H490c5 0 8.9 3.9 8.9 8.9v89.1c0 5-3.9 8.9-8.9 8.9h-89.1c-5 0-8.9-3.9-8.9-8.9v-26.7h-26.7c-75.4 0-81.1-142.5-124.7-142.5H140.3c-8.1 30.6-35.9 53.5-69 53.5C32 327.3 0 295.3 0 256s32-71.3 71.3-71.3c33.1 0 61 22.8 69 53.5 39.1 0 43.9 9.5 74.6-60.4C255 88.7 273 95.7 323.8 95.7c7.5-20.9 27-35.6 50.4-35.6 29.5 0 53.5 23.9 53.5 53.5s-23.9 53.5-53.5 53.5c-23.4 0-42.9-14.8-50.4-35.6H294c-29.1 0-44.3 67.4-69.6 106.9h310.1v-35.6c0-3.3 1.7-6.1 4.5-7.8 2.8-1.7 6.4-1.4 8.9.3l89.1 53.5c2.8 1.1 4.5 4.1 4.5 7.2z\"],\n    \"usps\": [576, 512, [], \"f7e1\", \"M460.3 241.7c25.8-41.3 15.2-48.8-11.7-48.8h-27c-.1 0-1.5-1.4-10.9 8-11.2 5.6-37.9 6.3-37.9 8.7 0 4.5 70.3-3.1 88.1 0 9.5 1.5-1.5 20.4-4.4 32-.5 4.5 2.4 2.3 3.8.1zm-112.1 22.6c64-21.3 97.3-23.9 102-26.2 4.4-2.9-4.4-6.6-26.2-5.8-51.7 2.2-137.6 37.1-172.6 53.9l-30.7-93.3h196.6c-2.7-28.2-152.9-22.6-337.9-22.6L27 415.8c196.4-97.3 258.9-130.3 321.2-151.5zM94.7 96c253.3 53.7 330 65.7 332.1 85.2 36.4 0 45.9 0 52.4 6.6 21.1 19.7-14.6 67.7-14.6 67.7-4.4 2.9-406.4 160.2-406.4 160.2h423.1L549 96z\"],\n    \"ussunnah\": [512, 512, [], \"f407\", \"M156.8 285.1l5.7 14.4h-8.2c-1.3-3.2-3.1-7.7-3.8-9.5-2.5-6.3-1.1-8.4 0-10 1.9-2.7 3.2-4.4 3.6-5.2 0 2.2.8 5.7 2.7 10.3zm297.3 18.8c-2.1 13.8-5.7 27.1-10.5 39.7l43 23.4-44.8-18.8c-5.3 13.2-12 25.6-19.9 37.2l34.2 30.2-36.8-26.4c-8.4 11.8-18 22.6-28.7 32.3l24.9 34.7-28.1-31.8c-11 9.6-23.1 18-36.1 25.1l15.7 37.2-19.3-35.3c-13.1 6.8-27 12.1-41.6 15.9l6.7 38.4-10.5-37.4c-14.3 3.4-29.2 5.3-44.5 5.4L256 512l-1.9-38.4c-15.3-.1-30.2-2-44.5-5.3L199 505.6l6.7-38.2c-14.6-3.7-28.6-9.1-41.7-15.8l-19.2 35.1 15.6-37c-13-7-25.2-15.4-36.2-25.1l-27.9 31.6 24.7-34.4c-10.7-9.7-20.4-20.5-28.8-32.3l-36.5 26.2 33.9-29.9c-7.9-11.6-14.6-24.1-20-37.3l-44.4 18.7L67.8 344c-4.8-12.7-8.4-26.1-10.5-39.9l-51 9 50.3-14.2c-1.1-8.5-1.7-17.1-1.7-25.9 0-4.7.2-9.4.5-14.1L0 256l56-2.8c1.3-13.1 3.8-25.8 7.5-38.1L6.4 199l58.9 10.4c4-12 9.1-23.5 15.2-34.4l-55.1-30 58.3 24.6C90 159 97.2 149.2 105.3 140L55.8 96.4l53.9 38.7c8.1-8.6 17-16.5 26.6-23.6l-40-55.6 45.6 51.6c9.5-6.6 19.7-12.3 30.3-17.2l-27.3-64.9 33.8 62.1c10.5-4.4 21.4-7.9 32.7-10.4L199 6.4l19.5 69.2c11-2.1 22.3-3.2 33.8-3.4L256 0l3.6 72.2c11.5.2 22.8 1.4 33.8 3.5L313 6.4l-12.4 70.7c11.3 2.6 22.2 6.1 32.6 10.5l33.9-62.2-27.4 65.1c10.6 4.9 20.7 10.7 30.2 17.2l45.8-51.8-40.1 55.9c9.5 7.1 18.4 15 26.5 23.6l54.2-38.9-49.7 43.9c8 9.1 15.2 18.9 21.5 29.4l58.7-24.7-55.5 30.2c6.1 10.9 11.1 22.3 15.1 34.3l59.3-10.4-57.5 16.2c3.7 12.2 6.2 24.9 7.5 37.9L512 256l-56 2.8c.3 4.6.5 9.3.5 14.1 0 8.7-.6 17.3-1.6 25.8l50.7 14.3-51.5-9.1zm-21.8-31c0-97.5-79-176.5-176.5-176.5s-176.5 79-176.5 176.5 79 176.5 176.5 176.5 176.5-79 176.5-176.5zm-24 0c0 84.3-68.3 152.6-152.6 152.6s-152.6-68.3-152.6-152.6 68.3-152.6 152.6-152.6 152.6 68.3 152.6 152.6zM195 241c0 2.1 1.3 3.8 3.6 5.1 3.3 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.5 6.8-9.6 10.9-9.6 12.6zm-40.7-19c0 2.1 1.3 3.8 3.6 5.1 3.5 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.5 6.8-9.6 10.9-9.6 12.6zm-19 0c0 2.1 1.3 3.8 3.6 5.1 3.3 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.4 6.8-9.6 10.9-9.6 12.6zm204.9 87.9c-8.4-3-8.7-6.8-8.7-15.6V182c-8.2 12.5-14.2 18.6-18 18.6 6.3 14.4 9.5 23.9 9.5 28.3v64.3c0 2.2-2.2 6.5-4.7 6.5h-18c-2.8-7.5-10.2-26.9-15.3-40.3-2 2.5-7.2 9.2-10.7 13.7 2.4 1.6 4.1 3.6 5.2 6.3 2.6 6.7 6.4 16.5 7.9 20.2h-9.2c-3.9-10.4-9.6-25.4-11.8-31.1-2 2.5-7.2 9.2-10.7 13.7 2.4 1.6 4.1 3.6 5.2 6.3.8 2 2.8 7.3 4.3 10.9H256c-1.5-4.1-5.6-14.6-8.4-22-2 2.5-7.2 9.2-10.7 13.7 2.5 1.6 4.3 3.6 5.2 6.3.2.6.5 1.4.6 1.7H225c-4.6-13.9-11.4-27.7-11.4-34.1 0-2.2.3-5.1 1.1-8.2-8.8 10.8-14 15.9-14 25 0 7.5 10.4 28.3 10.4 33.3 0 1.7-.5 3.3-1.4 4.9-9.6-12.7-15.5-20.7-18.8-20.7h-12l-11.2-28c-3.8-9.6-5.7-16-5.7-18.8 0-3.8.5-7.7 1.7-12.2-1 1.3-3.7 4.7-5.5 7.1-.8-2.1-3.1-7.7-4.6-11.5-2.1 2.5-7.5 9.1-11.2 13.6.9 2.3 3.3 8.1 4.9 12.2-2.5 3.3-9.1 11.8-13.6 17.7-4 5.3-5.8 13.3-2.7 21.8 2.5 6.7 2 7.9-1.7 14.1H191c5.5 0 14.3 14 15.5 22 13.2-16 15.4-19.6 16.8-21.6h107c3.9 0 7.2-1.9 9.9-5.8zm20.1-26.6V181.7c-9 12.5-15.9 18.6-20.7 18.6 7.1 14.4 10.7 23.9 10.7 28.3v66.3c0 17.5 8.6 20.4 24 20.4 8.1 0 12.5-.8 13.7-2.7-4.3-1.6-7.6-2.5-9.9-3.3-8.1-3.2-17.8-7.4-17.8-26z\"],\n    \"vaadin\": [448, 512, [], \"f408\", \"M224.5 140.7c1.5-17.6 4.9-52.7 49.8-52.7h98.6c20.7 0 32.1-7.8 32.1-21.6V54.1c0-12.2 9.3-22.1 21.5-22.1S448 41.9 448 54.1v36.5c0 42.9-21.5 62-66.8 62H280.7c-30.1 0-33 14.7-33 27.1 0 1.3-.1 2.5-.2 3.7-.7 12.3-10.9 22.2-23.4 22.2s-22.7-9.8-23.4-22.2c-.1-1.2-.2-2.4-.2-3.7 0-12.3-3-27.1-33-27.1H66.8c-45.3 0-66.8-19.1-66.8-62V54.1C0 41.9 9.4 32 21.6 32s21.5 9.9 21.5 22.1v12.3C43.1 80.2 54.5 88 75.2 88h98.6c44.8 0 48.3 35.1 49.8 52.7h.9zM224 456c11.5 0 21.4-7 25.7-16.3 1.1-1.8 97.1-169.6 98.2-171.4 11.9-19.6-3.2-44.3-27.2-44.3-13.9 0-23.3 6.4-29.8 20.3L224 362l-66.9-117.7c-6.4-13.9-15.9-20.3-29.8-20.3-24 0-39.1 24.6-27.2 44.3 1.1 1.9 97.1 169.6 98.2 171.4 4.3 9.3 14.2 16.3 25.7 16.3z\"],\n    \"viacoin\": [384, 512, [], \"f237\", \"M384 32h-64l-80.7 192h-94.5L64 32H0l48 112H0v48h68.5l13.8 32H0v48h102.8L192 480l89.2-208H384v-48h-82.3l13.8-32H384v-48h-48l48-112zM192 336l-27-64h54l-27 64z\"],\n    \"viadeo\": [448, 512, [], \"f2a9\", \"M276.2 150.5v.7C258.3 98.6 233.6 47.8 205.4 0c43.3 29.2 67 100 70.8 150.5zm32.7 121.7c7.6 18.2 11 37.5 11 57 0 77.7-57.8 141-137.8 139.4l3.8-.3c74.2-46.7 109.3-118.6 109.3-205.1 0-38.1-6.5-75.9-18.9-112 1 11.7 1 23.7 1 35.4 0 91.8-18.1 241.6-116.6 280C95 455.2 49.4 398 49.4 329.2c0-75.6 57.4-142.3 135.4-142.3 16.8 0 33.7 3.1 49.1 9.6 1.7-15.1 6.5-29.9 13.4-43.3-19.9-7.2-41.2-10.7-62.5-10.7-161.5 0-238.7 195.9-129.9 313.7 67.9 74.6 192 73.9 259.8 0 56.6-61.3 60.9-142.4 36.4-201-12.7 8-27.1 13.9-42.2 17zM418.1 11.7c-31 66.5-81.3 47.2-115.8 80.1-12.4 12-20.6 34-20.6 50.5 0 14.1 4.5 27.1 12 38.8 47.4-11 98.3-46 118.2-90.7-.7 5.5-4.8 14.4-7.2 19.2-20.3 35.7-64.6 65.6-99.7 84.9 14.8 14.4 33.7 25.8 55 25.8 79 0 110.1-134.6 58.1-208.6z\"],\n    \"viadeo-square\": [448, 512, [], \"f2aa\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM280.7 381.2c-42.4 46.2-120 46.6-162.4 0-68-73.6-19.8-196.1 81.2-196.1 13.3 0 26.6 2.1 39.1 6.7-4.3 8.4-7.3 17.6-8.4 27.1-9.7-4.1-20.2-6-30.7-6-48.8 0-84.6 41.7-84.6 88.9 0 43 28.5 78.7 69.5 85.9 61.5-24 72.9-117.6 72.9-175 0-7.3 0-14.8-.6-22.1-11.2-32.9-26.6-64.6-44.2-94.5 27.1 18.3 41.9 62.5 44.2 94.1v.4c7.7 22.5 11.8 46.2 11.8 70 0 54.1-21.9 99-68.3 128.2l-2.4.2c50 1 86.2-38.6 86.2-87.2 0-12.2-2.1-24.3-6.9-35.7 9.5-1.9 18.5-5.6 26.4-10.5 15.3 36.6 12.6 87.3-22.8 125.6zM309 233.7c-13.3 0-25.1-7.1-34.4-16.1 21.9-12 49.6-30.7 62.3-53 1.5-3 4.1-8.6 4.5-12-12.5 27.9-44.2 49.8-73.9 56.7-4.7-7.3-7.5-15.5-7.5-24.3 0-10.3 5.2-24.1 12.9-31.6 21.6-20.5 53-8.5 72.4-50 32.5 46.2 13.1 130.3-36.3 130.3z\"],\n    \"viber\": [512, 512, [], \"f409\", \"M444 49.9C431.3 38.2 379.9.9 265.3.4c0 0-135.1-8.1-200.9 52.3C27.8 89.3 14.9 143 13.5 209.5c-1.4 66.5-3.1 191.1 117 224.9h.1l-.1 51.6s-.8 20.9 13 25.1c16.6 5.2 26.4-10.7 42.3-27.8 8.7-9.4 20.7-23.2 29.8-33.7 82.2 6.9 145.3-8.9 152.5-11.2 16.6-5.4 110.5-17.4 125.7-142 15.8-128.6-7.6-209.8-49.8-246.5zM457.9 287c-12.9 104-89 110.6-103 115.1-6 1.9-61.5 15.7-131.2 11.2 0 0-52 62.7-68.2 79-5.3 5.3-11.1 4.8-11-5.7 0-6.9.4-85.7.4-85.7-.1 0-.1 0 0 0-101.8-28.2-95.8-134.3-94.7-189.8 1.1-55.5 11.6-101 42.6-131.6 55.7-50.5 170.4-43 170.4-43 96.9.4 143.3 29.6 154.1 39.4 35.7 30.6 53.9 103.8 40.6 211.1zm-139-80.8c.4 8.6-12.5 9.2-12.9.6-1.1-22-11.4-32.7-32.6-33.9-8.6-.5-7.8-13.4.7-12.9 27.9 1.5 43.4 17.5 44.8 46.2zm20.3 11.3c1-42.4-25.5-75.6-75.8-79.3-8.5-.6-7.6-13.5.9-12.9 58 4.2 88.9 44.1 87.8 92.5-.1 8.6-13.1 8.2-12.9-.3zm47 13.4c.1 8.6-12.9 8.7-12.9.1-.6-81.5-54.9-125.9-120.8-126.4-8.5-.1-8.5-12.9 0-12.9 73.7.5 133 51.4 133.7 139.2zM374.9 329v.2c-10.8 19-31 40-51.8 33.3l-.2-.3c-21.1-5.9-70.8-31.5-102.2-56.5-16.2-12.8-31-27.9-42.4-42.4-10.3-12.9-20.7-28.2-30.8-46.6-21.3-38.5-26-55.7-26-55.7-6.7-20.8 14.2-41 33.3-51.8h.2c9.2-4.8 18-3.2 23.9 3.9 0 0 12.4 14.8 17.7 22.1 5 6.8 11.7 17.7 15.2 23.8 6.1 10.9 2.3 22-3.7 26.6l-12 9.6c-6.1 4.9-5.3 14-5.3 14s17.8 67.3 84.3 84.3c0 0 9.1.8 14-5.3l9.6-12c4.6-6 15.7-9.8 26.6-3.7 14.7 8.3 33.4 21.2 45.8 32.9 7 5.7 8.6 14.4 3.8 23.6z\"],\n    \"vimeo\": [448, 512, [], \"f40a\", \"M403.2 32H44.8C20.1 32 0 52.1 0 76.8v358.4C0 459.9 20.1 480 44.8 480h358.4c24.7 0 44.8-20.1 44.8-44.8V76.8c0-24.7-20.1-44.8-44.8-44.8zM377 180.8c-1.4 31.5-23.4 74.7-66 129.4-44 57.2-81.3 85.8-111.7 85.8-18.9 0-34.8-17.4-47.9-52.3-25.5-93.3-36.4-148-57.4-148-2.4 0-10.9 5.1-25.4 15.2l-15.2-19.6c37.3-32.8 72.9-69.2 95.2-71.2 25.2-2.4 40.7 14.8 46.5 51.7 20.7 131.2 29.9 151 67.6 91.6 13.5-21.4 20.8-37.7 21.8-48.9 3.5-33.2-25.9-30.9-45.8-22.4 15.9-52.1 46.3-77.4 91.2-76 33.3.9 49 22.5 47.1 64.7z\"],\n    \"vimeo-square\": [448, 512, [], \"f194\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16.2 149.6c-1.4 31.1-23.2 73.8-65.3 127.9-43.5 56.5-80.3 84.8-110.4 84.8-18.7 0-34.4-17.2-47.3-51.6-25.2-92.3-35.9-146.4-56.7-146.4-2.4 0-10.8 5-25.1 15.1L64 192c36.9-32.4 72.1-68.4 94.1-70.4 24.9-2.4 40.2 14.6 46 51.1 20.5 129.6 29.6 149.2 66.8 90.5 13.4-21.2 20.6-37.2 21.5-48.3 3.4-32.8-25.6-30.6-45.2-22.2 15.7-51.5 45.8-76.5 90.1-75.1 32.9 1 48.4 22.4 46.5 64z\"],\n    \"vimeo-v\": [448, 512, [], \"f27d\", \"M447.8 153.6c-2 43.6-32.4 103.3-91.4 179.1-60.9 79.2-112.4 118.8-154.6 118.8-26.1 0-48.2-24.1-66.3-72.3C100.3 250 85.3 174.3 56.2 174.3c-3.4 0-15.1 7.1-35.2 21.1L0 168.2c51.6-45.3 100.9-95.7 131.8-98.5 34.9-3.4 56.3 20.5 64.4 71.5 28.7 181.5 41.4 208.9 93.6 126.7 18.7-29.6 28.8-52.1 30.2-67.6 4.8-45.9-35.8-42.8-63.3-31 22-72.1 64.1-107.1 126.2-105.1 45.8 1.2 67.5 31.1 64.9 89.4z\"],\n    \"vine\": [384, 512, [], \"f1ca\", \"M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z\"],\n    \"vk\": [576, 512, [], \"f189\", \"M545 117.7c3.7-12.5 0-21.7-17.8-21.7h-58.9c-15 0-21.9 7.9-25.6 16.7 0 0-30 73.1-72.4 120.5-13.7 13.7-20 18.1-27.5 18.1-3.7 0-9.4-4.4-9.4-16.9V117.7c0-15-4.2-21.7-16.6-21.7h-92.6c-9.4 0-15 7-15 13.5 0 14.2 21.2 17.5 23.4 57.5v86.8c0 19-3.4 22.5-10.9 22.5-20 0-68.6-73.4-97.4-157.4-5.8-16.3-11.5-22.9-26.6-22.9H38.8c-16.8 0-20.2 7.9-20.2 16.7 0 15.6 20 93.1 93.1 195.5C160.4 378.1 229 416 291.4 416c37.5 0 42.1-8.4 42.1-22.9 0-66.8-3.4-73.1 15.4-73.1 8.7 0 23.7 4.4 58.7 38.1 40 40 46.6 57.9 69 57.9h58.9c16.8 0 25.3-8.4 20.4-25-11.2-34.9-86.9-106.7-90.3-111.5-8.7-11.2-6.2-16.2 0-26.2.1-.1 72-101.3 79.4-135.6z\"],\n    \"vnv\": [640, 512, [], \"f40b\", \"M104.9 352c-34.1 0-46.4-30.4-46.4-30.4L2.6 210.1S-7.8 192 13 192h32.8c10.4 0 13.2 8.7 18.8 18.1l36.7 74.5s5.2 13.1 21.1 13.1 21.1-13.1 21.1-13.1l36.7-74.5c5.6-9.5 8.4-18.1 18.8-18.1h32.8c20.8 0 10.4 18.1 10.4 18.1l-55.8 111.5S174.2 352 140 352h-35.1zm395 0c-34.1 0-46.4-30.4-46.4-30.4l-55.9-111.5S387.2 192 408 192h32.8c10.4 0 13.2 8.7 18.8 18.1l36.7 74.5s5.2 13.1 21.1 13.1 21.1-13.1 21.1-13.1l36.8-74.5c5.6-9.5 8.4-18.1 18.8-18.1H627c20.8 0 10.4 18.1 10.4 18.1l-55.9 111.5S569.3 352 535.1 352h-35.2zM337.6 192c34.1 0 46.4 30.4 46.4 30.4l55.9 111.5s10.4 18.1-10.4 18.1h-32.8c-10.4 0-13.2-8.7-18.8-18.1l-36.7-74.5s-5.2-13.1-21.1-13.1c-15.9 0-21.1 13.1-21.1 13.1l-36.7 74.5c-5.6 9.4-8.4 18.1-18.8 18.1h-32.9c-20.8 0-10.4-18.1-10.4-18.1l55.9-111.5s12.2-30.4 46.4-30.4h35.1z\"],\n    \"vuejs\": [448, 512, [], \"f41f\", \"M356.9 64.3H280l-56 88.6-48-88.6H0L224 448 448 64.3h-91.1zm-301.2 32h53.8L224 294.5 338.4 96.3h53.8L224 384.5 55.7 96.3z\"],\n    \"waze\": [512, 512, [], \"f83f\", \"M502.17 201.67C516.69 287.53 471.23 369.59 389 409.8c13 34.1-12.4 70.2-48.32 70.2a51.68 51.68 0 0 1-51.57-49c-6.44.19-64.2 0-76.33-.64A51.69 51.69 0 0 1 159 479.92c-33.86-1.36-57.95-34.84-47-67.92-37.21-13.11-72.54-34.87-99.62-70.8-13-17.28-.48-41.8 20.84-41.8 46.31 0 32.22-54.17 43.15-110.26C94.8 95.2 193.12 32 288.09 32c102.48 0 197.15 70.67 214.08 169.67zM373.51 388.28c42-19.18 81.33-56.71 96.29-102.14 40.48-123.09-64.15-228-181.71-228-83.45 0-170.32 55.42-186.07 136-9.53 48.91 5 131.35-68.75 131.35C58.21 358.6 91.6 378.11 127 389.54c24.66-21.8 63.87-15.47 79.83 14.34 14.22 1 79.19 1.18 87.9.82a51.69 51.69 0 0 1 78.78-16.42zM205.12 187.13c0-34.74 50.84-34.75 50.84 0s-50.84 34.74-50.84 0zm116.57 0c0-34.74 50.86-34.75 50.86 0s-50.86 34.75-50.86 0zm-122.61 70.69c-3.44-16.94 22.18-22.18 25.62-5.21l.06.28c4.14 21.42 29.85 44 64.12 43.07 35.68-.94 59.25-22.21 64.11-42.77 4.46-16.05 28.6-10.36 25.47 6-5.23 22.18-31.21 62-91.46 62.9-42.55 0-80.88-27.84-87.9-64.25z\"],\n    \"weebly\": [512, 512, [], \"f5cc\", \"M425.09 65.83c-39.88 0-73.28 25.73-83.66 64.33-18.16-58.06-65.5-64.33-84.95-64.33-19.78 0-66.8 6.28-85.28 64.33-10.38-38.6-43.45-64.33-83.66-64.33C38.59 65.83 0 99.72 0 143.03c0 28.96 4.18 33.27 77.17 233.48 22.37 60.57 67.77 69.35 92.74 69.35 39.23 0 70.04-19.46 85.93-53.98 15.89 34.83 46.69 54.29 85.93 54.29 24.97 0 70.36-9.1 92.74-69.67 76.55-208.65 77.5-205.58 77.5-227.2.63-48.32-36.01-83.47-86.92-83.47zm26.34 114.81l-65.57 176.44c-7.92 21.49-21.22 37.22-46.24 37.22-23.44 0-37.38-12.41-44.03-33.9l-39.28-117.42h-.95L216.08 360.4c-6.96 21.5-20.9 33.6-44.02 33.6-25.02 0-38.33-15.74-46.24-37.22L60.88 181.55c-5.38-14.83-7.92-23.91-7.92-34.5 0-16.34 15.84-29.36 38.33-29.36 18.69 0 31.99 11.8 36.11 29.05l44.03 139.82h.95l44.66-136.79c6.02-19.67 16.47-32.08 38.96-32.08s32.94 12.11 38.96 32.08l44.66 136.79h.95l44.03-139.82c4.12-17.25 17.42-29.05 36.11-29.05 22.17 0 38.33 13.32 38.33 35.71-.32 7.87-4.12 16.04-7.61 27.24z\"],\n    \"weibo\": [512, 512, [], \"f18a\", \"M407 177.6c7.6-24-13.4-46.8-37.4-41.7-22 4.8-28.8-28.1-7.1-32.8 50.1-10.9 92.3 37.1 76.5 84.8-6.8 21.2-38.8 10.8-32-10.3zM214.8 446.7C108.5 446.7 0 395.3 0 310.4c0-44.3 28-95.4 76.3-143.7C176 67 279.5 65.8 249.9 161c-4 13.1 12.3 5.7 12.3 6 79.5-33.6 140.5-16.8 114 51.4-3.7 9.4 1.1 10.9 8.3 13.1 135.7 42.3 34.8 215.2-169.7 215.2zm143.7-146.3c-5.4-55.7-78.5-94-163.4-85.7-84.8 8.6-148.8 60.3-143.4 116s78.5 94 163.4 85.7c84.8-8.6 148.8-60.3 143.4-116zM347.9 35.1c-25.9 5.6-16.8 43.7 8.3 38.3 72.3-15.2 134.8 52.8 111.7 124-7.4 24.2 29.1 37 37.4 12 31.9-99.8-55.1-195.9-157.4-174.3zm-78.5 311c-17.1 38.8-66.8 60-109.1 46.3-40.8-13.1-58-53.4-40.3-89.7 17.7-35.4 63.1-55.4 103.4-45.1 42 10.8 63.1 50.2 46 88.5zm-86.3-30c-12.9-5.4-30 .3-38 12.9-8.3 12.9-4.3 28 8.6 34 13.1 6 30.8.3 39.1-12.9 8-13.1 3.7-28.3-9.7-34zm32.6-13.4c-5.1-1.7-11.4.6-14.3 5.4-2.9 5.1-1.4 10.6 3.7 12.9 5.1 2 11.7-.3 14.6-5.4 2.8-5.2 1.1-10.9-4-12.9z\"],\n    \"weixin\": [576, 512, [], \"f1d7\", \"M385.2 167.6c6.4 0 12.6.3 18.8 1.1C387.4 90.3 303.3 32 207.7 32 100.5 32 13 104.8 13 197.4c0 53.4 29.3 97.5 77.9 131.6l-19.3 58.6 68-34.1c24.4 4.8 43.8 9.7 68.2 9.7 6.2 0 12.1-.3 18.3-.8-4-12.9-6.2-26.6-6.2-40.8-.1-84.9 72.9-154 165.3-154zm-104.5-52.9c14.5 0 24.2 9.7 24.2 24.4 0 14.5-9.7 24.2-24.2 24.2-14.8 0-29.3-9.7-29.3-24.2.1-14.7 14.6-24.4 29.3-24.4zm-136.4 48.6c-14.5 0-29.3-9.7-29.3-24.2 0-14.8 14.8-24.4 29.3-24.4 14.8 0 24.4 9.7 24.4 24.4 0 14.6-9.6 24.2-24.4 24.2zM563 319.4c0-77.9-77.9-141.3-165.4-141.3-92.7 0-165.4 63.4-165.4 141.3S305 460.7 397.6 460.7c19.3 0 38.9-5.1 58.6-9.9l53.4 29.3-14.8-48.6C534 402.1 563 363.2 563 319.4zm-219.1-24.5c-9.7 0-19.3-9.7-19.3-19.6 0-9.7 9.7-19.3 19.3-19.3 14.8 0 24.4 9.7 24.4 19.3 0 10-9.7 19.6-24.4 19.6zm107.1 0c-9.7 0-19.3-9.7-19.3-19.6 0-9.7 9.7-19.3 19.3-19.3 14.5 0 24.4 9.7 24.4 19.3.1 10-9.9 19.6-24.4 19.6z\"],\n    \"whatsapp\": [448, 512, [], \"f232\", \"M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222 0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222 0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2 0-101.7 82.8-184.5 184.6-184.5 49.3 0 95.6 19.2 130.4 54.1 34.8 34.9 56.2 81.2 56.1 130.5 0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18-5.1-1.9-8.8-2.8-12.5 2.8-3.7 5.6-14.3 18-17.6 21.8-3.2 3.7-6.5 4.2-12 1.4-32.6-16.3-54-29.1-75.5-66-5.7-9.8 5.7-9.1 16.3-30.3 1.8-3.7.9-6.9-.5-9.7-1.4-2.8-12.5-30.1-17.1-41.2-4.5-10.8-9.1-9.3-12.5-9.5-3.2-.2-6.9-.2-10.6-.2-3.7 0-9.7 1.4-14.8 6.9-5.1 5.6-19.4 19-19.4 46.3 0 27.3 19.9 53.7 22.6 57.4 2.8 3.7 39.1 59.7 94.8 83.8 35.2 15.2 49 16.5 66.6 13.9 10.7-1.6 32.8-13.4 37.4-26.4 4.6-13 4.6-24.1 3.2-26.4-1.3-2.5-5-3.9-10.5-6.6z\"],\n    \"whatsapp-square\": [448, 512, [], \"f40c\", \"M224 122.8c-72.7 0-131.8 59.1-131.9 131.8 0 24.9 7 49.2 20.2 70.1l3.1 5-13.3 48.6 49.9-13.1 4.8 2.9c20.2 12 43.4 18.4 67.1 18.4h.1c72.6 0 133.3-59.1 133.3-131.8 0-35.2-15.2-68.3-40.1-93.2-25-25-58-38.7-93.2-38.7zm77.5 188.4c-3.3 9.3-19.1 17.7-26.7 18.8-12.6 1.9-22.4.9-47.5-9.9-39.7-17.2-65.7-57.2-67.7-59.8-2-2.6-16.2-21.5-16.2-41s10.2-29.1 13.9-33.1c3.6-4 7.9-5 10.6-5 2.6 0 5.3 0 7.6.1 2.4.1 5.7-.9 8.9 6.8 3.3 7.9 11.2 27.4 12.2 29.4s1.7 4.3.3 6.9c-7.6 15.2-15.7 14.6-11.6 21.6 15.3 26.3 30.6 35.4 53.9 47.1 4 2 6.3 1.7 8.6-1 2.3-2.6 9.9-11.6 12.5-15.5 2.6-4 5.3-3.3 8.9-2 3.6 1.3 23.1 10.9 27.1 12.9s6.6 3 7.6 4.6c.9 1.9.9 9.9-2.4 19.1zM400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM223.9 413.2c-26.6 0-52.7-6.7-75.8-19.3L64 416l22.5-82.2c-13.9-24-21.2-51.3-21.2-79.3C65.4 167.1 136.5 96 223.9 96c42.4 0 82.2 16.5 112.2 46.5 29.9 30 47.9 69.8 47.9 112.2 0 87.4-72.7 158.5-160.1 158.5z\"],\n    \"whmcs\": [448, 512, [], \"f40d\", \"M448 161v-21.3l-28.5-8.8-2.2-10.4 20.1-20.7L427 80.4l-29 7.5-7.2-7.5 7.5-28.2-19.1-11.6-21.3 21-10.7-3.2-7-26.4h-22.6l-6.2 26.4-12.1 3.2-19.7-21-19.4 11 8.1 27.7-8.1 8.4-28.5-7.5-11 19.1 20.7 21-2.9 10.4-28.5 7.8-.3 21.7 28.8 7.5 2.4 12.1-20.1 19.9 10.4 18.5 29.6-7.5 7.2 8.6-8.1 26.9 19.9 11.6 19.4-20.4 11.6 2.9 6.7 28.5 22.6.3 6.7-28.8 11.6-3.5 20.7 21.6 20.4-12.1-8.8-28 7.8-8.1 28.8 8.8 10.3-20.1-20.9-18.8 2.2-12.1 29.1-7zm-119.2 45.2c-31.3 0-56.8-25.4-56.8-56.8s25.4-56.8 56.8-56.8 56.8 25.4 56.8 56.8c0 31.5-25.4 56.8-56.8 56.8zm72.3 16.4l46.9 14.5V277l-55.1 13.4-4.1 22.7 38.9 35.3-19.2 37.9-54-16.7-14.6 15.2 16.7 52.5-38.3 22.7-38.9-40.5-21.7 6.6-12.6 54-42.4-.5-12.6-53.6-21.7-5.6-36.4 38.4-37.4-21.7 15.2-50.5-13.7-16.1-55.5 14.1-19.7-34.8 37.9-37.4-4.8-22.8-54-14.1.5-40.9L54 219.9l5.7-19.7-38.9-39.4L41.5 125l53.6 14.1 15.2-15.7-15.2-52 36.4-20.7 36.8 39.4L191 84l11.6-52H245l11.6 45.9L234 72l-6.3-1.7-3.3 5.7-11 19.1-3.3 5.6 4.6 4.6 17.2 17.4-.3 1-23.8 6.5-6.2 1.7-.1 6.4-.2 12.9C153.8 161.6 118 204 118 254.7c0 58.3 47.3 105.7 105.7 105.7 50.5 0 92.7-35.4 103.2-82.8l13.2.2 6.9.1 1.6-6.7 5.6-24 1.9-.6 17.1 17.8 4.7 4.9 5.8-3.4 20.4-12.1 5.8-3.5-2-6.5-6.8-21.2z\"],\n    \"wikipedia-w\": [640, 512, [], \"f266\", \"M640 51.2l-.3 12.2c-28.1.8-45 15.8-55.8 40.3-25 57.8-103.3 240-155.3 358.6H415l-81.9-193.1c-32.5 63.6-68.3 130-99.2 193.1-.3.3-15 0-15-.3C172 352.3 122.8 243.4 75.8 133.4 64.4 106.7 26.4 63.4.2 63.7c0-3.1-.3-10-.3-14.2h161.9v13.9c-19.2 1.1-52.8 13.3-43.3 34.2 21.9 49.7 103.6 240.3 125.6 288.6 15-29.7 57.8-109.2 75.3-142.8-13.9-28.3-58.6-133.9-72.8-160-9.7-17.8-36.1-19.4-55.8-19.7V49.8l142.5.3v13.1c-19.4.6-38.1 7.8-29.4 26.1 18.9 40 30.6 68.1 48.1 104.7 5.6-10.8 34.7-69.4 48.1-100.8 8.9-20.6-3.9-28.6-38.6-29.4.3-3.6 0-10.3.3-13.6 44.4-.3 111.1-.3 123.1-.6v13.6c-22.5.8-45.8 12.8-58.1 31.7l-59.2 122.8c6.4 16.1 63.3 142.8 69.2 156.7L559.2 91.8c-8.6-23.1-36.4-28.1-47.2-28.3V49.6l127.8 1.1.2.5z\"],\n    \"windows\": [448, 512, [], \"f17a\", \"M0 93.7l183.6-25.3v177.4H0V93.7zm0 324.6l183.6 25.3V268.4H0v149.9zm203.8 28L448 480V268.4H203.8v177.9zm0-380.6v180.1H448V32L203.8 65.7z\"],\n    \"wix\": [640, 512, [], \"f5cf\", \"M393.38 131.69c0 13.03 2.08 32.69-28.68 43.83-9.52 3.45-15.95 9.66-15.95 9.66 0-31 4.72-42.22 17.4-48.86 9.75-5.11 27.23-4.63 27.23-4.63zm-115.8 35.54l-34.24 132.66-28.48-108.57c-7.69-31.99-20.81-48.53-48.43-48.53-27.37 0-40.66 16.18-48.43 48.53L89.52 299.89 55.28 167.23C49.73 140.51 23.86 128.96 0 131.96l65.57 247.93s21.63 1.56 32.46-3.96c14.22-7.25 20.98-12.84 29.59-46.57 7.67-30.07 29.11-118.41 31.12-124.7 4.76-14.94 11.09-13.81 15.4 0 1.97 6.3 23.45 94.63 31.12 124.7 8.6 33.73 15.37 39.32 29.59 46.57 10.82 5.52 32.46 3.96 32.46 3.96l65.57-247.93c-24.42-3.07-49.82 8.93-55.3 35.27zm115.78 5.21s-4.1 6.34-13.46 11.57c-6.01 3.36-11.78 5.64-17.97 8.61-15.14 7.26-13.18 13.95-13.18 35.2v152.07s16.55 2.09 27.37-3.43c13.93-7.1 17.13-13.95 17.26-44.78V181.41l-.02.01v-8.98zm163.44 84.08L640 132.78s-35.11-5.98-52.5 9.85c-13.3 12.1-24.41 29.55-54.18 72.47-.47.73-6.25 10.54-13.07 0-29.29-42.23-40.8-60.29-54.18-72.47-17.39-15.83-52.5-9.85-52.5-9.85l83.2 123.74-82.97 123.36s36.57 4.62 53.95-11.21c11.49-10.46 17.58-20.37 52.51-70.72 6.81-10.52 12.57-.77 13.07 0 29.4 42.38 39.23 58.06 53.14 70.72 17.39 15.83 53.32 11.21 53.32 11.21L556.8 256.52z\"],\n    \"wizards-of-the-coast\": [640, 512, [], \"f730\", \"M219.19 345.69c-1.9 1.38-11.07 8.44-.26 23.57 4.64 6.42 14.11 12.79 21.73 6.55 6.5-4.88 7.35-12.92.26-23.04-5.47-7.76-14.28-12.88-21.73-7.08zm336.75 75.94c-.34 1.7-.55 1.67.79 0 2.09-4.19 4.19-10.21 4.98-19.9 3.14-38.49-40.33-71.49-101.34-78.03-54.73-6.02-124.38 9.17-188.8 60.49l-.26 1.57c2.62 4.98 4.98 10.74 3.4 21.21l.79.26c63.89-58.4 131.19-77.25 184.35-73.85 58.4 3.67 100.03 34.04 100.03 68.08-.01 9.96-2.63 15.72-3.94 20.17zM392.28 240.42c.79 7.07 4.19 10.21 9.17 10.47 5.5.26 9.43-2.62 10.47-6.55.79-3.4 2.09-29.85 2.09-29.85s-11.26 6.55-14.93 10.47c-3.66 3.68-7.33 8.39-6.8 15.46zm-50.02-151.1C137.75 89.32 13.1 226.8.79 241.2c-1.05.52-1.31.79.79 1.31 60.49 16.5 155.81 81.18 196.13 202.16l1.05.26c55.25-69.92 140.88-128.05 236.99-128.05 80.92 0 130.15 42.16 130.15 80.39 0 18.33-6.55 33.52-22.26 46.35 0 .96-.2.79.79.79 14.66-10.74 27.5-28.8 27.5-48.18 0-22.78-12.05-38.23-12.05-38.23 7.07 7.07 10.74 16.24 10.74 16.24 5.76-40.85 26.97-62.32 26.97-62.32-2.36-9.69-6.81-17.81-6.81-17.81 7.59 8.12 14.4 27.5 14.4 41.37 0 10.47-3.4 22.78-12.57 31.95l.26.52c8.12-4.98 16.5-16.76 16.5-37.97 0-15.71-4.71-25.92-4.71-25.92 5.76-5.24 11.26-9.17 15.97-11.78.79 3.4 2.09 9.69 2.36 14.93 0 1.05.79 1.83 1.05 0 .79-5.76-.26-16.24-.26-16.5 6.02-3.14 9.69-4.45 9.69-4.45C617.74 176 489.43 89.32 342.26 89.32zm-99.24 289.62c-11.06 8.99-24.2 4.08-30.64-4.19-7.45-9.58-6.76-24.09 4.19-32.47 14.85-11.35 27.08-.49 31.16 5.5.28.39 12.13 16.57-4.71 31.16zm2.09-136.43l9.43-17.81 11.78 70.96-12.57 6.02-24.62-28.8 14.14-26.71 3.67 4.45-1.83-8.11zm18.59 117.58l-.26-.26c2.05-4.1-2.5-6.61-17.54-31.69-1.31-2.36-3.14-2.88-4.45-2.62l-.26-.52c7.86-5.76 15.45-10.21 25.4-15.71l.52.26c1.31 1.83 2.09 2.88 3.4 4.71l-.26.52c-1.05-.26-2.36-.79-5.24.26-2.09.79-7.86 3.67-12.31 7.59v1.31c1.57 2.36 3.93 6.55 5.76 9.69h.26c10.05-6.28 7.56-4.55 11.52-7.86h.26c.52 1.83.52 1.83 1.83 5.5l-.26.26c-3.06.61-4.65.34-11.52 5.5v.26c9.46 17.02 11.01 16.75 12.57 15.97l.26.26c-2.34 1.59-6.27 4.21-9.68 6.57zm55.26-32.47c-3.14 1.57-6.02 2.88-9.95 4.98l-.26-.26c1.29-2.59 1.16-2.71-11.78-32.47l-.26-.26c-.15 0-8.9 3.65-9.95 7.33h-.52l-1.05-5.76.26-.52c7.29-4.56 25.53-11.64 27.76-12.57l.52.26 3.14 4.98-.26.52c-3.53-1.76-7.35.76-12.31 2.62v.26c12.31 32.01 12.67 30.64 14.66 30.64v.25zm44.77-16.5c-4.19 1.05-5.24 1.31-9.69 2.88l-.26-.26.52-4.45c-1.05-3.4-3.14-11.52-3.67-13.62l-.26-.26c-3.4.79-8.9 2.62-12.83 3.93l-.26.26c.79 2.62 3.14 9.95 4.19 13.88.79 2.36 1.83 2.88 2.88 3.14v.52c-3.67 1.05-7.07 2.62-10.21 3.93l-.26-.26c1.05-1.31 1.05-2.88.26-4.98-1.05-3.14-8.12-23.83-9.17-27.23-.52-1.83-1.57-3.14-2.62-3.14v-.52c3.14-1.05 6.02-2.09 10.74-3.4l.26.26-.26 4.71c1.31 3.93 2.36 7.59 3.14 9.69h.26c3.93-1.31 9.43-2.88 12.83-3.93l.26-.26-2.62-9.43c-.52-1.83-1.05-3.4-2.62-3.93v-.26c4.45-1.05 7.33-1.83 10.74-2.36l.26.26c-1.05 1.31-1.05 2.88-.52 4.45 1.57 6.28 4.71 20.43 6.28 26.45.54 2.62 1.85 3.41 2.63 3.93zm32.21-6.81l-.26.26c-4.71.52-14.14 2.36-22.52 4.19l-.26-.26.79-4.19c-1.57-7.86-3.4-18.59-4.98-26.19-.26-1.83-.79-2.88-2.62-3.67l.79-.52c9.17-1.57 20.16-2.36 24.88-2.62l.26.26c.52 2.36.79 3.14 1.57 5.5l-.26.26c-1.14-1.14-3.34-3.2-16.24-.79l-.26.26c.26 1.57 1.05 6.55 1.57 9.95l.26.26c9.52-1.68 4.76-.06 10.74-2.36h.26c0 1.57-.26 1.83-.26 5.24h-.26c-4.81-1.03-2.15-.9-10.21 0l-.26.26c.26 2.09 1.57 9.43 2.09 12.57l.26.26c1.15.38 14.21-.65 16.24-4.71h.26c-.53 2.38-1.05 4.21-1.58 6.04zm10.74-44.51c-4.45 2.36-8.12 2.88-11 2.88-.25.02-11.41 1.09-17.54-9.95-6.74-10.79-.98-25.2 5.5-31.69 8.8-8.12 23.35-10.1 28.54-17.02 8.03-10.33-13.04-22.31-29.59-5.76l-2.62-2.88 5.24-16.24c25.59-1.57 45.2-3.04 50.02 16.24.79 3.14 0 9.43-.26 12.05 0 2.62-1.83 18.85-2.09 23.04-.52 4.19-.79 18.33-.79 20.69.26 2.36.52 4.19 1.57 5.5 1.57 1.83 5.76 1.83 5.76 1.83l-.79 4.71c-11.82-1.07-10.28-.59-20.43-1.05-3.22-5.15-2.23-3.28-4.19-7.86 0 .01-4.19 3.94-7.33 5.51zm37.18 21.21c-6.35-10.58-19.82-7.16-21.73 5.5-2.63 17.08 14.3 19.79 20.69 10.21l.26.26c-.52 1.83-1.83 6.02-1.83 6.28l-.52.52c-10.3 6.87-28.5-2.5-25.66-18.59 1.94-10.87 14.44-18.93 28.8-9.95l.26.52c0 1.06-.27 3.41-.27 5.25zm5.77-87.73v-6.55c.69 0 19.65 3.28 27.76 7.33l-1.57 17.54s10.21-9.43 15.45-10.74c5.24-1.57 14.93 7.33 14.93 7.33l-11.26 11.26c-12.07-6.35-19.59-.08-20.69.79-5.29 38.72-8.6 42.17 4.45 46.09l-.52 4.71c-17.55-4.29-18.53-4.5-36.92-7.33l.79-4.71c7.25 0 7.48-5.32 7.59-6.81 0 0 4.98-53.16 4.98-55.25-.02-2.87-4.99-3.66-4.99-3.66zm10.99 114.44c-8.12-2.09-14.14-11-10.74-20.69 3.14-9.43 12.31-12.31 18.85-10.21 9.17 2.62 12.83 11.78 10.74 19.38-2.61 8.9-9.42 13.87-18.85 11.52zm42.16 9.69c-2.36-.52-7.07-2.36-8.64-2.88v-.26l1.57-1.83c.59-8.24.59-7.27.26-7.59-4.82-1.81-6.66-2.36-7.07-2.36-1.31 1.83-2.88 4.45-3.67 5.5l-.79 3.4v.26c-1.31-.26-3.93-1.31-6.02-1.57v-.26l2.62-1.83c3.4-4.71 9.95-14.14 13.88-20.16v-2.09l.52-.26c2.09.79 5.5 2.09 7.59 2.88.48.48.18-1.87-1.05 25.14-.24 1.81.02 2.6.8 3.91zm-4.71-89.82c11.25-18.27 30.76-16.19 34.04-3.4L539.7 198c2.34-6.25-2.82-9.9-4.45-11.26l1.83-3.67c12.22 10.37 16.38 13.97 22.52 20.43-25.91 73.07-30.76 80.81-24.62 84.32l-1.83 4.45c-6.37-3.35-8.9-4.42-17.81-8.64l2.09-6.81c-.26-.26-3.93 3.93-9.69 3.67-19.06-1.3-22.89-31.75-9.67-52.9zm29.33 79.34c0-5.71-6.34-7.89-7.86-5.24-1.31 2.09 1.05 4.98 2.88 8.38 1.57 2.62 2.62 6.28 1.05 9.43-2.64 6.34-12.4 5.31-15.45-.79 0-.7-.27.09 1.83-4.71l.79-.26c-.57 5.66 6.06 9.61 8.38 4.98 1.05-2.09-.52-5.5-2.09-8.38-1.57-2.62-3.67-6.28-1.83-9.69 2.72-5.06 11.25-4.47 14.66 2.36v.52l-2.36 3.4zm21.21 13.36c-1.96-3.27-.91-2.14-4.45-4.71h-.26c-2.36 4.19-5.76 10.47-8.64 16.24-1.31 2.36-1.05 3.4-.79 3.93l-.26.26-5.76-4.45.26-.26 2.09-1.31c3.14-5.76 6.55-12.05 9.17-17.02v-.26c-2.64-1.98-1.22-1.51-6.02-1.83v-.26l3.14-3.4h.26c3.67 2.36 9.95 6.81 12.31 8.9l.26.26-1.31 3.91zm27.23-44.26l-2.88-2.88c.79-2.36 1.83-4.98 2.09-7.59.75-9.74-11.52-11.84-11.52-4.98 0 4.98 7.86 19.38 7.86 27.76 0 10.21-5.76 15.71-13.88 16.5-8.38.79-20.16-10.47-20.16-10.47l4.98-14.4 2.88 2.09c-2.97 17.8 17.68 20.37 13.35 5.24-1.06-4.02-18.75-34.2 2.09-38.23 13.62-2.36 23.04 16.5 23.04 16.5l-7.85 10.46zm35.62-10.21c-11-30.38-60.49-127.53-191.95-129.62-53.42-1.05-94.27 15.45-132.76 37.97l85.63-9.17-91.39 20.69 25.14 19.64-3.93-16.5c7.5-1.71 39.15-8.45 66.77-8.9l-22.26 80.39c13.61-.7 18.97-8.98 19.64-22.78l4.98-1.05.26 26.71c-22.46 3.21-37.3 6.69-49.49 9.95l13.09-43.21-61.54-36.66 2.36 8.12 10.21 4.98c6.28 18.59 19.38 56.56 20.43 58.66 1.95 4.28 3.16 5.78 12.05 4.45l1.05 4.98c-16.08 4.86-23.66 7.61-39.02 14.4l-2.36-4.71c4.4-2.94 8.73-3.94 5.5-12.83-23.7-62.5-21.48-58.14-22.78-59.44l2.36-4.45 33.52 67.3c-3.84-11.87 1.68 1.69-32.99-78.82l-41.9 88.51 4.71-13.88-35.88-42.16 27.76 93.48-11.78 8.38C95 228.58 101.05 231.87 93.23 231.52c-5.5-.26-13.62 5.5-13.62 5.5L74.63 231c30.56-23.53 31.62-24.33 58.4-42.68l4.19 7.07s-5.76 4.19-7.86 7.07c-5.9 9.28 1.67 13.28 61.8 75.68l-18.85-58.92 39.8-10.21 25.66 30.64 4.45-12.31-4.98-24.62 13.09-3.4.52 3.14 3.67-10.47-94.27 29.33 11.26-4.98-13.62-42.42 17.28-9.17 30.11 36.14 28.54-13.09c-1.41-7.47-2.47-14.5-4.71-19.64l17.28 13.88 4.71-2.09-59.18-42.68 23.08 11.5c18.98-6.07 25.23-7.47 32.21-9.69l2.62 11c-12.55 12.55 1.43 16.82 6.55 19.38l-13.62-61.01 12.05 28.28c4.19-1.31 7.33-2.09 7.33-2.09l2.62 8.64s-3.14 1.05-6.28 2.09l8.9 20.95 33.78-65.73-20.69 61.01c42.42-24.09 81.44-36.66 131.98-35.88 67.04 1.05 167.33 40.85 199.8 139.83.78 2.1-.01 2.63-.79.27zM203.48 152.43s1.83-.52 4.19-1.31l9.43 7.59c-.4 0-3.44-.25-11.26 2.36l-2.36-8.64zm143.76 38.5c-1.57-.6-26.46-4.81-33.26 20.69l21.73 17.02 11.53-37.71zM318.43 67.07c-58.4 0-106.05 12.05-114.96 14.4v.79c8.38 2.09 14.4 4.19 21.21 11.78l1.57.26c6.55-1.83 48.97-13.88 110.24-13.88 180.16 0 301.67 116.79 301.67 223.37v9.95c0 1.31.79 2.62 1.05.52.52-2.09.79-8.64.79-19.64.26-83.79-96.63-227.55-321.57-227.55zm211.06 169.68c1.31-5.76 0-12.31-7.33-13.09-9.62-1.13-16.14 23.79-17.02 33.52-.79 5.5-1.31 14.93 6.02 14.93 4.68-.01 9.72-.91 18.33-35.36zm-61.53 42.95c-2.62-.79-9.43-.79-12.57 10.47-1.83 6.81.52 13.35 6.02 14.66 3.67 1.05 8.9.52 11.78-10.74 2.62-9.94-1.83-13.61-5.23-14.39zM491 300.65c1.83.52 3.14 1.05 5.76 1.83 0-1.83.52-8.38.79-12.05-1.05 1.31-5.5 8.12-6.55 9.95v.27z\"],\n    \"wolf-pack-battalion\": [512, 512, [], \"f514\", \"M267.73 471.53l10.56 15.84 5.28-12.32 5.28 7V512c21.06-7.92 21.11-66.86 25.51-97.21 4.62-31.89-.88-92.81 81.37-149.11-8.88-23.61-12-49.43-2.64-80.05C421 189 447 196.21 456.43 239.73l-30.35 8.36c11.15 23 17 46.76 13.2 72.14L412 313.18l-6.16 33.43-18.47-7-8.8 33.39-19.35-7 26.39 21.11 8.8-28.15L419 364.2l7-35.63 26.39 14.52c.25-20 7-58.06-8.8-84.45l26.39 5.28c4-22.07-2.38-39.21-7.92-56.74l22.43 9.68c-.44-25.07-29.94-56.79-61.58-58.5-20.22-1.09-56.74-25.17-54.1-51.9 2-19.87 17.45-42.62 43.11-49.7-44 36.51-9.68 67.3 5.28 73.46 4.4-11.44 17.54-69.08 0-130.2-40.39 22.87-89.65 65.1-93.2 147.79l-58 38.71-3.52 93.25L369.78 220l7 7-17.59 3.52-44 38.71-15.84-5.28-28.1 49.25-3.52 119.64 21.11 15.84-32.55 15.84-32.55-15.84 21.11-15.84-3.52-119.64-28.15-49.26-15.84 5.28-44-38.71-17.58-3.51 7-7 107.33 59.82-3.52-93.25-58.06-38.71C185 65.1 135.77 22.87 95.3 0c-17.54 61.12-4.4 118.76 0 130.2 15-6.16 49.26-36.95 5.28-73.46 25.66 7.08 41.15 29.83 43.11 49.7 2.63 26.74-33.88 50.81-54.1 51.9-31.65 1.72-61.15 33.44-61.59 58.51l22.43-9.68c-5.54 17.53-11.91 34.67-7.92 56.74l26.39-5.28c-15.76 26.39-9.05 64.43-8.8 84.45l26.39-14.52 7 35.63 24.63-5.28 8.8 28.15L153.35 366 134 373l-8.8-33.43-18.47 7-6.16-33.43-27.27 7c-3.82-25.38 2-49.1 13.2-72.14l-30.35-8.36c9.4-43.52 35.47-50.77 63.34-54.1 9.36 30.62 6.24 56.45-2.64 80.05 82.25 56.3 76.75 117.23 81.37 149.11 4.4 30.35 4.45 89.29 25.51 97.21v-29.83l5.28-7 5.28 12.32 10.56-15.84 11.44 21.11 11.43-21.1zm79.17-95L331.06 366c7.47-4.36 13.76-8.42 19.35-12.32-.6 7.22-.27 13.84-3.51 22.84zm28.15-49.26c-.4 10.94-.9 21.66-1.76 31.67-7.85-1.86-15.57-3.8-21.11-7 8.24-7.94 15.55-16.32 22.87-24.68zm24.63 5.28c0-13.43-2.05-24.21-5.28-33.43a235 235 0 0 1-18.47 27.27zm3.52-80.94c19.44 12.81 27.8 33.66 29.91 56.3-12.32-4.53-24.63-9.31-36.95-10.56 5.06-12 6.65-28.14 7-45.74zm-1.76-45.74c.81 14.3 1.84 28.82 1.76 42.23 19.22-8.11 29.78-9.72 44-14.08-10.61-18.96-27.2-25.53-45.76-28.16zM165.68 376.52L181.52 366c-7.47-4.36-13.76-8.42-19.35-12.32.6 7.26.27 13.88 3.51 22.88zm-28.15-49.26c.4 10.94.9 21.66 1.76 31.67 7.85-1.86 15.57-3.8 21.11-7-8.24-7.93-15.55-16.31-22.87-24.67zm-24.64 5.28c0-13.43 2-24.21 5.28-33.43a235 235 0 0 0 18.47 27.27zm-3.52-80.94c-19.44 12.81-27.8 33.66-29.91 56.3 12.32-4.53 24.63-9.31 37-10.56-5-12-6.65-28.14-7-45.74zm1.76-45.74c-.81 14.3-1.84 28.82-1.76 42.23-19.22-8.11-29.78-9.72-44-14.08 10.63-18.95 27.23-25.52 45.76-28.15z\"],\n    \"wordpress\": [512, 512, [], \"f19a\", \"M61.7 169.4l101.5 278C92.2 413 43.3 340.2 43.3 256c0-30.9 6.6-60.1 18.4-86.6zm337.9 75.9c0-26.3-9.4-44.5-17.5-58.7-10.8-17.5-20.9-32.4-20.9-49.9 0-19.6 14.8-37.8 35.7-37.8.9 0 1.8.1 2.8.2-37.9-34.7-88.3-55.9-143.7-55.9-74.3 0-139.7 38.1-177.8 95.9 5 .2 9.7.3 13.7.3 22.2 0 56.7-2.7 56.7-2.7 11.5-.7 12.8 16.2 1.4 17.5 0 0-11.5 1.3-24.3 2l77.5 230.4L249.8 247l-33.1-90.8c-11.5-.7-22.3-2-22.3-2-11.5-.7-10.1-18.2 1.3-17.5 0 0 35.1 2.7 56 2.7 22.2 0 56.7-2.7 56.7-2.7 11.5-.7 12.8 16.2 1.4 17.5 0 0-11.5 1.3-24.3 2l76.9 228.7 21.2-70.9c9-29.4 16-50.5 16-68.7zm-139.9 29.3l-63.8 185.5c19.1 5.6 39.2 8.7 60.1 8.7 24.8 0 48.5-4.3 70.6-12.1-.6-.9-1.1-1.9-1.5-2.9l-65.4-179.2zm183-120.7c.9 6.8 1.4 14 1.4 21.9 0 21.6-4 45.8-16.2 76.2l-65 187.9C426.2 403 468.7 334.5 468.7 256c0-37-9.4-71.8-26-102.1zM504 256c0 136.8-111.3 248-248 248C119.2 504 8 392.7 8 256 8 119.2 119.2 8 256 8c136.7 0 248 111.2 248 248zm-11.4 0c0-130.5-106.2-236.6-236.6-236.6C125.5 19.4 19.4 125.5 19.4 256S125.6 492.6 256 492.6c130.5 0 236.6-106.1 236.6-236.6z\"],\n    \"wordpress-simple\": [512, 512, [], \"f411\", \"M256 8C119.3 8 8 119.2 8 256c0 136.7 111.3 248 248 248s248-111.3 248-248C504 119.2 392.7 8 256 8zM33 256c0-32.3 6.9-63 19.3-90.7l106.4 291.4C84.3 420.5 33 344.2 33 256zm223 223c-21.9 0-43-3.2-63-9.1l66.9-194.4 68.5 187.8c.5 1.1 1 2.1 1.6 3.1-23.1 8.1-48 12.6-74 12.6zm30.7-327.5c13.4-.7 25.5-2.1 25.5-2.1 12-1.4 10.6-19.1-1.4-18.4 0 0-36.1 2.8-59.4 2.8-21.9 0-58.7-2.8-58.7-2.8-12-.7-13.4 17.7-1.4 18.4 0 0 11.4 1.4 23.4 2.1l34.7 95.2L200.6 393l-81.2-241.5c13.4-.7 25.5-2.1 25.5-2.1 12-1.4 10.6-19.1-1.4-18.4 0 0-36.1 2.8-59.4 2.8-4.2 0-9.1-.1-14.4-.3C109.6 73 178.1 33 256 33c58 0 110.9 22.2 150.6 58.5-1-.1-1.9-.2-2.9-.2-21.9 0-37.4 19.1-37.4 39.6 0 18.4 10.6 33.9 21.9 52.3 8.5 14.8 18.4 33.9 18.4 61.5 0 19.1-7.3 41.2-17 72.1l-22.2 74.3-80.7-239.6zm81.4 297.2l68.1-196.9c12.7-31.8 17-57.2 17-79.9 0-8.2-.5-15.8-1.5-22.9 17.4 31.8 27.3 68.2 27.3 107 0 82.3-44.6 154.1-110.9 192.7z\"],\n    \"wpbeginner\": [512, 512, [], \"f297\", \"M462.799 322.374C519.01 386.682 466.961 480 370.944 480c-39.602 0-78.824-17.687-100.142-50.04-6.887.356-22.702.356-29.59 0C219.848 462.381 180.588 480 141.069 480c-95.49 0-148.348-92.996-91.855-157.626C-29.925 190.523 80.479 32 256.006 32c175.632 0 285.87 158.626 206.793 290.374zm-339.647-82.972h41.529v-58.075h-41.529v58.075zm217.18 86.072v-23.839c-60.506 20.915-132.355 9.198-187.589-33.971l.246 24.897c51.101 46.367 131.746 57.875 187.343 32.913zm-150.753-86.072h166.058v-58.075H189.579v58.075z\"],\n    \"wpexplorer\": [512, 512, [], \"f2de\", \"M512 256c0 141.2-114.7 256-256 256C114.8 512 0 397.3 0 256S114.7 0 256 0s256 114.7 256 256zm-32 0c0-123.2-100.3-224-224-224C132.5 32 32 132.5 32 256s100.5 224 224 224 224-100.5 224-224zM160.9 124.6l86.9 37.1-37.1 86.9-86.9-37.1 37.1-86.9zm110 169.1l46.6 94h-14.6l-50-100-48.9 100h-14l51.1-106.9-22.3-9.4 6-14 68.6 29.1-6 14.3-16.5-7.1zm-11.8-116.3l68.6 29.4-29.4 68.3L230 246l29.1-68.6zm80.3 42.9l54.6 23.1-23.4 54.3-54.3-23.1 23.1-54.3z\"],\n    \"wpforms\": [448, 512, [], \"f298\", \"M448 75.2v361.7c0 24.3-19 43.2-43.2 43.2H43.2C19.3 480 0 461.4 0 436.8V75.2C0 51.1 18.8 32 43.2 32h361.7c24 0 43.1 18.8 43.1 43.2zm-37.3 361.6V75.2c0-3-2.6-5.8-5.8-5.8h-9.3L285.3 144 224 94.1 162.8 144 52.5 69.3h-9.3c-3.2 0-5.8 2.8-5.8 5.8v361.7c0 3 2.6 5.8 5.8 5.8h361.7c3.2.1 5.8-2.7 5.8-5.8zM150.2 186v37H76.7v-37h73.5zm0 74.4v37.3H76.7v-37.3h73.5zm11.1-147.3l54-43.7H96.8l64.5 43.7zm210 72.9v37h-196v-37h196zm0 74.4v37.3h-196v-37.3h196zm-84.6-147.3l64.5-43.7H232.8l53.9 43.7zM371.3 335v37.3h-99.4V335h99.4z\"],\n    \"wpressr\": [496, 512, [], \"f3e4\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm171.33 158.6c-15.18 34.51-30.37 69.02-45.63 103.5-2.44 5.51-6.89 8.24-12.97 8.24-23.02-.01-46.03.06-69.05-.05-5.12-.03-8.25 1.89-10.34 6.72-10.19 23.56-20.63 47-30.95 70.5-1.54 3.51-4.06 5.29-7.92 5.29-45.94-.01-91.87-.02-137.81 0-3.13 0-5.63-1.15-7.72-3.45-11.21-12.33-22.46-24.63-33.68-36.94-2.69-2.95-2.79-6.18-1.21-9.73 8.66-19.54 17.27-39.1 25.89-58.66 12.93-29.35 25.89-58.69 38.75-88.08 1.7-3.88 4.28-5.68 8.54-5.65 14.24.1 28.48.02 42.72.05 6.24.01 9.2 4.84 6.66 10.59-13.6 30.77-27.17 61.55-40.74 92.33-5.72 12.99-11.42 25.99-17.09 39-3.91 8.95 7.08 11.97 10.95 5.6.23-.37-1.42 4.18 30.01-67.69 1.36-3.1 3.41-4.4 6.77-4.39 15.21.08 30.43.02 45.64.04 5.56.01 7.91 3.64 5.66 8.75-8.33 18.96-16.71 37.9-24.98 56.89-4.98 11.43 8.08 12.49 11.28 5.33.04-.08 27.89-63.33 32.19-73.16 2.02-4.61 5.44-6.51 10.35-6.5 26.43.05 52.86 0 79.29.05 12.44.02 13.93-13.65 3.9-13.64-25.26.03-50.52.02-75.78.02-6.27 0-7.84-2.47-5.27-8.27 5.78-13.06 11.59-26.11 17.3-39.21 1.73-3.96 4.52-5.79 8.84-5.78 23.09.06 25.98.02 130.78.03 6.08-.01 8.03 2.79 5.62 8.27z\"],\n    \"xbox\": [512, 512, [], \"f412\", \"M369.9 318.2c44.3 54.3 64.7 98.8 54.4 118.7-7.9 15.1-56.7 44.6-92.6 55.9-29.6 9.3-68.4 13.3-100.4 10.2-38.2-3.7-76.9-17.4-110.1-39C93.3 445.8 87 438.3 87 423.4c0-29.9 32.9-82.3 89.2-142.1 32-33.9 76.5-73.7 81.4-72.6 9.4 2.1 84.3 75.1 112.3 109.5zM188.6 143.8c-29.7-26.9-58.1-53.9-86.4-63.4-15.2-5.1-16.3-4.8-28.7 8.1-29.2 30.4-53.5 79.7-60.3 122.4-5.4 34.2-6.1 43.8-4.2 60.5 5.6 50.5 17.3 85.4 40.5 120.9 9.5 14.6 12.1 17.3 9.3 9.9-4.2-11-.3-37.5 9.5-64 14.3-39 53.9-112.9 120.3-194.4zm311.6 63.5C483.3 127.3 432.7 77 425.6 77c-7.3 0-24.2 6.5-36 13.9-23.3 14.5-41 31.4-64.3 52.8C367.7 197 427.5 283.1 448.2 346c6.8 20.7 9.7 41.1 7.4 52.3-1.7 8.5-1.7 8.5 1.4 4.6 6.1-7.7 19.9-31.3 25.4-43.5 7.4-16.2 15-40.2 18.6-58.7 4.3-22.5 3.9-70.8-.8-93.4zM141.3 43C189 40.5 251 77.5 255.6 78.4c.7.1 10.4-4.2 21.6-9.7 63.9-31.1 94-25.8 107.4-25.2-63.9-39.3-152.7-50-233.9-11.7-23.4 11.1-24 11.9-9.4 11.2z\"],\n    \"xing\": [384, 512, [], \"f168\", \"M162.7 210c-1.8 3.3-25.2 44.4-70.1 123.5-4.9 8.3-10.8 12.5-17.7 12.5H9.8c-7.7 0-12.1-7.5-8.5-14.4l69-121.3c.2 0 .2-.1 0-.3l-43.9-75.6c-4.3-7.8.3-14.1 8.5-14.1H100c7.3 0 13.3 4.1 18 12.2l44.7 77.5zM382.6 46.1l-144 253v.3L330.2 466c3.9 7.1.2 14.1-8.5 14.1h-65.2c-7.6 0-13.6-4-18-12.2l-92.4-168.5c3.3-5.8 51.5-90.8 144.8-255.2 4.6-8.1 10.4-12.2 17.5-12.2h65.7c8 0 12.3 6.7 8.5 14.1z\"],\n    \"xing-square\": [448, 512, [], \"f169\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM140.4 320.2H93.8c-5.5 0-8.7-5.3-6-10.3l49.3-86.7c.1 0 .1-.1 0-.2l-31.4-54c-3-5.6.2-10.1 6-10.1h46.6c5.2 0 9.5 2.9 12.9 8.7l31.9 55.3c-1.3 2.3-18 31.7-50.1 88.2-3.5 6.2-7.7 9.1-12.6 9.1zm219.7-214.1L257.3 286.8v.2l65.5 119c2.8 5.1.1 10.1-6 10.1h-46.6c-5.5 0-9.7-2.9-12.9-8.7l-66-120.3c2.3-4.1 36.8-64.9 103.4-182.3 3.3-5.8 7.4-8.7 12.5-8.7h46.9c5.7-.1 8.8 4.7 6 10z\"],\n    \"y-combinator\": [448, 512, [], \"f23b\", \"M448 32v448H0V32h448zM236 287.5L313.5 142h-32.7L235 233c-4.7 9.3-9 18.3-12.8 26.8L210 233l-45.2-91h-35l76.7 143.8v94.5H236v-92.8z\"],\n    \"yahoo\": [448, 512, [], \"f19e\", \"M252 292l4 220c-12.7-2.2-23.5-3.9-32.3-3.9-8.4 0-19.2 1.7-32.3 3.9l4-220C140.4 197.2 85 95.2 21.4 0c11.9 3.1 23 3.9 33.2 3.9 9 0 20.4-.8 34.1-3.9 40.9 72.2 82.1 138.7 135 225.5C261 163.9 314.8 81.4 358.6 0c11.1 2.9 22 3.9 32.9 3.9 11.5 0 23.2-1 35-3.9C392.1 47.9 294.9 216.9 252 292z\"],\n    \"yammer\": [512, 512, [], \"f840\", \"M421.78 152.17A23.06 23.06 0 0 0 400.9 112c-.83.43-1.71.9-2.63 1.4-15.25 8.4-118.33 80.62-106.69 88.77s82.04-23.61 130.2-50zm0 217.17c-48.16-26.38-118.64-58.1-130.2-50s91.42 80.35 106.69 88.74c.92.51 1.8 1 2.63 1.41a23.07 23.07 0 0 0 20.88-40.15zM464.21 237c-.95 0-1.95-.06-3-.06-17.4 0-142.52 13.76-136.24 26.51s83.3 18.74 138.21 18.76a23 23 0 0 0 1-45.21zM31 96.65a24.88 24.88 0 0 1 46.14-18.4l81 205.06h1.21l77-203.53a23.52 23.52 0 0 1 44.45 15.27L171.2 368.44C152.65 415.66 134.08 448 77.91 448a139.67 139.67 0 0 1-23.81-1.95 21.31 21.31 0 0 1 6.9-41.77c.66.06 10.91.66 13.86.66 30.47 0 43.74-18.94 58.07-59.41z\"],\n    \"yandex\": [256, 512, [], \"f413\", \"M153.1 315.8L65.7 512H2l96-209.8c-45.1-22.9-75.2-64.4-75.2-141.1C22.7 53.7 90.8 0 171.7 0H254v512h-55.1V315.8h-45.8zm45.8-269.3h-29.4c-44.4 0-87.4 29.4-87.4 114.6 0 82.3 39.4 108.8 87.4 108.8h29.4V46.5z\"],\n    \"yandex-international\": [320, 512, [], \"f414\", \"M129.5 512V345.9L18.5 48h55.8l81.8 229.7L250.2 0h51.3L180.8 347.8V512h-51.3z\"],\n    \"yarn\": [496, 512, [], \"f7e3\", \"M393.9 345.2c-39 9.3-48.4 32.1-104 47.4 0 0-2.7 4-10.4 5.8-13.4 3.3-63.9 6-68.5 6.1-12.4.1-19.9-3.2-22-8.2-6.4-15.3 9.2-22 9.2-22-8.1-5-9-9.9-9.8-8.1-2.4 5.8-3.6 20.1-10.1 26.5-8.8 8.9-25.5 5.9-35.3.8-10.8-5.7.8-19.2.8-19.2s-5.8 3.4-10.5-3.6c-6-9.3-17.1-37.3 11.5-62-1.3-10.1-4.6-53.7 40.6-85.6 0 0-20.6-22.8-12.9-43.3 5-13.4 7-13.3 8.6-13.9 5.7-2.2 11.3-4.6 15.4-9.1 20.6-22.2 46.8-18 46.8-18s12.4-37.8 23.9-30.4c3.5 2.3 16.3 30.6 16.3 30.6s13.6-7.9 15.1-5c8.2 16 9.2 46.5 5.6 65.1-6.1 30.6-21.4 47.1-27.6 57.5-1.4 2.4 16.5 10 27.8 41.3 10.4 28.6 1.1 52.7 2.8 55.3.8 1.4 13.7.8 36.4-13.2 12.8-7.9 28.1-16.9 45.4-17 16.7-.5 17.6 19.2 4.9 22.2zM496 256c0 136.9-111.1 248-248 248S0 392.9 0 256 111.1 8 248 8s248 111.1 248 248zm-79.3 75.2c-1.7-13.6-13.2-23-28-22.8-22 .3-40.5 11.7-52.8 19.2-4.8 3-8.9 5.2-12.4 6.8 3.1-44.5-22.5-73.1-28.7-79.4 7.8-11.3 18.4-27.8 23.4-53.2 4.3-21.7 3-55.5-6.9-74.5-1.6-3.1-7.4-11.2-21-7.4-9.7-20-13-22.1-15.6-23.8-1.1-.7-23.6-16.4-41.4 28-12.2.9-31.3 5.3-47.5 22.8-2 2.2-5.9 3.8-10.1 5.4h.1c-8.4 3-12.3 9.9-16.9 22.3-6.5 17.4.2 34.6 6.8 45.7-17.8 15.9-37 39.8-35.7 82.5-34 36-11.8 73-5.6 79.6-1.6 11.1 3.7 19.4 12 23.8 12.6 6.7 30.3 9.6 43.9 2.8 4.9 5.2 13.8 10.1 30 10.1 6.8 0 58-2.9 72.6-6.5 6.8-1.6 11.5-4.5 14.6-7.1 9.8-3.1 36.8-12.3 62.2-28.7 18-11.7 24.2-14.2 37.6-17.4 12.9-3.2 21-15.1 19.4-28.2z\"],\n    \"yelp\": [384, 512, [], \"f1e9\", \"M42.9 240.32l99.62 48.61c19.2 9.4 16.2 37.51-4.5 42.71L30.5 358.45a22.79 22.79 0 0 1-28.21-19.6 197.16 197.16 0 0 1 9-85.32 22.8 22.8 0 0 1 31.61-13.21zm44 239.25a199.45 199.45 0 0 0 79.42 32.11A22.78 22.78 0 0 0 192.94 490l3.9-110.82c.7-21.3-25.5-31.91-39.81-16.1l-74.21 82.4a22.82 22.82 0 0 0 4.09 34.09zm145.34-109.92l58.81 94a22.93 22.93 0 0 0 34 5.5 198.36 198.36 0 0 0 52.71-67.61A23 23 0 0 0 364.17 370l-105.42-34.26c-20.31-6.5-37.81 15.8-26.51 33.91zm148.33-132.23a197.44 197.44 0 0 0-50.41-69.31 22.85 22.85 0 0 0-34 4.4l-62 91.92c-11.9 17.7 4.7 40.61 25.2 34.71L366 268.63a23 23 0 0 0 14.61-31.21zM62.11 30.18a22.86 22.86 0 0 0-9.9 32l104.12 180.44c11.7 20.2 42.61 11.9 42.61-11.4V22.88a22.67 22.67 0 0 0-24.5-22.8 320.37 320.37 0 0 0-112.33 30.1z\"],\n    \"yoast\": [448, 512, [], \"f2b1\", \"M91.3 76h186l-7 18.9h-179c-39.7 0-71.9 31.6-71.9 70.3v205.4c0 35.4 24.9 70.3 84 70.3V460H91.3C41.2 460 0 419.8 0 370.5V165.2C0 115.9 40.7 76 91.3 76zm229.1-56h66.5C243.1 398.1 241.2 418.9 202.2 459.3c-20.8 21.6-49.3 31.7-78.3 32.7v-51.1c49.2-7.7 64.6-49.9 64.6-75.3 0-20.1.6-12.6-82.1-223.2h61.4L218.2 299 320.4 20zM448 161.5V460H234c6.6-9.6 10.7-16.3 12.1-19.4h182.5V161.5c0-32.5-17.1-51.9-48.2-62.9l6.7-17.6c41.7 13.6 60.9 43.1 60.9 80.5z\"],\n    \"youtube\": [576, 512, [], \"f167\", \"M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z\"],\n    \"youtube-square\": [448, 512, [], \"f431\", \"M186.8 202.1l95.2 54.1-95.2 54.1V202.1zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-42 176.3s0-59.6-7.6-88.2c-4.2-15.8-16.5-28.2-32.2-32.4C337.9 128 224 128 224 128s-113.9 0-142.2 7.7c-15.7 4.2-28 16.6-32.2 32.4-7.6 28.5-7.6 88.2-7.6 88.2s0 59.6 7.6 88.2c4.2 15.8 16.5 27.7 32.2 31.9C110.1 384 224 384 224 384s113.9 0 142.2-7.7c15.7-4.2 28-16.1 32.2-31.9 7.6-28.5 7.6-88.1 7.6-88.1z\"],\n    \"zhihu\": [640, 512, [], \"f63f\", \"M170.54 148.13v217.54l23.43.01 7.71 26.37 42.01-26.37h49.53V148.13H170.54zm97.75 193.93h-27.94l-27.9 17.51-5.08-17.47-11.9-.04V171.75h72.82v170.31zm-118.46-94.39H97.5c1.74-27.1 2.2-51.59 2.2-73.46h51.16s1.97-22.56-8.58-22.31h-88.5c3.49-13.12 7.87-26.66 13.12-40.67 0 0-24.07 0-32.27 21.57-3.39 8.9-13.21 43.14-30.7 78.12 5.89-.64 25.37-1.18 36.84-22.21 2.11-5.89 2.51-6.66 5.14-14.53h28.87c0 10.5-1.2 66.88-1.68 73.44H20.83c-11.74 0-15.56 23.62-15.56 23.62h65.58C66.45 321.1 42.83 363.12 0 396.34c20.49 5.85 40.91-.93 51-9.9 0 0 22.98-20.9 35.59-69.25l53.96 64.94s7.91-26.89-1.24-39.99c-7.58-8.92-28.06-33.06-36.79-41.81L87.9 311.95c4.36-13.98 6.99-27.55 7.87-40.67h61.65s-.09-23.62-7.59-23.62v.01zm412.02-1.6c20.83-25.64 44.98-58.57 44.98-58.57s-18.65-14.8-27.38-4.06c-6 8.15-36.83 48.2-36.83 48.2l19.23 14.43zm-150.09-59.09c-9.01-8.25-25.91 2.13-25.91 2.13s39.52 55.04 41.12 57.45l19.46-13.73s-25.67-37.61-34.66-45.86h-.01zM640 258.35c-19.78 0-130.91.93-131.06.93v-101c4.81 0 12.42-.4 22.85-1.2 40.88-2.41 70.13-4 87.77-4.81 0 0 12.22-27.19-.59-33.44-3.07-1.18-23.17 4.58-23.17 4.58s-165.22 16.49-232.36 18.05c1.6 8.82 7.62 17.08 15.78 19.55 13.31 3.48 22.69 1.7 49.15.89 24.83-1.6 43.68-2.43 56.51-2.43v99.81H351.41s2.82 22.31 25.51 22.85h107.94v70.92c0 13.97-11.19 21.99-24.48 21.12-14.08.11-26.08-1.15-41.69-1.81 1.99 3.97 6.33 14.39 19.31 21.84 9.88 4.81 16.17 6.57 26.02 6.57 29.56 0 45.67-17.28 44.89-45.31v-73.32h122.36c9.68 0 8.7-23.78 8.7-23.78l.03-.01z\"]\n  };\n\n  bunker(function () {\n    defineIcons('fab', icons);\n  });\n\n}());\n(function () {\n  'use strict';\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var icons = {\n    \"address-book\": [448, 512, [], \"f2b9\", \"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-68 304H48V48h320v416zM208 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2z\"],\n    \"address-card\": [576, 512, [], \"f2bb\", \"M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 400H48V80h480v352zM208 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2zM360 320h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8z\"],\n    \"angry\": [496, 512, [], \"f556\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm0-144c-33.6 0-65.2 14.8-86.8 40.6-8.5 10.2-7.1 25.3 3.1 33.8s25.3 7.2 33.8-3c24.8-29.7 75-29.7 99.8 0 8.1 9.7 23.2 11.9 33.8 3 10.2-8.5 11.5-23.6 3.1-33.8-21.6-25.8-53.2-40.6-86.8-40.6zm-48-72c10.3 0 19.9-6.7 23-17.1 3.8-12.7-3.4-26.1-16.1-29.9l-80-24c-12.8-3.9-26.1 3.4-29.9 16.1-3.8 12.7 3.4 26.1 16.1 29.9l28.2 8.5c-3.1 4.9-5.3 10.4-5.3 16.6 0 17.7 14.3 32 32 32s32-14.4 32-32.1zm199-54.9c-3.8-12.7-17.1-19.9-29.9-16.1l-80 24c-12.7 3.8-19.9 17.2-16.1 29.9 3.1 10.4 12.7 17.1 23 17.1 0 17.7 14.3 32 32 32s32-14.3 32-32c0-6.2-2.2-11.7-5.3-16.6l28.2-8.5c12.7-3.7 19.9-17.1 16.1-29.8z\"],\n    \"arrow-alt-circle-down\": [512, 512, [], \"f358\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z\"],\n    \"arrow-alt-circle-left\": [512, 512, [], \"f359\", \"M8 256c0 137 111 248 248 248s248-111 248-248S393 8 256 8 8 119 8 256zm448 0c0 110.5-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56s200 89.5 200 200zm-72-20v40c0 6.6-5.4 12-12 12H256v67c0 10.7-12.9 16-20.5 8.5l-99-99c-4.7-4.7-4.7-12.3 0-17l99-99c7.6-7.6 20.5-2.2 20.5 8.5v67h116c6.6 0 12 5.4 12 12z\"],\n    \"arrow-alt-circle-right\": [512, 512, [], \"f35a\", \"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm72 20v-40c0-6.6 5.4-12 12-12h116v-67c0-10.7 12.9-16 20.5-8.5l99 99c4.7 4.7 4.7 12.3 0 17l-99 99c-7.6 7.6-20.5 2.2-20.5-8.5v-67H140c-6.6 0-12-5.4-12-12z\"],\n    \"arrow-alt-circle-up\": [512, 512, [], \"f35b\", \"M256 504c137 0 248-111 248-248S393 8 256 8 8 119 8 256s111 248 248 248zm0-448c110.5 0 200 89.5 200 200s-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56zm20 328h-40c-6.6 0-12-5.4-12-12V256h-67c-10.7 0-16-12.9-8.5-20.5l99-99c4.7-4.7 12.3-4.7 17 0l99 99c7.6 7.6 2.2 20.5-8.5 20.5h-67v116c0 6.6-5.4 12-12 12z\"],\n    \"bell\": [448, 512, [], \"f0f3\", \"M439.39 362.29c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71zM67.53 368c21.22-27.97 44.42-74.33 44.53-159.42 0-.2-.06-.38-.06-.58 0-61.86 50.14-112 112-112s112 50.14 112 112c0 .2-.06.38-.06.58.11 85.1 23.31 131.46 44.53 159.42H67.53zM224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64z\"],\n    \"bell-slash\": [640, 512, [], \"f1f6\", \"M633.99 471.02L36 3.51C29.1-2.01 19.03-.9 13.51 6l-10 12.49C-2.02 25.39-.9 35.46 6 40.98l598 467.51c6.9 5.52 16.96 4.4 22.49-2.49l10-12.49c5.52-6.9 4.41-16.97-2.5-22.49zM163.53 368c16.71-22.03 34.48-55.8 41.4-110.58l-45.47-35.55c-3.27 90.73-36.47 120.68-54.84 140.42-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h279.66l-61.4-48H163.53zM320 96c61.86 0 112 50.14 112 112 0 .2-.06.38-.06.58.02 16.84 1.16 31.77 2.79 45.73l59.53 46.54c-8.31-22.13-14.34-51.49-14.34-92.85 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84c-26.02 5.41-49.45 16.94-69.13 32.72l38.17 29.84C275 103.18 296.65 96 320 96zm0 416c35.32 0 63.97-28.65 63.97-64H256.03c0 35.35 28.65 64 63.97 64z\"],\n    \"bookmark\": [384, 512, [], \"f02e\", \"M336 0H48C21.49 0 0 21.49 0 48v464l192-112 192 112V48c0-26.51-21.49-48-48-48zm0 428.43l-144-84-144 84V54a6 6 0 0 1 6-6h276c3.314 0 6 2.683 6 5.996V428.43z\"],\n    \"building\": [448, 512, [], \"f1ad\", \"M128 148v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12zm140 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-128 96h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm128 0h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-76 84v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm76 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm180 124v36H0v-36c0-6.6 5.4-12 12-12h19.5V24c0-13.3 10.7-24 24-24h337c13.3 0 24 10.7 24 24v440H436c6.6 0 12 5.4 12 12zM79.5 463H192v-67c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v67h112.5V49L80 48l-.5 415z\"],\n    \"calendar\": [448, 512, [], \"f133\", \"M400 64h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V160h352v298c0 3.3-2.7 6-6 6z\"],\n    \"calendar-alt\": [448, 512, [], \"f073\", \"M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"calendar-check\": [448, 512, [], \"f274\", \"M400 64h-48V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v52H160V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v52H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 400H54a6 6 0 0 1-6-6V160h352v298a6 6 0 0 1-6 6zm-52.849-200.65L198.842 404.519c-4.705 4.667-12.303 4.637-16.971-.068l-75.091-75.699c-4.667-4.705-4.637-12.303.068-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l44.104 44.461 111.072-110.181c4.705-4.667 12.303-4.637 16.971.068l22.536 22.718c4.667 4.705 4.636 12.303-.069 16.97z\"],\n    \"calendar-minus\": [448, 512, [], \"f272\", \"M124 328c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v24c0 6.6-5.4 12-12 12H124zm324-216v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"calendar-plus\": [448, 512, [], \"f271\", \"M336 292v24c0 6.6-5.4 12-12 12h-76v76c0 6.6-5.4 12-12 12h-24c-6.6 0-12-5.4-12-12v-76h-76c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h76v-76c0-6.6 5.4-12 12-12h24c6.6 0 12 5.4 12 12v76h76c6.6 0 12 5.4 12 12zm112-180v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"calendar-times\": [448, 512, [], \"f273\", \"M311.7 374.7l-17 17c-4.7 4.7-12.3 4.7-17 0L224 337.9l-53.7 53.7c-4.7 4.7-12.3 4.7-17 0l-17-17c-4.7-4.7-4.7-12.3 0-17l53.7-53.7-53.7-53.7c-4.7-4.7-4.7-12.3 0-17l17-17c4.7-4.7 12.3-4.7 17 0l53.7 53.7 53.7-53.7c4.7-4.7 12.3-4.7 17 0l17 17c4.7 4.7 4.7 12.3 0 17L257.9 304l53.7 53.7c4.8 4.7 4.8 12.3.1 17zM448 112v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-down\": [448, 512, [], \"f150\", \"M125.1 208h197.8c10.7 0 16.1 13 8.5 20.5l-98.9 98.3c-4.7 4.7-12.2 4.7-16.9 0l-98.9-98.3c-7.7-7.5-2.3-20.5 8.4-20.5zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-left\": [448, 512, [], \"f191\", \"M272 157.1v197.8c0 10.7-13 16.1-20.5 8.5l-98.3-98.9c-4.7-4.7-4.7-12.2 0-16.9l98.3-98.9c7.5-7.7 20.5-2.3 20.5 8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-right\": [448, 512, [], \"f152\", \"M176 354.9V157.1c0-10.7 13-16.1 20.5-8.5l98.3 98.9c4.7 4.7 4.7 12.2 0 16.9l-98.3 98.9c-7.5 7.7-20.5 2.3-20.5-8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-up\": [448, 512, [], \"f151\", \"M322.9 304H125.1c-10.7 0-16.1-13-8.5-20.5l98.9-98.3c4.7-4.7 12.2-4.7 16.9 0l98.9 98.3c7.7 7.5 2.3 20.5-8.4 20.5zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"chart-bar\": [512, 512, [], \"f080\", \"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\"],\n    \"check-circle\": [512, 512, [], \"f058\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m140.204 130.267l-22.536-22.718c-4.667-4.705-12.265-4.736-16.97-.068L215.346 303.697l-59.792-60.277c-4.667-4.705-12.265-4.736-16.97-.069l-22.719 22.536c-4.705 4.667-4.736 12.265-.068 16.971l90.781 91.516c4.667 4.705 12.265 4.736 16.97.068l172.589-171.204c4.704-4.668 4.734-12.266.067-16.971z\"],\n    \"check-square\": [448, 512, [], \"f14a\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"],\n    \"circle\": [512, 512, [], \"f111\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200z\"],\n    \"clipboard\": [384, 512, [], \"f328\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"],\n    \"clock\": [512, 512, [], \"f017\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z\"],\n    \"clone\": [512, 512, [], \"f24d\", \"M464 0H144c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h320c26.51 0 48-21.49 48-48v-48h48c26.51 0 48-21.49 48-48V48c0-26.51-21.49-48-48-48zM362 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h42v224c0 26.51 21.49 48 48 48h224v42a6 6 0 0 1-6 6zm96-96H150a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h308a6 6 0 0 1 6 6v308a6 6 0 0 1-6 6z\"],\n    \"closed-captioning\": [512, 512, [], \"f20a\", \"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 336H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v276c0 3.3-2.7 6-6 6zm-211.1-85.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6 2.8-2.5 7.1-2.1 9.2.9l19.6 27.7zm190.4 0c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.9-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 220.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6 2.8-2.5 7.1-2.1 9.2.9l19.6 27.7z\"],\n    \"comment\": [512, 512, [], \"f075\", \"M256 32C114.6 32 0 125.1 0 240c0 47.6 19.9 91.2 52.9 126.3C38 405.7 7 439.1 6.5 439.5c-6.6 7-8.4 17.2-4.6 26S14.4 480 24 480c61.5 0 110-25.7 139.1-46.3C192 442.8 223.2 448 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm0 368c-26.7 0-53.1-4.1-78.4-12.1l-22.7-7.2-19.5 13.8c-14.3 10.1-33.9 21.4-57.5 29 7.3-12.1 14.4-25.7 19.9-40.2l10.6-28.1-20.6-21.8C69.7 314.1 48 282.2 48 240c0-88.2 93.3-160 208-160s208 71.8 208 160-93.3 160-208 160z\"],\n    \"comment-alt\": [512, 512, [], \"f27a\", \"M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 7.1 5.8 12 12 12 2.4 0 4.9-.7 7.1-2.4L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm16 352c0 8.8-7.2 16-16 16H288l-12.8 9.6L208 428v-60H64c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16h384c8.8 0 16 7.2 16 16v288z\"],\n    \"comment-dots\": [512, 512, [], \"f4ad\", \"M144 208c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm112 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm112 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zM256 32C114.6 32 0 125.1 0 240c0 47.6 19.9 91.2 52.9 126.3C38 405.7 7 439.1 6.5 439.5c-6.6 7-8.4 17.2-4.6 26S14.4 480 24 480c61.5 0 110-25.7 139.1-46.3C192 442.8 223.2 448 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm0 368c-26.7 0-53.1-4.1-78.4-12.1l-22.7-7.2-19.5 13.8c-14.3 10.1-33.9 21.4-57.5 29 7.3-12.1 14.4-25.7 19.9-40.2l10.6-28.1-20.6-21.8C69.7 314.1 48 282.2 48 240c0-88.2 93.3-160 208-160s208 71.8 208 160-93.3 160-208 160z\"],\n    \"comments\": [576, 512, [], \"f086\", \"M532 386.2c27.5-27.1 44-61.1 44-98.2 0-80-76.5-146.1-176.2-157.9C368.3 72.5 294.3 32 208 32 93.1 32 0 103.6 0 192c0 37 16.5 71 44 98.2-15.3 30.7-37.3 54.5-37.7 54.9-6.3 6.7-8.1 16.5-4.4 25 3.6 8.5 12 14 21.2 14 53.5 0 96.7-20.2 125.2-38.8 9.2 2.1 18.7 3.7 28.4 4.9C208.1 407.6 281.8 448 368 448c20.8 0 40.8-2.4 59.8-6.8C456.3 459.7 499.4 480 553 480c9.2 0 17.5-5.5 21.2-14 3.6-8.5 1.9-18.3-4.4-25-.4-.3-22.5-24.1-37.8-54.8zm-392.8-92.3L122.1 305c-14.1 9.1-28.5 16.3-43.1 21.4 2.7-4.7 5.4-9.7 8-14.8l15.5-31.1L77.7 256C64.2 242.6 48 220.7 48 192c0-60.7 73.3-112 160-112s160 51.3 160 112-73.3 112-160 112c-16.5 0-33-1.9-49-5.6l-19.8-4.5zM498.3 352l-24.7 24.4 15.5 31.1c2.6 5.1 5.3 10.1 8 14.8-14.6-5.1-29-12.3-43.1-21.4l-17.1-11.1-19.9 4.6c-16 3.7-32.5 5.6-49 5.6-54 0-102.2-20.1-131.3-49.7C338 339.5 416 272.9 416 192c0-3.4-.4-6.7-.7-10C479.7 196.5 528 238.8 528 288c0 28.7-16.2 50.6-29.7 64z\"],\n    \"compass\": [496, 512, [], \"f14e\", \"M347.94 129.86L203.6 195.83a31.938 31.938 0 0 0-15.77 15.77l-65.97 144.34c-7.61 16.65 9.54 33.81 26.2 26.2l144.34-65.97a31.938 31.938 0 0 0 15.77-15.77l65.97-144.34c7.61-16.66-9.54-33.81-26.2-26.2zm-77.36 148.72c-12.47 12.47-32.69 12.47-45.16 0-12.47-12.47-12.47-32.69 0-45.16 12.47-12.47 32.69-12.47 45.16 0 12.47 12.47 12.47 32.69 0 45.16zM248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 448c-110.28 0-200-89.72-200-200S137.72 56 248 56s200 89.72 200 200-89.72 200-200 200z\"],\n    \"copy\": [448, 512, [], \"f0c5\", \"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"],\n    \"copyright\": [512, 512, [], \"f1f9\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 448c-110.532 0-200-89.451-200-200 0-110.531 89.451-200 200-200 110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200zm107.351-101.064c-9.614 9.712-45.53 41.396-104.065 41.396-82.43 0-140.484-61.425-140.484-141.567 0-79.152 60.275-139.401 139.762-139.401 55.531 0 88.738 26.62 97.593 34.779a11.965 11.965 0 0 1 1.936 15.322l-18.155 28.113c-3.841 5.95-11.966 7.282-17.499 2.921-8.595-6.776-31.814-22.538-61.708-22.538-48.303 0-77.916 35.33-77.916 80.082 0 41.589 26.888 83.692 78.277 83.692 32.657 0 56.843-19.039 65.726-27.225 5.27-4.857 13.596-4.039 17.82 1.738l19.865 27.17a11.947 11.947 0 0 1-1.152 15.518z\"],\n    \"credit-card\": [576, 512, [], \"f09d\", \"M527.9 32H48.1C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48.1 48h479.8c26.6 0 48.1-21.5 48.1-48V80c0-26.5-21.5-48-48.1-48zM54.1 80h467.8c3.3 0 6 2.7 6 6v42H48.1V86c0-3.3 2.7-6 6-6zm467.8 352H54.1c-3.3 0-6-2.7-6-6V256h479.8v170c0 3.3-2.7 6-6 6zM192 332v40c0 6.6-5.4 12-12 12h-72c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12zm192 0v40c0 6.6-5.4 12-12 12H236c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12z\"],\n    \"dizzy\": [496, 512, [], \"f567\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-33.8-217.9c7.8-7.8 7.8-20.5 0-28.3L196.3 192l17.9-17.9c7.8-7.8 7.8-20.5 0-28.3-7.8-7.8-20.5-7.8-28.3 0L168 163.7l-17.8-17.8c-7.8-7.8-20.5-7.8-28.3 0-7.8 7.8-7.8 20.5 0 28.3l17.9 17.9-17.9 17.9c-7.8 7.8-7.8 20.5 0 28.3 7.8 7.8 20.5 7.8 28.3 0l17.8-17.8 17.8 17.8c7.9 7.7 20.5 7.7 28.4-.2zm160-92.2c-7.8-7.8-20.5-7.8-28.3 0L328 163.7l-17.8-17.8c-7.8-7.8-20.5-7.8-28.3 0-7.8 7.8-7.8 20.5 0 28.3l17.9 17.9-17.9 17.9c-7.8 7.8-7.8 20.5 0 28.3 7.8 7.8 20.5 7.8 28.3 0l17.8-17.8 17.8 17.8c7.8 7.8 20.5 7.8 28.3 0 7.8-7.8 7.8-20.5 0-28.3l-17.8-18 17.9-17.9c7.7-7.8 7.7-20.4 0-28.2zM248 272c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64z\"],\n    \"dot-circle\": [512, 512, [], \"f192\", \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z\"],\n    \"edit\": [576, 512, [], \"f044\", \"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"],\n    \"envelope\": [512, 512, [], \"f0e0\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\"],\n    \"envelope-open\": [512, 512, [], \"f2b6\", \"M494.586 164.516c-4.697-3.883-111.723-89.95-135.251-108.657C337.231 38.191 299.437 0 256 0c-43.205 0-80.636 37.717-103.335 55.859-24.463 19.45-131.07 105.195-135.15 108.549A48.004 48.004 0 0 0 0 201.485V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V201.509a48 48 0 0 0-17.414-36.993zM464 458a6 6 0 0 1-6 6H54a6 6 0 0 1-6-6V204.347c0-1.813.816-3.526 2.226-4.665 15.87-12.814 108.793-87.554 132.364-106.293C200.755 78.88 232.398 48 256 48c23.693 0 55.857 31.369 73.41 45.389 23.573 18.741 116.503 93.493 132.366 106.316a5.99 5.99 0 0 1 2.224 4.663V458zm-31.991-187.704c4.249 5.159 3.465 12.795-1.745 16.981-28.975 23.283-59.274 47.597-70.929 56.863C336.636 362.283 299.205 400 256 400c-43.452 0-81.287-38.237-103.335-55.86-11.279-8.967-41.744-33.413-70.927-56.865-5.21-4.187-5.993-11.822-1.745-16.981l15.258-18.528c4.178-5.073 11.657-5.843 16.779-1.726 28.618 23.001 58.566 47.035 70.56 56.571C200.143 320.631 232.307 352 256 352c23.602 0 55.246-30.88 73.41-45.389 11.994-9.535 41.944-33.57 70.563-56.568 5.122-4.116 12.601-3.346 16.778 1.727l15.258 18.526z\"],\n    \"eye\": [576, 512, [], \"f06e\", \"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\"],\n    \"eye-slash\": [640, 512, [], \"f070\", \"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\"],\n    \"file\": [384, 512, [], \"f15b\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48z\"],\n    \"file-alt\": [384, 512, [], \"f15c\", \"M288 248v28c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-28c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm-12 72H108c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-28c0-6.6-5.4-12-12-12zm108-188.1V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h204.1C264.8 0 277 5.1 286 14.1L369.9 98c9 8.9 14.1 21.2 14.1 33.9zm-128-80V128h76.1L256 51.9zM336 464V176H232c-13.3 0-24-10.7-24-24V48H48v416h288z\"],\n    \"file-archive\": [384, 512, [], \"f1c6\", \"M128.3 160v32h32v-32zm64-96h-32v32h32zm-64 32v32h32V96zm64 32h-32v32h32zm177.6-30.1L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h79.7v16h32V48H208v104c0 13.3 10.7 24 24 24h104zM194.2 265.7c-1.1-5.6-6-9.7-11.8-9.7h-22.1v-32h-32v32l-19.7 97.1C102 385.6 126.8 416 160 416c33.1 0 57.9-30.2 51.5-62.6zm-33.9 124.4c-17.9 0-32.4-12.1-32.4-27s14.5-27 32.4-27 32.4 12.1 32.4 27-14.5 27-32.4 27zm32-198.1h-32v32h32z\"],\n    \"file-audio\": [384, 512, [], \"f1c7\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm144-76.024c0 10.691-12.926 16.045-20.485 8.485L136 360.486h-28c-6.627 0-12-5.373-12-12v-56c0-6.627 5.373-12 12-12h28l35.515-36.947c7.56-7.56 20.485-2.206 20.485 8.485v135.952zm41.201-47.13c9.051-9.297 9.06-24.133.001-33.439-22.149-22.752 12.235-56.246 34.395-33.481 27.198 27.94 27.212 72.444.001 100.401-21.793 22.386-56.947-10.315-34.397-33.481z\"],\n    \"file-code\": [384, 512, [], \"f1c9\", \"M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z\"],\n    \"file-excel\": [384, 512, [], \"f1c3\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm212-240h-28.8c-4.4 0-8.4 2.4-10.5 6.3-18 33.1-22.2 42.4-28.6 57.7-13.9-29.1-6.9-17.3-28.6-57.7-2.1-3.9-6.2-6.3-10.6-6.3H124c-9.3 0-15 10-10.4 18l46.3 78-46.3 78c-4.7 8 1.1 18 10.4 18h28.9c4.4 0 8.4-2.4 10.5-6.3 21.7-40 23-45 28.6-57.7 14.9 30.2 5.9 15.9 28.6 57.7 2.1 3.9 6.2 6.3 10.6 6.3H260c9.3 0 15-10 10.4-18L224 320c.7-1.1 30.3-50.5 46.3-78 4.7-8-1.1-18-10.3-18z\"],\n    \"file-image\": [384, 512, [], \"f1c5\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"],\n    \"file-pdf\": [384, 512, [], \"f1c1\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm250.2-143.7c-12.2-12-47-8.7-64.4-6.5-17.2-10.5-28.7-25-36.8-46.3 3.9-16.1 10.1-40.6 5.4-56-4.2-26.2-37.8-23.6-42.6-5.9-4.4 16.1-.4 38.5 7 67.1-10 23.9-24.9 56-35.4 74.4-20 10.3-47 26.2-51 46.2-3.3 15.8 26 55.2 76.1-31.2 22.4-7.4 46.8-16.5 68.4-20.1 18.9 10.2 41 17 55.8 17 25.5 0 28-28.2 17.5-38.7zm-198.1 77.8c5.1-13.7 24.5-29.5 30.4-35-19 30.3-30.4 35.7-30.4 35zm81.6-190.6c7.4 0 6.7 32.1 1.8 40.8-4.4-13.9-4.3-40.8-1.8-40.8zm-24.4 136.6c9.7-16.9 18-37 24.7-54.7 8.3 15.1 18.9 27.2 30.1 35.5-20.8 4.3-38.9 13.1-54.8 19.2zm131.6-5s-5 6-37.3-7.8c35.1-2.6 40.9 5.4 37.3 7.8z\"],\n    \"file-powerpoint\": [384, 512, [], \"f1c4\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm72-60V236c0-6.6 5.4-12 12-12h69.2c36.7 0 62.8 27 62.8 66.3 0 74.3-68.7 66.5-95.5 66.5V404c0 6.6-5.4 12-12 12H132c-6.6 0-12-5.4-12-12zm48.5-87.4h23c7.9 0 13.9-2.4 18.1-7.2 8.5-9.8 8.4-28.5.1-37.8-4.1-4.6-9.9-7-17.4-7h-23.9v52z\"],\n    \"file-video\": [384, 512, [], \"f1c8\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm228.687-211.303L224 305.374V268c0-11.046-8.954-20-20-20H100c-11.046 0-20 8.954-20 20v104c0 11.046 8.954 20 20 20h104c11.046 0 20-8.954 20-20v-37.374l52.687 52.674C286.704 397.318 304 390.28 304 375.986V264.011c0-14.311-17.309-21.319-27.313-11.314z\"],\n    \"file-word\": [384, 512, [], \"f1c2\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm220.1-208c-5.7 0-10.6 4-11.7 9.5-20.6 97.7-20.4 95.4-21 103.5-.2-1.2-.4-2.6-.7-4.3-.8-5.1.3.2-23.6-99.5-1.3-5.4-6.1-9.2-11.7-9.2h-13.3c-5.5 0-10.3 3.8-11.7 9.1-24.4 99-24 96.2-24.8 103.7-.1-1.1-.2-2.5-.5-4.2-.7-5.2-14.1-73.3-19.1-99-1.1-5.6-6-9.7-11.8-9.7h-16.8c-7.8 0-13.5 7.3-11.7 14.8 8 32.6 26.7 109.5 33.2 136 1.3 5.4 6.1 9.1 11.7 9.1h25.2c5.5 0 10.3-3.7 11.6-9.1l17.9-71.4c1.5-6.2 2.5-12 3-17.3l2.9 17.3c.1.4 12.6 50.5 17.9 71.4 1.3 5.3 6.1 9.1 11.6 9.1h24.7c5.5 0 10.3-3.7 11.6-9.1 20.8-81.9 30.2-119 34.5-136 1.9-7.6-3.8-14.9-11.6-14.9h-15.8z\"],\n    \"flag\": [512, 512, [], \"f024\", \"M336.174 80c-49.132 0-93.305-32-161.913-32-31.301 0-58.303 6.482-80.721 15.168a48.04 48.04 0 0 0 2.142-20.727C93.067 19.575 74.167 1.594 51.201.104 23.242-1.71 0 20.431 0 48c0 17.764 9.657 33.262 24 41.562V496c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-83.443C109.869 395.28 143.259 384 199.826 384c49.132 0 93.305 32 161.913 32 58.479 0 101.972-22.617 128.548-39.981C503.846 367.161 512 352.051 512 335.855V95.937c0-34.459-35.264-57.768-66.904-44.117C409.193 67.309 371.641 80 336.174 80zM464 336c-21.783 15.412-60.824 32-102.261 32-59.945 0-102.002-32-161.913-32-43.361 0-96.379 9.403-127.826 24V128c21.784-15.412 60.824-32 102.261-32 59.945 0 102.002 32 161.913 32 43.271 0 96.32-17.366 127.826-32v240z\"],\n    \"flushed\": [496, 512, [], \"f579\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm96-312c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80zm0 128c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-72c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm-112 24c0-44.2-35.8-80-80-80s-80 35.8-80 80 35.8 80 80 80 80-35.8 80-80zm-80 48c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-72c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm160 144H184c-13.2 0-24 10.8-24 24s10.8 24 24 24h128c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"],\n    \"folder\": [512, 512, [], \"f07b\", \"M464 128H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm0 272H48V112h140.12l54.63 54.63c6 6 14.14 9.37 22.63 9.37H464v224z\"],\n    \"folder-open\": [576, 512, [], \"f07c\", \"M527.9 224H480v-48c0-26.5-21.5-48-48-48H272l-64-64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h400c16.5 0 31.9-8.5 40.7-22.6l79.9-128c20-31.9-3-73.4-40.7-73.4zM48 118c0-3.3 2.7-6 6-6h134.1l64 64H426c3.3 0 6 2.7 6 6v42H152c-16.8 0-32.4 8.8-41.1 23.2L48 351.4zm400 282H72l77.2-128H528z\"],\n    \"font-awesome-logo-full\": [3992, 512, [\"Font Awesome\"], \"f4e6\", \"M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z\"],\n    \"frown\": [496, 512, [], \"f119\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 128c-40.2 0-78 17.7-103.8 48.6-8.5 10.2-7.1 25.3 3.1 33.8 10.2 8.4 25.3 7.1 33.8-3.1 16.6-19.9 41-31.4 66.9-31.4s50.3 11.4 66.9 31.4c8.1 9.7 23.1 11.9 33.8 3.1 10.2-8.5 11.5-23.6 3.1-33.8C326 321.7 288.2 304 248 304z\"],\n    \"frown-open\": [496, 512, [], \"f57a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-48-248c0-17.7-14.3-32-32-32s-32 14.3-32 32 14.3 32 32 32 32-14.3 32-32zm128-32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 112c-35.6 0-88.8 21.3-95.8 61.2-2 11.8 9 21.5 20.5 18.1 31.2-9.6 59.4-15.3 75.3-15.3s44.1 5.7 75.3 15.3c11.4 3.5 22.5-6.3 20.5-18.1-7-39.9-60.2-61.2-95.8-61.2z\"],\n    \"futbol\": [496, 512, [], \"f1e3\", \"M483.8 179.4C449.8 74.6 352.6 8 248.1 8c-25.4 0-51.2 3.9-76.7 12.2C41.2 62.5-30.1 202.4 12.2 332.6 46.2 437.4 143.4 504 247.9 504c25.4 0 51.2-3.9 76.7-12.2 130.2-42.3 201.5-182.2 159.2-312.4zm-74.5 193.7l-52.2 6.4-43.7-60.9 24.4-75.2 71.1-22.1 38.9 36.4c-.2 30.7-7.4 61.1-21.7 89.2-4.7 9.3-10.7 17.8-16.8 26.2zm0-235.4l-10.4 53.1-70.7 22-64.2-46.5V92.5l47.4-26.2c39.2 13 73.4 38 97.9 71.4zM184.9 66.4L232 92.5v73.8l-64.2 46.5-70.6-22-10.1-52.5c24.3-33.4 57.9-58.6 97.8-71.9zM139 379.5L85.9 373c-14.4-20.1-37.3-59.6-37.8-115.3l39-36.4 71.1 22.2 24.3 74.3-43.5 61.7zm48.2 67l-22.4-48.1 43.6-61.7H287l44.3 61.7-22.4 48.1c-6.2 1.8-57.6 20.4-121.7 0z\"],\n    \"gem\": [576, 512, [], \"f3a5\", \"M464 0H112c-4 0-7.8 2-10 5.4L2 152.6c-2.9 4.4-2.6 10.2.7 14.2l276 340.8c4.8 5.9 13.8 5.9 18.6 0l276-340.8c3.3-4.1 3.6-9.8.7-14.2L474.1 5.4C471.8 2 468.1 0 464 0zm-19.3 48l63.3 96h-68.4l-51.7-96h56.8zm-202.1 0h90.7l51.7 96H191l51.6-96zm-111.3 0h56.8l-51.7 96H68l63.3-96zm-43 144h51.4L208 352 88.3 192zm102.9 0h193.6L288 435.3 191.2 192zM368 352l68.2-160h51.4L368 352z\"],\n    \"grimace\": [496, 512, [], \"f57f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm16 16H152c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h192c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48zm-168 96h-24c-8.8 0-16-7.2-16-16v-8h40v24zm0-40h-40v-8c0-8.8 7.2-16 16-16h24v24zm64 40h-48v-24h48v24zm0-40h-48v-24h48v24zm64 40h-48v-24h48v24zm0-40h-48v-24h48v24zm56 24c0 8.8-7.2 16-16 16h-24v-24h40v8zm0-24h-40v-24h24c8.8 0 16 7.2 16 16v8z\"],\n    \"grin\": [496, 512, [], \"f580\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.4-17.7 15.3 7.9 47.1 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zM168 240c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"],\n    \"grin-alt\": [496, 512, [], \"f581\", \"M200.3 248c12.4-18.7 15.1-37.3 15.7-56-.5-18.7-3.3-37.3-15.7-56-8-12-25.1-11.4-32.7 0-12.4 18.7-15.1 37.3-15.7 56 .5 18.7 3.3 37.3 15.7 56 8.1 12 25.2 11.4 32.7 0zm128 0c12.4-18.7 15.1-37.3 15.7-56-.5-18.7-3.3-37.3-15.7-56-8-12-25.1-11.4-32.7 0-12.4 18.7-15.1 37.3-15.7 56 .5 18.7 3.3 37.3 15.7 56 8.1 12 25.2 11.4 32.7 0zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 7.9 47.2 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3z\"],\n    \"grin-beam\": [496, 512, [], \"f582\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 7.9 47.1 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-235.9-72.9c3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3zm160 0c3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3z\"],\n    \"grin-beam-sweat\": [496, 512, [], \"f583\", \"M440 160c29.5 0 53.3-26.3 53.3-58.7 0-25-31.7-75.5-46.2-97.3-3.6-5.3-10.7-5.3-14.2 0-14.5 21.8-46.2 72.3-46.2 97.3 0 32.4 23.8 58.7 53.3 58.7zM248 400c51.9 0 115.3-32.9 123.3-80 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 8 47.1 71.4 80 123.3 80zm130.3-168.3c3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.6 6.2 4.6 9.3 3.7zm105.3-52.9c-24.6 15.7-46 12.9-46.4 12.9 6.9 20.2 10.8 41.8 10.8 64.3 0 110.3-89.7 200-200 200S48 366.3 48 256 137.7 56 248 56c39.8 0 76.8 11.8 108 31.9 1.7-9.5 6.3-24.1 17.2-45.7C336.4 20.6 293.7 8 248 8 111 8 0 119 0 256s111 248 248 248 248-111 248-248c0-27-4.4-52.9-12.4-77.2zM168 189.4c12.3 0 23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.8 19.2-21.6 31.5-21.6z\"],\n    \"grin-hearts\": [496, 512, [], \"f584\", \"M353.6 304.6c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 7.9 47.2 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-152.8-48.9c4.5 1.2 9.2-1.5 10.5-6l19.4-69.9c5.6-20.3-7.4-41.1-28.8-44.5-18.6-3-36.4 9.8-41.5 27.9l-2 7.1-7.1-1.9c-18.2-4.7-38.2 4.3-44.9 22-7.7 20.2 3.8 41.9 24.2 47.2l70.2 18.1zm188.8-65.3c-6.7-17.6-26.7-26.7-44.9-22l-7.1 1.9-2-7.1c-5-18.1-22.8-30.9-41.5-27.9-21.4 3.4-34.4 24.2-28.8 44.5l19.4 69.9c1.2 4.5 5.9 7.2 10.5 6l70.2-18.2c20.4-5.3 31.9-26.9 24.2-47.1zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200z\"],\n    \"grin-squint\": [496, 512, [], \"f585\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.4-17.7 15.3 7.9 47.1 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-234.7-40.8c3.6 4.2 9.9 5.7 15.3 2.5l80-48c3.6-2.2 5.8-6.1 5.8-10.3s-2.2-8.1-5.8-10.3l-80-48c-5.1-3-11.4-1.9-15.3 2.5-3.8 4.5-3.8 11-.1 15.5l33.6 40.3-33.6 40.3c-3.8 4.5-3.7 11.1.1 15.5zm242.9 2.5c5.4 3.2 11.7 1.7 15.3-2.5 3.8-4.5 3.8-11 .1-15.5L343.6 208l33.6-40.3c3.8-4.5 3.7-11-.1-15.5-3.8-4.4-10.2-5.4-15.3-2.5l-80 48c-3.6 2.2-5.8 6.1-5.8 10.3s2.2 8.1 5.8 10.3l80 48z\"],\n    \"grin-squint-tears\": [512, 512, [], \"f586\", \"M117.1 384.1c-25.8 3.7-84 13.7-100.9 30.6-21.9 21.9-21.5 57.9.9 80.3s58.3 22.8 80.3.9C114.3 479 124.3 420.8 128 395c.8-6.4-4.6-11.8-10.9-10.9zm-41.2-41.7C40.3 268 53 176.1 114.6 114.6 152.4 76.8 202.6 56 256 56c36.2 0 70.8 9.8 101.2 27.7 3.8-20.3 8-36.1 12-48.3C333.8 17.2 294.9 8 256 8 192.5 8 129.1 32.2 80.6 80.6c-74.1 74.1-91.3 183.4-52 274 12.2-4.1 27.7-8.3 47.3-12.2zm352.3-187.6c45 76.6 34.9 176.9-30.8 242.6-37.8 37.8-88 58.6-141.4 58.6-30.5 0-59.8-7-86.4-19.8-3.9 19.5-8 35-12.2 47.2 31.4 13.6 65 20.6 98.7 20.6 63.5 0 126.9-24.2 175.4-72.6 78.1-78.1 93.1-195.4 45.2-288.6-12.3 4-28.2 8.1-48.5 12zm-33.3-26.9c25.8-3.7 84-13.7 100.9-30.6 21.9-21.9 21.5-57.9-.9-80.3s-58.3-22.8-80.3-.9C397.7 33 387.7 91.2 384 117c-.8 6.4 4.6 11.8 10.9 10.9zm-187 108.3c-3-3-7.2-4.2-11.4-3.2L106 255.7c-5.7 1.4-9.5 6.7-9.1 12.6.5 5.8 5.1 10.5 10.9 11l52.3 4.8 4.8 52.3c.5 5.8 5.2 10.4 11 10.9h.9c5.5 0 10.3-3.7 11.7-9.1l22.6-90.5c1-4.2-.2-8.5-3.2-11.5zm39.7-25.1l90.5-22.6c5.7-1.4 9.5-6.7 9.1-12.6-.5-5.8-5.1-10.5-10.9-11l-52.3-4.8-4.8-52.3c-.5-5.8-5.2-10.4-11-10.9-5.6-.1-11.2 3.4-12.6 9.1L233 196.5c-1 4.1.2 8.4 3.2 11.4 5 5 11.3 3.2 11.4 3.2zm52 88.5c-29.1 29.1-59.7 52.9-83.9 65.4-9.2 4.8-10 17.5-1.7 23.4 38.9 27.7 107 6.2 143.7-30.6S416 253 388.3 214.1c-5.8-8.2-18.5-7.6-23.4 1.7-12.3 24.2-36.2 54.7-65.3 83.8z\"],\n    \"grin-stars\": [496, 512, [], \"f587\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 7.9 47.2 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-227.9-57.5c-1 6.2 5.4 11 11 7.9l31.3-16.3 31.3 16.3c5.6 3.1 12-1.7 11-7.9l-6-34.9 25.4-24.6c4.5-4.5 1.9-12.2-4.3-13.2l-34.9-5-15.5-31.6c-2.9-5.8-11-5.8-13.9 0l-15.5 31.6-34.9 5c-6.2.9-8.9 8.6-4.3 13.2l25.4 24.6-6.1 34.9zm259.7-72.7l-34.9-5-15.5-31.6c-2.9-5.8-11-5.8-13.9 0l-15.5 31.6-34.9 5c-6.2.9-8.9 8.6-4.3 13.2l25.4 24.6-6 34.9c-1 6.2 5.4 11 11 7.9l31.3-16.3 31.3 16.3c5.6 3.1 12-1.7 11-7.9l-6-34.9 25.4-24.6c4.5-4.6 1.8-12.2-4.4-13.2z\"],\n    \"grin-tears\": [640, 512, [], \"f588\", \"M117.1 256.1c-25.8 3.7-84 13.7-100.9 30.6-21.9 21.9-21.5 57.9.9 80.3s58.3 22.8 80.3.9C114.3 351 124.3 292.8 128 267c.8-6.4-4.6-11.8-10.9-10.9zm506.7 30.6c-16.9-16.9-75.1-26.9-100.9-30.6-6.3-.9-11.7 4.5-10.8 10.8 3.7 25.8 13.7 84 30.6 100.9 21.9 21.9 57.9 21.5 80.3-.9 22.3-22.3 22.7-58.3.8-80.2zm-126.6 61.7C463.8 412.3 396.9 456 320 456c-76.9 0-143.8-43.7-177.2-107.6-12.5 37.4-25.2 43.9-28.3 46.5C159.1 460.7 234.5 504 320 504s160.9-43.3 205.5-109.1c-3.2-2.7-15.9-9.2-28.3-46.5zM122.7 224.5C137.9 129.2 220.5 56 320 56c99.5 0 182.1 73.2 197.3 168.5 2.1-.2 5.2-2.4 49.5 7C554.4 106 448.7 8 320 8S85.6 106 73.2 231.4c44.5-9.4 47.1-7.2 49.5-6.9zM320 400c51.9 0 115.3-32.9 123.3-80 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 8 47.1 71.4 80 123.3 80zm130.3-168.3c3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.6 6.2 4.6 9.3 3.7zM240 189.4c12.3 0 23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.8 19.2-21.6 31.5-21.6z\"],\n    \"grin-tongue\": [496, 512, [], \"f589\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm64 400c0 35.6-29.1 64.5-64.9 64-35.1-.5-63.1-29.8-63.1-65v-42.8l17.7-8.8c15-7.5 31.5 1.7 34.9 16.5l2.8 12.1c2.1 9.2 15.2 9.2 17.3 0l2.8-12.1c3.4-14.8 19.8-24.1 34.9-16.5l17.7 8.8V408zm28.2 25.3c2.2-8.1 3.8-16.5 3.8-25.3v-43.5c14.2-12.4 24.4-27.5 27.3-44.5 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 2.9 17 13.1 32.1 27.3 44.5V408c0 8.8 1.6 17.2 3.8 25.3C91.8 399.9 48 333 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 77-43.8 143.9-107.8 177.3zM168 176c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm160 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"grin-tongue-squint\": [496, 512, [], \"f58a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm64 400c0 35.6-29.1 64.5-64.9 64-35.1-.5-63.1-29.8-63.1-65v-42.8l17.7-8.8c15-7.5 31.5 1.7 34.9 16.5l2.8 12.1c2.1 9.2 15.2 9.2 17.3 0l2.8-12.1c3.4-14.8 19.8-24.1 34.9-16.5l17.7 8.8V408zm28.2 25.3c2.2-8.1 3.8-16.5 3.8-25.3v-43.5c14.2-12.4 24.4-27.5 27.3-44.5 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 2.9 17 13.1 32.1 27.3 44.5V408c0 8.8 1.6 17.2 3.8 25.3C91.8 399.9 48 333 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 77-43.8 143.9-107.8 177.3zm36.9-281.1c-3.8-4.4-10.3-5.5-15.3-2.5l-80 48c-3.6 2.2-5.8 6.1-5.8 10.3s2.2 8.1 5.8 10.3l80 48c5.4 3.2 11.7 1.7 15.3-2.5 3.8-4.5 3.8-11 .1-15.5L343.6 208l33.6-40.3c3.8-4.5 3.7-11.1-.1-15.5zm-162.9 45.5l-80-48c-5-3-11.4-2-15.3 2.5-3.8 4.5-3.8 11-.1 15.5l33.6 40.3-33.6 40.3c-3.8 4.5-3.7 11 .1 15.5 3.6 4.2 9.9 5.7 15.3 2.5l80-48c3.6-2.2 5.8-6.1 5.8-10.3s-2.2-8.1-5.8-10.3z\"],\n    \"grin-tongue-wink\": [496, 512, [], \"f58b\", \"M152 180c-25.7 0-55.9 16.9-59.8 42.1-.8 5 1.7 10 6.1 12.4 4.4 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.2 8 4.7 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-3.9-25.2-34.1-42.1-59.8-42.1zm176-52c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80zm0 128c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-72c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm64 400c0 35.6-29.1 64.5-64.9 64-35.1-.5-63.1-29.8-63.1-65v-42.8l17.7-8.8c15-7.5 31.5 1.7 34.9 16.5l2.8 12.1c2.1 9.2 15.2 9.2 17.3 0l2.8-12.1c3.4-14.8 19.8-24.1 34.9-16.5l17.7 8.8V408zm28.2 25.3c2.2-8.1 3.8-16.5 3.8-25.3v-43.5c14.2-12.4 24.4-27.5 27.3-44.5 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 2.9 17 13.1 32.1 27.3 44.5V408c0 8.8 1.6 17.2 3.8 25.3C91.8 399.9 48 333 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 77-43.8 143.9-107.8 177.3z\"],\n    \"grin-wink\": [496, 512, [], \"f58c\", \"M328 180c-25.69 0-55.88 16.92-59.86 42.12-1.75 11.22 11.5 18.24 19.83 10.84l9.55-8.48c14.81-13.19 46.16-13.19 60.97 0l9.55 8.48c8.48 7.43 21.56.25 19.83-10.84C383.88 196.92 353.69 180 328 180zm-160 60c17.67 0 32-14.33 32-32s-14.33-32-32-32-32 14.33-32 32 14.33 32 32 32zm185.55 64.64c-25.93 8.3-64.4 13.06-105.55 13.06s-79.62-4.75-105.55-13.06c-9.94-3.13-19.4 5.37-17.71 15.34C132.67 367.13 196.06 400 248 400s115.33-32.87 123.26-80.02c1.68-9.89-7.67-18.48-17.71-15.34zM248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 448c-110.28 0-200-89.72-200-200S137.72 56 248 56s200 89.72 200 200-89.72 200-200 200z\"],\n    \"hand-lizard\": [576, 512, [], \"f258\", \"M556.686 290.542L410.328 64.829C397.001 44.272 374.417 32 349.917 32H56C25.121 32 0 57.122 0 88v8c0 44.112 35.888 80 80 80h196.042l-18.333 48H144c-48.523 0-88 39.477-88 88 0 30.879 25.121 56 56 56h131.552c2.987 0 5.914.549 8.697 1.631L352 408.418V480h224V355.829c0-23.225-6.679-45.801-19.314-65.287zM528 432H400v-23.582c0-19.948-12.014-37.508-30.604-44.736l-99.751-38.788A71.733 71.733 0 0 0 243.552 320H112c-4.411 0-8-3.589-8-8 0-22.056 17.944-40 40-40h113.709c19.767 0 37.786-12.407 44.84-30.873l24.552-64.281c8.996-23.553-8.428-48.846-33.63-48.846H80c-17.645 0-32-14.355-32-32v-8c0-4.411 3.589-8 8-8h293.917c8.166 0 15.693 4.09 20.137 10.942l146.358 225.715A71.84 71.84 0 0 1 528 355.829V432z\"],\n    \"hand-paper\": [448, 512, [], \"f256\", \"M372.57 112.641v-10.825c0-43.612-40.52-76.691-83.039-65.546-25.629-49.5-94.09-47.45-117.982.747C130.269 26.456 89.144 57.945 89.144 102v126.13c-19.953-7.427-43.308-5.068-62.083 8.871-29.355 21.796-35.794 63.333-14.55 93.153L132.48 498.569a32 32 0 0 0 26.062 13.432h222.897c14.904 0 27.835-10.289 31.182-24.813l30.184-130.958A203.637 203.637 0 0 0 448 310.564V179c0-40.62-35.523-71.992-75.43-66.359zm27.427 197.922c0 11.731-1.334 23.469-3.965 34.886L368.707 464h-201.92L51.591 302.303c-14.439-20.27 15.023-42.776 29.394-22.605l27.128 38.079c8.995 12.626 29.031 6.287 29.031-9.283V102c0-25.645 36.571-24.81 36.571.691V256c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16V67c0-25.663 36.571-24.81 36.571.691V256c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16V101.125c0-25.672 36.57-24.81 36.57.691V256c0 8.837 7.163 16 16 16h6.857c8.837 0 16-7.163 16-16v-76.309c0-26.242 36.57-25.64 36.57-.691v131.563z\"],\n    \"hand-peace\": [448, 512, [], \"f25b\", \"M362.146 191.976c-13.71-21.649-38.761-34.016-65.006-30.341V74c0-40.804-32.811-74-73.141-74-40.33 0-73.14 33.196-73.14 74L160 168l-18.679-78.85C126.578 50.843 83.85 32.11 46.209 47.208 8.735 62.238-9.571 104.963 5.008 142.85l55.757 144.927c-30.557 24.956-43.994 57.809-24.733 92.218l54.853 97.999C102.625 498.97 124.73 512 148.575 512h205.702c30.744 0 57.558-21.44 64.555-51.797l27.427-118.999a67.801 67.801 0 0 0 1.729-15.203L448 256c0-44.956-43.263-77.343-85.854-64.024zM399.987 326c0 1.488-.169 2.977-.502 4.423l-27.427 119.001c-1.978 8.582-9.29 14.576-17.782 14.576H148.575c-6.486 0-12.542-3.621-15.805-9.449l-54.854-98c-4.557-8.141-2.619-18.668 4.508-24.488l26.647-21.764a16 16 0 0 0 4.812-18.139l-64.09-166.549C37.226 92.956 84.37 74.837 96.51 106.389l59.784 155.357A16 16 0 0 0 171.227 272h11.632c8.837 0 16-7.163 16-16V74c0-34.375 50.281-34.43 50.281 0v182c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16v-28c0-25.122 36.567-25.159 36.567 0v28c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16 0-25.12 36.567-25.16 36.567 0v70z\"],\n    \"hand-point-down\": [448, 512, [], \"f0a7\", \"M188.8 512c45.616 0 83.2-37.765 83.2-83.2v-35.647a93.148 93.148 0 0 0 22.064-7.929c22.006 2.507 44.978-3.503 62.791-15.985C409.342 368.1 448 331.841 448 269.299V248c0-60.063-40-98.512-40-127.2v-2.679c4.952-5.747 8-13.536 8-22.12V32c0-17.673-12.894-32-28.8-32H156.8C140.894 0 128 14.327 128 32v64c0 8.584 3.048 16.373 8 22.12v2.679c0 6.964-6.193 14.862-23.668 30.183l-.148.129-.146.131c-9.937 8.856-20.841 18.116-33.253 25.851C48.537 195.798 0 207.486 0 252.8c0 56.928 35.286 92 83.2 92 8.026 0 15.489-.814 22.4-2.176V428.8c0 45.099 38.101 83.2 83.2 83.2zm0-48c-18.7 0-35.2-16.775-35.2-35.2V270.4c-17.325 0-35.2 26.4-70.4 26.4-26.4 0-35.2-20.625-35.2-44 0-8.794 32.712-20.445 56.1-34.926 14.575-9.074 27.225-19.524 39.875-30.799 18.374-16.109 36.633-33.836 39.596-59.075h176.752C364.087 170.79 400 202.509 400 248v21.299c0 40.524-22.197 57.124-61.325 50.601-8.001 14.612-33.979 24.151-53.625 12.925-18.225 19.365-46.381 17.787-61.05 4.95V428.8c0 18.975-16.225 35.2-35.2 35.2zM328 64c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24z\"],\n    \"hand-point-left\": [512, 512, [], \"f0a5\", \"M0 220.8C0 266.416 37.765 304 83.2 304h35.647a93.148 93.148 0 0 0 7.929 22.064c-2.507 22.006 3.503 44.978 15.985 62.791C143.9 441.342 180.159 480 242.701 480H264c60.063 0 98.512-40 127.2-40h2.679c5.747 4.952 13.536 8 22.12 8h64c17.673 0 32-12.894 32-28.8V188.8c0-15.906-14.327-28.8-32-28.8h-64c-8.584 0-16.373 3.048-22.12 8H391.2c-6.964 0-14.862-6.193-30.183-23.668l-.129-.148-.131-.146c-8.856-9.937-18.116-20.841-25.851-33.253C316.202 80.537 304.514 32 259.2 32c-56.928 0-92 35.286-92 83.2 0 8.026.814 15.489 2.176 22.4H83.2C38.101 137.6 0 175.701 0 220.8zm48 0c0-18.7 16.775-35.2 35.2-35.2h158.4c0-17.325-26.4-35.2-26.4-70.4 0-26.4 20.625-35.2 44-35.2 8.794 0 20.445 32.712 34.926 56.1 9.074 14.575 19.524 27.225 30.799 39.875 16.109 18.374 33.836 36.633 59.075 39.596v176.752C341.21 396.087 309.491 432 264 432h-21.299c-40.524 0-57.124-22.197-50.601-61.325-14.612-8.001-24.151-33.979-12.925-53.625-19.365-18.225-17.787-46.381-4.95-61.05H83.2C64.225 256 48 239.775 48 220.8zM448 360c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24z\"],\n    \"hand-point-right\": [512, 512, [], \"f0a4\", \"M428.8 137.6h-86.177a115.52 115.52 0 0 0 2.176-22.4c0-47.914-35.072-83.2-92-83.2-45.314 0-57.002 48.537-75.707 78.784-7.735 12.413-16.994 23.317-25.851 33.253l-.131.146-.129.148C135.662 161.807 127.764 168 120.8 168h-2.679c-5.747-4.952-13.536-8-22.12-8H32c-17.673 0-32 12.894-32 28.8v230.4C0 435.106 14.327 448 32 448h64c8.584 0 16.373-3.048 22.12-8h2.679c28.688 0 67.137 40 127.2 40h21.299c62.542 0 98.8-38.658 99.94-91.145 12.482-17.813 18.491-40.785 15.985-62.791A93.148 93.148 0 0 0 393.152 304H428.8c45.435 0 83.2-37.584 83.2-83.2 0-45.099-38.101-83.2-83.2-83.2zm0 118.4h-91.026c12.837 14.669 14.415 42.825-4.95 61.05 11.227 19.646 1.687 45.624-12.925 53.625 6.524 39.128-10.076 61.325-50.6 61.325H248c-45.491 0-77.21-35.913-120-39.676V215.571c25.239-2.964 42.966-21.222 59.075-39.596 11.275-12.65 21.725-25.3 30.799-39.875C232.355 112.712 244.006 80 252.8 80c23.375 0 44 8.8 44 35.2 0 35.2-26.4 53.075-26.4 70.4h158.4c18.425 0 35.2 16.5 35.2 35.2 0 18.975-16.225 35.2-35.2 35.2zM88 384c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z\"],\n    \"hand-point-up\": [448, 512, [], \"f0a6\", \"M105.6 83.2v86.177a115.52 115.52 0 0 0-22.4-2.176c-47.914 0-83.2 35.072-83.2 92 0 45.314 48.537 57.002 78.784 75.707 12.413 7.735 23.317 16.994 33.253 25.851l.146.131.148.129C129.807 376.338 136 384.236 136 391.2v2.679c-4.952 5.747-8 13.536-8 22.12v64c0 17.673 12.894 32 28.8 32h230.4c15.906 0 28.8-14.327 28.8-32v-64c0-8.584-3.048-16.373-8-22.12V391.2c0-28.688 40-67.137 40-127.2v-21.299c0-62.542-38.658-98.8-91.145-99.94-17.813-12.482-40.785-18.491-62.791-15.985A93.148 93.148 0 0 0 272 118.847V83.2C272 37.765 234.416 0 188.8 0c-45.099 0-83.2 38.101-83.2 83.2zm118.4 0v91.026c14.669-12.837 42.825-14.415 61.05 4.95 19.646-11.227 45.624-1.687 53.625 12.925 39.128-6.524 61.325 10.076 61.325 50.6V264c0 45.491-35.913 77.21-39.676 120H183.571c-2.964-25.239-21.222-42.966-39.596-59.075-12.65-11.275-25.3-21.725-39.875-30.799C80.712 279.645 48 267.994 48 259.2c0-23.375 8.8-44 35.2-44 35.2 0 53.075 26.4 70.4 26.4V83.2c0-18.425 16.5-35.2 35.2-35.2 18.975 0 35.2 16.225 35.2 35.2zM352 424c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24z\"],\n    \"hand-pointer\": [448, 512, [], \"f25a\", \"M358.182 179.361c-19.493-24.768-52.679-31.945-79.872-19.098-15.127-15.687-36.182-22.487-56.595-19.629V67c0-36.944-29.736-67-66.286-67S89.143 30.056 89.143 67v161.129c-19.909-7.41-43.272-5.094-62.083 8.872-29.355 21.795-35.793 63.333-14.55 93.152l109.699 154.001C134.632 501.59 154.741 512 176 512h178.286c30.802 0 57.574-21.5 64.557-51.797l27.429-118.999A67.873 67.873 0 0 0 448 326v-84c0-46.844-46.625-79.273-89.818-62.639zM80.985 279.697l27.126 38.079c8.995 12.626 29.031 6.287 29.031-9.283V67c0-25.12 36.571-25.16 36.571 0v175c0 8.836 7.163 16 16 16h6.857c8.837 0 16-7.164 16-16v-35c0-25.12 36.571-25.16 36.571 0v35c0 8.836 7.163 16 16 16H272c8.837 0 16-7.164 16-16v-21c0-25.12 36.571-25.16 36.571 0v21c0 8.836 7.163 16 16 16h6.857c8.837 0 16-7.164 16-16 0-25.121 36.571-25.16 36.571 0v84c0 1.488-.169 2.977-.502 4.423l-27.43 119.001c-1.978 8.582-9.29 14.576-17.782 14.576H176c-5.769 0-11.263-2.878-14.697-7.697l-109.712-154c-14.406-20.223 14.994-42.818 29.394-22.606zM176.143 400v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.733 0-14-7.163-14-16zm75.428 0v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.732 0-14-7.163-14-16zM327 400v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.732 0-14-7.163-14-16z\"],\n    \"hand-rock\": [512, 512, [], \"f255\", \"M408.864 79.052c-22.401-33.898-66.108-42.273-98.813-23.588-29.474-31.469-79.145-31.093-108.334-.022-47.16-27.02-108.71 5.055-110.671 60.806C44.846 105.407 0 140.001 0 187.429v56.953c0 32.741 14.28 63.954 39.18 85.634l97.71 85.081c4.252 3.702 3.11 5.573 3.11 32.903 0 17.673 14.327 32 32 32h252c17.673 0 32-14.327 32-32 0-23.513-1.015-30.745 3.982-42.37l42.835-99.656c6.094-14.177 9.183-29.172 9.183-44.568V146.963c0-52.839-54.314-88.662-103.136-67.911zM464 261.406a64.505 64.505 0 0 1-5.282 25.613l-42.835 99.655c-5.23 12.171-7.883 25.04-7.883 38.25V432H188v-10.286c0-16.37-7.14-31.977-19.59-42.817l-97.71-85.08C56.274 281.255 48 263.236 48 244.381v-56.953c0-33.208 52-33.537 52 .677v41.228a16 16 0 0 0 5.493 12.067l7 6.095A16 16 0 0 0 139 235.429V118.857c0-33.097 52-33.725 52 .677v26.751c0 8.836 7.164 16 16 16h7c8.836 0 16-7.164 16-16v-41.143c0-33.134 52-33.675 52 .677v40.466c0 8.836 7.163 16 16 16h7c8.837 0 16-7.164 16-16v-27.429c0-33.03 52-33.78 52 .677v26.751c0 8.836 7.163 16 16 16h7c8.837 0 16-7.164 16-16 0-33.146 52-33.613 52 .677v114.445z\"],\n    \"hand-scissors\": [512, 512, [], \"f257\", \"M256 480l70-.013c5.114 0 10.231-.583 15.203-1.729l118.999-27.427C490.56 443.835 512 417.02 512 386.277V180.575c0-23.845-13.03-45.951-34.005-57.69l-97.999-54.853c-34.409-19.261-67.263-5.824-92.218 24.733L142.85 37.008c-37.887-14.579-80.612 3.727-95.642 41.201-15.098 37.642 3.635 80.37 41.942 95.112L168 192l-94-9.141c-40.804 0-74 32.811-74 73.14 0 40.33 33.196 73.141 74 73.141h87.635c-3.675 26.245 8.692 51.297 30.341 65.006C178.657 436.737 211.044 480 256 480zm0-48.013c-25.16 0-25.12-36.567 0-36.567 8.837 0 16-7.163 16-16v-6.856c0-8.837-7.163-16-16-16h-28c-25.159 0-25.122-36.567 0-36.567h28c8.837 0 16-7.163 16-16v-6.856c0-8.837-7.163-16-16-16H74c-34.43 0-34.375-50.281 0-50.281h182c8.837 0 16-7.163 16-16v-11.632a16 16 0 0 0-10.254-14.933L106.389 128.51c-31.552-12.14-13.432-59.283 19.222-46.717l166.549 64.091a16.001 16.001 0 0 0 18.139-4.812l21.764-26.647c5.82-7.127 16.348-9.064 24.488-4.508l98 54.854c5.828 3.263 9.449 9.318 9.449 15.805v205.701c0 8.491-5.994 15.804-14.576 17.782l-119.001 27.427a19.743 19.743 0 0 1-4.423.502h-70z\"],\n    \"hand-spock\": [512, 512, [], \"f259\", \"M21.096 381.79l129.092 121.513a32 32 0 0 0 21.932 8.698h237.6c14.17 0 26.653-9.319 30.68-22.904l31.815-107.313A115.955 115.955 0 0 0 477 348.811v-36.839c0-4.051.476-8.104 1.414-12.045l31.73-133.41c10.099-42.412-22.316-82.738-65.544-82.525-4.144-24.856-22.543-47.165-49.85-53.992-35.803-8.952-72.227 12.655-81.25 48.75L296.599 184 274.924 52.01c-8.286-36.07-44.303-58.572-80.304-50.296-29.616 6.804-50.138 32.389-51.882 61.295-42.637.831-73.455 40.563-64.071 81.844l31.04 136.508c-27.194-22.515-67.284-19.992-91.482 5.722-25.376 26.961-24.098 69.325 2.871 94.707zm32.068-61.811l.002-.001c7.219-7.672 19.241-7.98 26.856-.813l53.012 49.894C143.225 378.649 160 371.4 160 357.406v-69.479c0-1.193-.134-2.383-.397-3.546l-34.13-150.172c-5.596-24.617 31.502-32.86 37.054-8.421l30.399 133.757a16 16 0 0 0 15.603 12.454h8.604c10.276 0 17.894-9.567 15.594-19.583l-41.62-181.153c-5.623-24.469 31.39-33.076 37.035-8.508l45.22 196.828A16 16 0 0 0 288.956 272h13.217a16 16 0 0 0 15.522-12.119l42.372-169.49c6.104-24.422 42.962-15.159 36.865 9.217L358.805 252.12c-2.521 10.088 5.115 19.88 15.522 19.88h9.694a16 16 0 0 0 15.565-12.295L426.509 146.6c5.821-24.448 42.797-15.687 36.966 8.802L431.72 288.81a100.094 100.094 0 0 0-2.72 23.162v36.839c0 6.548-.943 13.051-2.805 19.328L397.775 464h-219.31L53.978 346.836c-7.629-7.18-7.994-19.229-.814-26.857z\"],\n    \"handshake\": [640, 512, [], \"f2b5\", \"M519.2 127.9l-47.6-47.6A56.252 56.252 0 0 0 432 64H205.2c-14.8 0-29.1 5.9-39.6 16.3L118 127.9H0v255.7h64c17.6 0 31.8-14.2 31.9-31.7h9.1l84.6 76.4c30.9 25.1 73.8 25.7 105.6 3.8 12.5 10.8 26 15.9 41.1 15.9 18.2 0 35.3-7.4 48.8-24 22.1 8.7 48.2 2.6 64-16.8l26.2-32.3c5.6-6.9 9.1-14.8 10.9-23h57.9c.1 17.5 14.4 31.7 31.9 31.7h64V127.9H519.2zM48 351.6c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16zm390-6.9l-26.1 32.2c-2.8 3.4-7.8 4-11.3 1.2l-23.9-19.4-30 36.5c-6 7.3-15 4.8-18 2.4l-36.8-31.5-15.6 19.2c-13.9 17.1-39.2 19.7-55.3 6.6l-97.3-88H96V175.8h41.9l61.7-61.6c2-.8 3.7-1.5 5.7-2.3H262l-38.7 35.5c-29.4 26.9-31.1 72.3-4.4 101.3 14.8 16.2 61.2 41.2 101.5 4.4l8.2-7.5 108.2 87.8c3.4 2.8 3.9 7.9 1.2 11.3zm106-40.8h-69.2c-2.3-2.8-4.9-5.4-7.7-7.7l-102.7-83.4 12.5-11.4c6.5-6 7-16.1 1-22.6L367 167.1c-6-6.5-16.1-6.9-22.6-1l-55.2 50.6c-9.5 8.7-25.7 9.4-34.6 0-9.3-9.9-8.5-25.1 1.2-33.9l65.6-60.1c7.4-6.8 17-10.5 27-10.5l83.7-.2c2.1 0 4.1.8 5.5 2.3l61.7 61.6H544v128zm48 47.7c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16z\"],\n    \"hdd\": [576, 512, [], \"f0a0\", \"M567.403 235.642L462.323 84.589A48 48 0 0 0 422.919 64H153.081a48 48 0 0 0-39.404 20.589L8.597 235.642A48.001 48.001 0 0 0 0 263.054V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V263.054c0-9.801-3-19.366-8.597-27.412zM153.081 112h269.838l77.913 112H75.168l77.913-112zM528 400H48V272h480v128zm-32-64c0 17.673-14.327 32-32 32s-32-14.327-32-32 14.327-32 32-32 32 14.327 32 32zm-96 0c0 17.673-14.327 32-32 32s-32-14.327-32-32 14.327-32 32-32 32 14.327 32 32z\"],\n    \"heart\": [512, 512, [], \"f004\", \"M458.4 64.3C400.6 15.7 311.3 23 256 79.3 200.7 23 111.4 15.6 53.6 64.3-21.6 127.6-10.6 230.8 43 285.5l175.4 178.7c10 10.2 23.4 15.9 37.6 15.9 14.3 0 27.6-5.6 37.6-15.8L469 285.6c53.5-54.7 64.7-157.9-10.6-221.3zm-23.6 187.5L259.4 430.5c-2.4 2.4-4.4 2.4-6.8 0L77.2 251.8c-36.5-37.2-43.9-107.6 7.3-150.7 38.9-32.7 98.9-27.8 136.5 10.5l35 35.7 35-35.7c37.8-38.5 97.8-43.2 136.5-10.6 51.1 43.1 43.5 113.9 7.3 150.8z\"],\n    \"hospital\": [448, 512, [], \"f0f8\", \"M128 244v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12zm140 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm-76 84v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm76 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm180 124v36H0v-36c0-6.627 5.373-12 12-12h19.5V85.035C31.5 73.418 42.245 64 55.5 64H144V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v40h88.5c13.255 0 24 9.418 24 21.035V464H436c6.627 0 12 5.373 12 12zM79.5 463H192v-67c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v67h112.5V112H304v24c0 13.255-10.745 24-24 24H168c-13.255 0-24-10.745-24-24v-24H79.5v351zM266 64h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6z\"],\n    \"hourglass\": [384, 512, [], \"f254\", \"M368 48h4c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12H12C5.373 0 0 5.373 0 12v24c0 6.627 5.373 12 12 12h4c0 80.564 32.188 165.807 97.18 208C47.899 298.381 16 383.9 16 464h-4c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h360c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12h-4c0-80.564-32.188-165.807-97.18-208C336.102 213.619 368 128.1 368 48zM64 48h256c0 101.62-57.307 184-128 184S64 149.621 64 48zm256 416H64c0-101.62 57.308-184 128-184s128 82.38 128 184z\"],\n    \"id-badge\": [384, 512, [], \"f2c1\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm0 464H48V48h288v416zM144 112h96c8.8 0 16-7.2 16-16s-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16s7.2 16 16 16zm48 176c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2z\"],\n    \"id-card\": [576, 512, [], \"f2c2\", \"M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 400H303.2c.9-4.5.8 3.6.8-22.4 0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6 0 26-.2 17.9.8 22.4H48V144h480v288zm-168-80h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm-168 96c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64z\"],\n    \"image\": [512, 512, [], \"f03e\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"],\n    \"images\": [576, 512, [], \"f302\", \"M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v48H54a6 6 0 0 0-6 6v244a6 6 0 0 0 6 6h372a6 6 0 0 0 6-6v-10h48zm42-336H150a6 6 0 0 0-6 6v244a6 6 0 0 0 6 6h372a6 6 0 0 0 6-6V86a6 6 0 0 0-6-6zm6-48c26.51 0 48 21.49 48 48v256c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h384zM264 144c0 22.091-17.909 40-40 40s-40-17.909-40-40 17.909-40 40-40 40 17.909 40 40zm-72 96l39.515-39.515c4.686-4.686 12.284-4.686 16.971 0L288 240l103.515-103.515c4.686-4.686 12.284-4.686 16.971 0L480 208v80H192v-48z\"],\n    \"keyboard\": [576, 512, [], \"f11c\", \"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm8 336c0 4.411-3.589 8-8 8H48c-4.411 0-8-3.589-8-8V112c0-4.411 3.589-8 8-8h480c4.411 0 8 3.589 8 8v288zM170 270v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm-336 82v-28c0-6.627-5.373-12-12-12H82c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm384 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zM122 188v-28c0-6.627-5.373-12-12-12H82c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm-98 158v-16c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v16c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"],\n    \"kiss\": [496, 512, [], \"f596\", \"M168 176c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm136 132c0-19.2-28.8-41.5-71.5-44-3.8-.4-7.4 2.4-8.2 6.2-.9 3.8 1.1 7.7 4.7 9.2l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-5.7 2.4-6 12.2 0 14.8l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-3.6 1.5-5.6 5.4-4.7 9.2.8 3.6 4.1 6.2 7.8 6.2h.5c42.8-2.5 71.5-24.8 71.5-44 0-13-13.4-27.3-35.2-36C290.6 335.3 304 321 304 308zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm80-280c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"kiss-beam\": [496, 512, [], \"f597\", \"M168 152c-23.8 0-52.7 29.3-56 71.4-.3 3.7 2 7.2 5.6 8.3 3.5 1 7.5-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 5.9-4.5 5.6-8.3-3.1-42.1-32-71.4-55.8-71.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm56-148c0-19.2-28.8-41.5-71.5-44-3.8-.4-7.4 2.4-8.2 6.2-.9 3.8 1.1 7.7 4.7 9.2l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-5.7 2.4-6 12.2 0 14.8l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-3.6 1.5-5.6 5.4-4.7 9.2.8 3.6 4.1 6.2 7.8 6.2h.5c42.8-2.5 71.5-24.8 71.5-44 0-13-13.4-27.3-35.2-36C290.6 335.3 304 321 304 308zm24-156c-23.8 0-52.7 29.3-56 71.4-.3 3.7 2 7.2 5.6 8.3 3.5 1 7.5-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 5.9-4.5 5.6-8.3-3.1-42.1-32-71.4-55.8-71.4z\"],\n    \"kiss-wink-heart\": [504, 512, [], \"f598\", \"M304 308.5c0-19.2-28.8-41.5-71.5-44-3.8-.4-7.4 2.4-8.2 6.2-.9 3.8 1.1 7.7 4.7 9.2l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-5.7 2.4-6 12.2 0 14.8l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-3.6 1.5-5.6 5.4-4.7 9.2.8 3.6 4.1 6.2 7.8 6.2h.5c42.8-2.5 71.5-24.8 71.5-44 0-13-13.4-27.3-35.2-36 21.7-9.1 35.1-23.4 35.1-36.4zm70.5-83.5l9.5 8.5c3.8 3.3 9.3 4 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-4-25.2-34.2-42.1-59.8-42.1s-55.9 16.9-59.8 42.1c-.8 5 1.7 10 6.1 12.4 5.8 3.1 11.2.7 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0zM136 208.5c0 17.7 14.3 32 32 32s32-14.3 32-32-14.3-32-32-32-32 14.3-32 32zm365.1 194c-8-20.8-31.5-31.5-53.1-25.9l-8.4 2.2-2.3-8.4c-5.9-21.4-27-36.5-49-33-25.2 4-40.6 28.6-34 52.6l22.9 82.6c1.5 5.3 7 8.5 12.4 7.1l83-21.5c24.1-6.3 37.7-31.8 28.5-55.7zM334 436.3c-26.1 12.5-55.2 19.7-86 19.7-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200c0 22.1-3.7 43.3-10.4 63.2 9 6.4 17 14.2 22.6 23.9 6.4.1 12.6 1.4 18.6 2.9 10.9-27.9 17.1-58.2 17.1-90C496 119 385 8 248 8S0 119 0 256s111 248 248 248c35.4 0 68.9-7.5 99.4-20.9-2.5-7.3 4.3 17.2-13.4-46.8z\"],\n    \"laugh\": [496, 512, [], \"f599\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6S48 309.4 48 256s20.8-103.6 58.6-141.4S194.6 56 248 56s103.6 20.8 141.4 58.6S448 202.6 448 256s-20.8 103.6-58.6 141.4zM328 224c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm-160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm194.4 64H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"laugh-beam\": [496, 512, [], \"f59a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6S48 309.4 48 256s20.8-103.6 58.6-141.4S194.6 56 248 56s103.6 20.8 141.4 58.6S448 202.6 448 256s-20.8 103.6-58.6 141.4zM328 152c-23.8 0-52.7 29.3-56 71.4-.7 8.6 10.8 11.9 14.9 4.5l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c4.1 7.4 15.6 4 14.9-4.5-3.1-42.1-32-71.4-55.8-71.4zm-201 75.9l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c4.1 7.4 15.6 4 14.9-4.5-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.6 8.5 10.9 11.9 15.1 4.5zM362.4 288H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"laugh-squint\": [496, 512, [], \"f59b\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6S48 309.4 48 256s20.8-103.6 58.6-141.4S194.6 56 248 56s103.6 20.8 141.4 58.6S448 202.6 448 256s-20.8 103.6-58.6 141.4zM343.6 196l33.6-40.3c8.6-10.3-3.8-24.8-15.4-18l-80 48c-7.8 4.7-7.8 15.9 0 20.6l80 48c11.5 6.8 24-7.6 15.4-18L343.6 196zm-209.4 58.3l80-48c7.8-4.7 7.8-15.9 0-20.6l-80-48c-11.6-6.9-24 7.7-15.4 18l33.6 40.3-33.6 40.3c-8.7 10.4 3.8 24.8 15.4 18zM362.4 288H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"laugh-wink\": [496, 512, [], \"f59c\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6C68.8 359.6 48 309.4 48 256s20.8-103.6 58.6-141.4C144.4 76.8 194.6 56 248 56s103.6 20.8 141.4 58.6c37.8 37.8 58.6 88 58.6 141.4s-20.8 103.6-58.6 141.4zM328 164c-25.7 0-55.9 16.9-59.9 42.1-1.7 11.2 11.5 18.2 19.8 10.8l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c8.5 7.4 21.6.3 19.8-10.8-3.8-25.2-34-42.1-59.7-42.1zm-160 60c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm194.4 64H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"lemon\": [512, 512, [], \"f094\", \"M484.112 27.889C455.989-.233 416.108-8.057 387.059 8.865 347.604 31.848 223.504-41.111 91.196 91.197-41.277 223.672 31.923 347.472 8.866 387.058c-16.922 29.051-9.1 68.932 19.022 97.054 28.135 28.135 68.011 35.938 97.057 19.021 39.423-22.97 163.557 49.969 295.858-82.329 132.474-132.477 59.273-256.277 82.331-295.861 16.922-29.05 9.1-68.931-19.022-97.054zm-22.405 72.894c-38.8 66.609 45.6 165.635-74.845 286.08-120.44 120.443-219.475 36.048-286.076 74.843-22.679 13.207-64.035-27.241-50.493-50.488 38.8-66.609-45.6-165.635 74.845-286.08C245.573 4.702 344.616 89.086 411.219 50.292c22.73-13.24 64.005 27.288 50.488 50.491zm-169.861 8.736c1.37 10.96-6.404 20.957-17.365 22.327-54.846 6.855-135.779 87.787-142.635 142.635-1.373 10.989-11.399 18.734-22.326 17.365-10.961-1.37-18.735-11.366-17.365-22.326 9.162-73.286 104.167-168.215 177.365-177.365 10.953-1.368 20.956 6.403 22.326 17.364z\"],\n    \"life-ring\": [512, 512, [], \"f1cd\", \"M256 504c136.967 0 248-111.033 248-248S392.967 8 256 8 8 119.033 8 256s111.033 248 248 248zm-103.398-76.72l53.411-53.411c31.806 13.506 68.128 13.522 99.974 0l53.411 53.411c-63.217 38.319-143.579 38.319-206.796 0zM336 256c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zm91.28 103.398l-53.411-53.411c13.505-31.806 13.522-68.128 0-99.974l53.411-53.411c38.319 63.217 38.319 143.579 0 206.796zM359.397 84.72l-53.411 53.411c-31.806-13.505-68.128-13.522-99.973 0L152.602 84.72c63.217-38.319 143.579-38.319 206.795 0zM84.72 152.602l53.411 53.411c-13.506 31.806-13.522 68.128 0 99.974L84.72 359.398c-38.319-63.217-38.319-143.579 0-206.796z\"],\n    \"lightbulb\": [352, 512, [], \"f0eb\", \"M176 80c-52.94 0-96 43.06-96 96 0 8.84 7.16 16 16 16s16-7.16 16-16c0-35.3 28.72-64 64-64 8.84 0 16-7.16 16-16s-7.16-16-16-16zM96.06 459.17c0 3.15.93 6.22 2.68 8.84l24.51 36.84c2.97 4.46 7.97 7.14 13.32 7.14h78.85c5.36 0 10.36-2.68 13.32-7.14l24.51-36.84c1.74-2.62 2.67-5.7 2.68-8.84l.05-43.18H96.02l.04 43.18zM176 0C73.72 0 0 82.97 0 176c0 44.37 16.45 84.85 43.56 115.78 16.64 18.99 42.74 58.8 52.42 92.16v.06h48v-.12c-.01-4.77-.72-9.51-2.15-14.07-5.59-17.81-22.82-64.77-62.17-109.67-20.54-23.43-31.52-53.15-31.61-84.14-.2-73.64 59.67-128 127.95-128 70.58 0 128 57.42 128 128 0 30.97-11.24 60.85-31.65 84.14-39.11 44.61-56.42 91.47-62.1 109.46a47.507 47.507 0 0 0-2.22 14.3v.1h48v-.05c9.68-33.37 35.78-73.18 52.42-92.16C335.55 260.85 352 220.37 352 176 352 78.8 273.2 0 176 0z\"],\n    \"list-alt\": [512, 512, [], \"f022\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm-6 400H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v340a6 6 0 0 1-6 6zm-42-92v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm0-96v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm0-96v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm-252 12c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm0 96c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm0 96c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36z\"],\n    \"map\": [576, 512, [], \"f279\", \"M560.02 32c-1.96 0-3.98.37-5.96 1.16L384.01 96H384L212 35.28A64.252 64.252 0 0 0 191.76 32c-6.69 0-13.37 1.05-19.81 3.14L20.12 87.95A32.006 32.006 0 0 0 0 117.66v346.32C0 473.17 7.53 480 15.99 480c1.96 0 3.97-.37 5.96-1.16L192 416l172 60.71a63.98 63.98 0 0 0 40.05.15l151.83-52.81A31.996 31.996 0 0 0 576 394.34V48.02c0-9.19-7.53-16.02-15.98-16.02zM224 90.42l128 45.19v285.97l-128-45.19V90.42zM48 418.05V129.07l128-44.53v286.2l-.64.23L48 418.05zm480-35.13l-128 44.53V141.26l.64-.24L528 93.95v288.97z\"],\n    \"meh\": [496, 512, [], \"f11a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"],\n    \"meh-blank\": [496, 512, [], \"f5a4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-280c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm160 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"meh-rolling-eyes\": [496, 512, [], \"f5a5\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm88-304c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm0 112c-22.1 0-40-17.9-40-40 0-13.6 7.3-25.1 17.7-32.3-1 2.6-1.7 5.3-1.7 8.3 0 13.3 10.7 24 24 24s24-10.7 24-24c0-2.9-.7-5.7-1.7-8.3 10.4 7.2 17.7 18.7 17.7 32.3 0 22.1-17.9 40-40 40zm-104-40c0-39.8-32.2-72-72-72s-72 32.2-72 72 32.2 72 72 72 72-32.2 72-72zm-112 0c0-13.6 7.3-25.1 17.7-32.3-1 2.6-1.7 5.3-1.7 8.3 0 13.3 10.7 24 24 24s24-10.7 24-24c0-2.9-.7-5.7-1.7-8.3 10.4 7.2 17.7 18.7 17.7 32.3 0 22.1-17.9 40-40 40s-40-17.9-40-40zm192 128H184c-13.2 0-24 10.8-24 24s10.8 24 24 24h128c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"],\n    \"minus-square\": [448, 512, [], \"f146\", \"M108 284c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h232c6.6 0 12 5.4 12 12v32c0 6.6-5.4 12-12 12H108zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"money-bill-alt\": [640, 512, [], \"f3d1\", \"M320 144c-53.02 0-96 50.14-96 112 0 61.85 42.98 112 96 112 53 0 96-50.13 96-112 0-61.86-42.98-112-96-112zm40 168c0 4.42-3.58 8-8 8h-64c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h16v-55.44l-.47.31a7.992 7.992 0 0 1-11.09-2.22l-8.88-13.31a7.992 7.992 0 0 1 2.22-11.09l15.33-10.22a23.99 23.99 0 0 1 13.31-4.03H328c4.42 0 8 3.58 8 8v88h16c4.42 0 8 3.58 8 8v16zM608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zm-16 272c-35.35 0-64 28.65-64 64H112c0-35.35-28.65-64-64-64V176c35.35 0 64-28.65 64-64h416c0 35.35 28.65 64 64 64v160z\"],\n    \"moon\": [512, 512, [], \"f186\", \"M279.135 512c78.756 0 150.982-35.804 198.844-94.775 28.27-34.831-2.558-85.722-46.249-77.401-82.348 15.683-158.272-47.268-158.272-130.792 0-48.424 26.06-92.292 67.434-115.836 38.745-22.05 28.999-80.788-15.022-88.919A257.936 257.936 0 0 0 279.135 0c-141.36 0-256 114.575-256 256 0 141.36 114.576 256 256 256zm0-464c12.985 0 25.689 1.201 38.016 3.478-54.76 31.163-91.693 90.042-91.693 157.554 0 113.848 103.641 199.2 215.252 177.944C402.574 433.964 344.366 464 279.135 464c-114.875 0-208-93.125-208-208s93.125-208 208-208z\"],\n    \"newspaper\": [576, 512, [], \"f1ea\", \"M552 64H112c-20.858 0-38.643 13.377-45.248 32H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h496c13.255 0 24-10.745 24-24V88c0-13.255-10.745-24-24-24zM48 392V144h16v248c0 4.411-3.589 8-8 8s-8-3.589-8-8zm480 8H111.422c.374-2.614.578-5.283.578-8V112h416v288zM172 280h136c6.627 0 12-5.373 12-12v-96c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v96c0 6.627 5.373 12 12 12zm28-80h80v40h-80v-40zm-40 140v-24c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H172c-6.627 0-12-5.373-12-12zm192 0v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0-144v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0 72v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12z\"],\n    \"object-group\": [512, 512, [], \"f247\", \"M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z\"],\n    \"object-ungroup\": [576, 512, [], \"f248\", \"M564 224c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12h-88v-24h12c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v160H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h88v24h-12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h224v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V224h12zM352 64h32v32h-32V64zm0 256h32v32h-32v-32zM64 352H32v-32h32v32zm0-256H32V64h32v32zm32 216v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h224v12c0 6.627 5.373 12 12 12h12v160h-12c-6.627 0-12 5.373-12 12v12H96zm128 136h-32v-32h32v32zm280-64h-12c-6.627 0-12 5.373-12 12v12H256v-12c0-6.627-5.373-12-12-12h-12v-24h88v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12v-88h88v12c0 6.627 5.373 12 12 12h12v160zm40 64h-32v-32h32v32zm0-256h-32v-32h32v32z\"],\n    \"paper-plane\": [512, 512, [], \"f1d8\", \"M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z\"],\n    \"pause-circle\": [512, 512, [], \"f28b\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm96-280v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16zm-112 0v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16z\"],\n    \"play-circle\": [512, 512, [], \"f144\", \"M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z\"],\n    \"plus-square\": [448, 512, [], \"f0fe\", \"M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"question-circle\": [512, 512, [], \"f059\", \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z\"],\n    \"registered\": [512, 512, [], \"f25d\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 448c-110.532 0-200-89.451-200-200 0-110.531 89.451-200 200-200 110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200zm110.442-81.791c-53.046-96.284-50.25-91.468-53.271-96.085 24.267-13.879 39.482-41.563 39.482-73.176 0-52.503-30.247-85.252-101.498-85.252h-78.667c-6.617 0-12 5.383-12 12V380c0 6.617 5.383 12 12 12h38.568c6.617 0 12-5.383 12-12v-83.663h31.958l47.515 89.303a11.98 11.98 0 0 0 10.593 6.36h42.81c9.14 0 14.914-9.799 10.51-17.791zM256.933 239.906h-33.875v-64.14h27.377c32.417 0 38.929 12.133 38.929 31.709-.001 20.913-11.518 32.431-32.431 32.431z\"],\n    \"sad-cry\": [496, 512, [], \"f5b3\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm144 386.4V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v151.4C315.5 447 282.8 456 248 456s-67.5-9-96-24.6V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v114.4c-34.6-36-56-84.7-56-138.4 0-110.3 89.7-200 200-200s200 89.7 200 200c0 53.7-21.4 102.5-56 138.4zM205.8 234.5c4.4-2.4 6.9-7.4 6.1-12.4-4-25.2-34.2-42.1-59.8-42.1s-55.9 16.9-59.8 42.1c-.8 5 1.7 10 6.1 12.4 4.4 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.3 7.9 4.8 13.7 1.6zM344 180c-25.7 0-55.9 16.9-59.8 42.1-.8 5 1.7 10 6.1 12.4 4.5 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.2 8 4.7 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-3.9-25.2-34.1-42.1-59.8-42.1zm-96 92c-30.9 0-56 28.7-56 64s25.1 64 56 64 56-28.7 56-64-25.1-64-56-64z\"],\n    \"sad-tear\": [496, 512, [], \"f5b4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm8-152c-13.2 0-24 10.8-24 24s10.8 24 24 24c23.8 0 46.3 10.5 61.6 28.8 8.1 9.8 23.2 11.9 33.8 3.1 10.2-8.5 11.6-23.6 3.1-33.8C330 320.8 294.1 304 256 304zm-88-64c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-165.6 98.8C151 290.1 126 325.4 126 342.9c0 22.7 18.8 41.1 42 41.1s42-18.4 42-41.1c0-17.5-25-52.8-36.4-68.1-2.8-3.7-8.4-3.7-11.2 0z\"],\n    \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"],\n    \"share-square\": [576, 512, [], \"f14d\", \"M561.938 158.06L417.94 14.092C387.926-15.922 336 5.097 336 48.032v57.198c-42.45 1.88-84.03 6.55-120.76 17.99-35.17 10.95-63.07 27.58-82.91 49.42C108.22 199.2 96 232.6 96 271.94c0 61.697 33.178 112.455 84.87 144.76 37.546 23.508 85.248-12.651 71.02-55.74-15.515-47.119-17.156-70.923 84.11-78.76V336c0 42.993 51.968 63.913 81.94 33.94l143.998-144c18.75-18.74 18.75-49.14 0-67.88zM384 336V232.16C255.309 234.082 166.492 255.35 206.31 376 176.79 357.55 144 324.08 144 271.94c0-109.334 129.14-118.947 240-119.85V48l144 144-144 144zm24.74 84.493a82.658 82.658 0 0 0 20.974-9.303c7.976-4.952 18.286.826 18.286 10.214V464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h132c6.627 0 12 5.373 12 12v4.486c0 4.917-2.987 9.369-7.569 11.152-13.702 5.331-26.396 11.537-38.05 18.585a12.138 12.138 0 0 1-6.28 1.777H54a6 6 0 0 0-6 6v340a6 6 0 0 0 6 6h340a6 6 0 0 0 6-6v-25.966c0-5.37 3.579-10.059 8.74-11.541z\"],\n    \"smile\": [496, 512, [], \"f118\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm4 72.6c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.1-8.4-25.3-7.1-33.8 3.1z\"],\n    \"smile-beam\": [496, 512, [], \"f5b8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm84-143.4c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.6-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.2-8.4-25.3-7.1-33.8 3.1zM136.5 211c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.4 1.1 7.4-.5 9.3-3.7l9.5-17zM328 152c-23.8 0-52.7 29.3-56 71.4-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4z\"],\n    \"smile-wink\": [496, 512, [], \"f4da\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm117.8-146.4c-10.2-8.5-25.3-7.1-33.8 3.1-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8zM168 240c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-60c-25.7 0-55.9 16.9-59.9 42.1-1.7 11.2 11.5 18.2 19.8 10.8l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c8.5 7.4 21.6.3 19.8-10.8-3.8-25.2-34-42.1-59.7-42.1z\"],\n    \"snowflake\": [448, 512, [], \"f2dc\", \"M440.1 355.2l-39.2-23 34.1-9.3c8.4-2.3 13.4-11.1 11.1-19.6l-4.1-15.5c-2.2-8.5-10.9-13.6-19.3-11.3L343 298.2 271.2 256l71.9-42.2 79.7 21.7c8.4 2.3 17-2.8 19.3-11.3l4.1-15.5c2.2-8.5-2.7-17.3-11.1-19.6l-34.1-9.3 39.2-23c7.5-4.4 10.1-14.2 5.8-21.9l-7.9-13.9c-4.3-7.7-14-10.3-21.5-5.9l-39.2 23 9.1-34.7c2.2-8.5-2.7-17.3-11.1-19.6l-15.2-4.1c-8.4-2.3-17 2.8-19.3 11.3l-21.3 81-71.9 42.2v-84.5L306 70.4c6.1-6.2 6.1-16.4 0-22.6l-11.1-11.3c-6.1-6.2-16.1-6.2-22.2 0l-24.9 25.4V16c0-8.8-7-16-15.7-16h-15.7c-8.7 0-15.7 7.2-15.7 16v46.1l-24.9-25.4c-6.1-6.2-16.1-6.2-22.2 0L142.1 48c-6.1 6.2-6.1 16.4 0 22.6l58.3 59.3v84.5l-71.9-42.2-21.3-81c-2.2-8.5-10.9-13.6-19.3-11.3L72.7 84c-8.4 2.3-13.4 11.1-11.1 19.6l9.1 34.7-39.2-23c-7.5-4.4-17.1-1.8-21.5 5.9l-7.9 13.9c-4.3 7.7-1.8 17.4 5.8 21.9l39.2 23-34.1 9.1c-8.4 2.3-13.4 11.1-11.1 19.6L6 224.2c2.2 8.5 10.9 13.6 19.3 11.3l79.7-21.7 71.9 42.2-71.9 42.2-79.7-21.7c-8.4-2.3-17 2.8-19.3 11.3l-4.1 15.5c-2.2 8.5 2.7 17.3 11.1 19.6l34.1 9.3-39.2 23c-7.5 4.4-10.1 14.2-5.8 21.9L10 391c4.3 7.7 14 10.3 21.5 5.9l39.2-23-9.1 34.7c-2.2 8.5 2.7 17.3 11.1 19.6l15.2 4.1c8.4 2.3 17-2.8 19.3-11.3l21.3-81 71.9-42.2v84.5l-58.3 59.3c-6.1 6.2-6.1 16.4 0 22.6l11.1 11.3c6.1 6.2 16.1 6.2 22.2 0l24.9-25.4V496c0 8.8 7 16 15.7 16h15.7c8.7 0 15.7-7.2 15.7-16v-46.1l24.9 25.4c6.1 6.2 16.1 6.2 22.2 0l11.1-11.3c6.1-6.2 6.1-16.4 0-22.6l-58.3-59.3v-84.5l71.9 42.2 21.3 81c2.2 8.5 10.9 13.6 19.3 11.3L375 428c8.4-2.3 13.4-11.1 11.1-19.6l-9.1-34.7 39.2 23c7.5 4.4 17.1 1.8 21.5-5.9l7.9-13.9c4.6-7.5 2.1-17.3-5.5-21.7z\"],\n    \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h340c3.3 0 6 2.7 6 6v340c0 3.3-2.7 6-6 6z\"],\n    \"star\": [576, 512, [], \"f005\", \"M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\"],\n    \"star-half\": [576, 512, [], \"f089\", \"M288 385.3l-124.3 65.4 23.7-138.4-100.6-98 139-20.2 62.2-126V0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6v-54.3z\"],\n    \"sticky-note\": [448, 512, [], \"f249\", \"M448 348.106V80c0-26.51-21.49-48-48-48H48C21.49 32 0 53.49 0 80v351.988c0 26.51 21.49 48 48 48h268.118a48 48 0 0 0 33.941-14.059l83.882-83.882A48 48 0 0 0 448 348.106zm-128 80v-76.118h76.118L320 428.106zM400 80v223.988H296c-13.255 0-24 10.745-24 24v104H48V80h352z\"],\n    \"stop-circle\": [512, 512, [], \"f28d\", \"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm296-80v160c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16z\"],\n    \"sun\": [512, 512, [], \"f185\", \"M494.2 221.9l-59.8-40.5 13.7-71c2.6-13.2-1.6-26.8-11.1-36.4-9.6-9.5-23.2-13.7-36.2-11.1l-70.9 13.7-40.4-59.9c-15.1-22.3-51.9-22.3-67 0l-40.4 59.9-70.8-13.7C98 60.4 84.5 64.5 75 74.1c-9.5 9.6-13.7 23.1-11.1 36.3l13.7 71-59.8 40.5C6.6 229.5 0 242 0 255.5s6.7 26 17.8 33.5l59.8 40.5-13.7 71c-2.6 13.2 1.6 26.8 11.1 36.3 9.5 9.5 22.9 13.7 36.3 11.1l70.8-13.7 40.4 59.9C230 505.3 242.6 512 256 512s26-6.7 33.5-17.8l40.4-59.9 70.9 13.7c13.4 2.7 26.8-1.6 36.3-11.1 9.5-9.5 13.6-23.1 11.1-36.3l-13.7-71 59.8-40.5c11.1-7.5 17.8-20.1 17.8-33.5-.1-13.6-6.7-26.1-17.9-33.7zm-112.9 85.6l17.6 91.2-91-17.6L256 458l-51.9-77-90.9 17.6 17.6-91.2-76.8-52 76.8-52-17.6-91.2 91 17.6L256 53l51.9 76.9 91-17.6-17.6 91.1 76.8 52-76.8 52.1zM256 152c-57.3 0-104 46.7-104 104s46.7 104 104 104 104-46.7 104-104-46.7-104-104-104zm0 160c-30.9 0-56-25.1-56-56s25.1-56 56-56 56 25.1 56 56-25.1 56-56 56z\"],\n    \"surprise\": [496, 512, [], \"f5c2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm0-176c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm-48-72c0-17.7-14.3-32-32-32s-32 14.3-32 32 14.3 32 32 32 32-14.3 32-32zm128-32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"thumbs-down\": [512, 512, [], \"f165\", \"M466.27 225.31c4.674-22.647.864-44.538-8.99-62.99 2.958-23.868-4.021-48.565-17.34-66.99C438.986 39.423 404.117 0 327 0c-7 0-15 .01-22.22.01C201.195.01 168.997 40 128 40h-10.845c-5.64-4.975-13.042-8-21.155-8H32C14.327 32 0 46.327 0 64v240c0 17.673 14.327 32 32 32h64c11.842 0 22.175-6.438 27.708-16h7.052c19.146 16.953 46.013 60.653 68.76 83.4 13.667 13.667 10.153 108.6 71.76 108.6 57.58 0 95.27-31.936 95.27-104.73 0-18.41-3.93-33.73-8.85-46.54h36.48c48.602 0 85.82-41.565 85.82-85.58 0-19.15-4.96-34.99-13.73-49.84zM64 296c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm330.18 16.73H290.19c0 37.82 28.36 55.37 28.36 94.54 0 23.75 0 56.73-47.27 56.73-18.91-18.91-9.46-66.18-37.82-94.54C206.9 342.89 167.28 272 138.92 272H128V85.83c53.611 0 100.001-37.82 171.64-37.82h37.82c35.512 0 60.82 17.12 53.12 65.9 15.2 8.16 26.5 36.44 13.94 57.57 21.581 20.384 18.699 51.065 5.21 65.62 9.45 0 22.36 18.91 22.27 37.81-.09 18.91-16.71 37.82-37.82 37.82z\"],\n    \"thumbs-up\": [512, 512, [], \"f164\", \"M466.27 286.69C475.04 271.84 480 256 480 236.85c0-44.015-37.218-85.58-85.82-85.58H357.7c4.92-12.81 8.85-28.13 8.85-46.54C366.55 31.936 328.86 0 271.28 0c-61.607 0-58.093 94.933-71.76 108.6-22.747 22.747-49.615 66.447-68.76 83.4H32c-17.673 0-32 14.327-32 32v240c0 17.673 14.327 32 32 32h64c14.893 0 27.408-10.174 30.978-23.95 44.509 1.001 75.06 39.94 177.802 39.94 7.22 0 15.22.01 22.22.01 77.117 0 111.986-39.423 112.94-95.33 13.319-18.425 20.299-43.122 17.34-66.99 9.854-18.452 13.664-40.343 8.99-62.99zm-61.75 53.83c12.56 21.13 1.26 49.41-13.94 57.57 7.7 48.78-17.608 65.9-53.12 65.9h-37.82c-71.639 0-118.029-37.82-171.64-37.82V240h10.92c28.36 0 67.98-70.89 94.54-97.46 28.36-28.36 18.91-75.63 37.82-94.54 47.27 0 47.27 32.98 47.27 56.73 0 39.17-28.36 56.72-28.36 94.54h103.99c21.11 0 37.73 18.91 37.82 37.82.09 18.9-12.82 37.81-22.27 37.81 13.489 14.555 16.371 45.236-5.21 65.62zM88 432c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z\"],\n    \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"],\n    \"tired\": [496, 512, [], \"f5c8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm129.1-303.8c-3.8-4.4-10.3-5.4-15.3-2.5l-80 48c-3.6 2.2-5.8 6.1-5.8 10.3s2.2 8.1 5.8 10.3l80 48c5.4 3.2 11.8 1.6 15.3-2.5 3.8-4.5 3.9-11 .1-15.5L343.6 208l33.6-40.3c3.8-4.5 3.7-11.1-.1-15.5zM220 208c0-4.2-2.2-8.1-5.8-10.3l-80-48c-5-3-11.5-1.9-15.3 2.5-3.8 4.5-3.9 11-.1 15.5l33.6 40.3-33.6 40.3c-3.8 4.5-3.7 11 .1 15.5 3.5 4.1 9.9 5.7 15.3 2.5l80-48c3.6-2.2 5.8-6.1 5.8-10.3zm28 64c-45.4 0-100.9 38.3-107.8 93.3-1.5 11.8 6.9 21.6 15.5 17.9C178.4 373.5 212 368 248 368s69.6 5.5 92.3 15.2c8.5 3.7 17-6 15.5-17.9-6.9-55-62.4-93.3-107.8-93.3z\"],\n    \"trash-alt\": [448, 512, [], \"f2ed\", \"M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z\"],\n    \"user\": [448, 512, [], \"f007\", \"M313.6 304c-28.7 0-42.5 16-89.6 16-47.1 0-60.8-16-89.6-16C60.2 304 0 364.2 0 438.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-25.6c0-74.2-60.2-134.4-134.4-134.4zM400 464H48v-25.6c0-47.6 38.8-86.4 86.4-86.4 14.6 0 38.3 16 89.6 16 51.7 0 74.9-16 89.6-16 47.6 0 86.4 38.8 86.4 86.4V464zM224 288c79.5 0 144-64.5 144-144S303.5 0 224 0 80 64.5 80 144s64.5 144 144 144zm0-240c52.9 0 96 43.1 96 96s-43.1 96-96 96-96-43.1-96-96 43.1-96 96-96z\"],\n    \"user-circle\": [496, 512, [], \"f2bd\", \"M248 104c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96zm0 144c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-240C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-49.7 0-95.1-18.3-130.1-48.4 14.9-23 40.4-38.6 69.6-39.5 20.8 6.4 40.6 9.6 60.5 9.6s39.7-3.1 60.5-9.6c29.2 1 54.7 16.5 69.6 39.5-35 30.1-80.4 48.4-130.1 48.4zm162.7-84.1c-24.4-31.4-62.1-51.9-105.1-51.9-10.2 0-26 9.6-57.6 9.6-31.5 0-47.4-9.6-57.6-9.6-42.9 0-80.6 20.5-105.1 51.9C61.9 339.2 48 299.2 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 43.2-13.9 83.2-37.3 115.9z\"],\n    \"window-close\": [512, 512, [], \"f410\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v340zM356.5 194.6L295.1 256l61.4 61.4c4.6 4.6 4.6 12.1 0 16.8l-22.3 22.3c-4.6 4.6-12.1 4.6-16.8 0L256 295.1l-61.4 61.4c-4.6 4.6-12.1 4.6-16.8 0l-22.3-22.3c-4.6-4.6-4.6-12.1 0-16.8l61.4-61.4-61.4-61.4c-4.6-4.6-4.6-12.1 0-16.8l22.3-22.3c4.6-4.6 12.1-4.6 16.8 0l61.4 61.4 61.4-61.4c4.6-4.6 12.1-4.6 16.8 0l22.3 22.3c4.7 4.6 4.7 12.1 0 16.8z\"],\n    \"window-maximize\": [512, 512, [], \"f2d0\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V192h416v234z\"],\n    \"window-minimize\": [512, 512, [], \"f2d1\", \"M480 480H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h448c17.7 0 32 14.3 32 32s-14.3 32-32 32z\"],\n    \"window-restore\": [512, 512, [], \"f2d2\", \"M464 0H144c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v320c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h48c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-96 464H48V256h320v208zm96-96h-48V144c0-26.5-21.5-48-48-48H144V48h320v320z\"]\n  };\n\n  bunker(function () {\n    defineIcons('far', icons);\n  });\n\n}());\n(function () {\n  'use strict';\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var icons = {\n    \"ad\": [512, 512, [], \"f641\", \"M157.52 272h36.96L176 218.78 157.52 272zM352 256c-13.23 0-24 10.77-24 24s10.77 24 24 24 24-10.77 24-24-10.77-24-24-24zM464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM250.58 352h-16.94c-6.81 0-12.88-4.32-15.12-10.75L211.15 320h-70.29l-7.38 21.25A16 16 0 0 1 118.36 352h-16.94c-11.01 0-18.73-10.85-15.12-21.25L140 176.12A23.995 23.995 0 0 1 162.67 160h26.66A23.99 23.99 0 0 1 212 176.13l53.69 154.62c3.61 10.4-4.11 21.25-15.11 21.25zM424 336c0 8.84-7.16 16-16 16h-16c-4.85 0-9.04-2.27-11.98-5.68-8.62 3.66-18.09 5.68-28.02 5.68-39.7 0-72-32.3-72-72s32.3-72 72-72c8.46 0 16.46 1.73 24 4.42V176c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v160z\"],\n    \"address-book\": [448, 512, [], \"f2b9\", \"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-228-32c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H118.4C106 384 96 375.4 96 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"],\n    \"address-card\": [576, 512, [], \"f2bb\", \"M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-352 96c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H86.4C74 384 64 375.4 64 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2zM512 312c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z\"],\n    \"adjust\": [512, 512, [], \"f042\", \"M8 256c0 136.966 111.033 248 248 248s248-111.034 248-248S392.966 8 256 8 8 119.033 8 256zm248 184V72c101.705 0 184 82.311 184 184 0 101.705-82.311 184-184 184z\"],\n    \"air-freshener\": [384, 512, [], \"f5d0\", \"M378.94 321.41L284.7 224h49.22c15.3 0 23.66-16.6 13.86-27.53L234.45 69.96c3.43-6.61 5.55-14 5.55-21.96 0-26.51-21.49-48-48-48s-48 21.49-48 48c0 7.96 2.12 15.35 5.55 21.96L36.22 196.47C26.42 207.4 34.78 224 50.08 224H99.3L5.06 321.41C-6.69 333.56 3.34 352 21.7 352H160v32H48c-8.84 0-16 7.16-16 16v96c0 8.84 7.16 16 16 16h288c8.84 0 16-7.16 16-16v-96c0-8.84-7.16-16-16-16H224v-32h138.3c18.36 0 28.39-18.44 16.64-30.59zM192 31.98c8.85 0 16.02 7.17 16.02 16.02 0 8.84-7.17 16.02-16.02 16.02S175.98 56.84 175.98 48c0-8.85 7.17-16.02 16.02-16.02zM304 432v32H80v-32h224z\"],\n    \"align-center\": [448, 512, [], \"f037\", \"M352 44v40c0 8.837-7.163 16-16 16H112c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h224c8.837 0 16 7.163 16 16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm320-200H112c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z\"],\n    \"align-justify\": [448, 512, [], \"f039\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm16 144h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0-128h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n    \"align-left\": [448, 512, [], \"f036\", \"M288 44v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16zM0 172v40c0 8.837 7.163 16 16 16h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16zm16 312h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm256-200H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z\"],\n    \"align-right\": [448, 512, [], \"f038\", \"M160 84V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H176c-8.837 0-16-7.163-16-16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n    \"allergies\": [448, 512, [], \"f461\", \"M416 112c-17.6 0-32 14.4-32 32v72c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32s-32 14.4-32 32v152c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V32c0-17.6-14.4-32-32-32s-32 14.4-32 32v184c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32S96 46.4 96 64v241l-23.6-32.5c-13-17.9-38-21.8-55.9-8.8s-21.8 38-8.8 55.9l125.6 172.7c9 12.4 23.5 19.8 38.8 19.8h197.6c22.3 0 41.6-15.3 46.7-37l26.5-112.7c3.2-13.7 4.9-28.3 5.1-42.3V144c0-17.6-14.4-32-32-32zM176 416c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 32c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32-128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"ambulance\": [640, 512, [], \"f0f9\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm144-248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm176 248c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n    \"american-sign-language-interpreting\": [640, 512, [], \"f2a3\", \"M290.547 189.039c-20.295-10.149-44.147-11.199-64.739-3.89 42.606 0 71.208 20.475 85.578 50.576 8.576 17.899-5.148 38.071-23.617 38.071 18.429 0 32.211 20.136 23.617 38.071-14.725 30.846-46.123 50.854-80.298 50.854-.557 0-94.471-8.615-94.471-8.615l-66.406 33.347c-9.384 4.693-19.815.379-23.895-7.781L1.86 290.747c-4.167-8.615-1.111-18.897 6.946-23.621l58.072-33.069L108 159.861c6.39-57.245 34.731-109.767 79.743-146.726 11.391-9.448 28.341-7.781 37.51 3.613 9.446 11.394 7.78 28.067-3.612 37.516-12.503 10.559-23.618 22.509-32.509 35.57 21.672-14.729 46.679-24.732 74.186-28.067 14.725-1.945 28.063 8.336 29.73 23.065 1.945 14.728-8.336 28.067-23.062 29.734-16.116 1.945-31.12 7.503-44.178 15.284 26.114-5.713 58.712-3.138 88.079 11.115 13.336 6.669 18.893 22.509 12.224 35.848-6.389 13.06-22.504 18.617-35.564 12.226zm-27.229 69.472c-6.112-12.505-18.338-20.286-32.231-20.286a35.46 35.46 0 0 0-35.565 35.57c0 21.428 17.808 35.57 35.565 35.57 13.893 0 26.119-7.781 32.231-20.286 4.446-9.449 13.614-15.006 23.339-15.284-9.725-.277-18.893-5.835-23.339-15.284zm374.821-37.237c4.168 8.615 1.111 18.897-6.946 23.621l-58.071 33.069L532 352.16c-6.39 57.245-34.731 109.767-79.743 146.726-10.932 9.112-27.799 8.144-37.51-3.613-9.446-11.394-7.78-28.067 3.613-37.516 12.503-10.559 23.617-22.509 32.508-35.57-21.672 14.729-46.679 24.732-74.186 28.067-10.021 2.506-27.552-5.643-29.73-23.065-1.945-14.728 8.336-28.067 23.062-29.734 16.116-1.946 31.12-7.503 44.178-15.284-26.114 5.713-58.712 3.138-88.079-11.115-13.336-6.669-18.893-22.509-12.224-35.848 6.389-13.061 22.505-18.619 35.565-12.227 20.295 10.149 44.147 11.199 64.739 3.89-42.606 0-71.208-20.475-85.578-50.576-8.576-17.899 5.148-38.071 23.617-38.071-18.429 0-32.211-20.136-23.617-38.071 14.033-29.396 44.039-50.887 81.966-50.854l92.803 8.615 66.406-33.347c9.408-4.704 19.828-.354 23.894 7.781l44.455 88.926zm-229.227-18.618c-13.893 0-26.119 7.781-32.231 20.286-4.446 9.449-13.614 15.006-23.339 15.284 9.725.278 18.893 5.836 23.339 15.284 6.112 12.505 18.338 20.286 32.231 20.286a35.46 35.46 0 0 0 35.565-35.57c0-21.429-17.808-35.57-35.565-35.57z\"],\n    \"anchor\": [576, 512, [], \"f13d\", \"M12.971 352h32.394C67.172 454.735 181.944 512 288 512c106.229 0 220.853-57.38 242.635-160h32.394c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0l-67.029 67.029c-7.56 7.56-2.206 20.485 8.485 20.485h35.146c-20.29 54.317-84.963 86.588-144.117 94.015V256h52c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-52v-5.47c37.281-13.178 63.995-48.725 64-90.518C384.005 43.772 341.605.738 289.37.01 235.723-.739 192 42.525 192 96c0 41.798 26.716 77.35 64 90.53V192h-52c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v190.015c-58.936-7.399-123.82-39.679-144.117-94.015h35.146c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0L4.485 331.515C-3.074 339.074 2.28 352 12.971 352zM288 64c17.645 0 32 14.355 32 32s-14.355 32-32 32-32-14.355-32-32 14.355-32 32-32z\"],\n    \"angle-double-down\": [320, 512, [], \"f103\", \"M143 256.3L7 120.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0L313 86.3c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.4 9.5-24.6 9.5-34 .1zm34 192l136-136c9.4-9.4 9.4-24.6 0-33.9l-22.6-22.6c-9.4-9.4-24.6-9.4-33.9 0L160 352.1l-96.4-96.4c-9.4-9.4-24.6-9.4-33.9 0L7 278.3c-9.4 9.4-9.4 24.6 0 33.9l136 136c9.4 9.5 24.6 9.5 34 .1z\"],\n    \"angle-double-left\": [448, 512, [], \"f100\", \"M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z\"],\n    \"angle-double-right\": [448, 512, [], \"f101\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z\"],\n    \"angle-double-up\": [320, 512, [], \"f102\", \"M177 255.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 351.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 425.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1zm-34-192L7 199.7c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l96.4-96.4 96.4 96.4c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9l-136-136c-9.2-9.4-24.4-9.4-33.8 0z\"],\n    \"angle-down\": [320, 512, [], \"f107\", \"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\"],\n    \"angle-left\": [256, 512, [], \"f104\", \"M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z\"],\n    \"angle-right\": [256, 512, [], \"f105\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\"],\n    \"angle-up\": [320, 512, [], \"f106\", \"M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z\"],\n    \"angry\": [496, 512, [], \"f556\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 240c0-9.3 4.1-17.5 10.5-23.4l-31-9.3c-8.5-2.5-13.3-11.5-10.7-19.9 2.5-8.5 11.4-13.2 19.9-10.7l80 24c8.5 2.5 13.3 11.5 10.7 19.9-2.1 6.9-8.4 11.4-15.3 11.4-.5 0-1.1-.2-1.7-.2.7 2.7 1.7 5.3 1.7 8.2 0 17.7-14.3 32-32 32S136 257.7 136 240zm168 154.2c-27.8-33.4-84.2-33.4-112.1 0-13.5 16.3-38.2-4.2-24.6-20.5 20-24 49.4-37.8 80.6-37.8s60.6 13.8 80.6 37.8c13.8 16.5-11.1 36.6-24.5 20.5zm76.6-186.9l-31 9.3c6.3 5.8 10.5 14.1 10.5 23.4 0 17.7-14.3 32-32 32s-32-14.3-32-32c0-2.9.9-5.6 1.7-8.2-.6.1-1.1.2-1.7.2-6.9 0-13.2-4.5-15.3-11.4-2.5-8.5 2.3-17.4 10.7-19.9l80-24c8.4-2.5 17.4 2.3 19.9 10.7 2.5 8.5-2.3 17.4-10.8 19.9z\"],\n    \"ankh\": [320, 512, [], \"f644\", \"M296 256h-44.62C272.46 222.01 288 181.65 288 144 288 55.63 230.69 0 160 0S32 55.63 32 144c0 37.65 15.54 78.01 36.62 112H24c-13.25 0-24 10.74-24 24v32c0 13.25 10.75 24 24 24h96v152c0 13.25 10.75 24 24 24h32c13.25 0 24-10.75 24-24V336h96c13.25 0 24-10.75 24-24v-32c0-13.26-10.75-24-24-24zM160 80c29.61 0 48 24.52 48 64 0 34.66-27.14 78.14-48 100.87-20.86-22.72-48-66.21-48-100.87 0-39.48 18.39-64 48-64z\"],\n    \"apple-alt\": [448, 512, [], \"f5d1\", \"M350.85 129c25.97 4.67 47.27 18.67 63.92 42 14.65 20.67 24.64 46.67 29.96 78 4.67 28.67 4.32 57.33-1 86-7.99 47.33-23.97 87-47.94 119-28.64 38.67-64.59 58-107.87 58-10.66 0-22.3-3.33-34.96-10-8.66-5.33-18.31-8-28.97-8s-20.3 2.67-28.97 8c-12.66 6.67-24.3 10-34.96 10-43.28 0-79.23-19.33-107.87-58-23.97-32-39.95-71.67-47.94-119-5.32-28.67-5.67-57.33-1-86 5.32-31.33 15.31-57.33 29.96-78 16.65-23.33 37.95-37.33 63.92-42 15.98-2.67 37.95-.33 65.92 7 23.97 6.67 44.28 14.67 60.93 24 16.65-9.33 36.96-17.33 60.93-24 27.98-7.33 49.96-9.67 65.94-7zm-54.94-41c-9.32 8.67-21.65 15-36.96 19-10.66 3.33-22.3 5-34.96 5l-14.98-1c-1.33-9.33-1.33-20 0-32 2.67-24 10.32-42.33 22.97-55 9.32-8.67 21.65-15 36.96-19 10.66-3.33 22.3-5 34.96-5l14.98 1 1 15c0 12.67-1.67 24.33-4.99 35-3.99 15.33-10.31 27.67-18.98 37z\"],\n    \"archive\": [512, 512, [], \"f187\", \"M32 448c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V160H32v288zm160-212c0-6.6 5.4-12 12-12h104c6.6 0 12 5.4 12 12v8c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-8zM480 32H32C14.3 32 0 46.3 0 64v48c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16V64c0-17.7-14.3-32-32-32z\"],\n    \"archway\": [576, 512, [], \"f557\", \"M560 448h-16V96H32v352H16.02c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16H176c8.84 0 16-7.16 16-16V320c0-53.02 42.98-96 96-96s96 42.98 96 96l.02 160v16c0 8.84 7.16 16 16 16H560c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm0-448H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h544c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16z\"],\n    \"arrow-alt-circle-down\": [512, 512, [], \"f358\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM212 140v116h-70.9c-10.7 0-16.1 13-8.5 20.5l114.9 114.3c4.7 4.7 12.2 4.7 16.9 0l114.9-114.3c7.6-7.6 2.2-20.5-8.5-20.5H300V140c0-6.6-5.4-12-12-12h-64c-6.6 0-12 5.4-12 12z\"],\n    \"arrow-alt-circle-left\": [512, 512, [], \"f359\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm116-292H256v-70.9c0-10.7-13-16.1-20.5-8.5L121.2 247.5c-4.7 4.7-4.7 12.2 0 16.9l114.3 114.9c7.6 7.6 20.5 2.2 20.5-8.5V300h116c6.6 0 12-5.4 12-12v-64c0-6.6-5.4-12-12-12z\"],\n    \"arrow-alt-circle-right\": [512, 512, [], \"f35a\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zM140 300h116v70.9c0 10.7 13 16.1 20.5 8.5l114.3-114.9c4.7-4.7 4.7-12.2 0-16.9l-114.3-115c-7.6-7.6-20.5-2.2-20.5 8.5V212H140c-6.6 0-12 5.4-12 12v64c0 6.6 5.4 12 12 12z\"],\n    \"arrow-alt-circle-up\": [512, 512, [], \"f35b\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm292 116V256h70.9c10.7 0 16.1-13 8.5-20.5L264.5 121.2c-4.7-4.7-12.2-4.7-16.9 0l-115 114.3c-7.6 7.6-2.2 20.5 8.5 20.5H212v116c0 6.6 5.4 12 12 12h64c6.6 0 12-5.4 12-12z\"],\n    \"arrow-circle-down\": [512, 512, [], \"f0ab\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\"],\n    \"arrow-circle-left\": [512, 512, [], \"f0a8\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm28.9-143.6L209.4 288H392c13.3 0 24-10.7 24-24v-16c0-13.3-10.7-24-24-24H209.4l75.5-72.4c9.7-9.3 9.9-24.8.4-34.3l-11-10.9c-9.4-9.4-24.6-9.4-33.9 0L107.7 239c-9.4 9.4-9.4 24.6 0 33.9l132.7 132.7c9.4 9.4 24.6 9.4 33.9 0l11-10.9c9.5-9.5 9.3-25-.4-34.3z\"],\n    \"arrow-circle-right\": [512, 512, [], \"f0a9\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z\"],\n    \"arrow-circle-up\": [512, 512, [], \"f0aa\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\"],\n    \"arrow-down\": [448, 512, [], \"f063\", \"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z\"],\n    \"arrow-left\": [448, 512, [], \"f060\", \"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\"],\n    \"arrow-right\": [448, 512, [], \"f061\", \"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"],\n    \"arrow-up\": [448, 512, [], \"f062\", \"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"],\n    \"arrows-alt\": [512, 512, [], \"f0b2\", \"M352.201 425.775l-79.196 79.196c-9.373 9.373-24.568 9.373-33.941 0l-79.196-79.196c-15.119-15.119-4.411-40.971 16.971-40.97h51.162L228 284H127.196v51.162c0 21.382-25.851 32.09-40.971 16.971L7.029 272.937c-9.373-9.373-9.373-24.569 0-33.941L86.225 159.8c15.119-15.119 40.971-4.411 40.971 16.971V228H228V127.196h-51.23c-21.382 0-32.09-25.851-16.971-40.971l79.196-79.196c9.373-9.373 24.568-9.373 33.941 0l79.196 79.196c15.119 15.119 4.411 40.971-16.971 40.971h-51.162V228h100.804v-51.162c0-21.382 25.851-32.09 40.97-16.971l79.196 79.196c9.373 9.373 9.373 24.569 0 33.941L425.773 352.2c-15.119 15.119-40.971 4.411-40.97-16.971V284H284v100.804h51.23c21.382 0 32.09 25.851 16.971 40.971z\"],\n    \"arrows-alt-h\": [512, 512, [], \"f337\", \"M377.941 169.941V216H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.568 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296h243.882v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.568 0-33.941l-86.059-86.059c-15.119-15.12-40.971-4.412-40.971 16.97z\"],\n    \"arrows-alt-v\": [256, 512, [], \"f338\", \"M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z\"],\n    \"assistive-listening-systems\": [512, 512, [], \"f2a2\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm-80 236c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zM32 448c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm480-187.993c0-1.518-.012-3.025-.045-4.531C510.076 140.525 436.157 38.47 327.994 1.511c-14.633-4.998-30.549 2.809-35.55 17.442-5 14.633 2.81 30.549 17.442 35.55 85.906 29.354 144.61 110.513 146.077 201.953l.003.188c.026 1.118.033 2.236.033 3.363 0 15.464 12.536 28 28 28s28.001-12.536 28.001-28zM152.971 439.029l-80-80L39.03 392.97l80 80 33.941-33.941z\"],\n    \"asterisk\": [512, 512, [], \"f069\", \"M478.21 334.093L336 256l142.21-78.093c11.795-6.477 15.961-21.384 9.232-33.037l-19.48-33.741c-6.728-11.653-21.72-15.499-33.227-8.523L296 186.718l3.475-162.204C299.763 11.061 288.937 0 275.48 0h-38.96c-13.456 0-24.283 11.061-23.994 24.514L216 186.718 77.265 102.607c-11.506-6.976-26.499-3.13-33.227 8.523l-19.48 33.741c-6.728 11.653-2.562 26.56 9.233 33.037L176 256 33.79 334.093c-11.795 6.477-15.961 21.384-9.232 33.037l19.48 33.741c6.728 11.653 21.721 15.499 33.227 8.523L216 325.282l-3.475 162.204C212.237 500.939 223.064 512 236.52 512h38.961c13.456 0 24.283-11.061 23.995-24.514L296 325.282l138.735 84.111c11.506 6.976 26.499 3.13 33.227-8.523l19.48-33.741c6.728-11.653 2.563-26.559-9.232-33.036z\"],\n    \"at\": [512, 512, [], \"f1fa\", \"M256 8C118.941 8 8 118.919 8 256c0 137.059 110.919 248 248 248 48.154 0 95.342-14.14 135.408-40.223 12.005-7.815 14.625-24.288 5.552-35.372l-10.177-12.433c-7.671-9.371-21.179-11.667-31.373-5.129C325.92 429.757 291.314 440 256 440c-101.458 0-184-82.542-184-184S154.542 72 256 72c100.139 0 184 57.619 184 160 0 38.786-21.093 79.742-58.17 83.693-17.349-.454-16.91-12.857-13.476-30.024l23.433-121.11C394.653 149.75 383.308 136 368.225 136h-44.981a13.518 13.518 0 0 0-13.432 11.993l-.01.092c-14.697-17.901-40.448-21.775-59.971-21.775-74.58 0-137.831 62.234-137.831 151.46 0 65.303 36.785 105.87 96 105.87 26.984 0 57.369-15.637 74.991-38.333 9.522 34.104 40.613 34.103 70.71 34.103C462.609 379.41 504 307.798 504 232 504 95.653 394.023 8 256 8zm-21.68 304.43c-22.249 0-36.07-15.623-36.07-40.771 0-44.993 30.779-72.729 58.63-72.729 22.292 0 35.601 15.241 35.601 40.77 0 45.061-33.875 72.73-58.161 72.73z\"],\n    \"atlas\": [448, 512, [], \"f558\", \"M318.38 208h-39.09c-1.49 27.03-6.54 51.35-14.21 70.41 27.71-13.24 48.02-39.19 53.3-70.41zm0-32c-5.29-31.22-25.59-57.17-53.3-70.41 7.68 19.06 12.72 43.38 14.21 70.41h39.09zM224 97.31c-7.69 7.45-20.77 34.42-23.43 78.69h46.87c-2.67-44.26-15.75-71.24-23.44-78.69zm-41.08 8.28c-27.71 13.24-48.02 39.19-53.3 70.41h39.09c1.49-27.03 6.53-51.35 14.21-70.41zm0 172.82c-7.68-19.06-12.72-43.38-14.21-70.41h-39.09c5.28 31.22 25.59 57.17 53.3 70.41zM247.43 208h-46.87c2.66 44.26 15.74 71.24 23.43 78.69 7.7-7.45 20.78-34.43 23.44-78.69zM448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM224 64c70.69 0 128 57.31 128 128s-57.31 128-128 128S96 262.69 96 192 153.31 64 224 64zm160 384H96c-19.2 0-32-12.8-32-32s16-32 32-32h288v64z\"],\n    \"atom\": [448, 512, [], \"f5d2\", \"M413.03 256c40.13-54.89 41.51-98.62 25.14-128-10.91-19.52-40.54-50.73-116.33-41.88C300.36 34.89 267.64 0 224 0s-76.36 34.89-97.84 86.12C50.43 77.34 20.73 108.48 9.83 128c-16.38 29.4-15 73.09 25.14 128-40.13 54.89-41.51 98.62-25.14 128 29.21 52.34 101.68 43.58 116.33 41.88C147.63 477.1 180.36 512 224 512s76.37-34.9 97.84-86.12c14.64 1.7 87.11 10.46 116.33-41.88 16.38-29.4 15-73.09-25.14-128zM63.38 352c-4.03-7.21-.19-24.8 14.95-48.29 6.96 6.53 14.2 12.89 21.87 19.18 1.71 13.71 4 27.08 6.76 40.08-24.56.89-39.89-4.37-43.58-10.97zm36.82-162.88c-7.66 6.29-14.9 12.65-21.87 19.18-15.13-23.5-18.97-41.09-14.95-48.3 3.41-6.14 16.39-11.47 37.92-11.47 1.71 0 3.87.3 5.69.37a472.191 472.191 0 0 0-6.79 40.22zM224 64c9.47 0 22.2 13.52 33.86 37.26-11.19 3.7-22.44 8-33.86 12.86-11.42-4.86-22.67-9.16-33.86-12.86C201.8 77.52 214.53 64 224 64zm0 384c-9.47 0-22.2-13.52-33.86-37.26 11.19-3.7 22.44-8 33.86-12.86 11.42 4.86 22.67 9.16 33.86 12.86C246.2 434.48 233.47 448 224 448zm62.5-157.33c-26.7 19.08-46.14 29.33-62.5 37.48-16.35-8.14-35.8-18.41-62.5-37.48-1.99-27.79-1.99-41.54 0-69.33 26.67-19.05 46.13-29.32 62.5-37.48 16.39 8.17 35.86 18.44 62.5 37.48 1.98 27.78 1.99 41.53 0 69.33zM384.62 352c-3.67 6.62-19 11.82-43.58 10.95 2.76-13 5.05-26.37 6.76-40.06 7.66-6.29 14.9-12.65 21.87-19.18 15.13 23.49 18.97 41.08 14.95 48.29zm-14.95-143.71c-6.96-6.53-14.2-12.89-21.87-19.18a473.535 473.535 0 0 0-6.79-40.22c1.82-.07 3.97-.37 5.69-.37 21.52 0 34.51 5.34 37.92 11.47 4.02 7.22.18 24.81-14.95 48.3zM224 224c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"],\n    \"audio-description\": [512, 512, [], \"f29e\", \"M162.925 238.709l8.822 30.655h-25.606l9.041-30.652c1.277-4.421 2.651-9.994 3.872-15.245 1.22 5.251 2.594 10.823 3.871 15.242zm166.474-32.099h-14.523v98.781h14.523c29.776 0 46.175-17.678 46.175-49.776 0-32.239-17.49-49.005-46.175-49.005zM512 112v288c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48zM245.459 336.139l-57.097-168A12.001 12.001 0 0 0 177 160h-35.894a12.001 12.001 0 0 0-11.362 8.139l-57.097 168C70.003 343.922 75.789 352 84.009 352h29.133a12 12 0 0 0 11.535-8.693l8.574-29.906h51.367l8.793 29.977A12 12 0 0 0 204.926 352h29.172c8.22 0 14.006-8.078 11.361-15.861zm184.701-80.525c0-58.977-37.919-95.614-98.96-95.614h-57.366c-6.627 0-12 5.373-12 12v168c0 6.627 5.373 12 12 12H331.2c61.041 0 98.96-36.933 98.96-96.386z\"],\n    \"award\": [384, 512, [], \"f559\", \"M97.12 362.63c-8.69-8.69-4.16-6.24-25.12-11.85-9.51-2.55-17.87-7.45-25.43-13.32L1.2 448.7c-4.39 10.77 3.81 22.47 15.43 22.03l52.69-2.01L105.56 507c8 8.44 22.04 5.81 26.43-4.96l52.05-127.62c-10.84 6.04-22.87 9.58-35.31 9.58-19.5 0-37.82-7.59-51.61-21.37zM382.8 448.7l-45.37-111.24c-7.56 5.88-15.92 10.77-25.43 13.32-21.07 5.64-16.45 3.18-25.12 11.85-13.79 13.78-32.12 21.37-51.62 21.37-12.44 0-24.47-3.55-35.31-9.58L252 502.04c4.39 10.77 18.44 13.4 26.43 4.96l36.25-38.28 52.69 2.01c11.62.44 19.82-11.27 15.43-22.03zM263 340c15.28-15.55 17.03-14.21 38.79-20.14 13.89-3.79 24.75-14.84 28.47-28.98 7.48-28.4 5.54-24.97 25.95-45.75 10.17-10.35 14.14-25.44 10.42-39.58-7.47-28.38-7.48-24.42 0-52.83 3.72-14.14-.25-29.23-10.42-39.58-20.41-20.78-18.47-17.36-25.95-45.75-3.72-14.14-14.58-25.19-28.47-28.98-27.88-7.61-24.52-5.62-44.95-26.41-10.17-10.35-25-14.4-38.89-10.61-27.87 7.6-23.98 7.61-51.9 0-13.89-3.79-28.72.25-38.89 10.61-20.41 20.78-17.05 18.8-44.94 26.41-13.89 3.79-24.75 14.84-28.47 28.98-7.47 28.39-5.54 24.97-25.95 45.75-10.17 10.35-14.15 25.44-10.42 39.58 7.47 28.36 7.48 24.4 0 52.82-3.72 14.14.25 29.23 10.42 39.59 20.41 20.78 18.47 17.35 25.95 45.75 3.72 14.14 14.58 25.19 28.47 28.98C104.6 325.96 106.27 325 121 340c13.23 13.47 33.84 15.88 49.74 5.82a39.676 39.676 0 0 1 42.53 0c15.89 10.06 36.5 7.65 49.73-5.82zM97.66 175.96c0-53.03 42.24-96.02 94.34-96.02s94.34 42.99 94.34 96.02-42.24 96.02-94.34 96.02-94.34-42.99-94.34-96.02z\"],\n    \"baby\": [384, 512, [], \"f77c\", \"M192 160c44.2 0 80-35.8 80-80S236.2 0 192 0s-80 35.8-80 80 35.8 80 80 80zm-53.4 248.8l25.6-32-61.5-51.2L56.8 383c-11.4 14.2-11.7 34.4-.8 49l48 64c7.9 10.5 19.9 16 32 16 8.3 0 16.8-2.6 24-8 17.7-13.2 21.2-38.3 8-56l-29.4-39.2zm142.7-83.2l-61.5 51.2 25.6 32L216 448c-13.2 17.7-9.7 42.8 8 56 7.2 5.4 15.6 8 24 8 12.2 0 24.2-5.5 32-16l48-64c10.9-14.6 10.6-34.8-.8-49l-45.9-57.4zM376.7 145c-12.7-18.1-37.6-22.4-55.7-9.8l-40.6 28.5c-52.7 37-124.2 37-176.8 0L63 135.3C44.9 122.6 20 127 7.3 145-5.4 163.1-1 188 17 200.7l40.6 28.5c17 11.9 35.4 20.9 54.4 27.9V288h160v-30.8c19-7 37.4-16 54.4-27.9l40.6-28.5c18.1-12.8 22.4-37.7 9.7-55.8z\"],\n    \"baby-carriage\": [512, 512, [], \"f77d\", \"M144.8 17c-11.3-17.8-37.2-22.8-54-9.4C35.3 51.9 0 118 0 192h256L144.8 17zM496 96h-48c-35.3 0-64 28.7-64 64v64H0c0 50.6 23 96.4 60.3 130.7C25.7 363.6 0 394.7 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-8.9-1.8-17.2-4.4-25.2 21.6 5.9 44.6 9.2 68.4 9.2s46.9-3.3 68.4-9.2c-2.7 8-4.4 16.3-4.4 25.2 0 44.2 35.8 80 80 80s80-35.8 80-80c0-37.3-25.7-68.4-60.3-77.3C425 320.4 448 274.6 448 224v-64h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM80 464c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm320-32c0 17.6-14.4 32-32 32s-32-14.4-32-32 14.4-32 32-32 32 14.4 32 32z\"],\n    \"backspace\": [640, 512, [], \"f55a\", \"M576 64H205.26A63.97 63.97 0 0 0 160 82.75L9.37 233.37c-12.5 12.5-12.5 32.76 0 45.25L160 429.25c12 12 28.28 18.75 45.25 18.75H576c35.35 0 64-28.65 64-64V128c0-35.35-28.65-64-64-64zm-84.69 254.06c6.25 6.25 6.25 16.38 0 22.63l-22.62 22.62c-6.25 6.25-16.38 6.25-22.63 0L384 301.25l-62.06 62.06c-6.25 6.25-16.38 6.25-22.63 0l-22.62-22.62c-6.25-6.25-6.25-16.38 0-22.63L338.75 256l-62.06-62.06c-6.25-6.25-6.25-16.38 0-22.63l22.62-22.62c6.25-6.25 16.38-6.25 22.63 0L384 210.75l62.06-62.06c6.25-6.25 16.38-6.25 22.63 0l22.62 22.62c6.25 6.25 6.25 16.38 0 22.63L429.25 256l62.06 62.06z\"],\n    \"backward\": [512, 512, [], \"f04a\", \"M11.5 280.6l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2zm256 0l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2z\"],\n    \"bacon\": [576, 512, [], \"f7e5\", \"M218.92 336.39c34.89-34.89 44.2-59.7 54.05-86 10.61-28.29 21.59-57.54 61.37-97.34s69.05-50.77 97.35-61.38c23.88-9 46.64-17.68 76.79-45.37L470.81 8.91a31 31 0 0 0-40.18-2.83c-13.64 10.1-25.15 14.39-41 20.3C247 79.52 209.26 191.29 200.65 214.1c-29.75 78.83-89.55 94.68-98.72 98.09-24.86 9.26-54.73 20.38-91.07 50.36C-3 374-3.63 395 9.07 407.61l35.76 35.51C80 410.52 107 400.15 133 390.39c26.27-9.84 51.06-19.12 85.92-54zm348-232l-35.75-35.51c-35.19 32.63-62.18 43-88.25 52.79-26.26 9.85-51.06 19.16-85.95 54s-44.19 59.69-54 86C292.33 290 281.34 319.22 241.55 359s-69 50.73-97.3 61.32c-23.86 9-46.61 17.66-76.72 45.33l37.68 37.43a31 31 0 0 0 40.18 2.82c13.6-10.06 25.09-14.34 40.94-20.24 142.2-53 180-164.1 188.94-187.69C405 219.18 464.8 203.3 474 199.86c24.87-9.27 54.74-20.4 91.11-50.41 13.89-11.4 14.52-32.45 1.82-45.05z\"],\n    \"balance-scale\": [640, 512, [], \"f24e\", \"M256 336h-.02c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C-2.06 328.75.02 320.33.02 336H0c0 44.18 57.31 80 128 80s128-35.82 128-80zM128 176l72 144H56l72-144zm511.98 160c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0-87.12 174.26-85.04 165.84-85.04 181.51H384c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02zM440 320l72-144 72 144H440zm88 128H352V153.25c23.51-10.29 41.16-31.48 46.39-57.25H528c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H383.64C369.04 12.68 346.09 0 320 0s-49.04 12.68-63.64 32H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h129.61c5.23 25.76 22.87 46.96 46.39 57.25V448H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"ban\": [512, 512, [], \"f05e\", \"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\"],\n    \"band-aid\": [640, 512, [], \"f462\", \"M0 160v192c0 35.3 28.7 64 64 64h96V96H64c-35.3 0-64 28.7-64 64zm576-64h-96v320h96c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM192 416h256V96H192v320zm176-232c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24z\"],\n    \"barcode\": [512, 512, [], \"f02a\", \"M0 448V64h18v384H0zm26.857-.273V64H36v383.727h-9.143zm27.143 0V64h8.857v383.727H54zm44.857 0V64h8.857v383.727h-8.857zm36 0V64h17.714v383.727h-17.714zm44.857 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm35.715 0V64h18v383.727h-18zm44.857 0V64h18v383.727h-18zm35.999 0V64h18.001v383.727h-18.001zm36.001 0V64h18.001v383.727h-18.001zm26.857 0V64h18v383.727h-18zm45.143 0V64h26.857v383.727h-26.857zm35.714 0V64h9.143v383.727H476zm18 .273V64h18v384h-18z\"],\n    \"bars\": [448, 512, [], \"f0c9\", \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n    \"baseball-ball\": [496, 512, [], \"f433\", \"M368.5 363.9l28.8-13.9c11.1 22.9 26 43.2 44.1 60.9 34-42.5 54.5-96.3 54.5-154.9 0-58.5-20.4-112.2-54.2-154.6-17.8 17.3-32.6 37.1-43.6 59.5l-28.7-14.1c12.8-26 30-49 50.8-69C375.6 34.7 315 8 248 8 181.1 8 120.5 34.6 75.9 77.7c20.7 19.9 37.9 42.9 50.7 68.8l-28.7 14.1c-11-22.3-25.7-42.1-43.5-59.4C20.4 143.7 0 197.4 0 256c0 58.6 20.4 112.3 54.4 154.7 18.2-17.7 33.2-38 44.3-61l28.8 13.9c-12.9 26.7-30.3 50.3-51.5 70.7 44.5 43.1 105.1 69.7 172 69.7 66.8 0 127.3-26.5 171.9-69.5-21.1-20.4-38.5-43.9-51.4-70.6zm-228.3-32l-30.5-9.8c14.9-46.4 12.7-93.8-.6-134l30.4-10c15 45.6 18 99.9.7 153.8zm216.3-153.4l30.4 10c-13.2 40.1-15.5 87.5-.6 134l-30.5 9.8c-17.3-54-14.3-108.3.7-153.8z\"],\n    \"basketball-ball\": [496, 512, [], \"f434\", \"M212.3 10.3c-43.8 6.3-86.2 24.1-122.2 53.8l77.4 77.4c27.8-35.8 43.3-81.2 44.8-131.2zM248 222L405.9 64.1c-42.4-35-93.6-53.5-145.5-56.1-1.2 63.9-21.5 122.3-58.7 167.7L248 222zM56.1 98.1c-29.7 36-47.5 78.4-53.8 122.2 50-1.5 95.5-17 131.2-44.8L56.1 98.1zm272.2 204.2c45.3-37.1 103.7-57.4 167.7-58.7-2.6-51.9-21.1-103.1-56.1-145.5L282 256l46.3 46.3zM248 290L90.1 447.9c42.4 34.9 93.6 53.5 145.5 56.1 1.3-64 21.6-122.4 58.7-167.7L248 290zm191.9 123.9c29.7-36 47.5-78.4 53.8-122.2-50.1 1.6-95.5 17.1-131.2 44.8l77.4 77.4zM167.7 209.7C122.3 246.9 63.9 267.3 0 268.4c2.6 51.9 21.1 103.1 56.1 145.5L214 256l-46.3-46.3zm116 292c43.8-6.3 86.2-24.1 122.2-53.8l-77.4-77.4c-27.7 35.7-43.2 81.2-44.8 131.2z\"],\n    \"bath\": [512, 512, [], \"f2cd\", \"M488 256H80V112c0-17.645 14.355-32 32-32 11.351 0 21.332 5.945 27.015 14.88-16.492 25.207-14.687 59.576 6.838 83.035-4.176 4.713-4.021 11.916.491 16.428l11.314 11.314c4.686 4.686 12.284 4.686 16.971 0l95.03-95.029c4.686-4.686 4.686-12.284 0-16.971l-11.314-11.314c-4.512-4.512-11.715-4.666-16.428-.491-17.949-16.469-42.294-21.429-64.178-15.365C163.281 45.667 139.212 32 112 32c-44.112 0-80 35.888-80 80v144h-8c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h8v32c0 28.43 12.362 53.969 32 71.547V456c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-8h256v8c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-32.453c19.638-17.578 32-43.117 32-71.547v-32h8c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"],\n    \"battery-empty\": [640, 512, [], \"f244\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48z\"],\n    \"battery-full\": [640, 512, [], \"f240\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-48 96H96v128h416V192z\"],\n    \"battery-half\": [640, 512, [], \"f242\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-240 96H96v128h224V192z\"],\n    \"battery-quarter\": [640, 512, [], \"f243\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-336 96H96v128h128V192z\"],\n    \"battery-three-quarters\": [640, 512, [], \"f241\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-144 96H96v128h320V192z\"],\n    \"bed\": [640, 512, [], \"f236\", \"M176 256c44.11 0 80-35.89 80-80s-35.89-80-80-80-80 35.89-80 80 35.89 80 80 80zm352-128H304c-8.84 0-16 7.16-16 16v144H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v352c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h512v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V240c0-61.86-50.14-112-112-112z\"],\n    \"beer\": [448, 512, [], \"f0fc\", \"M368 96h-48V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24v-42.11l80.606-35.977C429.396 365.063 448 336.388 448 304.86V176c0-44.112-35.888-80-80-80zm16 208.86a16.018 16.018 0 0 1-9.479 14.611L320 343.805V160h48c8.822 0 16 7.178 16 16v128.86zM208 384c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16zm-96 0c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16z\"],\n    \"bell\": [448, 512, [], \"f0f3\", \"M224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64zm215.39-149.71c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71z\"],\n    \"bell-slash\": [640, 512, [], \"f1f6\", \"M633.82 458.1l-90.62-70.05c.19-1.38.8-2.66.8-4.06.05-7.55-2.61-15.27-8.61-21.71-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84c-40.33 8.38-74.66 31.07-97.59 62.57L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.35 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.42-6.97 4.17-17.02-2.81-22.45zM157.23 251.54c-8.61 67.96-36.41 93.33-52.62 110.75-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h241.92L157.23 251.54zM320 512c35.32 0 63.97-28.65 63.97-64H256.03c0 35.35 28.65 64 63.97 64z\"],\n    \"bezier-curve\": [640, 512, [], \"f55b\", \"M368 32h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zM208 88h-84.75C113.75 64.56 90.84 48 64 48 28.66 48 0 76.65 0 112s28.66 64 64 64c26.84 0 49.75-16.56 59.25-40h79.73c-55.37 32.52-95.86 87.32-109.54 152h49.4c11.3-41.61 36.77-77.21 71.04-101.56-3.7-8.08-5.88-16.99-5.88-26.44V88zm-48 232H64c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zM576 48c-26.84 0-49.75 16.56-59.25 40H432v72c0 9.45-2.19 18.36-5.88 26.44 34.27 24.35 59.74 59.95 71.04 101.56h49.4c-13.68-64.68-54.17-119.48-109.54-152h79.73c9.5 23.44 32.41 40 59.25 40 35.34 0 64-28.65 64-64s-28.66-64-64-64zm0 272h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"],\n    \"bible\": [448, 512, [], \"f647\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM144 144c0-8.84 7.16-16 16-16h48V80c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v48h48c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-48v112c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V192h-48c-8.84 0-16-7.16-16-16v-32zm236.8 304H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"],\n    \"bicycle\": [640, 512, [], \"f206\", \"M512.509 192.001c-16.373-.064-32.03 2.955-46.436 8.495l-77.68-125.153A24 24 0 0 0 368.001 64h-64c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h50.649l14.896 24H256.002v-16c0-8.837-7.163-16-16-16h-87.459c-13.441 0-24.777 10.999-24.536 24.437.232 13.044 10.876 23.563 23.995 23.563h48.726l-29.417 47.52c-13.433-4.83-27.904-7.483-42.992-7.52C58.094 191.83.412 249.012.002 319.236-.413 390.279 57.055 448 128.002 448c59.642 0 109.758-40.793 123.967-96h52.033a24 24 0 0 0 20.406-11.367L410.37 201.77l14.938 24.067c-25.455 23.448-41.385 57.081-41.307 94.437.145 68.833 57.899 127.051 126.729 127.719 70.606.685 128.181-55.803 129.255-125.996 1.086-70.941-56.526-129.72-127.476-129.996zM186.75 265.772c9.727 10.529 16.673 23.661 19.642 38.228h-43.306l23.664-38.228zM128.002 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c5.869 0 11.586.653 17.099 1.859l-45.505 73.509C89.715 331.327 101.213 352 120.002 352h81.3c-12.37 28.225-40.562 48-73.3 48zm162.63-96h-35.624c-3.96-31.756-19.556-59.894-42.383-80.026L237.371 184h127.547l-74.286 120zm217.057 95.886c-41.036-2.165-74.049-35.692-75.627-76.755-.812-21.121 6.633-40.518 19.335-55.263l44.433 71.586c4.66 7.508 14.524 9.816 22.032 5.156l13.594-8.437c7.508-4.66 9.817-14.524 5.156-22.032l-44.468-71.643a79.901 79.901 0 0 1 19.858-2.497c44.112 0 80 35.888 80 80-.001 45.54-38.252 82.316-84.313 79.885z\"],\n    \"binoculars\": [512, 512, [], \"f1e5\", \"M416 48c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v48h96V48zM63.91 159.99C61.4 253.84 3.46 274.22 0 404v44c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32V288h32V128H95.84c-17.63 0-31.45 14.37-31.93 31.99zm384.18 0c-.48-17.62-14.3-31.99-31.93-31.99H320v160h32v160c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-44c-3.46-129.78-61.4-150.16-63.91-244.01zM176 32h-64c-8.84 0-16 7.16-16 16v48h96V48c0-8.84-7.16-16-16-16zm48 256h64V128h-64v160z\"],\n    \"biohazard\": [576, 512, [], \"f780\", \"M287.9 112c18.6 0 36.2 3.8 52.8 9.6 13.3-10.3 23.6-24.3 29.5-40.7-25.2-10.9-53-17-82.2-17-29.1 0-56.9 6-82.1 16.9 5.9 16.4 16.2 30.4 29.5 40.7 16.5-5.7 34-9.5 52.5-9.5zM163.6 438.7c12-11.8 20.4-26.4 24.5-42.4-32.9-26.4-54.8-65.3-58.9-109.6-8.5-2.8-17.2-4.6-26.4-4.6-7.6 0-15.2 1-22.5 3.1 4.1 62.8 35.8 118 83.3 153.5zm224.2-42.6c4.1 16 12.5 30.7 24.5 42.5 47.4-35.5 79.1-90.7 83-153.5-7.2-2-14.7-3-22.2-3-9.2 0-18 1.9-26.6 4.7-4.1 44.2-26 82.9-58.7 109.3zm113.5-205c-17.6-10.4-36.3-16.6-55.3-19.9 6-17.7 10-36.4 10-56.2 0-41-14.5-80.8-41-112.2-2.5-3-6.6-3.7-10-1.8-3.3 1.9-4.8 6-3.6 9.7 4.5 13.8 6.6 26.3 6.6 38.5 0 67.8-53.8 122.9-120 122.9S168 117 168 49.2c0-12.1 2.2-24.7 6.6-38.5 1.2-3.7-.3-7.8-3.6-9.7-3.4-1.9-7.5-1.2-10 1.8C134.6 34.2 120 74 120 115c0 19.8 3.9 38.5 10 56.2-18.9 3.3-37.7 9.5-55.3 19.9-34.6 20.5-61 53.3-74.3 92.4-1.3 3.7.2 7.7 3.5 9.8 3.3 2 7.5 1.3 10-1.6 9.4-10.8 19-19.1 29.2-25.1 57.3-33.9 130.8-13.7 163.9 45 33.1 58.7 13.4 134-43.9 167.9-10.2 6.1-22 10.4-35.8 13.4-3.7.8-6.4 4.2-6.4 8.1.1 4 2.7 7.3 6.5 8 39.7 7.8 80.6.8 115.2-19.7 18-10.6 32.9-24.5 45.3-40.1 12.4 15.6 27.3 29.5 45.3 40.1 34.6 20.5 75.5 27.5 115.2 19.7 3.8-.7 6.4-4 6.5-8 0-3.9-2.6-7.3-6.4-8.1-13.9-2.9-25.6-7.3-35.8-13.4-57.3-33.9-77-109.2-43.9-167.9s106.6-78.9 163.9-45c10.2 6.1 19.8 14.3 29.2 25.1 2.5 2.9 6.7 3.6 10 1.6s4.8-6.1 3.5-9.8c-13.1-39.1-39.5-72-74.1-92.4zm-213.4 129c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"birthday-cake\": [448, 512, [], \"f1fd\", \"M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z\"],\n    \"blender\": [512, 512, [], \"f517\", \"M416 384H160c-35.35 0-64 28.65-64 64v32c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32v-32c0-35.35-28.65-64-64-64zm-128 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm40-416h166.54L512 0H48C21.49 0 0 21.49 0 48v160c0 26.51 21.49 48 48 48h103.27l8.73 96h256l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h114.18l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h140.36l17.46-64H328c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8zM64 192V64h69.82l11.64 128H64z\"],\n    \"blender-phone\": [576, 512, [], \"f6b6\", \"M392 64h166.54L576 0H192v352h288l17.46-64H392c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h114.18l17.46-64H392c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h140.36l17.46-64H392c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8zM158.8 335.01l-25.78-63.26c-2.78-6.81-9.8-10.99-17.24-10.26l-45.03 4.42c-17.28-46.94-17.65-99.78 0-147.72l45.03 4.42c7.43.73 14.46-3.46 17.24-10.26l25.78-63.26c3.02-7.39.2-15.85-6.68-20.07l-39.28-24.1C98.51-3.87 80.09-.5 68.95 11.97c-92.57 103.6-92 259.55 2.1 362.49 9.87 10.8 29.12 12.48 41.65 4.8l39.41-24.18c6.89-4.22 9.7-12.67 6.69-20.07zM480 384H192c-35.35 0-64 28.65-64 64v32c0 17.67 14.33 32 32 32h352c17.67 0 32-14.33 32-32v-32c0-35.35-28.65-64-64-64zm-144 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"blind\": [384, 512, [], \"f29d\", \"M380.15 510.837a8 8 0 0 1-10.989-2.687l-125.33-206.427a31.923 31.923 0 0 0 12.958-9.485l126.048 207.608a8 8 0 0 1-2.687 10.991zM142.803 314.338l-32.54 89.485 36.12 88.285c6.693 16.36 25.377 24.192 41.733 17.501 16.357-6.692 24.193-25.376 17.501-41.734l-62.814-153.537zM96 88c24.301 0 44-19.699 44-44S120.301 0 96 0 52 19.699 52 44s19.699 44 44 44zm154.837 169.128l-120-152c-4.733-5.995-11.75-9.108-18.837-9.112V96H80v.026c-7.146.003-14.217 3.161-18.944 9.24L0 183.766v95.694c0 13.455 11.011 24.791 24.464 24.536C37.505 303.748 48 293.1 48 280v-79.766l16-20.571v140.698L9.927 469.055c-6.04 16.609 2.528 34.969 19.138 41.009 16.602 6.039 34.968-2.524 41.009-19.138L136 309.638V202.441l-31.406-39.816a4 4 0 1 1 6.269-4.971l102.3 129.217c9.145 11.584 24.368 11.339 33.708 3.965 10.41-8.216 12.159-23.334 3.966-33.708z\"],\n    \"blog\": [512, 512, [], \"f781\", \"M172.2 226.8c-14.6-2.9-28.2 8.9-28.2 23.8V301c0 10.2 7.1 18.4 16.7 22 18.2 6.8 31.3 24.4 31.3 45 0 26.5-21.5 48-48 48s-48-21.5-48-48V120c0-13.3-10.7-24-24-24H24c-13.3 0-24 10.7-24 24v248c0 89.5 82.1 160.2 175 140.7 54.4-11.4 98.3-55.4 109.7-109.7 17.4-82.9-37-157.2-112.5-172.2zM209 0c-9.2-.5-17 6.8-17 16v31.6c0 8.5 6.6 15.5 15 15.9 129.4 7 233.4 112 240.9 241.5.5 8.4 7.5 15 15.9 15h32.1c9.2 0 16.5-7.8 16-17C503.4 139.8 372.2 8.6 209 0zm.3 96c-9.3-.7-17.3 6.7-17.3 16.1v32.1c0 8.4 6.5 15.3 14.8 15.9 76.8 6.3 138 68.2 144.9 145.2.8 8.3 7.6 14.7 15.9 14.7h32.2c9.3 0 16.8-8 16.1-17.3-8.4-110.1-96.5-198.2-206.6-206.7z\"],\n    \"bold\": [384, 512, [], \"f032\", \"M304.793 243.891c33.639-18.537 53.657-54.16 53.657-95.693 0-48.236-26.25-87.626-68.626-104.179C265.138 34.01 240.849 32 209.661 32H24c-8.837 0-16 7.163-16 16v33.049c0 8.837 7.163 16 16 16h33.113v318.53H24c-8.837 0-16 7.163-16 16V464c0 8.837 7.163 16 16 16h195.69c24.203 0 44.834-1.289 66.866-7.584C337.52 457.193 376 410.647 376 350.014c0-52.168-26.573-91.684-71.207-106.123zM142.217 100.809h67.444c16.294 0 27.536 2.019 37.525 6.717 15.828 8.479 24.906 26.502 24.906 49.446 0 35.029-20.32 56.79-53.029 56.79h-76.846V100.809zm112.642 305.475c-10.14 4.056-22.677 4.907-31.409 4.907h-81.233V281.943h84.367c39.645 0 63.057 25.38 63.057 63.057.001 28.425-13.66 52.483-34.782 61.284z\"],\n    \"bolt\": [320, 512, [], \"f0e7\", \"M296 160H180.6l42.6-129.8C227.2 15 215.7 0 200 0H56C44 0 33.8 8.9 32.2 20.8l-32 240C-1.7 275.2 9.5 288 24 288h118.7L96.6 482.5c-3.6 15.2 8 29.5 23.3 29.5 8.4 0 16.4-4.4 20.8-12l176-304c9.3-15.9-2.2-36-20.7-36z\"],\n    \"bomb\": [512, 512, [], \"f1e2\", \"M440.5 88.5l-52 52L415 167c9.4 9.4 9.4 24.6 0 33.9l-17.4 17.4c11.8 26.1 18.4 55.1 18.4 85.6 0 114.9-93.1 208-208 208S0 418.9 0 304 93.1 96 208 96c30.5 0 59.5 6.6 85.6 18.4L311 97c9.4-9.4 24.6-9.4 33.9 0l26.5 26.5 52-52 17.1 17zM500 60h-24c-6.6 0-12 5.4-12 12s5.4 12 12 12h24c6.6 0 12-5.4 12-12s-5.4-12-12-12zM440 0c-6.6 0-12 5.4-12 12v24c0 6.6 5.4 12 12 12s12-5.4 12-12V12c0-6.6-5.4-12-12-12zm33.9 55l17-17c4.7-4.7 4.7-12.3 0-17-4.7-4.7-12.3-4.7-17 0l-17 17c-4.7 4.7-4.7 12.3 0 17 4.8 4.7 12.4 4.7 17 0zm-67.8 0c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17zm67.8 34c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17zM112 272c0-35.3 28.7-64 64-64 8.8 0 16-7.2 16-16s-7.2-16-16-16c-52.9 0-96 43.1-96 96 0 8.8 7.2 16 16 16s16-7.2 16-16z\"],\n    \"bone\": [640, 512, [], \"f5d7\", \"M598.88 244.56c25.2-12.6 41.12-38.36 41.12-66.53v-7.64C640 129.3 606.7 96 565.61 96c-32.02 0-60.44 20.49-70.57 50.86-7.68 23.03-11.6 45.14-38.11 45.14H183.06c-27.38 0-31.58-25.54-38.11-45.14C134.83 116.49 106.4 96 74.39 96 33.3 96 0 129.3 0 170.39v7.64c0 28.17 15.92 53.93 41.12 66.53 9.43 4.71 9.43 18.17 0 22.88C15.92 280.04 0 305.8 0 333.97v7.64C0 382.7 33.3 416 74.38 416c32.02 0 60.44-20.49 70.57-50.86 7.68-23.03 11.6-45.14 38.11-45.14h273.87c27.38 0 31.58 25.54 38.11 45.14C505.17 395.51 533.6 416 565.61 416c41.08 0 74.38-33.3 74.38-74.39v-7.64c0-28.18-15.92-53.93-41.12-66.53-9.42-4.71-9.42-18.17.01-22.88z\"],\n    \"bong\": [448, 512, [], \"f55c\", \"M302.5 512c23.18 0 44.43-12.58 56-32.66C374.69 451.26 384 418.75 384 384c0-36.12-10.08-69.81-27.44-98.62L400 241.94l9.38 9.38c6.25 6.25 16.38 6.25 22.63 0l11.3-11.32c6.25-6.25 6.25-16.38 0-22.63l-52.69-52.69c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l9.38 9.38-39.41 39.41c-11.56-11.37-24.53-21.33-38.65-29.51V63.74l15.97-.02c8.82-.01 15.97-7.16 15.98-15.98l.04-31.72C320 7.17 312.82-.01 303.97 0L80.03.26c-8.82.01-15.97 7.16-15.98 15.98l-.04 31.73c-.01 8.85 7.17 16.02 16.02 16.01L96 63.96v153.93C38.67 251.1 0 312.97 0 384c0 34.75 9.31 67.27 25.5 95.34C37.08 499.42 58.33 512 81.5 512h221zM120.06 259.43L144 245.56V63.91l96-.11v181.76l23.94 13.87c24.81 14.37 44.12 35.73 56.56 60.57h-257c12.45-24.84 31.75-46.2 56.56-60.57z\"],\n    \"book\": [448, 512, [], \"f02d\", \"M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z\"],\n    \"book-dead\": [448, 512, [], \"f6b7\", \"M272 136c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm176 222.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM240 56c44.2 0 80 28.7 80 64 0 20.9-12.7 39.2-32 50.9V184c0 8.8-7.2 16-16 16h-64c-8.8 0-16-7.2-16-16v-13.1c-19.3-11.7-32-30-32-50.9 0-35.3 35.8-64 80-64zM124.8 223.3l6.3-14.7c1.7-4.1 6.4-5.9 10.5-4.2l98.3 42.1 98.4-42.1c4.1-1.7 8.8.1 10.5 4.2l6.3 14.7c1.7 4.1-.1 8.8-4.2 10.5L280.6 264l70.3 30.1c4.1 1.7 5.9 6.4 4.2 10.5l-6.3 14.7c-1.7 4.1-6.4 5.9-10.5 4.2L240 281.4l-98.3 42.2c-4.1 1.7-8.8-.1-10.5-4.2l-6.3-14.7c-1.7-4.1.1-8.8 4.2-10.5l70.4-30.1-70.5-30.3c-4.1-1.7-5.9-6.4-4.2-10.5zm256 224.7H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8zM208 136c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16z\"],\n    \"book-medical\": [448, 512, [], \"f7e6\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16q0-9.6-9.6-19.2c-3.2-16-3.2-60.8 0-73.6q9.6-4.8 9.6-19.2zM144 168a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8zm236.8 280H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8z\"],\n    \"book-open\": [576, 512, [], \"f518\", \"M542.22 32.05c-54.8 3.11-163.72 14.43-230.96 55.59-4.64 2.84-7.27 7.89-7.27 13.17v363.87c0 11.55 12.63 18.85 23.28 13.49 69.18-34.82 169.23-44.32 218.7-46.92 16.89-.89 30.02-14.43 30.02-30.66V62.75c.01-17.71-15.35-31.74-33.77-30.7zM264.73 87.64C197.5 46.48 88.58 35.17 33.78 32.05 15.36 31.01 0 45.04 0 62.75V400.6c0 16.24 13.13 29.78 30.02 30.66 49.49 2.6 149.59 12.11 218.77 46.95 10.62 5.35 23.21-1.94 23.21-13.46V100.63c0-5.29-2.62-10.14-7.27-12.99z\"],\n    \"book-reader\": [512, 512, [], \"f5da\", \"M352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96 42.98 96 96 96 96-42.98 96-96zM233.59 241.1c-59.33-36.32-155.43-46.3-203.79-49.05C13.55 191.13 0 203.51 0 219.14v222.8c0 14.33 11.59 26.28 26.49 27.05 43.66 2.29 131.99 10.68 193.04 41.43 9.37 4.72 20.48-1.71 20.48-11.87V252.56c-.01-4.67-2.32-8.95-6.42-11.46zm248.61-49.05c-48.35 2.74-144.46 12.73-203.78 49.05-4.1 2.51-6.41 6.96-6.41 11.63v245.79c0 10.19 11.14 16.63 20.54 11.9 61.04-30.72 149.32-39.11 192.97-41.4 14.9-.78 26.49-12.73 26.49-27.06V219.14c-.01-15.63-13.56-28.01-29.81-27.09z\"],\n    \"bookmark\": [384, 512, [], \"f02e\", \"M0 512V48C0 21.49 21.49 0 48 0h288c26.51 0 48 21.49 48 48v464L192 400 0 512z\"],\n    \"bowling-ball\": [496, 512, [], \"f436\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM120 192c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64-96c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm48 144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"box\": [512, 512, [], \"f466\", \"M509.5 184.6L458.9 32.8C452.4 13.2 434.1 0 413.4 0H272v192h238.7c-.4-2.5-.4-5-1.2-7.4zM240 0H98.6c-20.7 0-39 13.2-45.5 32.8L2.5 184.6c-.8 2.4-.8 4.9-1.2 7.4H240V0zM0 224v240c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V224H0z\"],\n    \"box-open\": [640, 512, [], \"f49e\", \"M425.7 256c-16.9 0-32.8-9-41.4-23.4L320 126l-64.2 106.6c-8.7 14.5-24.6 23.5-41.5 23.5-4.5 0-9-.6-13.3-1.9L64 215v178c0 14.7 10 27.5 24.2 31l216.2 54.1c10.2 2.5 20.9 2.5 31 0L551.8 424c14.2-3.6 24.2-16.4 24.2-31V215l-137 39.1c-4.3 1.3-8.8 1.9-13.3 1.9zm212.6-112.2L586.8 41c-3.1-6.2-9.8-9.8-16.7-8.9L320 64l91.7 152.1c3.8 6.3 11.4 9.3 18.5 7.3l197.9-56.5c9.9-2.9 14.7-13.9 10.2-23.1zM53.2 41L1.7 143.8c-4.6 9.2.3 20.2 10.1 23l197.9 56.5c7.1 2 14.7-1 18.5-7.3L320 64 69.8 32.1c-6.9-.8-13.5 2.7-16.6 8.9z\"],\n    \"boxes\": [576, 512, [], \"f468\", \"M560 288h-80v96l-32-21.3-32 21.3v-96h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16zm-384-64h224c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16h-80v96l-32-21.3L256 96V0h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16zm64 64h-80v96l-32-21.3L96 384v-96H16c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16z\"],\n    \"braille\": [640, 512, [], \"f2a1\", \"M128 256c0 35.346-28.654 64-64 64S0 291.346 0 256s28.654-64 64-64 64 28.654 64 64zM64 384c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352C28.654 32 0 60.654 0 96s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm224 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-320c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n    \"brain\": [576, 512, [], \"f5dc\", \"M208 0c-29.87 0-54.74 20.55-61.8 48.22-.75-.02-1.45-.22-2.2-.22-35.34 0-64 28.65-64 64 0 4.84.64 9.51 1.66 14.04C52.54 138 32 166.57 32 200c0 12.58 3.16 24.32 8.34 34.91C16.34 248.72 0 274.33 0 304c0 33.34 20.42 61.88 49.42 73.89-.9 4.57-1.42 9.28-1.42 14.11 0 39.76 32.23 72 72 72 4.12 0 8.1-.55 12.03-1.21C141.61 491.31 168.25 512 200 512c39.77 0 72-32.24 72-72V205.45c-10.91 8.98-23.98 15.45-38.36 18.39-4.97 1.02-9.64-2.82-9.64-7.89v-16.18c0-3.57 2.35-6.78 5.8-7.66 24.2-6.16 42.2-27.95 42.2-54.04V64c0-35.35-28.66-64-64-64zm368 304c0-29.67-16.34-55.28-40.34-69.09 5.17-10.59 8.34-22.33 8.34-34.91 0-33.43-20.54-62-49.66-73.96 1.02-4.53 1.66-9.2 1.66-14.04 0-35.35-28.66-64-64-64-.75 0-1.45.2-2.2.22C422.74 20.55 397.87 0 368 0c-35.34 0-64 28.65-64 64v74.07c0 26.09 17.99 47.88 42.2 54.04 3.46.88 5.8 4.09 5.8 7.66v16.18c0 5.07-4.68 8.91-9.64 7.89-14.38-2.94-27.44-9.41-38.36-18.39V440c0 39.76 32.23 72 72 72 31.75 0 58.39-20.69 67.97-49.21 3.93.67 7.91 1.21 12.03 1.21 39.77 0 72-32.24 72-72 0-4.83-.52-9.54-1.42-14.11 29-12.01 49.42-40.55 49.42-73.89z\"],\n    \"bread-slice\": [576, 512, [], \"f7ec\", \"M288 0C108 0 0 93.4 0 169.14 0 199.44 24.24 224 64 224v256c0 17.67 16.12 32 36 32h376c19.88 0 36-14.33 36-32V224c39.76 0 64-24.56 64-54.86C576 93.4 468 0 288 0z\"],\n    \"briefcase\": [512, 512, [], \"f0b1\", \"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"],\n    \"briefcase-medical\": [512, 512, [], \"f469\", \"M464 128h-80V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V176c0-26.5-21.5-48-48-48zM192 96h128v32H192V96zm160 248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48z\"],\n    \"broadcast-tower\": [640, 512, [], \"f519\", \"M150.94 192h33.73c11.01 0 18.61-10.83 14.86-21.18-4.93-13.58-7.55-27.98-7.55-42.82s2.62-29.24 7.55-42.82C203.29 74.83 195.68 64 184.67 64h-33.73c-7.01 0-13.46 4.49-15.41 11.23C130.64 92.21 128 109.88 128 128c0 18.12 2.64 35.79 7.54 52.76 1.94 6.74 8.39 11.24 15.4 11.24zM89.92 23.34C95.56 12.72 87.97 0 75.96 0H40.63c-6.27 0-12.14 3.59-14.74 9.31C9.4 45.54 0 85.65 0 128c0 24.75 3.12 68.33 26.69 118.86 2.62 5.63 8.42 9.14 14.61 9.14h34.84c12.02 0 19.61-12.74 13.95-23.37-49.78-93.32-16.71-178.15-.17-209.29zM614.06 9.29C611.46 3.58 605.6 0 599.33 0h-35.42c-11.98 0-19.66 12.66-14.02 23.25 18.27 34.29 48.42 119.42.28 209.23-5.72 10.68 1.8 23.52 13.91 23.52h35.23c6.27 0 12.13-3.58 14.73-9.29C630.57 210.48 640 170.36 640 128s-9.42-82.48-25.94-118.71zM489.06 64h-33.73c-11.01 0-18.61 10.83-14.86 21.18 4.93 13.58 7.55 27.98 7.55 42.82s-2.62 29.24-7.55 42.82c-3.76 10.35 3.85 21.18 14.86 21.18h33.73c7.02 0 13.46-4.49 15.41-11.24 4.9-16.97 7.53-34.64 7.53-52.76 0-18.12-2.64-35.79-7.54-52.76-1.94-6.75-8.39-11.24-15.4-11.24zm-116.3 100.12c7.05-10.29 11.2-22.71 11.2-36.12 0-35.35-28.63-64-63.96-64-35.32 0-63.96 28.65-63.96 64 0 13.41 4.15 25.83 11.2 36.12l-130.5 313.41c-3.4 8.15.46 17.52 8.61 20.92l29.51 12.31c8.15 3.4 17.52-.46 20.91-8.61L244.96 384h150.07l49.2 118.15c3.4 8.16 12.76 12.01 20.91 8.61l29.51-12.31c8.15-3.4 12-12.77 8.61-20.92l-130.5-313.41zM271.62 320L320 203.81 368.38 320h-96.76z\"],\n    \"broom\": [640, 512, [], \"f51a\", \"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"],\n    \"brush\": [384, 512, [], \"f55d\", \"M352 0H32C14.33 0 0 14.33 0 32v224h384V32c0-17.67-14.33-32-32-32zM0 320c0 35.35 28.66 64 64 64h64v64c0 35.35 28.66 64 64 64s64-28.65 64-64v-64h64c35.34 0 64-28.65 64-64v-32H0v32zm192 104c13.25 0 24 10.74 24 24 0 13.25-10.75 24-24 24s-24-10.75-24-24c0-13.26 10.75-24 24-24z\"],\n    \"bug\": [512, 512, [], \"f188\", \"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\"],\n    \"building\": [448, 512, [], \"f1ad\", \"M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z\"],\n    \"bullhorn\": [576, 512, [], \"f0a1\", \"M576 240c0-23.63-12.95-44.04-32-55.12V32.01C544 23.26 537.02 0 512 0c-7.12 0-14.19 2.38-19.98 7.02l-85.03 68.03C364.28 109.19 310.66 128 256 128H64c-35.35 0-64 28.65-64 64v96c0 35.35 28.65 64 64 64h33.7c-1.39 10.48-2.18 21.14-2.18 32 0 39.77 9.26 77.35 25.56 110.94 5.19 10.69 16.52 17.06 28.4 17.06h74.28c26.05 0 41.69-29.84 25.9-50.56-16.4-21.52-26.15-48.36-26.15-77.44 0-11.11 1.62-21.79 4.41-32H256c54.66 0 108.28 18.81 150.98 52.95l85.03 68.03a32.023 32.023 0 0 0 19.98 7.02c24.92 0 32-22.78 32-32V295.13C563.05 284.04 576 263.63 576 240zm-96 141.42l-33.05-26.44C392.95 311.78 325.12 288 256 288v-96c69.12 0 136.95-23.78 190.95-66.98L480 98.58v282.84z\"],\n    \"bullseye\": [496, 512, [], \"f140\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 432c-101.69 0-184-82.29-184-184 0-101.69 82.29-184 184-184 101.69 0 184 82.29 184 184 0 101.69-82.29 184-184 184zm0-312c-70.69 0-128 57.31-128 128s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm0 192c-35.29 0-64-28.71-64-64s28.71-64 64-64 64 28.71 64 64-28.71 64-64 64z\"],\n    \"burn\": [384, 512, [], \"f46a\", \"M192 0C79.7 101.3 0 220.9 0 300.5 0 425 79 512 192 512s192-87 192-211.5c0-79.9-80.2-199.6-192-300.5zm0 448c-56.5 0-96-39-96-94.8 0-13.5 4.6-61.5 96-161.2 91.4 99.7 96 147.7 96 161.2 0 55.8-39.5 94.8-96 94.8z\"],\n    \"bus\": [512, 512, [], \"f207\", \"M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8c-13.25 0-24 10.74-24 24v80c0 13.25 10.75 24 24 24h8v160c0 17.67 14.33 32 32 32v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h192v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h6.4c16 0 25.6-12.8 25.6-25.6V256h8c13.25 0 24-10.75 24-24v-80c0-13.26-10.75-24-24-24zM112 400c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm16-112c-17.67 0-32-14.33-32-32V128c0-17.67 14.33-32 32-32h256c17.67 0 32 14.33 32 32v128c0 17.67-14.33 32-32 32H128zm272 112c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"bus-alt\": [512, 512, [], \"f55e\", \"M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8c-13.25 0-24 10.74-24 24v80c0 13.25 10.75 24 24 24h8v160c0 17.67 14.33 32 32 32v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h192v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h6.4c16 0 25.6-12.8 25.6-25.6V256h8c13.25 0 24-10.75 24-24v-80c0-13.26-10.75-24-24-24zM160 72c0-4.42 3.58-8 8-8h176c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H168c-4.42 0-8-3.58-8-8V72zm-48 328c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm128-112H128c-17.67 0-32-14.33-32-32v-96c0-17.67 14.33-32 32-32h112v160zm32 0V128h112c17.67 0 32 14.33 32 32v96c0 17.67-14.33 32-32 32H272zm128 112c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"business-time\": [640, 512, [], \"f64a\", \"M496 224c-79.59 0-144 64.41-144 144s64.41 144 144 144 144-64.41 144-144-64.41-144-144-144zm64 150.29c0 5.34-4.37 9.71-9.71 9.71h-60.57c-5.34 0-9.71-4.37-9.71-9.71v-76.57c0-5.34 4.37-9.71 9.71-9.71h12.57c5.34 0 9.71 4.37 9.71 9.71V352h38.29c5.34 0 9.71 4.37 9.71 9.71v12.58zM496 192c5.4 0 10.72.33 16 .81V144c0-25.6-22.4-48-48-48h-80V48c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h395.12c28.6-20.09 63.35-32 100.88-32zM320 96H192V64h128v32zm6.82 224H208c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h291.43C327.1 423.96 320 396.82 320 368c0-16.66 2.48-32.72 6.82-48z\"],\n    \"calculator\": [448, 512, [], \"f1ec\", \"M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z\"],\n    \"calendar\": [448, 512, [], \"f133\", \"M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z\"],\n    \"calendar-alt\": [448, 512, [], \"f073\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm320-196c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM192 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM64 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"],\n    \"calendar-check\": [448, 512, [], \"f274\", \"M436 160H12c-6.627 0-12-5.373-12-12v-36c0-26.51 21.49-48 48-48h48V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h128V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h48c26.51 0 48 21.49 48 48v36c0 6.627-5.373 12-12 12zM12 192h424c6.627 0 12 5.373 12 12v260c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V204c0-6.627 5.373-12 12-12zm333.296 95.947l-28.169-28.398c-4.667-4.705-12.265-4.736-16.97-.068L194.12 364.665l-45.98-46.352c-4.667-4.705-12.266-4.736-16.971-.068l-28.397 28.17c-4.705 4.667-4.736 12.265-.068 16.97l82.601 83.269c4.667 4.705 12.265 4.736 16.97.068l142.953-141.805c4.705-4.667 4.736-12.265.068-16.97z\"],\n    \"calendar-day\": [448, 512, [], \"f783\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h96c8.8 0 16 7.2 16 16v96c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-96zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"],\n    \"calendar-minus\": [448, 512, [], \"f272\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm304 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H132c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h184z\"],\n    \"calendar-plus\": [448, 512, [], \"f271\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm316 140c0-6.6-5.4-12-12-12h-60v-60c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v60h-60c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h60v60c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-60h60c6.6 0 12-5.4 12-12v-40z\"],\n    \"calendar-times\": [448, 512, [], \"f273\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm257.3 160l48.1-48.1c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0L224 306.7l-48.1-48.1c-4.7-4.7-12.3-4.7-17 0l-28.3 28.3c-4.7 4.7-4.7 12.3 0 17l48.1 48.1-48.1 48.1c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l48.1-48.1 48.1 48.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L269.3 352z\"],\n    \"calendar-week\": [448, 512, [], \"f784\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h288c8.8 0 16 7.2 16 16v64c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-64zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"],\n    \"camera\": [512, 512, [], \"f030\", \"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"],\n    \"camera-retro\": [512, 512, [], \"f083\", \"M48 32C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H48zm0 32h106c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H38c-3.3 0-6-2.7-6-6V80c0-8.8 7.2-16 16-16zm426 96H38c-3.3 0-6-2.7-6-6v-36c0-3.3 2.7-6 6-6h138l30.2-45.3c1.1-1.7 3-2.7 5-2.7H464c8.8 0 16 7.2 16 16v74c0 3.3-2.7 6-6 6zM256 424c-66.2 0-120-53.8-120-120s53.8-120 120-120 120 53.8 120 120-53.8 120-120 120zm0-208c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88zm-48 104c-8.8 0-16-7.2-16-16 0-35.3 28.7-64 64-64 8.8 0 16 7.2 16 16s-7.2 16-16 16c-17.6 0-32 14.4-32 32 0 8.8-7.2 16-16 16z\"],\n    \"campground\": [640, 512, [], \"f6bb\", \"M624 448h-24.68L359.54 117.75l53.41-73.55c5.19-7.15 3.61-17.16-3.54-22.35l-25.9-18.79c-7.15-5.19-17.15-3.61-22.35 3.55L320 63.3 278.83 6.6c-5.19-7.15-15.2-8.74-22.35-3.55l-25.88 18.8c-7.15 5.19-8.74 15.2-3.54 22.35l53.41 73.55L40.68 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM320 288l116.36 160H203.64L320 288z\"],\n    \"candy-cane\": [512, 512, [], \"f786\", \"M497.5 92C469.6 33.1 411.8 0 352.4 0c-27.9 0-56.2 7.3-81.8 22.6L243.1 39c-15.2 9.1-20.1 28.7-11 43.9l32.8 54.9c6 10 16.6 15.6 27.5 15.6 5.6 0 11.2-1.5 16.4-4.5l27.5-16.4c5.1-3.1 10.8-4.5 16.4-4.5 10.9 0 21.5 5.6 27.5 15.6 9.1 15.1 4.1 34.8-11 43.9L15.6 397.6c-15.2 9.1-20.1 28.7-11 43.9l32.8 54.9c6 10 16.6 15.6 27.5 15.6 5.6 0 11.2-1.5 16.4-4.5L428.6 301c71.7-42.9 104.6-133.5 68.9-209zm-177.7 13l-2.5 1.5L296.8 45c9.7-4.7 19.8-8.1 30.3-10.2l20.6 61.8c-9.8.8-19.4 3.3-27.9 8.4zM145.9 431.8l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zm107.5-63.9l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zM364.3 302l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zm20.4-197.3l46-46c8.4 6.5 16 14.1 22.6 22.6L407.6 127c-5.7-9.3-13.7-16.9-22.9-22.3zm82.1 107.8l-59.5-19.8c3.2-5.3 5.8-10.9 7.4-17.1 1.1-4.5 1.7-9.1 1.8-13.6l60.4 20.1c-2.1 10.4-5.5 20.6-10.1 30.4z\"],\n    \"cannabis\": [512, 512, [], \"f55f\", \"M503.47 360.25c-1.56-.82-32.39-16.89-76.78-25.81 64.25-75.12 84.05-161.67 84.93-165.64 1.18-5.33-.44-10.9-4.3-14.77-3.03-3.04-7.12-4.7-11.32-4.7-1.14 0-2.29.12-3.44.38-3.88.85-86.54 19.59-160.58 79.76.01-1.46.01-2.93.01-4.4 0-118.79-59.98-213.72-62.53-217.7A15.973 15.973 0 0 0 256 0c-5.45 0-10.53 2.78-13.47 7.37-2.55 3.98-62.53 98.91-62.53 217.7 0 1.47.01 2.94.01 4.4-74.03-60.16-156.69-78.9-160.58-79.76-1.14-.25-2.29-.38-3.44-.38-4.2 0-8.29 1.66-11.32 4.7A15.986 15.986 0 0 0 .38 168.8c.88 3.97 20.68 90.52 84.93 165.64-44.39 8.92-75.21 24.99-76.78 25.81a16.003 16.003 0 0 0-.02 28.29c2.45 1.29 60.76 31.72 133.49 31.72 6.14 0 11.96-.1 17.5-.31-11.37 22.23-16.52 38.31-16.81 39.22-1.8 5.68-.29 11.89 3.91 16.11a16.019 16.019 0 0 0 16.1 3.99c1.83-.57 37.72-11.99 77.3-39.29V504c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-64.01c39.58 27.3 75.47 38.71 77.3 39.29a16.019 16.019 0 0 0 16.1-3.99c4.2-4.22 5.71-10.43 3.91-16.11-.29-.91-5.45-16.99-16.81-39.22 5.54.21 11.37.31 17.5.31 72.72 0 131.04-30.43 133.49-31.72 5.24-2.78 8.52-8.22 8.51-14.15-.01-5.94-3.29-11.39-8.53-14.15z\"],\n    \"capsules\": [576, 512, [], \"f46b\", \"M555.3 300.1L424.2 112.8C401.9 81 366.4 64 330.4 64c-22.6 0-45.5 6.7-65.5 20.7-19.7 13.8-33.7 32.8-41.5 53.8C220.5 79.2 172 32 112 32 50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V218.9c3.3 8.6 7.3 17.1 12.8 25L368 431.2c22.2 31.8 57.7 48.8 93.8 48.8 22.7 0 45.5-6.7 65.5-20.7 51.7-36.2 64.2-107.5 28-159.2zM160 256H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm194.8 44.9l-65.6-93.7c-7.7-11-10.7-24.4-8.3-37.6 2.3-13.2 9.7-24.8 20.7-32.5 8.5-6 18.5-9.1 28.8-9.1 16.5 0 31.9 8 41.3 21.5l65.6 93.7-82.5 57.7z\"],\n    \"car\": [512, 512, [], \"f1b9\", \"M499.99 176h-59.87l-16.64-41.6C406.38 91.63 365.57 64 319.5 64h-127c-46.06 0-86.88 27.63-103.99 70.4L71.87 176H12.01C4.2 176-1.53 183.34.37 190.91l6 24C7.7 220.25 12.5 224 18.01 224h20.07C24.65 235.73 16 252.78 16 272v48c0 16.12 6.16 30.67 16 41.93V416c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-54.07c9.84-11.25 16-25.8 16-41.93v-48c0-19.22-8.65-36.27-22.07-48H494c5.51 0 10.31-3.75 11.64-9.09l6-24c1.89-7.57-3.84-14.91-11.65-14.91zm-352.06-17.83c7.29-18.22 24.94-30.17 44.57-30.17h127c19.63 0 37.28 11.95 44.57 30.17L384 208H128l19.93-49.83zM96 319.8c-19.2 0-32-12.76-32-31.9S76.8 256 96 256s48 28.71 48 47.85-28.8 15.95-48 15.95zm320 0c-19.2 0-48 3.19-48-15.95S396.8 256 416 256s32 12.76 32 31.9-12.8 31.9-32 31.9z\"],\n    \"car-alt\": [480, 512, [], \"f5de\", \"M438.66 212.33l-11.24-28.1-19.93-49.83C390.38 91.63 349.57 64 303.5 64h-127c-46.06 0-86.88 27.63-103.99 70.4l-19.93 49.83-11.24 28.1C17.22 221.5 0 244.66 0 272v48c0 16.12 6.16 30.67 16 41.93V416c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-54.07c9.84-11.25 16-25.8 16-41.93v-48c0-27.34-17.22-50.5-41.34-59.67zm-306.73-54.16c7.29-18.22 24.94-30.17 44.57-30.17h127c19.63 0 37.28 11.95 44.57 30.17L368 208H112l19.93-49.83zM80 319.8c-19.2 0-32-12.76-32-31.9S60.8 256 80 256s48 28.71 48 47.85-28.8 15.95-48 15.95zm320 0c-19.2 0-48 3.19-48-15.95S380.8 256 400 256s32 12.76 32 31.9-12.8 31.9-32 31.9z\"],\n    \"car-battery\": [512, 512, [], \"f5df\", \"M480 128h-32V80c0-8.84-7.16-16-16-16h-96c-8.84 0-16 7.16-16 16v48H192V80c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v48H32c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32zM192 264c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16zm256 0c0 4.42-3.58 8-8 8h-40v40c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-40h-40c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h40v-40c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v40h40c4.42 0 8 3.58 8 8v16z\"],\n    \"car-crash\": [640, 512, [], \"f5e1\", \"M143.25 220.81l-12.42 46.37c-3.01 11.25-3.63 22.89-2.41 34.39l-35.2 28.98c-6.57 5.41-16.31-.43-14.62-8.77l15.44-76.68c1.06-5.26-2.66-10.28-8-10.79l-77.86-7.55c-8.47-.82-11.23-11.83-4.14-16.54l65.15-43.3c4.46-2.97 5.38-9.15 1.98-13.29L21.46 93.22c-5.41-6.57.43-16.3 8.78-14.62l76.68 15.44c5.26 1.06 10.28-2.66 10.8-8l7.55-77.86c.82-8.48 11.83-11.23 16.55-4.14l43.3 65.14c2.97 4.46 9.15 5.38 13.29 1.98l60.4-49.71c6.57-5.41 16.3.43 14.62 8.77L262.1 86.38c-2.71 3.05-5.43 6.09-7.91 9.4l-32.15 42.97-10.71 14.32c-32.73 8.76-59.18 34.53-68.08 67.74zm494.57 132.51l-12.42 46.36c-3.13 11.68-9.38 21.61-17.55 29.36a66.876 66.876 0 0 1-8.76 7l-13.99 52.23c-1.14 4.27-3.1 8.1-5.65 11.38-7.67 9.84-20.74 14.68-33.54 11.25L515 502.62c-17.07-4.57-27.2-22.12-22.63-39.19l8.28-30.91-247.28-66.26-8.28 30.91c-4.57 17.07-22.12 27.2-39.19 22.63l-30.91-8.28c-12.8-3.43-21.7-14.16-23.42-26.51-.57-4.12-.35-8.42.79-12.68l13.99-52.23a66.62 66.62 0 0 1-4.09-10.45c-3.2-10.79-3.65-22.52-.52-34.2l12.42-46.37c5.31-19.8 19.36-34.83 36.89-42.21a64.336 64.336 0 0 1 18.49-4.72l18.13-24.23 32.15-42.97c3.45-4.61 7.19-8.9 11.2-12.84 8-7.89 17.03-14.44 26.74-19.51 4.86-2.54 9.89-4.71 15.05-6.49 10.33-3.58 21.19-5.63 32.24-6.04 11.05-.41 22.31.82 33.43 3.8l122.68 32.87c11.12 2.98 21.48 7.54 30.85 13.43a111.11 111.11 0 0 1 34.69 34.5c8.82 13.88 14.64 29.84 16.68 46.99l6.36 53.29 3.59 30.05a64.49 64.49 0 0 1 22.74 29.93c4.39 11.88 5.29 25.19 1.75 38.39zM255.58 234.34c-18.55-4.97-34.21 4.04-39.17 22.53-4.96 18.49 4.11 34.12 22.65 39.09 18.55 4.97 45.54 15.51 50.49-2.98 4.96-18.49-15.43-53.67-33.97-58.64zm290.61 28.17l-6.36-53.29c-.58-4.87-1.89-9.53-3.82-13.86-5.8-12.99-17.2-23.01-31.42-26.82l-122.68-32.87a48.008 48.008 0 0 0-50.86 17.61l-32.15 42.97 172 46.08 75.29 20.18zm18.49 54.65c-18.55-4.97-53.8 15.31-58.75 33.79-4.95 18.49 23.69 22.86 42.24 27.83 18.55 4.97 34.21-4.04 39.17-22.53 4.95-18.48-4.11-34.12-22.66-39.09z\"],\n    \"car-side\": [640, 512, [], \"f5e4\", \"M544 192h-16L419.22 56.02A64.025 64.025 0 0 0 369.24 32H155.33c-26.17 0-49.7 15.93-59.42 40.23L48 194.26C20.44 201.4 0 226.21 0 256v112c0 8.84 7.16 16 16 16h48c0 53.02 42.98 96 96 96s96-42.98 96-96h128c0 53.02 42.98 96 96 96s96-42.98 96-96h48c8.84 0 16-7.16 16-16v-80c0-53.02-42.98-96-96-96zM160 432c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48zm72-240H116.93l38.4-96H232v96zm48 0V96h89.24l76.8 96H280zm200 240c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48z\"],\n    \"caret-down\": [320, 512, [], \"f0d7\", \"M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z\"],\n    \"caret-left\": [192, 512, [], \"f0d9\", \"M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z\"],\n    \"caret-right\": [192, 512, [], \"f0da\", \"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"],\n    \"caret-square-down\": [448, 512, [], \"f150\", \"M448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM92.5 220.5l123 123c4.7 4.7 12.3 4.7 17 0l123-123c7.6-7.6 2.2-20.5-8.5-20.5H101c-10.7 0-16.1 12.9-8.5 20.5z\"],\n    \"caret-square-left\": [448, 512, [], \"f191\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM259.515 124.485l-123.03 123.03c-4.686 4.686-4.686 12.284 0 16.971l123.029 123.029c7.56 7.56 20.485 2.206 20.485-8.485V132.971c.001-10.691-12.925-16.045-20.484-8.486z\"],\n    \"caret-square-right\": [448, 512, [], \"f152\", \"M48 32h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48zm140.485 355.515l123.029-123.029c4.686-4.686 4.686-12.284 0-16.971l-123.029-123.03c-7.56-7.56-20.485-2.206-20.485 8.485v246.059c0 10.691 12.926 16.045 20.485 8.486z\"],\n    \"caret-square-up\": [448, 512, [], \"f151\", \"M0 432V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm355.515-140.485l-123.03-123.03c-4.686-4.686-12.284-4.686-16.971 0L92.485 291.515c-7.56 7.56-2.206 20.485 8.485 20.485h246.059c10.691 0 16.045-12.926 8.486-20.485z\"],\n    \"caret-up\": [320, 512, [], \"f0d8\", \"M288.662 352H31.338c-17.818 0-26.741-21.543-14.142-34.142l128.662-128.662c7.81-7.81 20.474-7.81 28.284 0l128.662 128.662c12.6 12.599 3.676 34.142-14.142 34.142z\"],\n    \"carrot\": [512, 512, [], \"f787\", \"M298.2 156.6c-52.7-25.7-114.5-10.5-150.2 32.8l55.2 55.2c6.3 6.3 6.3 16.4 0 22.6-3.1 3.1-7.2 4.7-11.3 4.7s-8.2-1.6-11.3-4.7L130.4 217 2.3 479.7c-2.9 6-3.1 13.3 0 19.7 5.4 11.1 18.9 15.7 30 10.3l133.6-65.2-49.2-49.2c-6.3-6.2-6.3-16.4 0-22.6 6.3-6.2 16.4-6.2 22.6 0l57 57 102-49.8c24-11.7 44.5-31.3 57.1-57.1 30.1-61.7 4.5-136.1-57.2-166.2zm92.1-34.9C409.8 81 399.7 32.9 360 0c-50.3 41.7-52.5 107.5-7.9 151.9l8 8c44.4 44.6 110.3 42.4 151.9-7.9-32.9-39.7-81-49.8-121.7-30.3z\"],\n    \"cart-arrow-down\": [576, 512, [], \"f218\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM403.029 192H360v-60c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v60h-43.029c-10.691 0-16.045 12.926-8.485 20.485l67.029 67.029c4.686 4.686 12.284 4.686 16.971 0l67.029-67.029c7.559-7.559 2.205-20.485-8.486-20.485z\"],\n    \"cart-plus\": [576, 512, [], \"f217\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM408 168h-48v-40c0-8.837-7.163-16-16-16h-16c-8.837 0-16 7.163-16 16v40h-48c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h48v40c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-40h48c8.837 0 16-7.163 16-16v-16c0-8.837-7.163-16-16-16z\"],\n    \"cash-register\": [512, 512, [], \"f788\", \"M511.1 378.8l-26.7-160c-2.6-15.4-15.9-26.7-31.6-26.7H208v-64h96c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h96v64H59.1c-15.6 0-29 11.3-31.6 26.7L.8 378.7c-.6 3.5-.9 7-.9 10.5V480c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32v-90.7c.1-3.5-.2-7-.8-10.5zM280 248c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16zm-32 64h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16zm-32-80c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16zM80 80V48h192v32H80zm40 200h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16zm16 64v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16zm216 112c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h176c4.4 0 8 3.6 8 8v16zm24-112c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16zm48-80c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16z\"],\n    \"cat\": [512, 512, [], \"f6be\", \"M290.59 192c-20.18 0-106.82 1.98-162.59 85.95V192c0-52.94-43.06-96-96-96-17.67 0-32 14.33-32 32s14.33 32 32 32c17.64 0 32 14.36 32 32v256c0 35.3 28.7 64 64 64h176c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-32l128-96v144c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V289.86c-10.29 2.67-20.89 4.54-32 4.54-61.81 0-113.52-44.05-125.41-102.4zM448 96h-64l-64-64v134.4c0 53.02 42.98 96 96 96s96-42.98 96-96V32l-64 64zm-72 80c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm80 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"],\n    \"certificate\": [512, 512, [], \"f0a3\", \"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\"],\n    \"chair\": [448, 512, [], \"f6c0\", \"M112 128c0-29.5 16.2-55 40-68.9V256h48V48h48v208h48V59.1c23.8 13.9 40 39.4 40 68.9v128h48V128C384 57.3 326.7 0 256 0h-64C121.3 0 64 57.3 64 128v128h48zm334.3 213.9l-10.7-32c-4.4-13.1-16.6-21.9-30.4-21.9H42.7c-13.8 0-26 8.8-30.4 21.9l-10.7 32C-5.2 362.6 10.2 384 32 384v112c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V384h256v112c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V384c21.8 0 37.2-21.4 30.3-42.1z\"],\n    \"chalkboard\": [640, 512, [], \"f51b\", \"M96 64h448v352h64V40c0-22.06-17.94-40-40-40H72C49.94 0 32 17.94 32 40v376h64V64zm528 384H480v-64H288v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"chalkboard-teacher\": [640, 512, [], \"f51c\", \"M208 352c-2.39 0-4.78.35-7.06 1.09C187.98 357.3 174.35 360 160 360c-14.35 0-27.98-2.7-40.95-6.91-2.28-.74-4.66-1.09-7.05-1.09C49.94 352-.33 402.48 0 464.62.14 490.88 21.73 512 48 512h224c26.27 0 47.86-21.12 48-47.38.33-62.14-49.94-112.62-112-112.62zm-48-32c53.02 0 96-42.98 96-96s-42.98-96-96-96-96 42.98-96 96 42.98 96 96 96zM592 0H208c-26.47 0-48 22.25-48 49.59V96c23.42 0 45.1 6.78 64 17.8V64h352v288h-64v-64H384v64h-76.24c19.1 16.69 33.12 38.73 39.69 64H592c26.47 0 48-22.25 48-49.59V49.59C640 22.25 618.47 0 592 0z\"],\n    \"charging-station\": [576, 512, [], \"f5e7\", \"M336 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h320c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm208-320V80c0-8.84-7.16-16-16-16s-16 7.16-16 16v48h-32V80c0-8.84-7.16-16-16-16s-16 7.16-16 16v48h-16c-8.84 0-16 7.16-16 16v32c0 35.76 23.62 65.69 56 75.93v118.49c0 13.95-9.5 26.92-23.26 29.19C431.22 402.5 416 388.99 416 372v-28c0-48.6-39.4-88-88-88h-8V64c0-35.35-28.65-64-64-64H96C60.65 0 32 28.65 32 64v352h288V304h8c22.09 0 40 17.91 40 40v24.61c0 39.67 28.92 75.16 68.41 79.01C481.71 452.05 520 416.41 520 372V251.93c32.38-10.24 56-40.17 56-75.93v-32c0-8.84-7.16-16-16-16h-16zm-283.91 47.76l-93.7 139c-2.2 3.33-6.21 5.24-10.39 5.24-7.67 0-13.47-6.28-11.67-12.92L167.35 224H108c-7.25 0-12.85-5.59-11.89-11.89l16-107C112.9 99.9 117.98 96 124 96h68c7.88 0 13.62 6.54 11.6 13.21L192 160h57.7c9.24 0 15.01 8.78 10.39 15.76z\"],\n    \"chart-area\": [512, 512, [], \"f1fe\", \"M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zM372.7 159.5L288 216l-85.3-113.7c-5.1-6.8-15.5-6.3-19.9 1L96 248v104h384l-89.9-187.8c-3.2-6.5-11.4-8.7-17.4-4.7z\"],\n    \"chart-bar\": [512, 512, [], \"f080\", \"M332.8 320h38.4c6.4 0 12.8-6.4 12.8-12.8V172.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h38.4c6.4 0 12.8-6.4 12.8-12.8V76.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-288 0h38.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h38.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zM496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"chart-line\": [512, 512, [], \"f201\", \"M496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM464 96H345.94c-21.38 0-32.09 25.85-16.97 40.97l32.4 32.4L288 242.75l-73.37-73.37c-12.5-12.5-32.76-12.5-45.25 0l-68.69 68.69c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L192 237.25l73.37 73.37c12.5 12.5 32.76 12.5 45.25 0l96-96 32.4 32.4c15.12 15.12 40.97 4.41 40.97-16.97V112c.01-8.84-7.15-16-15.99-16z\"],\n    \"chart-pie\": [544, 512, [], \"f200\", \"M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z\"],\n    \"check\": [512, 512, [], \"f00c\", \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"],\n    \"check-circle\": [512, 512, [], \"f058\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\"],\n    \"check-double\": [512, 512, [], \"f560\", \"M504.5 171.95l-36.2-36.41c-10-10.05-26.21-10.05-36.2 0L192 377.02 79.9 264.28c-10-10.06-26.21-10.06-36.2 0L7.5 300.69c-10 10.05-10 26.36 0 36.41l166.4 167.36c10 10.06 26.21 10.06 36.2 0l294.4-296.09c10-10.06 10-26.36 0-36.42zM166.57 282.71c6.84 7.02 18.18 7.02 25.21.18L403.85 72.62c7.02-6.84 7.02-18.18.18-25.21L362.08 5.29c-6.84-7.02-18.18-7.02-25.21-.18L179.71 161.19l-68.23-68.77c-6.84-7.02-18.18-7.02-25.2-.18l-42.13 41.77c-7.02 6.84-7.02 18.18-.18 25.2l122.6 123.5z\"],\n    \"check-square\": [448, 512, [], \"f14a\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z\"],\n    \"cheese\": [512, 512, [], \"f7ef\", \"M0 288v160a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V288zM299.83 32a32 32 0 0 0-21.13 7L0 256h512c0-119.89-94-217.8-212.17-224z\"],\n    \"chess\": [512, 512, [], \"f439\", \"M76.1 210.2h103.7l34.6-95.1c2.8-7.8-3-16.1-11.3-16.1H152V68.8h21.6c3.3 0 6-2.7 6-6V40.4c0-3.3-2.7-6-6-6h-28.4V6c0-3.3-2.7-6-6-6h-22.4c-3.3 0-6 2.7-6 6v28.4H82.4c-3.3 0-6 2.7-6 6v22.4c0 3.3 2.7 6 6 6H104V99H52.8c-8.3 0-14.1 8.3-11.3 16.1zm237.2 90.7l24.9 17c.1 18.1-.2 63.9-11.9 114.5h147.5c-11.7-50.5-12-96.3-11.9-114.5l24.9-16.9c1.1-.7 1.7-1.9 1.7-3.2v-69.9c0-2.1-1.7-3.9-3.9-3.9h-27.7c-2.1 0-3.9 1.7-3.9 3.9v31.5h-22.7v-31.5c0-2.1-1.7-3.9-3.9-3.9h-52.9c-2.1 0-3.9 1.7-3.9 3.9v31.5h-22.7v-31.5c0-2.1-1.7-3.9-3.9-3.9h-27.7c-2.1 0-3.9 1.7-3.9 3.9v69.9c.2 1.2.8 2.4 1.9 3.1zm71.5 52c0-8.4 6.8-15.2 15.2-15.2s15.2 6.8 15.2 15.2v30.3h-30.3v-30.3zm119.8 117.2L491 459.4v-15.6c0-2.1-1.7-3.9-3.9-3.9H312.9c-2.1 0-3.9 1.7-3.9 3.9v15.6L295.3 470c-.9.7-1.5 1.9-1.5 3v35c0 2.1 1.7 3.9 3.9 3.9h204.5c2.1 0 3.9-1.7 3.9-3.9v-35c0-1.1-.5-2.2-1.5-2.9zm-259.8-10.8l-22.1-14.2V417c0-3.3-2.7-6-6-6H39.3c-3.3 0-6 2.7-6 6v28.1l-22.1 14.2c-1.7 1.1-2.8 3-2.8 5.1V506c0 3.3 2.7 6 6 6h227.2c3.3 0 6-2.7 6-6v-41.6c0-2.1-1-4-2.8-5.1zm-45-208.9c3.3 0 6-2.7 6-6v-20.8c0-3.3-2.7-6-6-6H56.2c-3.3 0-6 2.7-6 6v20.8c0 3.3 2.7 6 6 6H82c0 28.8 2.5 95.1-17.4 153.2h126.8c-19.6-57-17.4-121.5-17.4-153.2z\"],\n    \"chess-bishop\": [320, 512, [], \"f43a\", \"M123.158 77.881C107.369 72.53 96 57.597 96 40c0-22.091 17.909-40 40-40h47.796c22.091 0 40 17.909 40 40 0 17.541-11.295 32.434-27.005 37.829 23.993 16.657 48.577 46.839 68.703 82.05L144.929 280.443a6 6 0 0 0 0 8.485l14.142 14.142a6 6 0 0 0 8.485 0L280.9 189.726c17.758 38.297 29.371 79.443 29.371 114.273 0 53.786-22.897 75.788-58.446 86.033V448H68.174v-57.97C32.631 379.784 9.739 357.781 9.739 304c0-78.029 58.281-187.766 113.419-226.119zM320 500v-24c0-6.627-5.373-12-12-12H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12z\"],\n    \"chess-board\": [512, 512, [], \"f43c\", \"M192 256v64h64v-64zm320 64v-64h-64v64zM0 192v64h64v-64zm512 0v-64h-64v64zm0 256v-64h-64v64zM256 256h64v-64h-64zM0 512h64v-64H0zm128 0h64v-64h-64zM384 0h-64v64h64zM128 0H64v64h64zm128 512h64v-64h-64zM0 64v64h64V64zm0 256v64h64v-64zM256 0h-64v64h64zm128 512h64v-64h-64zM64 384v64h64v-64zm256 0v64h64v-64zm-64-192v-64h-64v64zm128 192h64v-64h-64zM128 256H64v64h64zm256 0h64v-64h-64zM512 0h-64v64h64zM128 128H64v64h64zm256-64v64h64V64zM192 384v64h64v-64zm-64-64v64h64v-64zm128 0v64h64v-64zm-64-128h-64v64h64zm128-64V64h-64v64zm-128 0V64h-64v64zm128 64h64v-64h-64zm0 128h64v-64h-64z\"],\n    \"chess-king\": [448, 512, [], \"f43f\", \"M416 476v24c0 6.627-5.373 12-12 12H44c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12zm-8.033-324H248v-48h50a6 6 0 0 0 6-6V62a6 6 0 0 0-6-6h-50V6a6 6 0 0 0-6-6h-36a6 6 0 0 0-6 6v50h-50a6 6 0 0 0-6 6v36a6 6 0 0 0 6 6h50v48H40.033c-27.574 0-46.879 27.244-37.738 53.259L87.582 448h272.836l85.287-242.741C454.846 179.244 435.541 152 407.967 152z\"],\n    \"chess-knight\": [384, 512, [], \"f441\", \"M352 224v224H32v-46.557c0-30.302 17.12-58.003 44.223-71.554l57.243-28.622A48 48 0 0 0 160 258.334V208l-22.127 11.063a23.996 23.996 0 0 0-12.55 15.645l-11.835 47.338a12 12 0 0 1-7.185 8.231l-29.601 11.84a11.998 11.998 0 0 1-9.33-.176L7.126 275.167A12 12 0 0 1 0 264.201v-158.26c0-6.365 2.529-12.47 7.03-16.971L16 80 1.789 51.578A16.937 16.937 0 0 1 0 44c0-6.627 5.373-12 12-12h148c106.039 0 192 85.961 192 192zm20 240H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h360c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12zM52 128c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z\"],\n    \"chess-pawn\": [320, 512, [], \"f443\", \"M264 448H56s60-42.743 60-176H84c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h40.209C95.721 210.56 76 181.588 76 148c0-46.392 37.608-84 84-84s84 37.608 84 84c0 33.588-19.721 62.56-48.209 76H236c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12h-32c0 133.257 60 176 60 176zm28 16H28c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h264c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12z\"],\n    \"chess-queen\": [512, 512, [], \"f445\", \"M436 512H76c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12zM255.579 0c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zm204.568 154.634c-5.768-3.045-12.916-.932-16.082 4.77-8.616 15.516-22.747 37.801-44.065 37.801-28.714 0-30.625-19.804-31.686-57.542-.183-6.492-5.501-11.664-11.995-11.664h-41.006c-5.175 0-9.754 3.328-11.388 8.238-8.89 26.709-26.073 40.992-47.925 40.992s-39.034-14.283-47.925-40.992c-1.634-4.91-6.213-8.238-11.388-8.238h-41.005c-6.495 0-11.813 5.174-11.995 11.667-1.052 37.642-2.934 57.539-31.688 57.539-20.691 0-33.817-20.224-44.425-38.025-3.266-5.48-10.258-7.431-15.899-4.453l-39.179 20.679a12 12 0 0 0-5.51 15.145L112 448h288l105.014-257.448a12 12 0 0 0-5.51-15.145l-39.357-20.773z\"],\n    \"chess-rook\": [384, 512, [], \"f447\", \"M81.241 215.027C80.957 258.92 77.411 348.076 48 448h287.982c-29.4-99.604-32.936-188.912-33.221-232.975l45.418-42.312a11.998 11.998 0 0 0 3.82-8.78V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v44h-48V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v44H96V44c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v119.932c0 3.33 1.384 6.51 3.82 8.78l45.421 42.315zM160 256c0-17.673 14.327-32 32-32 17.673 0 32 14.327 32 32v64.004h-64V256zm224 220v24c0 6.627-5.373 12-12 12H12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12z\"],\n    \"chevron-circle-down\": [512, 512, [], \"f13a\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM273 369.9l135.5-135.5c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L256 285.1 154.4 183.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L239 369.9c9.4 9.4 24.6 9.4 34 0z\"],\n    \"chevron-circle-left\": [512, 512, [], \"f137\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z\"],\n    \"chevron-circle-right\": [512, 512, [], \"f138\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm113.9 231L234.4 103.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L285.1 256 183.5 357.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L369.9 273c9.4-9.4 9.4-24.6 0-34z\"],\n    \"chevron-circle-up\": [512, 512, [], \"f139\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm231-113.9L103.5 277.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L256 226.9l101.6 101.6c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L273 142.1c-9.4-9.4-24.6-9.4-34 0z\"],\n    \"chevron-down\": [448, 512, [], \"f078\", \"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"],\n    \"chevron-left\": [320, 512, [], \"f053\", \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"],\n    \"chevron-right\": [320, 512, [], \"f054\", \"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"],\n    \"chevron-up\": [448, 512, [], \"f077\", \"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"],\n    \"child\": [384, 512, [], \"f1ae\", \"M120 72c0-39.765 32.235-72 72-72s72 32.235 72 72c0 39.764-32.235 72-72 72s-72-32.236-72-72zm254.627 1.373c-12.496-12.497-32.758-12.497-45.254 0L242.745 160H141.254L54.627 73.373c-12.496-12.497-32.758-12.497-45.254 0-12.497 12.497-12.497 32.758 0 45.255L104 213.254V480c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V368h16v112c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V213.254l94.627-94.627c12.497-12.497 12.497-32.757 0-45.254z\"],\n    \"church\": [640, 512, [], \"f51d\", \"M464.46 246.68L352 179.2V128h48c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16h-48V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v48h-48c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h48v51.2l-112.46 67.48A31.997 31.997 0 0 0 160 274.12V512h96v-96c0-35.35 28.65-64 64-64s64 28.65 64 64v96h96V274.12c0-11.24-5.9-21.66-15.54-27.44zM0 395.96V496c0 8.84 7.16 16 16 16h112V320L19.39 366.54A32.024 32.024 0 0 0 0 395.96zm620.61-29.42L512 320v192h112c8.84 0 16-7.16 16-16V395.96c0-12.8-7.63-24.37-19.39-29.42z\"],\n    \"circle\": [512, 512, [], \"f111\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\"],\n    \"circle-notch\": [512, 512, [], \"f1ce\", \"M288 39.056v16.659c0 10.804 7.281 20.159 17.686 23.066C383.204 100.434 440 171.518 440 256c0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-84.47 56.786-155.564 134.312-177.219C216.719 75.874 224 66.517 224 55.712V39.064c0-15.709-14.834-27.153-30.046-23.234C86.603 43.482 7.394 141.206 8.003 257.332c.72 137.052 111.477 246.956 248.531 246.667C393.255 503.711 504 392.788 504 256c0-115.633-79.14-212.779-186.211-240.236C302.678 11.889 288 23.456 288 39.056z\"],\n    \"city\": [640, 512, [], \"f64f\", \"M616 192H480V24c0-13.26-10.74-24-24-24H312c-13.26 0-24 10.74-24 24v72h-64V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v80h-64V16c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v80H24c-13.26 0-24 10.74-24 24v360c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V216c0-13.26-10.75-24-24-24zM128 404c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm128 192c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12V76c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 288c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40z\"],\n    \"clinic-medical\": [576, 512, [], \"f7f2\", \"M288 115L69.47 307.71c-1.62 1.46-3.69 2.14-5.47 3.35V496a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V311.1c-1.7-1.16-3.72-1.82-5.26-3.2zm96 261a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8zm186.69-139.72l-255.94-226a39.85 39.85 0 0 0-53.45 0l-256 226a16 16 0 0 0-1.21 22.6L25.5 282.7a16 16 0 0 0 22.6 1.21L277.42 81.63a16 16 0 0 1 21.17 0L527.91 283.9a16 16 0 0 0 22.6-1.21l21.4-23.82a16 16 0 0 0-1.22-22.59z\"],\n    \"clipboard\": [384, 512, [], \"f328\", \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\"],\n    \"clipboard-check\": [384, 512, [], \"f46c\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm121.2 231.8l-143 141.8c-4.7 4.7-12.3 4.6-17-.1l-82.6-83.3c-4.7-4.7-4.6-12.3.1-17L99.1 285c4.7-4.7 12.3-4.6 17 .1l46 46.4 106-105.2c4.7-4.7 12.3-4.6 17 .1l28.2 28.4c4.7 4.8 4.6 12.3-.1 17z\"],\n    \"clipboard-list\": [384, 512, [], \"f46d\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM96 424c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm96-192c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm128 368c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z\"],\n    \"clock\": [512, 512, [], \"f017\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm57.1 350.1L224.9 294c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v137.7l63.5 46.2c5.4 3.9 6.5 11.4 2.6 16.8l-28.2 38.8c-3.9 5.3-11.4 6.5-16.8 2.6z\"],\n    \"clone\": [512, 512, [], \"f24d\", \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\"],\n    \"closed-captioning\": [512, 512, [], \"f20a\", \"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM218.1 287.7c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2.1 48 51.1 70.5 92.3 32.6zm190.4 0c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.5 56.9-172.7 32.1-172.7-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 222.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6z\"],\n    \"cloud\": [640, 512, [], \"f0c2\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4z\"],\n    \"cloud-download-alt\": [640, 512, [], \"f381\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zm-132.9 88.7L299.3 420.7c-6.2 6.2-16.4 6.2-22.6 0L171.3 315.3c-10.1-10.1-2.9-27.3 11.3-27.3H248V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v112h65.4c14.2 0 21.4 17.2 11.3 27.3z\"],\n    \"cloud-meatball\": [512, 512, [], \"f73b\", \"M48 352c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm416 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-119 11.1c4.6-14.5 1.6-30.8-9.8-42.3-11.5-11.5-27.8-14.4-42.3-9.9-7-13.5-20.7-23-36.9-23s-29.9 9.5-36.9 23c-14.5-4.6-30.8-1.6-42.3 9.9-11.5 11.5-14.4 27.8-9.9 42.3-13.5 7-23 20.7-23 36.9s9.5 29.9 23 36.9c-4.6 14.5-1.6 30.8 9.9 42.3 8.2 8.2 18.9 12.3 29.7 12.3 4.3 0 8.5-1.1 12.6-2.5 7 13.5 20.7 23 36.9 23s29.9-9.5 36.9-23c4.1 1.3 8.3 2.5 12.6 2.5 10.8 0 21.5-4.1 29.7-12.3 11.5-11.5 14.4-27.8 9.8-42.3 13.5-7 23-20.7 23-36.9s-9.5-29.9-23-36.9zM512 224c0-53-43-96-96-96-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.1 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h43.4c3.6-8 8.4-15.4 14.8-21.8 13.5-13.5 31.5-21.1 50.8-21.3 13.5-13.2 31.7-20.9 51-20.9s37.5 7.7 51 20.9c19.3.2 37.3 7.8 50.8 21.3 6.4 6.4 11.3 13.8 14.8 21.8H416c53 0 96-43 96-96z\"],\n    \"cloud-moon\": [576, 512, [], \"f6c3\", \"M342.8 352.7c5.7-9.6 9.2-20.7 9.2-32.7 0-35.3-28.7-64-64-64-17.2 0-32.8 6.9-44.3 17.9-16.3-29.6-47.5-49.9-83.7-49.9-53 0-96 43-96 96 0 2 .5 3.8.6 5.7C27.1 338.8 0 374.1 0 416c0 53 43 96 96 96h240c44.2 0 80-35.8 80-80 0-41.9-32.3-75.8-73.2-79.3zm222.5-54.3c-93.1 17.7-178.5-53.7-178.5-147.7 0-54.2 29-104 76.1-130.8 7.3-4.1 5.4-15.1-2.8-16.7C448.4 1.1 436.7 0 425 0 319.1 0 233.1 85.9 233.1 192c0 8.5.7 16.8 1.8 25 5.9 4.3 11.6 8.9 16.7 14.2 11.4-4.7 23.7-7.2 36.4-7.2 52.9 0 96 43.1 96 96 0 3.6-.2 7.2-.6 10.7 23.6 10.8 42.4 29.5 53.5 52.6 54.4-3.4 103.7-29.3 137.1-70.4 5.3-6.5-.5-16.1-8.7-14.5z\"],\n    \"cloud-moon-rain\": [576, 512, [], \"f73c\", \"M350.5 225.5c-6.9-37.2-39.3-65.5-78.5-65.5-12.3 0-23.9 3-34.3 8-17.4-24.1-45.6-40-77.7-40-53 0-96 43-96 96 0 .5.2 1.1.2 1.6C27.6 232.9 0 265.2 0 304c0 44.2 35.8 80 80 80h256c44.2 0 80-35.8 80-80 0-39.2-28.2-71.7-65.5-78.5zm217.4-1.7c-70.4 13.3-135-40.3-135-110.8 0-40.6 21.9-78 57.5-98.1 5.5-3.1 4.1-11.4-2.1-12.5C479.6.8 470.7 0 461.8 0c-77.9 0-141.1 61.2-144.4 137.9 26.7 11.9 48.2 33.8 58.9 61.7 37.1 14.3 64 47.4 70.2 86.8 5.1.5 10 1.5 15.2 1.5 44.7 0 85.6-20.2 112.6-53.3 4.2-4.8-.2-12-6.4-10.8zM364.5 418.1c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8z\"],\n    \"cloud-rain\": [512, 512, [], \"f73d\", \"M416 128c-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.1 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h320c53 0 96-43 96-96s-43-96-96-96zM88 374.2c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0zm160 0c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0zm160 0c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0z\"],\n    \"cloud-showers-heavy\": [512, 512, [], \"f740\", \"M183.9 370.1c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-192 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm384 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zM416 128c-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.2 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h320c53 0 96-43 96-96s-43-96-96-96z\"],\n    \"cloud-sun\": [640, 512, [], \"f6c4\", \"M575.2 325.7c.2-1.9.8-3.7.8-5.6 0-35.3-28.7-64-64-64-12.6 0-24.2 3.8-34.1 10-17.6-38.8-56.5-66-101.9-66-61.8 0-112 50.1-112 112 0 3 .7 5.8.9 8.7-49.6 3.7-88.9 44.7-88.9 95.3 0 53 43 96 96 96h272c53 0 96-43 96-96 0-42.1-27.2-77.4-64.8-90.4zm-430.4-22.6c-43.7-43.7-43.7-114.7 0-158.3 43.7-43.7 114.7-43.7 158.4 0 9.7 9.7 16.9 20.9 22.3 32.7 9.8-3.7 20.1-6 30.7-7.5L386 81.1c4-11.9-7.3-23.1-19.2-19.2L279 91.2 237.5 8.4C232-2.8 216-2.8 210.4 8.4L169 91.2 81.1 61.9C69.3 58 58 69.3 61.9 81.1l29.3 87.8-82.8 41.5c-11.2 5.6-11.2 21.5 0 27.1l82.8 41.4-29.3 87.8c-4 11.9 7.3 23.1 19.2 19.2l76.1-25.3c6.1-12.4 14-23.7 23.6-33.5-13.1-5.4-25.4-13.4-36-24zm-4.8-79.2c0 40.8 29.3 74.8 67.9 82.3 8-4.7 16.3-8.8 25.2-11.7 5.4-44.3 31-82.5 67.4-105C287.3 160.4 258 140 224 140c-46.3 0-84 37.6-84 83.9z\"],\n    \"cloud-sun-rain\": [576, 512, [], \"f743\", \"M510.5 225.5c-6.9-37.2-39.3-65.5-78.5-65.5-12.3 0-23.9 3-34.3 8-17.4-24.1-45.6-40-77.7-40-53 0-96 43-96 96 0 .5.2 1.1.2 1.6C187.6 233 160 265.2 160 304c0 44.2 35.8 80 80 80h256c44.2 0 80-35.8 80-80 0-39.2-28.2-71.7-65.5-78.5zm-386.4 34.4c-37.4-37.4-37.4-98.3 0-135.8 34.6-34.6 89.1-36.8 126.7-7.4 20-12.9 43.6-20.7 69.2-20.7.7 0 1.3.2 2 .2l8.9-26.7c3.4-10.2-6.3-19.8-16.5-16.4l-75.3 25.1-35.5-71c-4.8-9.6-18.5-9.6-23.3 0l-35.5 71-75.3-25.1c-10.2-3.4-19.8 6.3-16.4 16.5l25.1 75.3-71 35.5c-9.6 4.8-9.6 18.5 0 23.3l71 35.5-25.1 75.3c-3.4 10.2 6.3 19.8 16.5 16.5l59.2-19.7c-.2-2.4-.7-4.7-.7-7.2 0-12.5 2.3-24.5 6.2-35.9-3.6-2.7-7.1-5.2-10.2-8.3zm69.8-58c4.3-24.5 15.8-46.4 31.9-64-9.8-6.2-21.4-9.9-33.8-9.9-35.3 0-64 28.7-64 64 0 18.7 8.2 35.4 21.1 47.1 11.3-15.9 26.6-28.9 44.8-37.2zm330.6 216.2c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8z\"],\n    \"cloud-upload-alt\": [640, 512, [], \"f382\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zM393.4 288H328v112c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V288h-65.4c-14.3 0-21.4-17.2-11.3-27.3l105.4-105.4c6.2-6.2 16.4-6.2 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z\"],\n    \"cocktail\": [576, 512, [], \"f561\", \"M296 464h-56V338.78l168.74-168.73c15.52-15.52 4.53-42.05-17.42-42.05H24.68c-21.95 0-32.94 26.53-17.42 42.05L176 338.78V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40zM432 0c-62.61 0-115.35 40.2-135.18 96h52.54c16.65-28.55 47.27-48 82.64-48 52.93 0 96 43.06 96 96s-43.07 96-96 96c-14.04 0-27.29-3.2-39.32-8.64l-35.26 35.26C379.23 279.92 404.59 288 432 288c79.53 0 144-64.47 144-144S511.53 0 432 0z\"],\n    \"code\": [640, 512, [], \"f121\", \"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"],\n    \"code-branch\": [384, 512, [], \"f126\", \"M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 36.4 24.3 67.1 57.5 76.8-.6 16.1-4.2 28.5-11 36.9-15.4 19.2-49.3 22.4-85.2 25.7-28.2 2.6-57.4 5.4-81.3 16.9v-144c32.5-10.2 56-40.5 56-76.3 0-44.2-35.8-80-80-80S0 35.8 0 80c0 35.8 23.5 66.1 56 76.3v199.3C23.5 365.9 0 396.2 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-34-21.2-63.1-51.2-74.6 3.1-5.2 7.8-9.8 14.9-13.4 16.2-8.2 40.4-10.4 66.1-12.8 42.2-3.9 90-8.4 118.2-43.4 14-17.4 21.1-39.8 21.6-67.9 31.6-10.8 54.4-40.7 54.4-75.9zM80 64c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm0 384c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm224-320c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16z\"],\n    \"coffee\": [640, 512, [], \"f0f4\", \"M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z\"],\n    \"cog\": [512, 512, [], \"f013\", \"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"cogs\": [640, 512, [], \"f085\", \"M512.1 191l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0L552 6.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zm-10.5-58.8c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.7-82.4 14.3-52.8 52.8zM386.3 286.1l33.7 16.8c10.1 5.8 14.5 18.1 10.5 29.1-8.9 24.2-26.4 46.4-42.6 65.8-7.4 8.9-20.2 11.1-30.3 5.3l-29.1-16.8c-16 13.7-34.6 24.6-54.9 31.7v33.6c0 11.6-8.3 21.6-19.7 23.6-24.6 4.2-50.4 4.4-75.9 0-11.5-2-20-11.9-20-23.6V418c-20.3-7.2-38.9-18-54.9-31.7L74 403c-10 5.8-22.9 3.6-30.3-5.3-16.2-19.4-33.3-41.6-42.2-65.7-4-10.9.4-23.2 10.5-29.1l33.3-16.8c-3.9-20.9-3.9-42.4 0-63.4L12 205.8c-10.1-5.8-14.6-18.1-10.5-29 8.9-24.2 26-46.4 42.2-65.8 7.4-8.9 20.2-11.1 30.3-5.3l29.1 16.8c16-13.7 34.6-24.6 54.9-31.7V57.1c0-11.5 8.2-21.5 19.6-23.5 24.6-4.2 50.5-4.4 76-.1 11.5 2 20 11.9 20 23.6v33.6c20.3 7.2 38.9 18 54.9 31.7l29.1-16.8c10-5.8 22.9-3.6 30.3 5.3 16.2 19.4 33.2 41.6 42.1 65.8 4 10.9.1 23.2-10 29.1l-33.7 16.8c3.9 21 3.9 42.5 0 63.5zm-117.6 21.1c59.2-77-28.7-164.9-105.7-105.7-59.2 77 28.7 164.9 105.7 105.7zm243.4 182.7l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0l8.2-14.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zM501.6 431c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.6-82.4 14.3-52.8 52.8z\"],\n    \"coins\": [512, 512, [], \"f51e\", \"M0 405.3V448c0 35.3 86 64 192 64s192-28.7 192-64v-42.7C342.7 434.4 267.2 448 192 448S41.3 434.4 0 405.3zM320 128c106 0 192-28.7 192-64S426 0 320 0 128 28.7 128 64s86 64 192 64zM0 300.4V352c0 35.3 86 64 192 64s192-28.7 192-64v-51.6c-41.3 34-116.9 51.6-192 51.6S41.3 334.4 0 300.4zm416 11c57.3-11.1 96-31.7 96-55.4v-42.7c-23.2 16.4-57.3 27.6-96 34.5v63.6zM192 160C86 160 0 195.8 0 240s86 80 192 80 192-35.8 192-80-86-80-192-80zm219.3 56.3c60-10.8 100.7-32 100.7-56.3v-42.7c-35.5 25.1-96.5 38.6-160.7 41.8 29.5 14.3 51.2 33.5 60 57.2z\"],\n    \"columns\": [512, 512, [], \"f0db\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z\"],\n    \"comment\": [512, 512, [], \"f075\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32z\"],\n    \"comment-alt\": [512, 512, [], \"f27a\", \"M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z\"],\n    \"comment-dollar\": [512, 512, [], \"f651\", \"M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95.01 57.02 130.74C44.46 421.05 2.7 465.97 2.2 466.5A7.995 7.995 0 0 0 8 480c66.26 0 115.99-31.75 140.6-51.38C181.29 440.93 217.59 448 256 448c141.38 0 256-93.12 256-208S397.38 32 256 32zm24 302.44V352c0 8.84-7.16 16-16 16h-16c-8.84 0-16-7.16-16-16v-17.73c-11.42-1.35-22.28-5.19-31.78-11.46-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2.03 3.18 1.46 6.66 2.22 10.26 2.22h32.78c4.66 0 8.44-3.78 8.44-8.42 0-3.75-2.52-7.08-6.12-8.11l-50.07-14.3c-22.25-6.35-40.01-24.71-42.91-47.67-4.05-32.07 19.03-59.43 49.32-63.05V128c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v17.73c11.42 1.35 22.28 5.19 31.78 11.46 6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2.03a24.516 24.516 0 0 0-10.26-2.22h-32.78c-4.66 0-8.44 3.78-8.44 8.42 0 3.75 2.52 7.08 6.12 8.11l50.07 14.3c22.25 6.36 40.01 24.71 42.91 47.67 4.05 32.06-19.03 59.42-49.32 63.04z\"],\n    \"comment-dots\": [512, 512, [], \"f4ad\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"comment-medical\": [512, 512, [], \"f7f5\", \"M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95 57 130.74C44.46 421.05 2.7 466 2.2 466.5A8 8 0 0 0 8 480c66.26 0 116-31.75 140.6-51.38A304.66 304.66 0 0 0 256 448c141.39 0 256-93.12 256-208S397.39 32 256 32zm96 232a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z\"],\n    \"comment-slash\": [640, 512, [], \"f4b3\", \"M64 240c0 49.6 21.4 95 57 130.7-12.6 50.3-54.3 95.2-54.8 95.8-2.2 2.3-2.8 5.7-1.5 8.7 1.3 2.9 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 27.4 0 53.7-3.6 78.4-10L72.9 186.4c-5.6 17.1-8.9 35-8.9 53.6zm569.8 218.1l-114.4-88.4C554.6 334.1 576 289.2 576 240c0-114.9-114.6-208-256-208-65.1 0-124.2 20.1-169.4 52.7L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z\"],\n    \"comments\": [576, 512, [], \"f086\", \"M416 192c0-88.4-93.1-160-208-160S0 103.6 0 192c0 34.3 14.1 65.9 38 92-13.4 30.2-35.5 54.2-35.8 54.5-2.2 2.3-2.8 5.7-1.5 8.7S4.8 352 8 352c36.6 0 66.9-12.3 88.7-25 32.2 15.7 70.3 25 111.3 25 114.9 0 208-71.6 208-160zm122 220c23.9-26 38-57.7 38-92 0-66.9-53.5-124.2-129.3-148.1.9 6.6 1.3 13.3 1.3 20.1 0 105.9-107.7 192-240 192-10.8 0-21.3-.8-31.7-1.9C207.8 439.6 281.8 480 368 480c41 0 79.1-9.2 111.3-25 21.8 12.7 52.1 25 88.7 25 3.2 0 6.1-1.9 7.3-4.8 1.3-2.9.7-6.3-1.5-8.7-.3-.3-22.4-24.2-35.8-54.5z\"],\n    \"comments-dollar\": [576, 512, [], \"f653\", \"M416 192c0-88.37-93.12-160-208-160S0 103.63 0 192c0 34.27 14.13 65.95 37.97 91.98C24.61 314.22 2.52 338.16 2.2 338.5A7.995 7.995 0 0 0 8 352c36.58 0 66.93-12.25 88.73-24.98C128.93 342.76 167.02 352 208 352c114.88 0 208-71.63 208-160zm-224 96v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V96c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07V288c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm346.01 123.99C561.87 385.96 576 354.27 576 320c0-66.94-53.49-124.2-129.33-148.07.86 6.6 1.33 13.29 1.33 20.07 0 105.87-107.66 192-240 192-10.78 0-21.32-.77-31.73-1.88C207.8 439.63 281.77 480 368 480c40.98 0 79.07-9.24 111.27-24.98C501.07 467.75 531.42 480 568 480c3.2 0 6.09-1.91 7.34-4.84 1.27-2.94.66-6.34-1.55-8.67-.31-.33-22.42-24.24-35.78-54.5z\"],\n    \"compact-disc\": [496, 512, [], \"f51f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM88 256H56c0-105.9 86.1-192 192-192v32c-88.2 0-160 71.8-160 160zm160 96c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96zm0-128c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"compass\": [496, 512, [], \"f14e\", \"M225.38 233.37c-12.5 12.5-12.5 32.76 0 45.25 12.49 12.5 32.76 12.5 45.25 0 12.5-12.5 12.5-32.76 0-45.25-12.5-12.49-32.76-12.49-45.25 0zM248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm126.14 148.05L308.17 300.4a31.938 31.938 0 0 1-15.77 15.77l-144.34 65.97c-16.65 7.61-33.81-9.55-26.2-26.2l65.98-144.35a31.938 31.938 0 0 1 15.77-15.77l144.34-65.97c16.65-7.6 33.8 9.55 26.19 26.2z\"],\n    \"compress\": [448, 512, [], \"f066\", \"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"],\n    \"compress-arrows-alt\": [512, 512, [], \"f78c\", \"M200 288H88c-21.4 0-32.1 25.8-17 41l32.9 31-99.2 99.3c-6.2 6.2-6.2 16.4 0 22.6l25.4 25.4c6.2 6.2 16.4 6.2 22.6 0L152 408l31.1 33c15.1 15.1 40.9 4.4 40.9-17V312c0-13.3-10.7-24-24-24zm112-64h112c21.4 0 32.1-25.9 17-41l-33-31 99.3-99.3c6.2-6.2 6.2-16.4 0-22.6L481.9 4.7c-6.2-6.2-16.4-6.2-22.6 0L360 104l-31.1-33C313.8 55.9 288 66.6 288 88v112c0 13.3 10.7 24 24 24zm96 136l33-31.1c15.1-15.1 4.4-40.9-17-40.9H312c-13.3 0-24 10.7-24 24v112c0 21.4 25.9 32.1 41 17l31-32.9 99.3 99.3c6.2 6.2 16.4 6.2 22.6 0l25.4-25.4c6.2-6.2 6.2-16.4 0-22.6L408 360zM183 71.1L152 104 52.7 4.7c-6.2-6.2-16.4-6.2-22.6 0L4.7 30.1c-6.2 6.2-6.2 16.4 0 22.6L104 152l-33 31.1C55.9 198.2 66.6 224 88 224h112c13.3 0 24-10.7 24-24V88c0-21.3-25.9-32-41-16.9z\"],\n    \"concierge-bell\": [512, 512, [], \"f562\", \"M288 130.54V112h16c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16h-96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h16v18.54C115.49 146.11 32 239.18 32 352h448c0-112.82-83.49-205.89-192-221.46zM496 384H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"cookie\": [512, 512, [], \"f563\", \"M510.37 254.79l-12.08-76.26a132.493 132.493 0 0 0-37.16-72.95l-54.76-54.75c-19.73-19.72-45.18-32.7-72.71-37.05l-76.7-12.15c-27.51-4.36-55.69.11-80.52 12.76L107.32 49.6a132.25 132.25 0 0 0-57.79 57.8l-35.1 68.88a132.602 132.602 0 0 0-12.82 80.94l12.08 76.27a132.493 132.493 0 0 0 37.16 72.95l54.76 54.75a132.087 132.087 0 0 0 72.71 37.05l76.7 12.14c27.51 4.36 55.69-.11 80.52-12.75l69.12-35.21a132.302 132.302 0 0 0 57.79-57.8l35.1-68.87c12.71-24.96 17.2-53.3 12.82-80.96zM176 368c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm32-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm160 128c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"cookie-bite\": [512, 512, [], \"f564\", \"M510.52 255.82c-69.97-.85-126.47-57.69-126.47-127.86-70.17 0-127-56.49-127.86-126.45-27.26-4.14-55.13.3-79.72 12.82l-69.13 35.22a132.221 132.221 0 0 0-57.79 57.81l-35.1 68.88a132.645 132.645 0 0 0-12.82 80.95l12.08 76.27a132.521 132.521 0 0 0 37.16 72.96l54.77 54.76a132.036 132.036 0 0 0 72.71 37.06l76.71 12.15c27.51 4.36 55.7-.11 80.53-12.76l69.13-35.21a132.273 132.273 0 0 0 57.79-57.81l35.1-68.88c12.56-24.64 17.01-52.58 12.91-79.91zM176 368c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm32-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm160 128c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"copy\": [448, 512, [], \"f0c5\", \"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z\"],\n    \"copyright\": [512, 512, [], \"f1f9\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm117.134 346.753c-1.592 1.867-39.776 45.731-109.851 45.731-84.692 0-144.484-63.26-144.484-145.567 0-81.303 62.004-143.401 143.762-143.401 66.957 0 101.965 37.315 103.422 38.904a12 12 0 0 1 1.238 14.623l-22.38 34.655c-4.049 6.267-12.774 7.351-18.234 2.295-.233-.214-26.529-23.88-61.88-23.88-46.116 0-73.916 33.575-73.916 76.082 0 39.602 25.514 79.692 74.277 79.692 38.697 0 65.28-28.338 65.544-28.625 5.132-5.565 14.059-5.033 18.508 1.053l24.547 33.572a12.001 12.001 0 0 1-.553 14.866z\"],\n    \"couch\": [640, 512, [], \"f4b8\", \"M160 224v64h320v-64c0-35.3 28.7-64 64-64h32c0-53-43-96-96-96H160c-53 0-96 43-96 96h32c35.3 0 64 28.7 64 64zm416-32h-32c-17.7 0-32 14.3-32 32v96H128v-96c0-17.7-14.3-32-32-32H64c-35.3 0-64 28.7-64 64 0 23.6 13 44 32 55.1V432c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-16h384v16c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16V311.1c19-11.1 32-31.5 32-55.1 0-35.3-28.7-64-64-64z\"],\n    \"credit-card\": [576, 512, [], \"f09d\", \"M0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V256H0v176zm192-68c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-40zm-128 0c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM576 80v48H0V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48z\"],\n    \"crop\": [512, 512, [], \"f125\", \"M488 352h-40V109.25l59.31-59.31c6.25-6.25 6.25-16.38 0-22.63L484.69 4.69c-6.25-6.25-16.38-6.25-22.63 0L402.75 64H192v96h114.75L160 306.75V24c0-13.26-10.75-24-24-24H88C74.75 0 64 10.74 64 24v40H24C10.75 64 0 74.74 0 88v48c0 13.25 10.75 24 24 24h40v264c0 13.25 10.75 24 24 24h232v-96H205.25L352 205.25V488c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24v-40h40c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"],\n    \"crop-alt\": [512, 512, [], \"f565\", \"M488 352h-40V96c0-17.67-14.33-32-32-32H192v96h160v328c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24v-40h40c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24zM160 24c0-13.26-10.75-24-24-24H88C74.75 0 64 10.74 64 24v40H24C10.75 64 0 74.74 0 88v48c0 13.25 10.75 24 24 24h40v256c0 17.67 14.33 32 32 32h224v-96H160V24z\"],\n    \"cross\": [384, 512, [], \"f654\", \"M352 128h-96V32c0-17.67-14.33-32-32-32h-64c-17.67 0-32 14.33-32 32v96H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h96v224c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V256h96c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"],\n    \"crosshairs\": [512, 512, [], \"f05b\", \"M500 224h-30.364C455.724 130.325 381.675 56.276 288 42.364V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v30.364C130.325 56.276 56.276 130.325 42.364 224H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h30.364C56.276 381.675 130.325 455.724 224 469.636V500c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-30.364C381.675 455.724 455.724 381.675 469.636 288H500c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zM288 404.634V364c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40.634C165.826 392.232 119.783 346.243 107.366 288H148c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40.634C119.768 165.826 165.757 119.783 224 107.366V148c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40.634C346.174 119.768 392.217 165.757 404.634 224H364c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40.634C392.232 346.174 346.243 392.217 288 404.634zM288 256c0 17.673-14.327 32-32 32s-32-14.327-32-32c0-17.673 14.327-32 32-32s32 14.327 32 32z\"],\n    \"crow\": [640, 512, [], \"f520\", \"M544 32h-16.36C513.04 12.68 490.09 0 464 0c-44.18 0-80 35.82-80 80v20.98L12.09 393.57A30.216 30.216 0 0 0 0 417.74c0 22.46 23.64 37.07 43.73 27.03L165.27 384h96.49l44.41 120.1c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38L312.94 384H352c1.91 0 3.76-.23 5.66-.29l44.51 120.38c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38l-41.24-111.53C485.74 352.8 544 279.26 544 192v-80l96-16c0-35.35-42.98-64-96-64zm-80 72c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"crown\": [640, 512, [], \"f521\", \"M528 448H112c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h416c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm64-320c-26.5 0-48 21.5-48 48 0 7.1 1.6 13.7 4.4 19.8L476 239.2c-15.4 9.2-35.3 4-44.2-11.6L350.3 85C361 76.2 368 63 368 48c0-26.5-21.5-48-48-48s-48 21.5-48 48c0 15 7 28.2 17.7 37l-81.5 142.6c-8.9 15.6-28.9 20.8-44.2 11.6l-72.3-43.4c2.7-6 4.4-12.7 4.4-19.8 0-26.5-21.5-48-48-48S0 149.5 0 176s21.5 48 48 48c2.6 0 5.2-.4 7.7-.8L128 416h384l72.3-192.8c2.5.4 5.1.8 7.7.8 26.5 0 48-21.5 48-48s-21.5-48-48-48z\"],\n    \"crutch\": [512, 512, [], \"f7f7\", \"M507.31 185.71l-181-181a16 16 0 0 0-22.62 0L281 27.31a16 16 0 0 0 0 22.63l181 181a16 16 0 0 0 22.63 0l22.62-22.63a16 16 0 0 0 .06-22.6zm-179.54 66.41l-67.89-67.89 55.1-55.1-45.25-45.25-109.67 109.67a96.08 96.08 0 0 0-25.67 46.29L106.65 360.1l-102 102a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0l102-102 120.25-27.75a95.88 95.88 0 0 0 46.29-25.65l109.68-109.68L382.87 197zm-54.57 54.57a32 32 0 0 1-15.45 8.54l-79.3 18.32 18.3-79.3a32.22 32.22 0 0 1 8.56-15.45l9.31-9.31 67.89 67.89z\"],\n    \"cube\": [512, 512, [], \"f1b2\", \"M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z\"],\n    \"cubes\": [512, 512, [], \"f1b3\", \"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"],\n    \"cut\": [448, 512, [], \"f0c4\", \"M278.06 256L444.48 89.57c4.69-4.69 4.69-12.29 0-16.97-32.8-32.8-85.99-32.8-118.79 0L210.18 188.12l-24.86-24.86c4.31-10.92 6.68-22.81 6.68-35.26 0-53.02-42.98-96-96-96S0 74.98 0 128s42.98 96 96 96c4.54 0 8.99-.32 13.36-.93L142.29 256l-32.93 32.93c-4.37-.61-8.83-.93-13.36-.93-53.02 0-96 42.98-96 96s42.98 96 96 96 96-42.98 96-96c0-12.45-2.37-24.34-6.68-35.26l24.86-24.86L325.69 439.4c32.8 32.8 85.99 32.8 118.79 0 4.69-4.68 4.69-12.28 0-16.97L278.06 256zM96 160c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32zm0 256c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32z\"],\n    \"database\": [448, 512, [], \"f1c0\", \"M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z\"],\n    \"deaf\": [512, 512, [], \"f2a4\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm268.485-52.201L480.2 3.515c-4.687-4.686-12.284-4.686-16.971 0L376.2 90.544c-4.686 4.686-4.686 12.284 0 16.971l28.285 28.285c4.686 4.686 12.284 4.686 16.97 0l87.03-87.029c4.687-4.688 4.687-12.286 0-16.972zM168.97 314.745c-4.686-4.686-12.284-4.686-16.97 0L3.515 463.23c-4.686 4.686-4.686 12.284 0 16.971L31.8 508.485c4.687 4.686 12.284 4.686 16.971 0L197.256 360c4.686-4.686 4.686-12.284 0-16.971l-28.286-28.284z\"],\n    \"democrat\": [640, 512, [], \"f747\", \"M637.3 256.9l-19.6-29.4c-28.2-42.3-75.3-67.5-126.1-67.5H256l-81.2-81.2c20.1-20.1 22.6-51.1 7.5-73.9-3.4-5.2-10.8-5.9-15.2-1.5l-41.8 41.8L82.4 2.4c-3.6-3.6-9.6-3-12.4 1.2-12.3 18.6-10.3 44 6.1 60.4 3.3 3.3 7.3 5.3 11.3 7.5-2.2 1.7-4.7 3.1-6.4 5.4L6.4 176.2c-7.3 9.7-8.4 22.7-3 33.5l14.3 28.6c5.4 10.8 16.5 17.7 28.6 17.7h31c8.5 0 16.6-3.4 22.6-9.4L138 212l54 108h352v-77.8c16.2 12.2 18.3 17.6 40.1 50.3 4.9 7.4 14.8 9.3 22.2 4.4l26.6-17.7c7.3-5 9.3-14.9 4.4-22.3zm-341.1-13.6l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L256 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zm112 0l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L368 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zm112 0l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L480 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zM192 496c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-80h160v80c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16V352H192v144z\"],\n    \"desktop\": [576, 512, [], \"f108\", \"M528 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h192l-16 48h-72c-13.3 0-24 10.7-24 24s10.7 24 24 24h272c13.3 0 24-10.7 24-24s-10.7-24-24-24h-72l-16-48h192c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h448v288z\"],\n    \"dharmachakra\": [512, 512, [], \"f655\", \"M495 225.06l-17.22 1.08c-5.27-39.49-20.79-75.64-43.86-105.84l12.95-11.43c6.92-6.11 7.25-16.79.73-23.31L426.44 64.4c-6.53-6.53-17.21-6.19-23.31.73L391.7 78.07c-30.2-23.06-66.35-38.58-105.83-43.86L286.94 17c.58-9.21-6.74-17-15.97-17h-29.94c-9.23 0-16.54 7.79-15.97 17l1.08 17.22c-39.49 5.27-75.64 20.79-105.83 43.86l-11.43-12.95c-6.11-6.92-16.79-7.25-23.31-.73L64.4 85.56c-6.53 6.53-6.19 17.21.73 23.31l12.95 11.43c-23.06 30.2-38.58 66.35-43.86 105.84L17 225.06c-9.21-.58-17 6.74-17 15.97v29.94c0 9.23 7.79 16.54 17 15.97l17.22-1.08c5.27 39.49 20.79 75.64 43.86 105.83l-12.95 11.43c-6.92 6.11-7.25 16.79-.73 23.31l21.17 21.17c6.53 6.53 17.21 6.19 23.31-.73l11.43-12.95c30.2 23.06 66.35 38.58 105.84 43.86L225.06 495c-.58 9.21 6.74 17 15.97 17h29.94c9.23 0 16.54-7.79 15.97-17l-1.08-17.22c39.49-5.27 75.64-20.79 105.84-43.86l11.43 12.95c6.11 6.92 16.79 7.25 23.31.73l21.17-21.17c6.53-6.53 6.19-17.21-.73-23.31l-12.95-11.43c23.06-30.2 38.58-66.35 43.86-105.83l17.22 1.08c9.21.58 17-6.74 17-15.97v-29.94c-.01-9.23-7.8-16.54-17.01-15.97zM281.84 98.61c24.81 4.07 47.63 13.66 67.23 27.78l-42.62 48.29c-8.73-5.44-18.32-9.54-28.62-11.95l4.01-64.12zm-51.68 0l4.01 64.12c-10.29 2.41-19.89 6.52-28.62 11.95l-42.62-48.29c19.6-14.12 42.42-23.71 67.23-27.78zm-103.77 64.33l48.3 42.61c-5.44 8.73-9.54 18.33-11.96 28.62l-64.12-4.01c4.07-24.81 13.66-47.62 27.78-67.22zm-27.78 118.9l64.12-4.01c2.41 10.29 6.52 19.89 11.95 28.62l-48.29 42.62c-14.12-19.6-23.71-42.42-27.78-67.23zm131.55 131.55c-24.81-4.07-47.63-13.66-67.23-27.78l42.61-48.3c8.73 5.44 18.33 9.54 28.62 11.96l-4 64.12zM256 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm25.84 125.39l-4.01-64.12c10.29-2.41 19.89-6.52 28.62-11.96l42.61 48.3c-19.6 14.12-42.41 23.71-67.22 27.78zm103.77-64.33l-48.29-42.62c5.44-8.73 9.54-18.32 11.95-28.62l64.12 4.01c-4.07 24.82-13.66 47.64-27.78 67.23zm-36.34-114.89c-2.41-10.29-6.52-19.89-11.96-28.62l48.3-42.61c14.12 19.6 23.71 42.42 27.78 67.23l-64.12 4z\"],\n    \"diagnoses\": [640, 512, [], \"f470\", \"M496 256c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm-176-80c48.5 0 88-39.5 88-88S368.5 0 320 0s-88 39.5-88 88 39.5 88 88 88zM59.8 364c10.2 15.3 29.3 17.8 42.9 9.8 16.2-9.6 56.2-31.7 105.3-48.6V416h224v-90.7c49.1 16.8 89.1 39 105.3 48.6 13.6 8 32.7 5.3 42.9-9.8l17.8-26.7c8.8-13.2 7.6-34.6-10-45.1-11.9-7.1-29.7-17-51.1-27.4-28.1 46.1-99.4 17.8-87.7-35.1C409.3 217.2 365.1 208 320 208c-57 0-112.9 14.5-160 32.2-.2 40.2-47.6 63.3-79.2 36-11.2 6-21.3 11.6-28.7 16-17.6 10.5-18.8 31.8-10 45.1L59.8 364zM368 344c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-160 8c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm512 192H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"dice\": [640, 512, [], \"f522\", \"M592 192H473.26c12.69 29.59 7.12 65.2-17 89.32L320 417.58V464c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48V240c0-26.51-21.49-48-48-48zM480 376c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm-46.37-186.7L258.7 14.37c-19.16-19.16-50.23-19.16-69.39 0L14.37 189.3c-19.16 19.16-19.16 50.23 0 69.39L189.3 433.63c19.16 19.16 50.23 19.16 69.39 0L433.63 258.7c19.16-19.17 19.16-50.24 0-69.4zM96 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"dice-d20\": [480, 512, [], \"f6cf\", \"M106.75 215.06L1.2 370.95c-3.08 5 .1 11.5 5.93 12.14l208.26 22.07-108.64-190.1zM7.41 315.43L82.7 193.08 6.06 147.1c-2.67-1.6-6.06.32-6.06 3.43v162.81c0 4.03 5.29 5.53 7.41 2.09zM18.25 423.6l194.4 87.66c5.3 2.45 11.35-1.43 11.35-7.26v-65.67l-203.55-22.3c-4.45-.5-6.23 5.59-2.2 7.57zm81.22-257.78L179.4 22.88c4.34-7.06-3.59-15.25-10.78-11.14L17.81 110.35c-2.47 1.62-2.39 5.26.13 6.78l81.53 48.69zM240 176h109.21L253.63 7.62C250.5 2.54 245.25 0 240 0s-10.5 2.54-13.63 7.62L130.79 176H240zm233.94-28.9l-76.64 45.99 75.29 122.35c2.11 3.44 7.41 1.94 7.41-2.1V150.53c0-3.11-3.39-5.03-6.06-3.43zm-93.41 18.72l81.53-48.7c2.53-1.52 2.6-5.16.13-6.78l-150.81-98.6c-7.19-4.11-15.12 4.08-10.78 11.14l79.93 142.94zm79.02 250.21L256 438.32v65.67c0 5.84 6.05 9.71 11.35 7.26l194.4-87.66c4.03-1.97 2.25-8.06-2.2-7.56zm-86.3-200.97l-108.63 190.1 208.26-22.07c5.83-.65 9.01-7.14 5.93-12.14L373.25 215.06zM240 208H139.57L240 383.75 340.43 208H240z\"],\n    \"dice-d6\": [448, 512, [], \"f6d1\", \"M422.19 109.95L256.21 9.07c-19.91-12.1-44.52-12.1-64.43 0L25.81 109.95c-5.32 3.23-5.29 11.27.06 14.46L224 242.55l198.14-118.14c5.35-3.19 5.38-11.22.05-14.46zm13.84 44.63L240 271.46v223.82c0 12.88 13.39 20.91 24.05 14.43l152.16-92.48c19.68-11.96 31.79-33.94 31.79-57.7v-197.7c0-6.41-6.64-10.43-11.97-7.25zM0 161.83v197.7c0 23.77 12.11 45.74 31.79 57.7l152.16 92.47c10.67 6.48 24.05-1.54 24.05-14.43V271.46L11.97 154.58C6.64 151.4 0 155.42 0 161.83z\"],\n    \"dice-five\": [448, 512, [], \"f523\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-four\": [448, 512, [], \"f524\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-one\": [448, 512, [], \"f525\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM224 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-six\": [448, 512, [], \"f526\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-three\": [448, 512, [], \"f527\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-two\": [448, 512, [], \"f528\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"digital-tachograph\": [640, 512, [], \"f566\", \"M608 96H32c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V128c0-17.67-14.33-32-32-32zM304 352c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-8c0-4.42 3.58-8 8-8h224c4.42 0 8 3.58 8 8v8zM72 288v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H80c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm40-64c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-48c0-8.84 7.16-16 16-16h208c8.84 0 16 7.16 16 16v48zm272 128c0 4.42-3.58 8-8 8H344c-4.42 0-8-3.58-8-8v-8c0-4.42 3.58-8 8-8h224c4.42 0 8 3.58 8 8v8z\"],\n    \"directions\": [512, 512, [], \"f5eb\", \"M502.61 233.32L278.68 9.39c-12.52-12.52-32.83-12.52-45.36 0L9.39 233.32c-12.52 12.53-12.52 32.83 0 45.36l223.93 223.93c12.52 12.53 32.83 12.53 45.36 0l223.93-223.93c12.52-12.53 12.52-32.83 0-45.36zm-100.98 12.56l-84.21 77.73c-5.12 4.73-13.43 1.1-13.43-5.88V264h-96v64c0 4.42-3.58 8-8 8h-32c-4.42 0-8-3.58-8-8v-80c0-17.67 14.33-32 32-32h112v-53.73c0-6.97 8.3-10.61 13.43-5.88l84.21 77.73c3.43 3.17 3.43 8.59 0 11.76z\"],\n    \"divide\": [448, 512, [], \"f529\", \"M224 352c-35.35 0-64 28.65-64 64s28.65 64 64 64 64-28.65 64-64-28.65-64-64-64zm0-192c35.35 0 64-28.65 64-64s-28.65-64-64-64-64 28.65-64 64 28.65 64 64 64zm192 48H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"dizzy\": [496, 512, [], \"f567\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-96 206.6l-28.7 28.7c-14.8 14.8-37.8-7.5-22.6-22.6l28.7-28.7-28.7-28.7c-15-15 7.7-37.6 22.6-22.6l28.7 28.7 28.7-28.7c15-15 37.6 7.7 22.6 22.6L174.6 192l28.7 28.7c15.2 15.2-7.9 37.4-22.6 22.6L152 214.6zM248 416c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm147.3-195.3c15.2 15.2-7.9 37.4-22.6 22.6L344 214.6l-28.7 28.7c-14.8 14.8-37.8-7.5-22.6-22.6l28.7-28.7-28.7-28.7c-15-15 7.7-37.6 22.6-22.6l28.7 28.7 28.7-28.7c15-15 37.6 7.7 22.6 22.6L366.6 192l28.7 28.7z\"],\n    \"dna\": [448, 512, [], \"f471\", \"M.1 494.1c-1.1 9.5 6.3 17.8 15.9 17.8l32.3.1c8.1 0 14.9-5.9 16-13.9.7-4.9 1.8-11.1 3.4-18.1H380c1.6 6.9 2.9 13.2 3.5 18.1 1.1 8 7.9 14 16 13.9l32.3-.1c9.6 0 17.1-8.3 15.9-17.8-4.6-37.9-25.6-129-118.9-207.7-17.6 12.4-37.1 24.2-58.5 35.4 6.2 4.6 11.4 9.4 17 14.2H159.7c21.3-18.1 47-35.6 78.7-51.4C410.5 199.1 442.1 65.8 447.9 17.9 449 8.4 441.6.1 432 .1L399.6 0c-8.1 0-14.9 5.9-16 13.9-.7 4.9-1.8 11.1-3.4 18.1H67.8c-1.6-7-2.7-13.1-3.4-18.1-1.1-8-7.9-14-16-13.9L16.1.1C6.5.1-1 8.4.1 17.9 5.3 60.8 31.4 171.8 160 256 31.5 340.2 5.3 451.2.1 494.1zM224 219.6c-25.1-13.7-46.4-28.4-64.3-43.6h128.5c-17.8 15.2-39.1 30-64.2 43.6zM355.1 96c-5.8 10.4-12.8 21.1-21 32H114c-8.3-10.9-15.3-21.6-21-32h262.1zM92.9 416c5.8-10.4 12.8-21.1 21-32h219.4c8.3 10.9 15.4 21.6 21.2 32H92.9z\"],\n    \"dog\": [512, 512, [], \"f6d3\", \"M496 96h-64l-7.16-14.31A32 32 0 0 0 396.22 64H342.6l-27.28-27.28C305.23 26.64 288 33.78 288 48.03v149.84l128 45.71V208h32c35.35 0 64-28.65 64-64v-32c0-8.84-7.16-16-16-16zm-112 48c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zM96 224c-17.64 0-32-14.36-32-32 0-17.67-14.33-32-32-32S0 174.33 0 192c0 41.66 26.83 76.85 64 90.1V496c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V384h160v112c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V277.55L266.05 224H96z\"],\n    \"dollar-sign\": [288, 512, [], \"f155\", \"M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z\"],\n    \"dolly\": [576, 512, [], \"f472\", \"M294.2 277.7c18 5 34.7 13.4 49.5 24.7l161.5-53.8c8.4-2.8 12.9-11.9 10.1-20.2L454.9 47.2c-2.8-8.4-11.9-12.9-20.2-10.1l-61.1 20.4 33.1 99.4L346 177l-33.1-99.4-61.6 20.5c-8.4 2.8-12.9 11.9-10.1 20.2l53 159.4zm281 48.7L565 296c-2.8-8.4-11.9-12.9-20.2-10.1l-213.5 71.2c-17.2-22-43.6-36.4-73.5-37L158.4 21.9C154 8.8 141.8 0 128 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h88.9l92.2 276.7c-26.1 20.4-41.7 53.6-36 90.5 6.1 39.4 37.9 72.3 77.3 79.2 60.2 10.7 112.3-34.8 113.4-92.6l213.3-71.2c8.3-2.8 12.9-11.8 10.1-20.2zM256 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"dolly-flatbed\": [640, 512, [], \"f474\", \"M208 320h384c8.8 0 16-7.2 16-16V48c0-8.8-7.2-16-16-16H448v128l-48-32-48 32V32H208c-8.8 0-16 7.2-16 16v256c0 8.8 7.2 16 16 16zm416 64H128V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h82.9c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H451c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H624c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"donate\": [512, 512, [], \"f4b9\", \"M256 416c114.9 0 208-93.1 208-208S370.9 0 256 0 48 93.1 48 208s93.1 208 208 208zM233.8 97.4V80.6c0-9.2 7.4-16.6 16.6-16.6h11.1c9.2 0 16.6 7.4 16.6 16.6v17c15.5.8 30.5 6.1 43 15.4 5.6 4.1 6.2 12.3 1.2 17.1L306 145.6c-3.8 3.7-9.5 3.8-14 1-5.4-3.4-11.4-5.1-17.8-5.1h-38.9c-9 0-16.3 8.2-16.3 18.3 0 8.2 5 15.5 12.1 17.6l62.3 18.7c25.7 7.7 43.7 32.4 43.7 60.1 0 34-26.4 61.5-59.1 62.4v16.8c0 9.2-7.4 16.6-16.6 16.6h-11.1c-9.2 0-16.6-7.4-16.6-16.6v-17c-15.5-.8-30.5-6.1-43-15.4-5.6-4.1-6.2-12.3-1.2-17.1l16.3-15.5c3.8-3.7 9.5-3.8 14-1 5.4 3.4 11.4 5.1 17.8 5.1h38.9c9 0 16.3-8.2 16.3-18.3 0-8.2-5-15.5-12.1-17.6l-62.3-18.7c-25.7-7.7-43.7-32.4-43.7-60.1.1-34 26.4-61.5 59.1-62.4zM480 352h-32.5c-19.6 26-44.6 47.7-73 64h63.8c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8h63.8c-28.4-16.3-53.3-38-73-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32z\"],\n    \"door-closed\": [640, 512, [], \"f52a\", \"M624 448H512V50.8C512 22.78 490.47 0 464 0H175.99c-26.47 0-48 22.78-48 50.8V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM415.99 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32c.01 17.67-14.32 32-32 32z\"],\n    \"door-open\": [640, 512, [], \"f52b\", \"M624 448h-80V113.45C544 86.19 522.47 64 496 64H384v64h96v384h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM312.24 1.01l-192 49.74C105.99 54.44 96 67.7 96 82.92V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h336V33.18c0-21.58-19.56-37.41-39.76-32.17zM264 288c-13.25 0-24-14.33-24-32s10.75-32 24-32 24 14.33 24 32-10.75 32-24 32z\"],\n    \"dot-circle\": [512, 512, [], \"f192\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z\"],\n    \"dove\": [512, 512, [], \"f4ba\", \"M288 167.2v-28.1c-28.2-36.3-47.1-79.3-54.1-125.2-2.1-13.5-19-18.8-27.8-8.3-21.1 24.9-37.7 54.1-48.9 86.5 34.2 38.3 80 64.6 130.8 75.1zM400 64c-44.2 0-80 35.9-80 80.1v59.4C215.6 197.3 127 133 87 41.8c-5.5-12.5-23.2-13.2-29-.9C41.4 76 32 115.2 32 156.6c0 70.8 34.1 136.9 85.1 185.9 13.2 12.7 26.1 23.2 38.9 32.8l-143.9 36C1.4 414-3.4 426.4 2.6 435.7 20 462.6 63 508.2 155.8 512c8 .3 16-2.6 22.1-7.9l65.2-56.1H320c88.4 0 160-71.5 160-159.9V128l32-64H400zm0 96.1c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"download\": [512, 512, [], \"f019\", \"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"],\n    \"drafting-compass\": [512, 512, [], \"f568\", \"M457.01 344.42c-25.05 20.33-52.63 37.18-82.54 49.05l54.38 94.19 53.95 23.04c9.81 4.19 20.89-2.21 22.17-12.8l7.02-58.25-54.98-95.23zm42.49-94.56c4.86-7.67 1.89-17.99-6.05-22.39l-28.07-15.57c-7.48-4.15-16.61-1.46-21.26 5.72C403.01 281.15 332.25 320 256 320c-23.93 0-47.23-4.25-69.41-11.53l67.36-116.68c.7.02 1.34.21 2.04.21s1.35-.19 2.04-.21l51.09 88.5c31.23-8.96 59.56-25.75 82.61-48.92l-51.79-89.71C347.39 128.03 352 112.63 352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96c0 16.63 4.61 32.03 12.05 45.66l-68.3 118.31c-12.55-11.61-23.96-24.59-33.68-39-4.79-7.1-13.97-9.62-21.38-5.33l-27.75 16.07c-7.85 4.54-10.63 14.9-5.64 22.47 15.57 23.64 34.69 44.21 55.98 62.02L0 439.66l7.02 58.25c1.28 10.59 12.36 16.99 22.17 12.8l53.95-23.04 70.8-122.63C186.13 377.28 220.62 384 256 384c99.05 0 190.88-51.01 243.5-134.14zM256 64c17.67 0 32 14.33 32 32s-14.33 32-32 32-32-14.33-32-32 14.33-32 32-32z\"],\n    \"dragon\": [640, 512, [], \"f6d5\", \"M18.32 255.78L192 223.96l-91.28 68.69c-10.08 10.08-2.94 27.31 11.31 27.31h222.7c-9.44-26.4-14.73-54.47-14.73-83.38v-42.27l-119.73-87.6c-23.82-15.88-55.29-14.01-77.06 4.59L5.81 227.64c-12.38 10.33-3.45 30.42 12.51 28.14zm556.87 34.1l-100.66-50.31A47.992 47.992 0 0 1 448 196.65v-36.69h64l28.09 22.63c6 6 14.14 9.37 22.63 9.37h30.97a32 32 0 0 0 28.62-17.69l14.31-28.62a32.005 32.005 0 0 0-3.02-33.51l-74.53-99.38C553.02 4.7 543.54 0 533.47 0H296.02c-7.13 0-10.7 8.57-5.66 13.61L352 63.96 292.42 88.8c-5.9 2.95-5.9 11.36 0 14.31L352 127.96v108.62c0 72.08 36.03 139.39 96 179.38-195.59 6.81-344.56 41.01-434.1 60.91C5.78 478.67 0 485.88 0 494.2 0 504 7.95 512 17.76 512h499.08c63.29.01 119.61-47.56 122.99-110.76 2.52-47.28-22.73-90.4-64.64-111.36zM489.18 66.25l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.96-.71-25.85-12.53-21.52-29.67z\"],\n    \"draw-polygon\": [448, 512, [], \"f5ee\", \"M384 352c-.35 0-.67.1-1.02.1l-39.2-65.32c5.07-9.17 8.22-19.56 8.22-30.78s-3.14-21.61-8.22-30.78l39.2-65.32c.35.01.67.1 1.02.1 35.35 0 64-28.65 64-64s-28.65-64-64-64c-23.63 0-44.04 12.95-55.12 32H119.12C108.04 44.95 87.63 32 64 32 28.65 32 0 60.65 0 96c0 23.63 12.95 44.04 32 55.12v209.75C12.95 371.96 0 392.37 0 416c0 35.35 28.65 64 64 64 23.63 0 44.04-12.95 55.12-32h209.75c11.09 19.05 31.49 32 55.12 32 35.35 0 64-28.65 64-64 .01-35.35-28.64-64-63.99-64zm-288 8.88V151.12A63.825 63.825 0 0 0 119.12 128h208.36l-38.46 64.1c-.35-.01-.67-.1-1.02-.1-35.35 0-64 28.65-64 64s28.65 64 64 64c.35 0 .67-.1 1.02-.1l38.46 64.1H119.12A63.748 63.748 0 0 0 96 360.88zM272 256c0-8.82 7.18-16 16-16s16 7.18 16 16-7.18 16-16 16-16-7.18-16-16zM400 96c0 8.82-7.18 16-16 16s-16-7.18-16-16 7.18-16 16-16 16 7.18 16 16zM64 80c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16zM48 416c0-8.82 7.18-16 16-16s16 7.18 16 16-7.18 16-16 16-16-7.18-16-16zm336 16c-8.82 0-16-7.18-16-16s7.18-16 16-16 16 7.18 16 16-7.18 16-16 16z\"],\n    \"drum\": [576, 512, [], \"f569\", \"M458.08 120.88l102.39-61.43c15.16-9.09 20.06-28.75 10.97-43.91C562.34.39 542.7-4.53 527.53 4.57l-160.69 96.41A629.32 629.32 0 0 0 288 96C128.94 96 0 153.31 0 224v160.83c0 30.46 24.03 58.4 64 80.37v-96.37c0-17.6 14.4-32 32-32s32 14.4 32 32v122.41c37.4 11.13 81 18.44 128 20.75V400.84c0-17.6 14.4-32 32-32s32 14.4 32 32V512c47-2.31 90.6-9.62 128-20.75V368.84c0-17.6 14.4-32 32-32s32 14.4 32 32v96.37c39.97-21.97 64-49.91 64-80.37V224.01c-.01-42.38-46.54-79.84-117.92-103.13zM288 304c-132.55 0-240-35.82-240-80s107.45-80 240-80c2.34 0 4.62.1 6.94.12l-87.41 52.44c-15.16 9.09-20.06 28.75-10.97 43.91 9.56 15.93 29.51 19.61 43.91 10.97l162.71-97.62C477.55 167.41 528 193.74 528 224.01 528 268.19 420.54 304 288 304z\"],\n    \"drum-steelpan\": [576, 512, [], \"f56a\", \"M288 32C128.94 32 0 89.31 0 160v192c0 70.69 128.94 128 288 128s288-57.31 288-128V160c0-70.69-128.94-128-288-128zm-82.99 158.36c-4.45 16.61-14.54 30.57-28.31 40.48C100.23 217.46 48 190.78 48 160c0-30.16 50.11-56.39 124.04-70.03l25.6 44.34c9.86 17.09 12.48 36.99 7.37 56.05zM288 240c-21.08 0-41.41-1-60.89-2.7 8.06-26.13 32.15-45.3 60.89-45.3s52.83 19.17 60.89 45.3C329.41 239 309.08 240 288 240zm64-144c0 35.29-28.71 64-64 64s-64-28.71-64-64V82.96c20.4-1.88 41.8-2.96 64-2.96s43.6 1.08 64 2.96V96zm46.93 134.9c-13.81-9.91-23.94-23.9-28.4-40.54-5.11-19.06-2.49-38.96 7.38-56.04l25.65-44.42C477.72 103.5 528 129.79 528 160c0 30.83-52.4 57.54-129.07 70.9z\"],\n    \"drumstick-bite\": [512, 512, [], \"f6d7\", \"M462.8 49.57a169.44 169.44 0 0 0-239.5 0C187.82 85 160.13 128 160.13 192v85.83l-40.62 40.59c-9.7 9.69-24 11.07-36.78 6a60.33 60.33 0 0 0-65 98.72C33 438.39 54.24 442.7 73.85 438.21c-4.5 19.6-.18 40.83 15.1 56.1a60.35 60.35 0 0 0 98.8-65c-5.09-12.73-3.72-27 6-36.75L234.36 352h85.89a187.87 187.87 0 0 0 61.89-10c-39.64-43.89-39.83-110.23 1.05-151.07 34.38-34.36 86.76-39.46 128.74-16.8 1.3-44.96-14.81-90.28-49.13-124.56z\"],\n    \"dumbbell\": [640, 512, [], \"f44b\", \"M104 96H56c-13.3 0-24 10.7-24 24v104H8c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h24v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm528 128h-24V120c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v272c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h24c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM456 32h-48c-13.3 0-24 10.7-24 24v168H256V56c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v400c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h128v168c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24z\"],\n    \"dumpster\": [576, 512, [], \"f793\", \"M560 160c10.4 0 18-9.8 15.5-19.9l-24-96C549.7 37 543.3 32 536 32h-98.9l25.6 128H560zM272 32H171.5l-25.6 128H272V32zm132.5 0H304v128h126.1L404.5 32zM16 160h97.3l25.6-128H40c-7.3 0-13.7 5-15.5 12.1l-24 96C-2 150.2 5.6 160 16 160zm544 64h-20l4-32H32l4 32H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h28l20 160v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h320v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16l20-160h28c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"dumpster-fire\": [640, 512, [], \"f794\", \"M418.7 104.1l.2-.2-14.4-72H304v128h60.8c16.2-19.3 34.2-38.2 53.9-55.8zM272 32H171.5l-25.6 128H272V32zm189.3 72.1c18.2 16.3 35.5 33.7 51.1 51.5 5.7-5.6 11.4-11.1 17.3-16.3l21.3-19 21.3 19c1.1.9 2.1 2.1 3.1 3.1-.1-.8.2-1.5 0-2.3l-24-96C549.7 37 543.3 32 536 32h-98.9l12.3 61.5 11.9 10.6zM16 160h97.3l25.6-128H40c-7.3 0-13.7 5-15.5 12.1l-24 96C-2 150.2 5.6 160 16 160zm324.6 32H32l4 32H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h28l20 160v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h208.8c-30.2-33.7-48.8-77.9-48.8-126.4 0-35.9 19.9-82.9 52.6-129.6zm210.5-28.8c-14.9 13.3-28.3 27.2-40.2 41.2-19.5-25.8-43.6-52-71-76.4-70.2 62.7-120 144.3-120 193.6 0 87.5 71.6 158.4 160 158.4s160-70.9 160-158.4c.1-36.6-37-112.2-88.8-158.4zm-18.6 229.4c-14.7 10.7-32.9 17-52.5 17-49 0-88.9-33.5-88.9-88 0-27.1 16.5-51 49.4-91.9 4.7 5.6 67.1 88.1 67.1 88.1l39.8-47c2.8 4.8 5.4 9.5 7.7 14 18.6 36.7 10.8 83.6-22.6 107.8z\"],\n    \"dungeon\": [512, 512, [], \"f6d9\", \"M128.73 195.32l-82.81-51.76c-8.04-5.02-18.99-2.17-22.93 6.45A254.19 254.19 0 0 0 .54 239.28C-.05 248.37 7.59 256 16.69 256h97.13c7.96 0 14.08-6.25 15.01-14.16 1.09-9.33 3.24-18.33 6.24-26.94 2.56-7.34.25-15.46-6.34-19.58zM319.03 8C298.86 2.82 277.77 0 256 0s-42.86 2.82-63.03 8c-9.17 2.35-13.91 12.6-10.39 21.39l37.47 104.03A16.003 16.003 0 0 0 235.1 144h41.8c6.75 0 12.77-4.23 15.05-10.58l37.47-104.03c3.52-8.79-1.22-19.03-10.39-21.39zM112 288H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm77.31-283.67l-36.32-90.8c-3.53-8.83-14.13-12.99-22.42-8.31a257.308 257.308 0 0 0-71.61 59.89c-6.06 7.32-3.85 18.48 4.22 23.52l82.93 51.83c6.51 4.07 14.66 2.62 20.11-2.79 5.18-5.15 10.79-9.85 16.79-14.05 6.28-4.41 9.15-12.17 6.3-19.29zM398.18 256h97.13c9.1 0 16.74-7.63 16.15-16.72a254.135 254.135 0 0 0-22.45-89.27c-3.94-8.62-14.89-11.47-22.93-6.45l-82.81 51.76c-6.59 4.12-8.9 12.24-6.34 19.58 3.01 8.61 5.15 17.62 6.24 26.94.93 7.91 7.05 14.16 15.01 14.16zm54.85-162.89a257.308 257.308 0 0 0-71.61-59.89c-8.28-4.68-18.88-.52-22.42 8.31l-36.32 90.8c-2.85 7.12.02 14.88 6.3 19.28 6 4.2 11.61 8.9 16.79 14.05 5.44 5.41 13.6 6.86 20.11 2.79l82.93-51.83c8.07-5.03 10.29-16.19 4.22-23.51zM496 288h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zM240 177.62V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V177.62c-5.23-.89-10.52-1.62-16-1.62s-10.77.73-16 1.62zm-64 41.51V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V189.36c-12.78 7.45-23.84 17.47-32 29.77zm128-29.77V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V219.13c-8.16-12.3-19.22-22.32-32-29.77z\"],\n    \"edit\": [576, 512, [], \"f044\", \"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"],\n    \"egg\": [384, 512, [], \"f7fb\", \"M192 0C86 0 0 214 0 320s86 192 192 192 192-86 192-192S298 0 192 0z\"],\n    \"eject\": [448, 512, [], \"f052\", \"M448 384v64c0 17.673-14.327 32-32 32H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h384c17.673 0 32 14.327 32 32zM48.053 320h351.886c41.651 0 63.581-49.674 35.383-80.435L259.383 47.558c-19.014-20.743-51.751-20.744-70.767 0L12.67 239.565C-15.475 270.268 6.324 320 48.053 320z\"],\n    \"ellipsis-h\": [512, 512, [], \"f141\", \"M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z\"],\n    \"ellipsis-v\": [192, 512, [], \"f142\", \"M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z\"],\n    \"envelope\": [512, 512, [], \"f0e0\", \"M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z\"],\n    \"envelope-open\": [512, 512, [], \"f2b6\", \"M512 464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V200.724a48 48 0 0 1 18.387-37.776c24.913-19.529 45.501-35.365 164.2-121.511C199.412 29.17 232.797-.347 256 .003c23.198-.354 56.596 29.172 73.413 41.433 118.687 86.137 139.303 101.995 164.2 121.512A48 48 0 0 1 512 200.724V464zm-65.666-196.605c-2.563-3.728-7.7-4.595-11.339-1.907-22.845 16.873-55.462 40.705-105.582 77.079-16.825 12.266-50.21 41.781-73.413 41.43-23.211.344-56.559-29.143-73.413-41.43-50.114-36.37-82.734-60.204-105.582-77.079-3.639-2.688-8.776-1.821-11.339 1.907l-9.072 13.196a7.998 7.998 0 0 0 1.839 10.967c22.887 16.899 55.454 40.69 105.303 76.868 20.274 14.781 56.524 47.813 92.264 47.573 35.724.242 71.961-32.771 92.263-47.573 49.85-36.179 82.418-59.97 105.303-76.868a7.998 7.998 0 0 0 1.839-10.967l-9.071-13.196z\"],\n    \"envelope-open-text\": [512, 512, [], \"f658\", \"M176 216h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16zm-16 80c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16zm96 121.13c-16.42 0-32.84-5.06-46.86-15.19L0 250.86V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V250.86L302.86 401.94c-14.02 10.12-30.44 15.19-46.86 15.19zm237.61-254.18c-8.85-6.94-17.24-13.47-29.61-22.81V96c0-26.51-21.49-48-48-48h-77.55c-3.04-2.2-5.87-4.26-9.04-6.56C312.6 29.17 279.2-.35 256 0c-23.2-.35-56.59 29.17-73.41 41.44-3.17 2.3-6 4.36-9.04 6.56H96c-26.51 0-48 21.49-48 48v44.14c-12.37 9.33-20.76 15.87-29.61 22.81A47.995 47.995 0 0 0 0 200.72v10.65l96 69.35V96h320v184.72l96-69.35v-10.65c0-14.74-6.78-28.67-18.39-37.77z\"],\n    \"envelope-square\": [448, 512, [], \"f199\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM178.117 262.104C87.429 196.287 88.353 196.121 64 177.167V152c0-13.255 10.745-24 24-24h272c13.255 0 24 10.745 24 24v25.167c-24.371 18.969-23.434 19.124-114.117 84.938-10.5 7.655-31.392 26.12-45.883 25.894-14.503.218-35.367-18.227-45.883-25.895zM384 217.775V360c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V217.775c13.958 10.794 33.329 25.236 95.303 70.214 14.162 10.341 37.975 32.145 64.694 32.01 26.887.134 51.037-22.041 64.72-32.025 61.958-44.965 81.325-59.406 95.283-70.199z\"],\n    \"equals\": [448, 512, [], \"f52c\", \"M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"eraser\": [512, 512, [], \"f12d\", \"M497.941 273.941c18.745-18.745 18.745-49.137 0-67.882l-160-160c-18.745-18.745-49.136-18.746-67.883 0l-256 256c-18.745 18.745-18.745 49.137 0 67.882l96 96A48.004 48.004 0 0 0 144 480h356c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H355.883l142.058-142.059zm-302.627-62.627l137.373 137.373L265.373 416H150.628l-80-80 124.686-124.686z\"],\n    \"ethernet\": [512, 512, [], \"f796\", \"M496 192h-48v-48c0-8.8-7.2-16-16-16h-48V80c0-8.8-7.2-16-16-16H144c-8.8 0-16 7.2-16 16v48H80c-8.8 0-16 7.2-16 16v48H16c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16h80V320h32v128h64V320h32v128h64V320h32v128h64V320h32v128h80c8.8 0 16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"],\n    \"euro-sign\": [320, 512, [], \"f153\", \"M310.706 413.765c-1.314-6.63-7.835-10.872-14.424-9.369-10.692 2.439-27.422 5.413-45.426 5.413-56.763 0-101.929-34.79-121.461-85.449h113.689a12 12 0 0 0 11.708-9.369l6.373-28.36c1.686-7.502-4.019-14.631-11.708-14.631H115.22c-1.21-14.328-1.414-28.287.137-42.245H261.95a12 12 0 0 0 11.723-9.434l6.512-29.755c1.638-7.484-4.061-14.566-11.723-14.566H130.184c20.633-44.991 62.69-75.03 117.619-75.03 14.486 0 28.564 2.25 37.851 4.145 6.216 1.268 12.347-2.498 14.002-8.623l11.991-44.368c1.822-6.741-2.465-13.616-9.326-14.917C290.217 34.912 270.71 32 249.635 32 152.451 32 74.03 92.252 45.075 176H12c-6.627 0-12 5.373-12 12v29.755c0 6.627 5.373 12 12 12h21.569c-1.009 13.607-1.181 29.287-.181 42.245H12c-6.627 0-12 5.373-12 12v28.36c0 6.627 5.373 12 12 12h30.114C67.139 414.692 145.264 480 249.635 480c26.301 0 48.562-4.544 61.101-7.788 6.167-1.595 10.027-7.708 8.788-13.957l-8.818-44.49z\"],\n    \"exchange-alt\": [512, 512, [], \"f362\", \"M0 168v-16c0-13.255 10.745-24 24-24h360V80c0-21.367 25.899-32.042 40.971-16.971l80 80c9.372 9.373 9.372 24.569 0 33.941l-80 80C409.956 271.982 384 261.456 384 240v-48H24c-13.255 0-24-10.745-24-24zm488 152H128v-48c0-21.314-25.862-32.08-40.971-16.971l-80 80c-9.372 9.373-9.372 24.569 0 33.941l80 80C102.057 463.997 128 453.437 128 432v-48h360c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"],\n    \"exclamation\": [192, 512, [], \"f12a\", \"M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z\"],\n    \"exclamation-circle\": [512, 512, [], \"f06a\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n    \"exclamation-triangle\": [576, 512, [], \"f071\", \"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n    \"expand\": [448, 512, [], \"f065\", \"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"],\n    \"expand-arrows-alt\": [448, 512, [], \"f31e\", \"M448 344v112a23.94 23.94 0 0 1-24 24H312c-21.39 0-32.09-25.9-17-41l36.2-36.2L224 295.6 116.77 402.9 153 439c15.09 15.1 4.39 41-17 41H24a23.94 23.94 0 0 1-24-24V344c0-21.4 25.89-32.1 41-17l36.19 36.2L184.46 256 77.18 148.7 41 185c-15.1 15.1-41 4.4-41-17V56a23.94 23.94 0 0 1 24-24h112c21.39 0 32.09 25.9 17 41l-36.2 36.2L224 216.4l107.23-107.3L295 73c-15.09-15.1-4.39-41 17-41h112a23.94 23.94 0 0 1 24 24v112c0 21.4-25.89 32.1-41 17l-36.19-36.2L263.54 256l107.28 107.3L407 327.1c15.1-15.2 41-4.5 41 16.9z\"],\n    \"external-link-alt\": [576, 512, [], \"f35d\", \"M576 24v127.984c0 21.461-25.96 31.98-40.971 16.971l-35.707-35.709-243.523 243.523c-9.373 9.373-24.568 9.373-33.941 0l-22.627-22.627c-9.373-9.373-9.373-24.569 0-33.941L442.756 76.676l-35.703-35.705C391.982 25.9 402.656 0 424.024 0H552c13.255 0 24 10.745 24 24zM407.029 270.794l-16 16A23.999 23.999 0 0 0 384 303.765V448H64V128h264a24.003 24.003 0 0 0 16.97-7.029l16-16C376.089 89.851 365.381 64 344 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V287.764c0-21.382-25.852-32.09-40.971-16.97z\"],\n    \"external-link-square-alt\": [448, 512, [], \"f360\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-88 16H248.029c-21.313 0-32.08 25.861-16.971 40.971l31.984 31.987L67.515 364.485c-4.686 4.686-4.686 12.284 0 16.971l31.029 31.029c4.687 4.686 12.285 4.686 16.971 0l195.526-195.526 31.988 31.991C358.058 263.977 384 253.425 384 231.979V120c0-13.255-10.745-24-24-24z\"],\n    \"eye\": [576, 512, [], \"f06e\", \"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\"],\n    \"eye-dropper\": [512, 512, [], \"f1fb\", \"M50.75 333.25c-12 12-18.75 28.28-18.75 45.26V424L0 480l32 32 56-32h45.49c16.97 0 33.25-6.74 45.25-18.74l126.64-126.62-128-128L50.75 333.25zM483.88 28.12c-37.47-37.5-98.28-37.5-135.75 0l-77.09 77.09-13.1-13.1c-9.44-9.44-24.65-9.31-33.94 0l-40.97 40.97c-9.37 9.37-9.37 24.57 0 33.94l161.94 161.94c9.44 9.44 24.65 9.31 33.94 0L419.88 288c9.37-9.37 9.37-24.57 0-33.94l-13.1-13.1 77.09-77.09c37.51-37.48 37.51-98.26.01-135.75z\"],\n    \"eye-slash\": [640, 512, [], \"f070\", \"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\"],\n    \"fast-backward\": [512, 512, [], \"f049\", \"M0 436V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v151.9L235.5 71.4C256.1 54.3 288 68.6 288 96v131.9L459.5 71.4C480.1 54.3 512 68.6 512 96v320c0 27.4-31.9 41.7-52.5 24.6L288 285.3V416c0 27.4-31.9 41.7-52.5 24.6L64 285.3V436c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12z\"],\n    \"fast-forward\": [512, 512, [], \"f050\", \"M512 76v360c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V284.1L276.5 440.6c-20.6 17.2-52.5 2.8-52.5-24.6V284.1L52.5 440.6C31.9 457.8 0 443.4 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 226.8V96c0-27.4 31.9-41.7 52.5-24.6L448 226.8V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12z\"],\n    \"fax\": [512, 512, [], \"f1ac\", \"M64 128H32c-17.67 0-32 14.33-32 32v320c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32zm416 32V77.25c0-8.49-3.37-16.62-9.37-22.63L425.37 9.37c-6-6-14.14-9.37-22.63-9.37H160c-17.67 0-32 14.33-32 32v448c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32V192c0-17.67-14.33-32-32-32zM288 432c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm0-128c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm128 128c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm0-128c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm16-112H176V48h208v32c0 8.84 7.16 16 16 16h32v96z\"],\n    \"feather\": [512, 512, [], \"f52d\", \"M467.14 44.84c-62.55-62.48-161.67-64.78-252.28 25.73-78.61 78.52-60.98 60.92-85.75 85.66-60.46 60.39-70.39 150.83-63.64 211.17l178.44-178.25c6.26-6.25 16.4-6.25 22.65 0s6.25 16.38 0 22.63L7.04 471.03c-9.38 9.37-9.38 24.57 0 33.94 9.38 9.37 24.6 9.37 33.98 0l66.1-66.03C159.42 454.65 279 457.11 353.95 384h-98.19l147.57-49.14c49.99-49.93 36.38-36.18 46.31-46.86h-97.78l131.54-43.8c45.44-74.46 34.31-148.84-16.26-199.36z\"],\n    \"feather-alt\": [512, 512, [], \"f56b\", \"M512 0C460.22 3.56 96.44 38.2 71.01 287.61c-3.09 26.66-4.84 53.44-5.99 80.24l178.87-178.69c6.25-6.25 16.4-6.25 22.65 0s6.25 16.38 0 22.63L7.04 471.03c-9.38 9.37-9.38 24.57 0 33.94 9.38 9.37 24.59 9.37 33.98 0l57.13-57.07c42.09-.14 84.15-2.53 125.96-7.36 53.48-5.44 97.02-26.47 132.58-56.54H255.74l146.79-48.88c11.25-14.89 21.37-30.71 30.45-47.12h-81.14l106.54-53.21C500.29 132.86 510.19 26.26 512 0z\"],\n    \"female\": [256, 512, [], \"f182\", \"M128 0c35.346 0 64 28.654 64 64s-28.654 64-64 64c-35.346 0-64-28.654-64-64S92.654 0 128 0m119.283 354.179l-48-192A24 24 0 0 0 176 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H80a24 24 0 0 0-23.283 18.179l-48 192C4.935 369.305 16.383 384 32 384h56v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V384h56c15.591 0 27.071-14.671 23.283-29.821z\"],\n    \"fighter-jet\": [640, 512, [], \"f0fb\", \"M544 224l-128-16-48-16h-24L227.158 44h39.509C278.333 44 288 41.375 288 38s-9.667-6-21.333-6H152v12h16v164h-48l-66.667-80H18.667L8 138.667V208h8v16h48v2.666l-64 8v42.667l64 8V288H16v16H8v69.333L18.667 384h34.667L120 304h48v164h-16v12h114.667c11.667 0 21.333-2.625 21.333-6s-9.667-6-21.333-6h-39.509L344 320h24l48-16 128-16c96-21.333 96-26.583 96-32 0-5.417 0-10.667-96-32z\"],\n    \"file\": [384, 512, [], \"f15b\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm160-14.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-alt\": [384, 512, [], \"f15c\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-archive\": [384, 512, [], \"f1c6\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zM128.4 336c-17.9 0-32.4 12.1-32.4 27 0 15 14.6 27 32.5 27s32.4-12.1 32.4-27-14.6-27-32.5-27zM224 136V0h-63.6v32h-32V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM95.9 32h32v32h-32zm32.3 384c-33.2 0-58-30.4-51.4-62.9L96.4 256v-32h32v-32h-32v-32h32v-32h-32V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.1c5.7 0 10.7 4.1 11.8 9.7l17.3 87.7c6.4 32.4-18.4 62.6-51.4 62.6z\"],\n    \"file-audio\": [384, 512, [], \"f1c7\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-64 268c0 10.7-12.9 16-20.5 8.5L104 376H76c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h28l35.5-36.5c7.6-7.6 20.5-2.2 20.5 8.5v136zm33.2-47.6c9.1-9.3 9.1-24.1 0-33.4-22.1-22.8 12.2-56.2 34.4-33.5 27.2 27.9 27.2 72.4 0 100.4-21.8 22.3-56.9-10.4-34.4-33.5zm86-117.1c54.4 55.9 54.4 144.8 0 200.8-21.8 22.4-57-10.3-34.4-33.5 36.2-37.2 36.3-96.5 0-133.8-22.1-22.8 12.3-56.3 34.4-33.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-code\": [384, 512, [], \"f1c9\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zM123.206 400.505a5.4 5.4 0 0 1-7.633.246l-64.866-60.812a5.4 5.4 0 0 1 0-7.879l64.866-60.812a5.4 5.4 0 0 1 7.633.246l19.579 20.885a5.4 5.4 0 0 1-.372 7.747L101.65 336l40.763 35.874a5.4 5.4 0 0 1 .372 7.747l-19.579 20.884zm51.295 50.479l-27.453-7.97a5.402 5.402 0 0 1-3.681-6.692l61.44-211.626a5.402 5.402 0 0 1 6.692-3.681l27.452 7.97a5.4 5.4 0 0 1 3.68 6.692l-61.44 211.626a5.397 5.397 0 0 1-6.69 3.681zm160.792-111.045l-64.866 60.812a5.4 5.4 0 0 1-7.633-.246l-19.58-20.885a5.4 5.4 0 0 1 .372-7.747L284.35 336l-40.763-35.874a5.4 5.4 0 0 1-.372-7.747l19.58-20.885a5.4 5.4 0 0 1 7.633-.246l64.866 60.812a5.4 5.4 0 0 1-.001 7.879z\"],\n    \"file-contract\": [384, 512, [], \"f56c\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 64c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm192.81 248H304c8.84 0 16 7.16 16 16s-7.16 16-16 16h-47.19c-16.45 0-31.27-9.14-38.64-23.86-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34a15.986 15.986 0 0 1-14.31 8.84c-.38 0-.75-.02-1.14-.05-6.45-.45-12-4.75-14.03-10.89L144 354.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.77-16.19 54.05-9.7 66 14.16 2.02 4.06 5.96 6.5 10.16 6.5zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-csv\": [384, 512, [], \"f6dd\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-96 144c0 4.42-3.58 8-8 8h-8c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h8c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-8c-26.51 0-48-21.49-48-48v-32c0-26.51 21.49-48 48-48h8c4.42 0 8 3.58 8 8v16zm44.27 104H160c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h12.27c5.95 0 10.41-3.5 10.41-6.62 0-1.3-.75-2.66-2.12-3.84l-21.89-18.77c-8.47-7.22-13.33-17.48-13.33-28.14 0-21.3 19.02-38.62 42.41-38.62H200c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-12.27c-5.95 0-10.41 3.5-10.41 6.62 0 1.3.75 2.66 2.12 3.84l21.89 18.77c8.47 7.22 13.33 17.48 13.33 28.14.01 21.29-19 38.62-42.39 38.62zM256 264v20.8c0 20.27 5.7 40.17 16 56.88 10.3-16.7 16-36.61 16-56.88V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v20.8c0 35.48-12.88 68.89-36.28 94.09-3.02 3.25-7.27 5.11-11.72 5.11s-8.7-1.86-11.72-5.11c-23.4-25.2-36.28-58.61-36.28-94.09V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8zm121-159L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-download\": [384, 512, [], \"f56d\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm76.45 211.36l-96.42 95.7c-6.65 6.61-17.39 6.61-24.04 0l-96.42-95.7C73.42 337.29 80.54 320 94.82 320H160v-80c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v80h65.18c14.28 0 21.4 17.29 11.27 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-excel\": [384, 512, [], \"f1c3\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm60.1 106.5L224 336l60.1 93.5c5.1 8-.6 18.5-10.1 18.5h-34.9c-4.4 0-8.5-2.4-10.6-6.3C208.9 405.5 192 373 192 373c-6.4 14.8-10 20-36.6 68.8-2.1 3.9-6.1 6.3-10.5 6.3H110c-9.5 0-15.2-10.5-10.1-18.5l60.3-93.5-60.3-93.5c-5.2-8 .6-18.5 10.1-18.5h34.8c4.4 0 8.5 2.4 10.6 6.3 26.1 48.8 20 33.6 36.6 68.5 0 0 6.1-11.7 36.6-68.5 2.1-3.9 6.2-6.3 10.6-6.3H274c9.5-.1 15.2 10.4 10.1 18.4zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-export\": [576, 512, [], \"f56e\", \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\"],\n    \"file-image\": [384, 512, [], \"f1c5\", \"M384 121.941V128H256V0h6.059a24 24 0 0 1 16.97 7.029l97.941 97.941a24.002 24.002 0 0 1 7.03 16.971zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zm-135.455 16c26.51 0 48 21.49 48 48s-21.49 48-48 48-48-21.49-48-48 21.491-48 48-48zm208 240h-256l.485-48.485L104.545 328c4.686-4.686 11.799-4.201 16.485.485L160.545 368 264.06 264.485c4.686-4.686 12.284-4.686 16.971 0L320.545 304v112z\"],\n    \"file-import\": [512, 512, [], \"f56f\", \"M16 288c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h112v-64zm489-183L407.1 7c-4.5-4.5-10.6-7-17-7H384v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H152c-13.3 0-24 10.7-24 24v264h128v-65.2c0-14.3 17.3-21.4 27.4-11.3L379 308c6.6 6.7 6.6 17.4 0 24l-95.7 96.4c-10.1 10.1-27.4 3-27.4-11.3V352H128v136c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H376c-13.2 0-24-10.8-24-24z\"],\n    \"file-invoice\": [384, 512, [], \"f570\", \"M288 256H96v64h192v-64zm89-151L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 64c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm256 304c0 4.42-3.58 8-8 8h-80c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16zm0-200v96c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-96c0-8.84 7.16-16 16-16h224c8.84 0 16 7.16 16 16z\"],\n    \"file-invoice-dollar\": [384, 512, [], \"f571\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 80v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8zm144 263.88V440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-24.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V232c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v24.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07z\"],\n    \"file-medical\": [384, 512, [], \"f477\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 160v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8z\"],\n    \"file-medical-alt\": [448, 512, [], \"f478\", \"M288 136V0H88C74.7 0 64 10.7 64 24v232H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h140.9c3 0 5.8 1.7 7.2 4.4l19.9 39.8 56.8-113.7c2.9-5.9 11.4-5.9 14.3 0l34.7 69.5H352c8.8 0 16 7.2 16 16s-7.2 16-16 16h-89.9L240 275.8l-56.8 113.7c-2.9 5.9-11.4 5.9-14.3 0L134.1 320H64v168c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H312c-13.2 0-24-10.8-24-24zm153-31L343.1 7c-4.5-4.5-10.6-7-17-7H320v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-pdf\": [384, 512, [], \"f1c1\", \"M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z\"],\n    \"file-powerpoint\": [384, 512, [], \"f1c4\", \"M193.7 271.2c8.8 0 15.5 2.7 20.3 8.1 9.6 10.9 9.8 32.7-.2 44.1-4.9 5.6-11.9 8.5-21.1 8.5h-26.9v-60.7h27.9zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm53 165.2c0 90.3-88.8 77.6-111.1 77.6V436c0 6.6-5.4 12-12 12h-30.8c-6.6 0-12-5.4-12-12V236.2c0-6.6 5.4-12 12-12h81c44.5 0 72.9 32.8 72.9 77z\"],\n    \"file-prescription\": [384, 512, [], \"f572\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm68.53 179.48l11.31 11.31c6.25 6.25 6.25 16.38 0 22.63l-29.9 29.9L304 409.38c6.25 6.25 6.25 16.38 0 22.63l-11.31 11.31c-6.25 6.25-16.38 6.25-22.63 0L240 413.25l-30.06 30.06c-6.25 6.25-16.38 6.25-22.63 0L176 432c-6.25-6.25-6.25-16.38 0-22.63l30.06-30.06L146.74 320H128v48c0 8.84-7.16 16-16 16H96c-8.84 0-16-7.16-16-16V208c0-8.84 7.16-16 16-16h80c35.35 0 64 28.65 64 64 0 24.22-13.62 45.05-33.46 55.92L240 345.38l29.9-29.9c6.25-6.25 16.38-6.25 22.63 0zM176 272h-48v-32h48c8.82 0 16 7.18 16 16s-7.18 16-16 16zm208-150.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-signature\": [576, 512, [], \"f573\", \"M218.17 424.14c-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34c-6.37 12.78-25.03 11.37-29.48-2.09L144 386.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.75-16.19 54.06-9.7 66 14.16 1.89 3.78 5.49 5.95 9.36 6.26v-82.12l128-127.09V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24v-40l-128-.11c-16.12-.31-30.58-9.28-37.83-23.75zM384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1zm-96 225.06V416h68.99l161.68-162.78-67.88-67.88L288 346.96zm280.54-179.63l-31.87-31.87c-9.94-9.94-26.07-9.94-36.01 0l-27.25 27.25 67.88 67.88 27.25-27.25c9.95-9.94 9.95-26.07 0-36.01z\"],\n    \"file-upload\": [384, 512, [], \"f574\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-video\": [384, 512, [], \"f1c8\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM224 136V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248c-13.2 0-24-10.8-24-24zm96 144.016v111.963c0 21.445-25.943 31.998-40.971 16.971L224 353.941V392c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V280c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v38.059l55.029-55.013c15.011-15.01 40.971-4.491 40.971 16.97z\"],\n    \"file-word\": [384, 512, [], \"f1c2\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm57.1 120H305c7.7 0 13.4 7.1 11.7 14.7l-38 168c-1.2 5.5-6.1 9.3-11.7 9.3h-38c-5.5 0-10.3-3.8-11.6-9.1-25.8-103.5-20.8-81.2-25.6-110.5h-.5c-1.1 14.3-2.4 17.4-25.6 110.5-1.3 5.3-6.1 9.1-11.6 9.1H117c-5.6 0-10.5-3.9-11.7-9.4l-37.8-168c-1.7-7.5 4-14.6 11.7-14.6h24.5c5.7 0 10.7 4 11.8 9.7 15.6 78 20.1 109.5 21 122.2 1.6-10.2 7.3-32.7 29.4-122.7 1.3-5.4 6.1-9.1 11.7-9.1h29.1c5.6 0 10.4 3.8 11.7 9.2 24 100.4 28.8 124 29.6 129.4-.2-11.2-2.6-17.8 21.6-129.2 1-5.6 5.9-9.5 11.5-9.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"fill\": [512, 512, [], \"f575\", \"M502.63 217.06L294.94 9.37C288.69 3.12 280.5 0 272.31 0s-16.38 3.12-22.62 9.37l-81.58 81.58L81.93 4.77c-6.24-6.25-16.38-6.25-22.62 0L36.69 27.38c-6.24 6.25-6.24 16.38 0 22.63l86.19 86.18-94.76 94.76c-37.49 37.49-37.49 98.26 0 135.75l117.19 117.19c18.75 18.74 43.31 28.12 67.87 28.12 24.57 0 49.13-9.37 67.88-28.12l221.57-221.57c12.49-12.5 12.49-32.76 0-45.26zm-116.22 70.97H65.93c1.36-3.84 3.57-7.98 7.43-11.83l13.15-13.15 81.61-81.61 58.61 58.6c12.49 12.49 32.75 12.49 45.24 0 12.49-12.49 12.49-32.75 0-45.24l-58.61-58.6 58.95-58.95 162.45 162.44-48.35 48.34z\"],\n    \"fill-drip\": [576, 512, [], \"f576\", \"M512 320s-64 92.65-64 128c0 35.35 28.66 64 64 64s64-28.65 64-64-64-128-64-128zm-9.37-102.94L294.94 9.37C288.69 3.12 280.5 0 272.31 0s-16.38 3.12-22.62 9.37l-81.58 81.58L81.93 4.76c-6.25-6.25-16.38-6.25-22.62 0L36.69 27.38c-6.24 6.25-6.24 16.38 0 22.62l86.19 86.18-94.76 94.76c-37.49 37.48-37.49 98.26 0 135.75l117.19 117.19c18.74 18.74 43.31 28.12 67.87 28.12 24.57 0 49.13-9.37 67.87-28.12l221.57-221.57c12.5-12.5 12.5-32.75.01-45.25zm-116.22 70.97H65.93c1.36-3.84 3.57-7.98 7.43-11.83l13.15-13.15 81.61-81.61 58.6 58.6c12.49 12.49 32.75 12.49 45.24 0s12.49-32.75 0-45.24l-58.6-58.6 58.95-58.95 162.44 162.44-48.34 48.34z\"],\n    \"film\": [512, 512, [], \"f008\", \"M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"],\n    \"filter\": [512, 512, [], \"f0b0\", \"M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z\"],\n    \"fingerprint\": [512, 512, [], \"f577\", \"M256.12 245.96c-13.25 0-24 10.74-24 24 1.14 72.25-8.14 141.9-27.7 211.55-2.73 9.72 2.15 30.49 23.12 30.49 10.48 0 20.11-6.92 23.09-17.52 13.53-47.91 31.04-125.41 29.48-224.52.01-13.25-10.73-24-23.99-24zm-.86-81.73C194 164.16 151.25 211.3 152.1 265.32c.75 47.94-3.75 95.91-13.37 142.55-2.69 12.98 5.67 25.69 18.64 28.36 13.05 2.67 25.67-5.66 28.36-18.64 10.34-50.09 15.17-101.58 14.37-153.02-.41-25.95 19.92-52.49 54.45-52.34 31.31.47 57.15 25.34 57.62 55.47.77 48.05-2.81 96.33-10.61 143.55-2.17 13.06 6.69 25.42 19.76 27.58 19.97 3.33 26.81-15.1 27.58-19.77 8.28-50.03 12.06-101.21 11.27-152.11-.88-55.8-47.94-101.88-104.91-102.72zm-110.69-19.78c-10.3-8.34-25.37-6.8-33.76 3.48-25.62 31.5-39.39 71.28-38.75 112 .59 37.58-2.47 75.27-9.11 112.05-2.34 13.05 6.31 25.53 19.36 27.89 20.11 3.5 27.07-14.81 27.89-19.36 7.19-39.84 10.5-80.66 9.86-121.33-.47-29.88 9.2-57.88 28-80.97 8.35-10.28 6.79-25.39-3.49-33.76zm109.47-62.33c-15.41-.41-30.87 1.44-45.78 4.97-12.89 3.06-20.87 15.98-17.83 28.89 3.06 12.89 16 20.83 28.89 17.83 11.05-2.61 22.47-3.77 34-3.69 75.43 1.13 137.73 61.5 138.88 134.58.59 37.88-1.28 76.11-5.58 113.63-1.5 13.17 7.95 25.08 21.11 26.58 16.72 1.95 25.51-11.88 26.58-21.11a929.06 929.06 0 0 0 5.89-119.85c-1.56-98.75-85.07-180.33-186.16-181.83zm252.07 121.45c-2.86-12.92-15.51-21.2-28.61-18.27-12.94 2.86-21.12 15.66-18.26 28.61 4.71 21.41 4.91 37.41 4.7 61.6-.11 13.27 10.55 24.09 23.8 24.2h.2c13.17 0 23.89-10.61 24-23.8.18-22.18.4-44.11-5.83-72.34zm-40.12-90.72C417.29 43.46 337.6 1.29 252.81.02 183.02-.82 118.47 24.91 70.46 72.94 24.09 119.37-.9 181.04.14 246.65l-.12 21.47c-.39 13.25 10.03 24.31 23.28 24.69.23.02.48.02.72.02 12.92 0 23.59-10.3 23.97-23.3l.16-23.64c-.83-52.5 19.16-101.86 56.28-139 38.76-38.8 91.34-59.67 147.68-58.86 69.45 1.03 134.73 35.56 174.62 92.39 7.61 10.86 22.56 13.45 33.42 5.86 10.84-7.62 13.46-22.59 5.84-33.43z\"],\n    \"fire\": [384, 512, [], \"f06d\", \"M216 23.86c0-23.8-30.65-32.77-44.15-13.04C48 191.85 224 200 224 288c0 35.63-29.11 64.46-64.85 63.99-35.17-.45-63.15-29.77-63.15-64.94v-85.51c0-21.7-26.47-32.23-41.43-16.5C27.8 213.16 0 261.33 0 320c0 105.87 86.13 192 192 192s192-86.13 192-192c0-170.29-168-193-168-296.14z\"],\n    \"fire-alt\": [448, 512, [], \"f7e4\", \"M323.56 51.2c-20.8 19.3-39.58 39.59-56.22 59.97C240.08 73.62 206.28 35.53 168 0 69.74 91.17 0 209.96 0 281.6 0 408.85 100.29 512 224 512s224-103.15 224-230.4c0-53.27-51.98-163.14-124.44-230.4zm-19.47 340.65C282.43 407.01 255.72 416 226.86 416 154.71 416 96 368.26 96 290.75c0-38.61 24.31-72.63 72.79-130.75 6.93 7.98 98.83 125.34 98.83 125.34l58.63-66.88c4.14 6.85 7.91 13.55 11.27 19.97 27.35 52.19 15.81 118.97-33.43 153.42z\"],\n    \"fire-extinguisher\": [448, 512, [], \"f134\", \"M434.027 26.329l-168 28C254.693 56.218 256 67.8 256 72h-58.332C208.353 36.108 181.446 0 144 0c-39.435 0-66.368 39.676-52.228 76.203-52.039 13.051-75.381 54.213-90.049 90.884-4.923 12.307 1.063 26.274 13.37 31.197 12.317 4.926 26.279-1.075 31.196-13.37C75.058 112.99 106.964 120 168 120v27.076c-41.543 10.862-72 49.235-72 94.129V488c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V240c0-44.731-30.596-82.312-72-92.97V120h40c0 2.974-1.703 15.716 10.027 17.671l168 28C441.342 166.89 448 161.25 448 153.834V38.166c0-7.416-6.658-13.056-13.973-11.837zM144 72c-8.822 0-16-7.178-16-16s7.178-16 16-16 16 7.178 16 16-7.178 16-16 16z\"],\n    \"first-aid\": [576, 512, [], \"f479\", \"M0 80v352c0 26.5 21.5 48 48 48h48V32H48C21.5 32 0 53.5 0 80zm128 400h320V32H128v448zm64-248c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48zM528 32h-48v448h48c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n    \"fish\": [576, 512, [], \"f578\", \"M327.1 96c-89.97 0-168.54 54.77-212.27 101.63L27.5 131.58c-12.13-9.18-30.24.6-27.14 14.66L24.54 256 .35 365.77c-3.1 14.06 15.01 23.83 27.14 14.66l87.33-66.05C158.55 361.23 237.13 416 327.1 416 464.56 416 576 288 576 256S464.56 96 327.1 96zm87.43 184c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24 13.26 0 24 10.74 24 24 0 13.25-10.75 24-24 24z\"],\n    \"fist-raised\": [384, 512, [], \"f6de\", \"M255.98 160V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v146.93c5.02-1.78 10.34-2.93 15.97-2.93h48.03zm128 95.99c-.01-35.34-28.66-63.99-63.99-63.99H207.85c-8.78 0-15.9 7.07-15.9 15.85v.56c0 26.27 21.3 47.59 47.57 47.59h35.26c9.68 0 13.2 3.58 13.2 8v16.2c0 4.29-3.59 7.78-7.88 8-44.52 2.28-64.16 24.71-96.05 72.55l-6.31 9.47a7.994 7.994 0 0 1-11.09 2.22l-13.31-8.88a7.994 7.994 0 0 1-2.22-11.09l6.31-9.47c15.73-23.6 30.2-43.26 47.31-58.08-17.27-5.51-31.4-18.12-38.87-34.45-6.59 3.41-13.96 5.52-21.87 5.52h-32c-12.34 0-23.49-4.81-32-12.48C71.48 251.19 60.33 256 48 256H16c-5.64 0-10.97-1.15-16-2.95v77.93c0 33.95 13.48 66.5 37.49 90.51L63.99 448v64h255.98v-63.96l35.91-35.92A96.035 96.035 0 0 0 384 344.21l-.02-88.22zm-32.01-90.09V48c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v112h32c11.28 0 21.94 2.31 32 5.9zM16 224h32c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v128c0 8.84 7.16 16 16 16zm95.99 0h32c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v160c0 8.84 7.16 16 16 16z\"],\n    \"flag\": [512, 512, [], \"f024\", \"M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z\"],\n    \"flag-checkered\": [512, 512, [], \"f11e\", \"M243.2 189.9V258c26.1 5.9 49.3 15.6 73.6 22.3v-68.2c-26-5.8-49.4-15.5-73.6-22.2zm223.3-123c-34.3 15.9-76.5 31.9-117 31.9C296 98.8 251.7 64 184.3 64c-25 0-47.3 4.4-68 12 2.8-7.3 4.1-15.2 3.6-23.6C118.1 24 94.8 1.2 66.3 0 34.3-1.3 8 24.3 8 56c0 19 9.5 35.8 24 45.9V488c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24v-94.4c28.3-12.1 63.6-22.1 114.4-22.1 53.6 0 97.8 34.8 165.2 34.8 48.2 0 86.7-16.3 122.5-40.9 8.7-6 13.8-15.8 13.8-26.4V95.9c.1-23.3-24.2-38.8-45.4-29zM169.6 325.5c-25.8 2.7-50 8.2-73.6 16.6v-70.5c26.2-9.3 47.5-15 73.6-17.4zM464 191c-23.6 9.8-46.3 19.5-73.6 23.9V286c24.8-3.4 51.4-11.8 73.6-26v70.5c-25.1 16.1-48.5 24.7-73.6 27.1V286c-27 3.7-47.9 1.5-73.6-5.6v67.4c-23.9-7.4-47.3-16.7-73.6-21.3V258c-19.7-4.4-40.8-6.8-73.6-3.8v-70c-22.4 3.1-44.6 10.2-73.6 20.9v-70.5c33.2-12.2 50.1-19.8 73.6-22v71.6c27-3.7 48.4-1.3 73.6 5.7v-67.4c23.7 7.4 47.2 16.7 73.6 21.3v68.4c23.7 5.3 47.6 6.9 73.6 2.7V143c27-4.8 52.3-13.6 73.6-22.5z\"],\n    \"flag-usa\": [512, 512, [], \"f74d\", \"M32 0C14.3 0 0 14.3 0 32v464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V32C64 14.3 49.7 0 32 0zm267.9 303.6c-57.2-15.1-111.7-28.8-203.9 11.1V384c185.7-92.2 221.7 53.3 397.5-23.1 11.4-5 18.5-16.5 18.5-28.8v-36c-43.6 17.3-80.2 24.1-112.1 24.1-37.4-.1-68.9-8.4-100-16.6zm0-96c-57.2-15.1-111.7-28.8-203.9 11.1v61.5c94.8-37.6 154.6-22.7 212.1-7.6 57.2 15.1 111.7 28.8 203.9-11.1V200c-43.6 17.3-80.2 24.1-112.1 24.1-37.4 0-68.9-8.3-100-16.5zm9.5-125.9c51.8 15.6 97.4 29 202.6-20.1V30.8c0-25.1-26.8-38.1-49.4-26.6C291.3 91.5 305.4-62.2 96 32.4v151.9c94.8-37.5 154.6-22.7 212.1-7.6 57.2 15 111.7 28.7 203.9-11.1V96.7c-53.6 23.5-93.3 31.4-126.1 31.4s-59-7.8-85.7-15.9c-4-1.2-8.1-2.4-12.1-3.5V75.5c7.2 2 14.3 4.1 21.3 6.2zM160 128.1c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16-7.2 16-16 16zm0-55.8c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16zm64 47.9c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16zm0-55.9c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16z\"],\n    \"flask\": [448, 512, [], \"f0c3\", \"M437.2 403.5L320 215V64h8c13.3 0 24-10.7 24-24V24c0-13.3-10.7-24-24-24H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h8v151L10.8 403.5C-18.5 450.6 15.3 512 70.9 512h306.2c55.7 0 89.4-61.5 60.1-108.5zM137.9 320l48.2-77.6c3.7-5.2 5.8-11.6 5.8-18.4V64h64v160c0 6.9 2.2 13.2 5.8 18.4l48.2 77.6h-172z\"],\n    \"flushed\": [496, 512, [], \"f579\", \"M344 200c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm-192 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM80 224c0-39.8 32.2-72 72-72s72 32.2 72 72-32.2 72-72 72-72-32.2-72-72zm232 176H184c-21.2 0-21.2-32 0-32h128c21.2 0 21.2 32 0 32zm32-104c-39.8 0-72-32.2-72-72s32.2-72 72-72 72 32.2 72 72-32.2 72-72 72z\"],\n    \"folder\": [512, 512, [], \"f07b\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z\"],\n    \"folder-minus\": [512, 512, [], \"f65d\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm-96 168c0 8.84-7.16 16-16 16H160c-8.84 0-16-7.16-16-16v-16c0-8.84 7.16-16 16-16h192c8.84 0 16 7.16 16 16v16z\"],\n    \"folder-open\": [576, 512, [], \"f07c\", \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\"],\n    \"folder-plus\": [512, 512, [], \"f65e\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm-96 168c0 8.84-7.16 16-16 16h-72v72c0 8.84-7.16 16-16 16h-16c-8.84 0-16-7.16-16-16v-72h-72c-8.84 0-16-7.16-16-16v-16c0-8.84 7.16-16 16-16h72v-72c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v72h72c8.84 0 16 7.16 16 16v16z\"],\n    \"font\": [448, 512, [], \"f031\", \"M432 416h-26.7L275.5 42.7c-2.2-6.4-8.3-10.7-15.1-10.7h-72.8c-6.8 0-12.9 4.3-15.1 10.7L42.7 416H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h136c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-24l26.6-80.8h138.2l26.6 80.8H296c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h136c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM174.4 268.3l42-124.1c4.3-15.2 6.6-28.2 7.6-34.6.8 6.5 2.9 19.5 7.7 34.7l41.3 124z\"],\n    \"font-awesome-logo-full\": [3992, 512, [\"Font Awesome\"], \"f4e6\", \"M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z\"],\n    \"football-ball\": [496, 512, [], \"f44e\", \"M481.5 60.3c-4.8-18.2-19.1-32.5-37.3-37.4C420.3 16.5 383 8.9 339.4 8L496 164.8c-.8-43.5-8.2-80.6-14.5-104.5zm-467 391.4c4.8 18.2 19.1 32.5 37.3 37.4 23.9 6.4 61.2 14 104.8 14.9L0 347.2c.8 43.5 8.2 80.6 14.5 104.5zM4.2 283.4L220.4 500c132.5-19.4 248.8-118.7 271.5-271.4L275.6 12C143.1 31.4 26.8 130.7 4.2 283.4zm317.3-123.6c3.1-3.1 8.2-3.1 11.3 0l11.3 11.3c3.1 3.1 3.1 8.2 0 11.3l-28.3 28.3 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-22.6 22.7 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L248 278.6l-22.6 22.6 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-28.3 28.3c-3.1 3.1-8.2 3.1-11.3 0l-11.3-11.3c-3.1-3.1-3.1-8.2 0-11.3l28.3-28.3-28.3-28.2c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 28.3-28.5z\"],\n    \"forward\": [512, 512, [], \"f04e\", \"M500.5 231.4l-192-160C287.9 54.3 256 68.6 256 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2zm-256 0l-192-160C31.9 54.3 0 68.6 0 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2z\"],\n    \"frog\": [576, 512, [], \"f52e\", \"M446.53 97.43C439.67 60.23 407.19 32 368 32c-39.23 0-71.72 28.29-78.54 65.54C126.75 112.96-.5 250.12 0 416.98.11 451.9 29.08 480 64 480h304c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-79.49l35.8-48.33c24.14-36.23 10.35-88.28-33.71-106.6-23.89-9.93-51.55-4.65-72.24 10.88l-32.76 24.59c-7.06 5.31-17.09 3.91-22.41-3.19-5.3-7.08-3.88-17.11 3.19-22.41l34.78-26.09c36.84-27.66 88.28-27.62 125.13 0 10.87 8.15 45.87 39.06 40.8 93.21L469.62 480H560c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-53.63l-98.52-104.68 154.44-86.65A58.16 58.16 0 0 0 576 189.94c0-21.4-11.72-40.95-30.48-51.23-40.56-22.22-98.99-41.28-98.99-41.28zM368 136c-13.26 0-24-10.75-24-24 0-13.26 10.74-24 24-24 13.25 0 24 10.74 24 24 0 13.25-10.75 24-24 24z\"],\n    \"frown\": [496, 512, [], \"f119\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm170.2 218.2C315.8 367.4 282.9 352 248 352s-67.8 15.4-90.2 42.2c-13.5 16.3-38.1-4.2-24.6-20.5C161.7 339.6 203.6 320 248 320s86.3 19.6 114.7 53.8c13.6 16.2-11 36.7-24.5 20.4z\"],\n    \"frown-open\": [496, 512, [], \"f57a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 208c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm187.3 183.3c-31.2-9.6-59.4-15.3-75.3-15.3s-44.1 5.7-75.3 15.3c-11.5 3.5-22.5-6.3-20.5-18.1 7-40 60.1-61.2 95.8-61.2s88.8 21.3 95.8 61.2c2 11.9-9.1 21.6-20.5 18.1zM328 240c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"funnel-dollar\": [640, 512, [], \"f662\", \"M433.46 165.94l101.2-111.87C554.61 34.12 540.48 0 512.26 0H31.74C3.52 0-10.61 34.12 9.34 54.07L192 256v155.92c0 12.59 5.93 24.44 16 32l79.99 60c20.86 15.64 48.47 6.97 59.22-13.57C310.8 455.38 288 406.35 288 352c0-89.79 62.05-165.17 145.46-186.06zM480 192c-88.37 0-160 71.63-160 160s71.63 160 160 160 160-71.63 160-160-71.63-160-160-160zm16 239.88V448c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V256c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.04 44.44-42.67 45.07z\"],\n    \"futbol\": [512, 512, [], \"f1e3\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-48 0l-.003-.282-26.064 22.741-62.679-58.5 16.454-84.355 34.303 3.072c-24.889-34.216-60.004-60.089-100.709-73.141l13.651 31.939L256 139l-74.953-41.525 13.651-31.939c-40.631 13.028-75.78 38.87-100.709 73.141l34.565-3.073 16.192 84.355-62.678 58.5-26.064-22.741-.003.282c0 43.015 13.497 83.952 38.472 117.991l7.704-33.897 85.138 10.447 36.301 77.826-29.902 17.786c40.202 13.122 84.29 13.148 124.572 0l-29.902-17.786 36.301-77.826 85.138-10.447 7.704 33.897C442.503 339.952 456 299.015 456 256zm-248.102 69.571l-29.894-91.312L256 177.732l77.996 56.527-29.622 91.312h-96.476z\"],\n    \"gamepad\": [640, 512, [], \"f11b\", \"M480 96H160C71.6 96 0 167.6 0 256s71.6 160 160 160c44.8 0 85.2-18.4 114.2-48h91.5c29 29.6 69.5 48 114.2 48 88.4 0 160-71.6 160-160S568.4 96 480 96zM256 276c0 6.6-5.4 12-12 12h-52v52c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-52H76c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h52v-52c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h52c6.6 0 12 5.4 12 12v40zm184 68c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-80c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"gas-pump\": [512, 512, [], \"f52f\", \"M336 448H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h320c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm157.2-340.7l-81-81c-6.2-6.2-16.4-6.2-22.6 0l-11.3 11.3c-6.2 6.2-6.2 16.4 0 22.6L416 97.9V160c0 28.1 20.9 51.3 48 55.2V376c0 13.2-10.8 24-24 24s-24-10.8-24-24v-32c0-48.6-39.4-88-88-88h-8V64c0-35.3-28.7-64-64-64H96C60.7 0 32 28.7 32 64v352h288V304h8c22.1 0 40 17.9 40 40v27.8c0 37.7 27 72 64.5 75.9 43 4.3 79.5-29.5 79.5-71.7V152.6c0-17-6.8-33.3-18.8-45.3zM256 192H96V64h160v128z\"],\n    \"gavel\": [512, 512, [], \"f0e3\", \"M504.971 199.362l-22.627-22.627c-9.373-9.373-24.569-9.373-33.941 0l-5.657 5.657L329.608 69.255l5.657-5.657c9.373-9.373 9.373-24.569 0-33.941L312.638 7.029c-9.373-9.373-24.569-9.373-33.941 0L154.246 131.48c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l5.657-5.657 39.598 39.598-81.04 81.04-5.657-5.657c-12.497-12.497-32.758-12.497-45.255 0L9.373 412.118c-12.497 12.497-12.497 32.758 0 45.255l45.255 45.255c12.497 12.497 32.758 12.497 45.255 0l114.745-114.745c12.497-12.497 12.497-32.758 0-45.255l-5.657-5.657 81.04-81.04 39.598 39.598-5.657 5.657c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l124.451-124.451c9.372-9.372 9.372-24.568 0-33.941z\"],\n    \"gem\": [576, 512, [], \"f3a5\", \"M485.5 0L576 160H474.9L405.7 0h79.8zm-128 0l69.2 160H149.3L218.5 0h139zm-267 0h79.8l-69.2 160H0L90.5 0zM0 192h100.7l123 251.7c1.5 3.1-2.7 5.9-5 3.3L0 192zm148.2 0h279.6l-137 318.2c-1 2.4-4.5 2.4-5.5 0L148.2 192zm204.1 251.7l123-251.7H576L357.3 446.9c-2.3 2.7-6.5-.1-5-3.2z\"],\n    \"genderless\": [288, 512, [], \"f22d\", \"M144 176c44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80 35.9-80 80-80m0-64C64.5 112 0 176.5 0 256s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144z\"],\n    \"ghost\": [384, 512, [], \"f6e2\", \"M186.1.09C81.01 3.24 0 94.92 0 200.05v263.92c0 14.26 17.23 21.39 27.31 11.31l24.92-18.53c6.66-4.95 16-3.99 21.51 2.21l42.95 48.35c6.25 6.25 16.38 6.25 22.63 0l40.72-45.85c6.37-7.17 17.56-7.17 23.92 0l40.72 45.85c6.25 6.25 16.38 6.25 22.63 0l42.95-48.35c5.51-6.2 14.85-7.17 21.51-2.21l24.92 18.53c10.08 10.08 27.31 2.94 27.31-11.31V192C384 84 294.83-3.17 186.1.09zM128 224c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm128 0c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"gift\": [512, 512, [], \"f06b\", \"M32 448c0 17.7 14.3 32 32 32h160V320H32v128zm256 32h160c17.7 0 32-14.3 32-32V320H288v160zm192-320h-42.1c6.2-12.1 10.1-25.5 10.1-40 0-48.5-39.5-88-88-88-41.6 0-68.5 21.3-103 68.3-34.5-47-61.4-68.3-103-68.3-48.5 0-88 39.5-88 88 0 14.5 3.8 27.9 10.1 40H32c-17.7 0-32 14.3-32 32v80c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-80c0-17.7-14.3-32-32-32zm-326.1 0c-22.1 0-40-17.9-40-40s17.9-40 40-40c19.9 0 34.6 3.3 86.1 80h-86.1zm206.1 0h-86.1c51.4-76.5 65.7-80 86.1-80 22.1 0 40 17.9 40 40s-17.9 40-40 40z\"],\n    \"gifts\": [640, 512, [], \"f79c\", \"M240.6 194.1c1.9-30.8 17.3-61.2 44-79.8C279.4 103.5 268.7 96 256 96h-29.4l30.7-22c7.2-5.1 8.9-15.1 3.7-22.3l-9.3-13c-5.1-7.2-15.1-8.9-22.3-3.7l-32 22.9 11.5-30.6c3.1-8.3-1.1-17.5-9.4-20.6l-15-5.6c-8.3-3.1-17.5 1.1-20.6 9.4l-19.9 53-19.9-53.1C121 2.1 111.8-2.1 103.5 1l-15 5.6C80.2 9.7 76 19 79.2 27.2l11.5 30.6L58.6 35c-7.2-5.1-17.2-3.5-22.3 3.7l-9.3 13c-5.1 7.2-3.5 17.2 3.7 22.3l30.7 22H32c-17.7 0-32 14.3-32 32v352c0 17.7 14.3 32 32 32h168.9c-5.5-9.5-8.9-20.3-8.9-32V256c0-29.9 20.8-55 48.6-61.9zM224 480c0 17.7 14.3 32 32 32h160V384H224v96zm224 32h160c17.7 0 32-14.3 32-32v-96H448v128zm160-288h-20.4c2.6-7.6 4.4-15.5 4.4-23.8 0-35.5-27-72.2-72.1-72.2-48.1 0-75.9 47.7-87.9 75.3-12.1-27.6-39.9-75.3-87.9-75.3-45.1 0-72.1 36.7-72.1 72.2 0 8.3 1.7 16.2 4.4 23.8H256c-17.7 0-32 14.3-32 32v96h192V224h15.3l.7-.2.7.2H448v128h192v-96c0-17.7-14.3-32-32-32zm-272 0c-2.7-1.4-5.1-3-7.2-4.8-7.3-6.4-8.8-13.8-8.8-19 0-9.7 6.4-24.2 24.1-24.2 18.7 0 35.6 27.4 44.5 48H336zm199.2-4.8c-2.1 1.8-4.5 3.4-7.2 4.8h-52.6c8.8-20.3 25.8-48 44.5-48 17.7 0 24.1 14.5 24.1 24.2 0 5.2-1.5 12.6-8.8 19z\"],\n    \"glass-cheers\": [640, 512, [], \"f79f\", \"M639.4 433.6c-8.4-20.4-31.8-30.1-52.2-21.6l-22.1 9.2-38.7-101.9c47.9-35 64.8-100.3 34.5-152.8L474.3 16c-8-13.9-25.1-19.7-40-13.6L320 49.8 205.7 2.4c-14.9-6.2-32-.3-40 13.6L79.1 166.5C48.9 219 65.7 284.3 113.6 319.2L74.9 421.1l-22.1-9.2c-20.4-8.5-43.7 1.2-52.2 21.6-1.7 4.1.2 8.8 4.3 10.5l162.3 67.4c4.1 1.7 8.7-.2 10.4-4.3 8.4-20.4-1.2-43.8-21.6-52.3l-22.1-9.2L173.3 342c4.4.5 8.8 1.3 13.1 1.3 51.7 0 99.4-33.1 113.4-85.3l20.2-75.4 20.2 75.4c14 52.2 61.7 85.3 113.4 85.3 4.3 0 8.7-.8 13.1-1.3L506 445.6l-22.1 9.2c-20.4 8.5-30.1 31.9-21.6 52.3 1.7 4.1 6.4 6 10.4 4.3L635.1 444c4-1.7 6-6.3 4.3-10.4zM275.9 162.1l-112.1-46.5 36.5-63.4 94.5 39.2-18.9 70.7zm88.2 0l-18.9-70.7 94.5-39.2 36.5 63.4-112.1 46.5z\"],\n    \"glass-martini\": [512, 512, [], \"f000\", \"M502.05 57.6C523.3 36.34 508.25 0 478.2 0H33.8C3.75 0-11.3 36.34 9.95 57.6L224 271.64V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40h-56V271.64L502.05 57.6z\"],\n    \"glass-martini-alt\": [512, 512, [], \"f57b\", \"M502.05 57.6C523.3 36.34 508.25 0 478.2 0H33.8C3.75 0-11.3 36.34 9.95 57.6L224 271.64V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40h-56V271.64L502.05 57.6zM443.77 48l-48 48H116.24l-48-48h375.53z\"],\n    \"glass-whiskey\": [512, 512, [], \"f7a0\", \"M480 32H32C12.5 32-2.4 49.2.3 68.5l56 356.5c4.5 31.5 31.5 54.9 63.4 54.9h273c31.8 0 58.9-23.4 63.4-54.9l55.6-356.5C514.4 49.2 499.5 32 480 32zm-37.4 64l-30 192h-313L69.4 96h373.2z\"],\n    \"glasses\": [576, 512, [], \"f530\", \"M574.1 280.37L528.75 98.66c-5.91-23.7-21.59-44.05-43-55.81-21.44-11.73-46.97-14.11-70.19-6.33l-15.25 5.08c-8.39 2.79-12.92 11.86-10.12 20.24l5.06 15.18c2.79 8.38 11.85 12.91 20.23 10.12l13.18-4.39c10.87-3.62 23-3.57 33.16 1.73 10.29 5.37 17.57 14.56 20.37 25.82l38.46 153.82c-22.19-6.81-49.79-12.46-81.2-12.46-34.77 0-73.98 7.02-114.85 26.74h-73.18c-40.87-19.74-80.08-26.75-114.86-26.75-31.42 0-59.02 5.65-81.21 12.46l38.46-153.83c2.79-11.25 10.09-20.45 20.38-25.81 10.16-5.3 22.28-5.35 33.15-1.73l13.17 4.39c8.38 2.79 17.44-1.74 20.23-10.12l5.06-15.18c2.8-8.38-1.73-17.45-10.12-20.24l-15.25-5.08c-23.22-7.78-48.75-5.41-70.19 6.33-21.41 11.77-37.09 32.11-43 55.8L1.9 280.37A64.218 64.218 0 0 0 0 295.86v70.25C0 429.01 51.58 480 115.2 480h37.12c60.28 0 110.37-45.94 114.88-105.37l2.93-38.63h35.75l2.93 38.63C313.31 434.06 363.4 480 423.68 480h37.12c63.62 0 115.2-50.99 115.2-113.88v-70.25c0-5.23-.64-10.43-1.9-15.5zm-370.72 89.42c-1.97 25.91-24.4 46.21-51.06 46.21H115.2C86.97 416 64 393.62 64 366.11v-37.54c18.12-6.49 43.42-12.92 72.58-12.92 23.86 0 47.26 4.33 69.93 12.92l-3.13 41.22zM512 366.12c0 27.51-22.97 49.88-51.2 49.88h-37.12c-26.67 0-49.1-20.3-51.06-46.21l-3.13-41.22c22.67-8.59 46.08-12.92 69.95-12.92 29.12 0 54.43 6.44 72.55 12.93v37.54z\"],\n    \"globe\": [496, 512, [], \"f0ac\", \"M336.5 160C322 70.7 287.8 8 248 8s-74 62.7-88.5 152h177zM152 256c0 22.2 1.2 43.5 3.3 64h185.3c2.1-20.5 3.3-41.8 3.3-64s-1.2-43.5-3.3-64H155.3c-2.1 20.5-3.3 41.8-3.3 64zm324.7-96c-28.6-67.9-86.5-120.4-158-141.6 24.4 33.8 41.2 84.7 50 141.6h108zM177.2 18.4C105.8 39.6 47.8 92.1 19.3 160h108c8.7-56.9 25.5-107.8 49.9-141.6zM487.4 192H372.7c2.1 21 3.3 42.5 3.3 64s-1.2 43-3.3 64h114.6c5.5-20.5 8.6-41.8 8.6-64s-3.1-43.5-8.5-64zM120 256c0-21.5 1.2-43 3.3-64H8.6C3.2 212.5 0 233.8 0 256s3.2 43.5 8.6 64h114.6c-2-21-3.2-42.5-3.2-64zm39.5 96c14.5 89.3 48.7 152 88.5 152s74-62.7 88.5-152h-177zm159.3 141.6c71.4-21.2 129.4-73.7 158-141.6h-108c-8.8 56.9-25.6 107.8-50 141.6zM19.3 352c28.6 67.9 86.5 120.4 158 141.6-24.4-33.8-41.2-84.7-50-141.6h-108z\"],\n    \"globe-africa\": [496, 512, [], \"f57c\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm160 215.5v6.93c0 5.87-3.32 11.24-8.57 13.86l-15.39 7.7a15.485 15.485 0 0 1-15.53-.97l-18.21-12.14a15.52 15.52 0 0 0-13.5-1.81l-2.65.88c-9.7 3.23-13.66 14.79-7.99 23.3l13.24 19.86c2.87 4.31 7.71 6.9 12.89 6.9h8.21c8.56 0 15.5 6.94 15.5 15.5v11.34c0 3.35-1.09 6.62-3.1 9.3l-18.74 24.98c-1.42 1.9-2.39 4.1-2.83 6.43l-4.3 22.83c-.62 3.29-2.29 6.29-4.76 8.56a159.608 159.608 0 0 0-25 29.16l-13.03 19.55a27.756 27.756 0 0 1-23.09 12.36c-10.51 0-20.12-5.94-24.82-15.34a78.902 78.902 0 0 1-8.33-35.29V367.5c0-8.56-6.94-15.5-15.5-15.5h-25.88c-14.49 0-28.38-5.76-38.63-16a54.659 54.659 0 0 1-16-38.63v-14.06c0-17.19 8.1-33.38 21.85-43.7l27.58-20.69a54.663 54.663 0 0 1 32.78-10.93h.89c8.48 0 16.85 1.97 24.43 5.77l14.72 7.36c3.68 1.84 7.93 2.14 11.83.84l47.31-15.77c6.33-2.11 10.6-8.03 10.6-14.7 0-8.56-6.94-15.5-15.5-15.5h-10.09c-4.11 0-8.05-1.63-10.96-4.54l-6.92-6.92a15.493 15.493 0 0 0-10.96-4.54H199.5c-8.56 0-15.5-6.94-15.5-15.5v-4.4c0-7.11 4.84-13.31 11.74-15.04l14.45-3.61c3.74-.94 7-3.23 9.14-6.44l8.08-12.11c2.87-4.31 7.71-6.9 12.89-6.9h24.21c8.56 0 15.5-6.94 15.5-15.5v-21.7C359.23 71.63 422.86 131.02 441.93 208H423.5c-8.56 0-15.5 6.94-15.5 15.5z\"],\n    \"globe-americas\": [496, 512, [], \"f57d\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm82.29 357.6c-3.9 3.88-7.99 7.95-11.31 11.28-2.99 3-5.1 6.7-6.17 10.71-1.51 5.66-2.73 11.38-4.77 16.87l-17.39 46.85c-13.76 3-28 4.69-42.65 4.69v-27.38c1.69-12.62-7.64-36.26-22.63-51.25-6-6-9.37-14.14-9.37-22.63v-32.01c0-11.64-6.27-22.34-16.46-27.97-14.37-7.95-34.81-19.06-48.81-26.11-11.48-5.78-22.1-13.14-31.65-21.75l-.8-.72a114.792 114.792 0 0 1-18.06-20.74c-9.38-13.77-24.66-36.42-34.59-51.14 20.47-45.5 57.36-82.04 103.2-101.89l24.01 12.01C203.48 89.74 216 82.01 216 70.11v-11.3c7.99-1.29 16.12-2.11 24.39-2.42l28.3 28.3c6.25 6.25 6.25 16.38 0 22.63L264 112l-10.34 10.34c-3.12 3.12-3.12 8.19 0 11.31l4.69 4.69c3.12 3.12 3.12 8.19 0 11.31l-8 8a8.008 8.008 0 0 1-5.66 2.34h-8.99c-2.08 0-4.08.81-5.58 2.27l-9.92 9.65a8.008 8.008 0 0 0-1.58 9.31l15.59 31.19c2.66 5.32-1.21 11.58-7.15 11.58h-5.64c-1.93 0-3.79-.7-5.24-1.96l-9.28-8.06a16.017 16.017 0 0 0-15.55-3.1l-31.17 10.39a11.95 11.95 0 0 0-8.17 11.34c0 4.53 2.56 8.66 6.61 10.69l11.08 5.54c9.41 4.71 19.79 7.16 30.31 7.16s22.59 27.29 32 32h66.75c8.49 0 16.62 3.37 22.63 9.37l13.69 13.69a30.503 30.503 0 0 1 8.93 21.57 46.536 46.536 0 0 1-13.72 32.98zM417 274.25c-5.79-1.45-10.84-5-14.15-9.97l-17.98-26.97a23.97 23.97 0 0 1 0-26.62l19.59-29.38c2.32-3.47 5.5-6.29 9.24-8.15l12.98-6.49C440.2 193.59 448 223.87 448 256c0 8.67-.74 17.16-1.82 25.54L417 274.25z\"],\n    \"globe-asia\": [496, 512, [], \"f57e\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm-11.34 240.23c-2.89 4.82-8.1 7.77-13.72 7.77h-.31c-4.24 0-8.31 1.69-11.31 4.69l-5.66 5.66c-3.12 3.12-3.12 8.19 0 11.31l5.66 5.66c3 3 4.69 7.07 4.69 11.31V304c0 8.84-7.16 16-16 16h-6.11c-6.06 0-11.6-3.42-14.31-8.85l-22.62-45.23c-2.44-4.88-8.95-5.94-12.81-2.08l-19.47 19.46c-3 3-7.07 4.69-11.31 4.69H50.81C49.12 277.55 48 266.92 48 256c0-110.28 89.72-200 200-200 21.51 0 42.2 3.51 61.63 9.82l-50.16 38.53c-5.11 3.41-4.63 11.06.86 13.81l10.83 5.41c5.42 2.71 8.84 8.25 8.84 14.31V216c0 4.42-3.58 8-8 8h-3.06c-3.03 0-5.8-1.71-7.15-4.42-1.56-3.12-5.96-3.29-7.76-.3l-17.37 28.95zM408 358.43c0 4.24-1.69 8.31-4.69 11.31l-9.57 9.57c-3 3-7.07 4.69-11.31 4.69h-15.16c-4.24 0-8.31-1.69-11.31-4.69l-13.01-13.01a26.767 26.767 0 0 0-25.42-7.04l-21.27 5.32c-1.27.32-2.57.48-3.88.48h-10.34c-4.24 0-8.31-1.69-11.31-4.69l-11.91-11.91a8.008 8.008 0 0 1-2.34-5.66v-10.2c0-3.27 1.99-6.21 5.03-7.43l39.34-15.74c1.98-.79 3.86-1.82 5.59-3.05l23.71-16.89a7.978 7.978 0 0 1 4.64-1.48h12.09c3.23 0 6.15 1.94 7.39 4.93l5.35 12.85a4 4 0 0 0 3.69 2.46h3.8c1.78 0 3.35-1.18 3.84-2.88l4.2-14.47c.5-1.71 2.06-2.88 3.84-2.88h6.06c2.21 0 4 1.79 4 4v12.93c0 2.12.84 4.16 2.34 5.66l11.91 11.91c3 3 4.69 7.07 4.69 11.31v24.6z\"],\n    \"globe-europe\": [496, 512, [], \"f7a2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm200 248c0 22.5-3.9 44.2-10.8 64.4h-20.3c-4.3 0-8.4-1.7-11.4-4.8l-32-32.6c-4.5-4.6-4.5-12.1.1-16.7l12.5-12.5v-8.7c0-3-1.2-5.9-3.3-8l-9.4-9.4c-2.1-2.1-5-3.3-8-3.3h-16c-6.2 0-11.3-5.1-11.3-11.3 0-3 1.2-5.9 3.3-8l9.4-9.4c2.1-2.1 5-3.3 8-3.3h32c6.2 0 11.3-5.1 11.3-11.3v-9.4c0-6.2-5.1-11.3-11.3-11.3h-36.7c-8.8 0-16 7.2-16 16v4.5c0 6.9-4.4 13-10.9 15.2l-31.6 10.5c-3.3 1.1-5.5 4.1-5.5 7.6v2.2c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8s-3.6-8-8-8H247c-3 0-5.8 1.7-7.2 4.4l-9.4 18.7c-2.7 5.4-8.2 8.8-14.3 8.8H194c-8.8 0-16-7.2-16-16V199c0-4.2 1.7-8.3 4.7-11.3l20.1-20.1c4.6-4.6 7.2-10.9 7.2-17.5 0-3.4 2.2-6.5 5.5-7.6l40-13.3c1.7-.6 3.2-1.5 4.4-2.7l26.8-26.8c2.1-2.1 3.3-5 3.3-8 0-6.2-5.1-11.3-11.3-11.3H258l-16 16v8c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8v-20c0-2.5 1.2-4.9 3.2-6.4l28.9-21.7c1.9-.1 3.8-.3 5.7-.3C358.3 56 448 145.7 448 256zM130.1 149.1c0-3 1.2-5.9 3.3-8l25.4-25.4c2.1-2.1 5-3.3 8-3.3 6.2 0 11.3 5.1 11.3 11.3v16c0 3-1.2 5.9-3.3 8l-9.4 9.4c-2.1 2.1-5 3.3-8 3.3h-16c-6.2 0-11.3-5.1-11.3-11.3zm128 306.4v-7.1c0-8.8-7.2-16-16-16h-20.2c-10.8 0-26.7-5.3-35.4-11.8l-22.2-16.7c-11.5-8.6-18.2-22.1-18.2-36.4v-23.9c0-16 8.4-30.8 22.1-39l42.9-25.7c7.1-4.2 15.2-6.5 23.4-6.5h31.2c10.9 0 21.4 3.9 29.6 10.9l43.2 37.1h18.3c8.5 0 16.6 3.4 22.6 9.4l17.3 17.3c3.4 3.4 8.1 5.3 12.9 5.3H423c-32.4 58.9-93.8 99.5-164.9 103.1z\"],\n    \"golf-ball\": [416, 512, [], \"f450\", \"M96 416h224c0 17.7-14.3 32-32 32h-16c-17.7 0-32 14.3-32 32v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-20c0-17.7-14.3-32-32-32h-16c-17.7 0-32-14.3-32-32zm320-208c0 74.2-39 139.2-97.5 176h-221C39 347.2 0 282.2 0 208 0 93.1 93.1 0 208 0s208 93.1 208 208zm-180.1 43.9c18.3 0 33.1-14.8 33.1-33.1 0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1zm49.1 46.9c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1zm64-64c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1z\"],\n    \"gopuram\": [512, 512, [], \"f664\", \"M496 352h-16V240c0-8.8-7.2-16-16-16h-16v-80c0-8.8-7.2-16-16-16h-16V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16S96 7.2 96 16v112H80c-8.8 0-16 7.2-16 16v80H48c-8.8 0-16 7.2-16 16v112H16c-8.8 0-16 7.2-16 16v128c0 8.8 7.2 16 16 16h80V352h32V224h32v-96h32v96h-32v128h-32v160h80v-80c0-8.8 7.2-16 16-16h64c8.8 0 16 7.2 16 16v80h80V352h-32V224h-32v-96h32v96h32v128h32v160h80c8.8 0 16-7.2 16-16V368c0-8.8-7.2-16-16-16zM232 176c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v48h-48zm56 176h-64v-64c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16z\"],\n    \"graduation-cap\": [640, 512, [], \"f19d\", \"M622.34 153.2L343.4 67.5c-15.2-4.67-31.6-4.67-46.79 0L17.66 153.2c-23.54 7.23-23.54 38.36 0 45.59l48.63 14.94c-10.67 13.19-17.23 29.28-17.88 46.9C38.78 266.15 32 276.11 32 288c0 10.78 5.68 19.85 13.86 25.65L20.33 428.53C18.11 438.52 25.71 448 35.94 448h56.11c10.24 0 17.84-9.48 15.62-19.47L82.14 313.65C90.32 307.85 96 298.78 96 288c0-11.57-6.47-21.25-15.66-26.87.76-15.02 8.44-28.3 20.69-36.72L296.6 284.5c9.06 2.78 26.44 6.25 46.79 0l278.95-85.7c23.55-7.24 23.55-38.36 0-45.6zM352.79 315.09c-28.53 8.76-52.84 3.92-65.59 0l-145.02-44.55L128 384c0 35.35 85.96 64 192 64s192-28.65 192-64l-14.18-113.47-145.03 44.56z\"],\n    \"greater-than\": [384, 512, [], \"f531\", \"M365.52 209.85L59.22 67.01c-16.06-7.49-35.15-.54-42.64 15.52L3.01 111.61c-7.49 16.06-.54 35.15 15.52 42.64L236.96 256.1 18.49 357.99C2.47 365.46-4.46 384.5 3.01 400.52l13.52 29C24 445.54 43.04 452.47 59.06 445l306.47-142.91a32.003 32.003 0 0 0 18.48-29v-34.23c-.01-12.45-7.21-23.76-18.49-29.01z\"],\n    \"greater-than-equal\": [448, 512, [], \"f532\", \"M55.22 107.69l175.56 68.09-175.44 68.05c-18.39 6.03-27.88 24.39-21.2 41l12.09 30.08c6.68 16.61 26.99 25.19 45.38 19.15L393.02 214.2c13.77-4.52 22.98-16.61 22.98-30.17v-15.96c0-13.56-9.21-25.65-22.98-30.17L91.3 17.92c-18.29-6-38.51 2.53-45.15 19.06L34.12 66.9c-6.64 16.53 2.81 34.79 21.1 40.79zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"],\n    \"grimace\": [496, 512, [], \"f57f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM144 400h-8c-17.7 0-32-14.3-32-32v-8h40v40zm0-56h-40v-8c0-17.7 14.3-32 32-32h8v40zm-8-136c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm72 192h-48v-40h48v40zm0-56h-48v-40h48v40zm64 56h-48v-40h48v40zm0-56h-48v-40h48v40zm64 56h-48v-40h48v40zm0-56h-48v-40h48v40zm-8-104c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64 128c0 17.7-14.3 32-32 32h-8v-40h40v8zm0-24h-40v-40h8c17.7 0 32 14.3 32 32v8z\"],\n    \"grin\": [496, 512, [], \"f580\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm80 256c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.3-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-alt\": [496, 512, [], \"f581\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm63.7 128.7c7.6-11.4 24.7-11.7 32.7 0 12.4 18.4 15.1 36.9 15.7 55.3-.5 18.4-3.3 36.9-15.7 55.3-7.6 11.4-24.7 11.7-32.7 0-12.4-18.4-15.1-36.9-15.7-55.3.5-18.4 3.3-36.9 15.7-55.3zm-160 0c7.6-11.4 24.7-11.7 32.7 0 12.4 18.4 15.1 36.9 15.7 55.3-.5 18.4-3.3 36.9-15.7 55.3-7.6 11.4-24.7 11.7-32.7 0-12.4-18.4-15.1-36.9-15.7-55.3.5-18.4 3.3-36.9 15.7-55.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-beam\": [496, 512, [], \"f582\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 144c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.9 9.4-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-beam-sweat\": [504, 512, [], \"f583\", \"M456 128c26.5 0 48-21 48-47 0-20-28.5-60.4-41.6-77.8-3.2-4.3-9.6-4.3-12.8 0C436.5 20.6 408 61 408 81c0 26 21.5 47 48 47zm0 32c-44.1 0-80-35.4-80-79 0-4.4.3-14.2 8.1-32.2C345 23.1 298.3 8 248 8 111 8 0 119 0 256s111 248 248 248 248-111 248-248c0-35.1-7.4-68.4-20.5-98.6-6.3 1.5-12.7 2.6-19.5 2.6zm-128-8c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.2 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-hearts\": [496, 512, [], \"f584\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM90.4 183.6c6.7-17.6 26.7-26.7 44.9-21.9l7.1 1.9 2-7.1c5-18.1 22.8-30.9 41.5-27.9 21.4 3.4 34.4 24.2 28.8 44.5L195.3 243c-1.2 4.5-5.9 7.2-10.5 6l-70.2-18.2c-20.4-5.4-31.9-27-24.2-47.2zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.2-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.6 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3zm133.4-201.3l-70.2 18.2c-4.5 1.2-9.2-1.5-10.5-6L281.3 173c-5.6-20.3 7.4-41.1 28.8-44.5 18.6-3 36.4 9.8 41.5 27.9l2 7.1 7.1-1.9c18.2-4.7 38.2 4.3 44.9 21.9 7.7 20.3-3.8 41.9-24.2 47.2z\"],\n    \"grin-squint\": [496, 512, [], \"f585\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 189.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 208l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.9 9.4-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.2 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-squint-tears\": [512, 512, [], \"f586\", \"M409.6 111.9c22.6-3.2 73.5-12 88.3-26.8 19.2-19.2 18.9-50.6-.7-70.2S446-5 426.9 14.2c-14.8 14.8-23.5 65.7-26.8 88.3-.8 5.5 3.9 10.2 9.5 9.4zM102.4 400.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3.8-5.5-3.9-10.2-9.5-9.4zm311.7-256.5c-33 3.9-48.6-25.1-45.7-45.7 3.4-24 7.4-42.1 11.5-56.5C285.1-13.4 161.8-.5 80.6 80.6-.5 161.7-13.4 285 41.4 379.9c14.4-4.1 32.4-8 56.5-11.5 33.2-3.9 48.6 25.2 45.7 45.7-3.4 24-7.4 42.1-11.5 56.5 94.8 54.8 218.1 41.9 299.3-39.2s94-204.4 39.2-299.3c-14.4 4.1-32.5 8-56.5 11.5zM255.7 106c3.3-13.2 22.4-11.5 23.6 1.8l4.8 52.3 52.3 4.8c13.4 1.2 14.9 20.3 1.8 23.6l-90.5 22.6c-8.9 2.2-16.7-5.9-14.5-14.5l22.5-90.6zm-90.9 230.3L160 284l-52.3-4.8c-13.4-1.2-14.9-20.3-1.8-23.6l90.5-22.6c8.8-2.2 16.7 5.8 14.5 14.5L188.3 338c-3.1 13.2-22.2 11.7-23.5-1.7zm215.7 44.2c-29.3 29.3-75.7 50.4-116.7 50.4-18.9 0-36.6-4.5-51-14.7-9.8-6.9-8.7-21.8 2-27.2 28.3-14.6 63.9-42.4 97.8-76.3s61.7-69.6 76.3-97.8c5.4-10.5 20.2-11.9 27.3-2 32.3 45.3 7.1 124.7-35.7 167.6z\"],\n    \"grin-stars\": [496, 512, [], \"f587\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM94.6 168.9l34.9-5 15.5-31.6c2.9-5.8 11-5.8 13.9 0l15.5 31.6 34.9 5c6.2 1 8.9 8.6 4.3 13.2l-25.4 24.6 6 34.9c1 6.2-5.3 11-11 7.9L152 233.3l-31.3 16.3c-5.7 3.1-12-1.7-11-7.9l6-34.9-25.4-24.6c-4.6-4.7-1.9-12.3 4.3-13.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3zm157.7-249.9l-25.4 24.6 6 34.9c1 6.2-5.3 11-11 7.9L344 233.3l-31.3 16.3c-5.7 3.1-12-1.7-11-7.9l6-34.9-25.4-24.6c-4.5-4.6-1.9-12.2 4.3-13.2l34.9-5 15.5-31.6c2.9-5.8 11-5.8 13.9 0l15.5 31.6 34.9 5c6.3.9 9 8.5 4.4 13.1z\"],\n    \"grin-tears\": [640, 512, [], \"f588\", \"M102.4 256.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3.8-5.5-3.9-10.2-9.5-9.4zm523.4 26.8c-14.8-14.8-65.7-23.5-88.3-26.8-5.5-.8-10.3 3.9-9.5 9.5 3.2 22.6 12 73.5 26.8 88.3 19.2 19.2 50.6 18.9 70.2-.7s20-51.2.8-70.3zm-129.4-12.8c-3.8-26.6 19.1-49.5 45.7-45.7 8.9 1.3 16.8 2.7 24.3 4.1C552.7 104.5 447.7 8 320 8S87.3 104.5 73.6 228.5c7.5-1.4 15.4-2.8 24.3-4.1 33.2-3.9 48.6 25.3 45.7 45.7-11.8 82.3-29.9 100.4-35.8 106.4-.9.9-2 1.6-3 2.5 42.7 74.6 123 125 215.2 125s172.5-50.4 215.2-125.1c-1-.9-2.1-1.5-3-2.5-5.9-5.9-24-24-35.8-106.3zM400 152c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.7 9.2-21.6 20.7-17.9C227.1 330.5 272 336 320 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-tongue\": [496, 512, [], \"f589\", \"M248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.6 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm160 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-34.9 134.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3z\"],\n    \"grin-tongue-squint\": [496, 512, [], \"f58a\", \"M293.1 374.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3zM248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.2-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-33.8 210.3l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.7 4.7 7.7 15.9 0 20.6zm163 30c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.8-4.7-7.8-15.9 0-20.6l80-48c11.7-6.9 23.9 7.7 15.4 18L343.6 208l33.6 40.3z\"],\n    \"grin-tongue-wink\": [496, 512, [], \"f58b\", \"M344 184c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-56 225l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L112 233c-8.5 7.4-21.6.3-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S208 197 212 222.2c1.6 11.1-11.6 18.2-20 10.8zm152 39c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm-50.9 102.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3z\"],\n    \"grin-wink\": [496, 512, [], \"f58c\", \"M0 256c0 137 111 248 248 248s248-111 248-248S385 8 248 8 0 119 0 256zm200-48c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm168 25l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L288 233c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S384 197 388 222.2c1.6 11-11.5 18.2-20 10.8zm-243.1 87.8C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.3-3.7 22.6 6 20.7 17.9-9.2 55-83.2 93.3-143.8 93.3s-134.5-38.3-143.8-93.3c-2-11.9 9.3-21.6 20.7-17.9z\"],\n    \"grip-horizontal\": [448, 512, [], \"f58d\", \"M96 288H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM96 96H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"],\n    \"grip-lines\": [512, 512, [], \"f7a4\", \"M496 288H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-128H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"grip-lines-vertical\": [256, 512, [], \"f7a5\", \"M96 496V16c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16zm128 0V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16z\"],\n    \"grip-vertical\": [320, 512, [], \"f58e\", \"M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"],\n    \"guitar\": [512, 512, [], \"f7a6\", \"M502.6 54.6L457.4 9.4c-12.5-12.5-32.8-12.5-45.3 0l-67.9 67.9c-12.5 12.5-12.5 32.8 0 45.3L290 176.7c-45.4-29-100.4-28.9-133.5 4.2-9.7 9.7-16.4 21.2-20.5 33.9-6.1 18.8-23.5 33.1-42.7 34.9-24 2.3-46.3 11.6-63.4 28.8C-16.3 324.6-8 407.6 48.2 463.8c56.2 56.2 139.2 64.4 185.3 18.3 17.2-17.1 26.5-39.4 28.8-63.5 1.8-19.1 16.1-36.6 34.9-42.7 12.7-4.1 24.2-10.8 33.9-20.5 33.1-33.1 33.1-88.1 4.2-133.5l54.2-54.2c12.5 12.5 32.8 12.5 45.3 0l67.9-67.9c12.4-12.4 12.4-32.7-.1-45.2zM208 352c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"h-square\": [448, 512, [], \"f0fd\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-112 48h-32c-8.837 0-16 7.163-16 16v80H160v-80c0-8.837-7.163-16-16-16h-32c-8.837 0-16 7.163-16 16v224c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16v-80h128v80c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144c0-8.837-7.163-16-16-16z\"],\n    \"hamburger\": [512, 512, [], \"f805\", \"M464 256H48a48 48 0 0 0 0 96h416a48 48 0 0 0 0-96zm16 128H32a16 16 0 0 0-16 16v16a64 64 0 0 0 64 64h352a64 64 0 0 0 64-64v-16a16 16 0 0 0-16-16zM58.64 224h394.72c34.57 0 54.62-43.9 34.82-75.88C448 83.2 359.55 32.1 256 32c-103.54.1-192 51.2-232.18 116.11C4 180.09 24.07 224 58.64 224zM384 112a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM256 80a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-128 32a16 16 0 1 1-16 16 16 16 0 0 1 16-16z\"],\n    \"hammer\": [576, 512, [], \"f6e3\", \"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"],\n    \"hamsa\": [512, 512, [], \"f665\", \"M509.34 307.25C504.28 295.56 492.75 288 480 288h-64V80c0-22-18-40-40-40s-40 18-40 40v134c0 5.52-4.48 10-10 10h-20c-5.52 0-10-4.48-10-10V40c0-22-18-40-40-40s-40 18-40 40v174c0 5.52-4.48 10-10 10h-20c-5.52 0-10-4.48-10-10V80c0-22-18-40-40-40S96 58 96 80v208H32c-12.75 0-24.28 7.56-29.34 19.25a31.966 31.966 0 0 0 5.94 34.58l102.69 110.03C146.97 490.08 199.69 512 256 512s109.03-21.92 144.72-60.14L503.4 341.83a31.966 31.966 0 0 0 5.94-34.58zM256 416c-53.02 0-96-64-96-64s42.98-64 96-64 96 64 96 64-42.98 64-96 64zm0-96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"],\n    \"hand-holding\": [576, 512, [], \"f4bd\", \"M565.3 328.1c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z\"],\n    \"hand-holding-heart\": [576, 512, [], \"f4be\", \"M275.3 250.5c7 7.4 18.4 7.4 25.5 0l108.9-114.2c31.6-33.2 29.8-88.2-5.6-118.8-30.8-26.7-76.7-21.9-104.9 7.7L288 36.9l-11.1-11.6C248.7-4.4 202.8-9.2 172 17.5c-35.3 30.6-37.2 85.6-5.6 118.8l108.9 114.2zm290 77.6c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z\"],\n    \"hand-holding-usd\": [544, 512, [], \"f4c0\", \"M257.6 144.3l50 14.3c3.6 1 6.1 4.4 6.1 8.1 0 4.6-3.8 8.4-8.4 8.4h-32.8c-3.6 0-7.1-.8-10.3-2.2-4.8-2.2-10.4-1.7-14.1 2l-17.5 17.5c-5.3 5.3-4.7 14.3 1.5 18.4 9.5 6.3 20.3 10.1 31.8 11.5V240c0 8.8 7.2 16 16 16h16c8.8 0 16-7.2 16-16v-17.6c30.3-3.6 53.3-31 49.3-63-2.9-23-20.7-41.3-42.9-47.7l-50-14.3c-3.6-1-6.1-4.4-6.1-8.1 0-4.6 3.8-8.4 8.4-8.4h32.8c3.6 0 7.1.8 10.3 2.2 4.8 2.2 10.4 1.7 14.1-2l17.5-17.5c5.3-5.3 4.7-14.3-1.5-18.4-9.5-6.3-20.3-10.1-31.8-11.5V16c0-8.8-7.2-16-16-16h-16c-8.8 0-16 7.2-16 16v17.6c-30.3 3.6-53.3 31-49.3 63 2.9 23 20.7 41.3 42.9 47.7zm276.3 183.8c-11.2-10.7-28.5-10-40.3 0L406.4 402c-10.7 9.1-24 14-37.8 14H256.9c-8.3 0-15.1-7.2-15.1-16s6.8-16 15.1-16h73.9c15.1 0 29-10.9 31.4-26.6 3.1-20-11.5-37.4-29.8-37.4H181.3c-25.5 0-50.2 9.3-69.9 26.3L67.5 384H15.1C6.8 384 0 391.2 0 400v96c0 8.8 6.8 16 15.1 16H352c13.7 0 27-4.9 37.8-14l142.8-121c14.4-12.1 15.5-35.3 1.3-48.9z\"],\n    \"hand-lizard\": [576, 512, [], \"f258\", \"M384 480h192V363.778a95.998 95.998 0 0 0-14.833-51.263L398.127 54.368A48 48 0 0 0 357.544 32H24C10.745 32 0 42.745 0 56v16c0 30.928 25.072 56 56 56h229.981c12.844 0 21.556 13.067 16.615 24.923l-21.41 51.385A32 32 0 0 1 251.648 224H128c-35.346 0-64 28.654-64 64v8c0 13.255 10.745 24 24 24h147.406a47.995 47.995 0 0 1 25.692 7.455l111.748 70.811A24.001 24.001 0 0 1 384 418.539V480z\"],\n    \"hand-middle-finger\": [512, 512, [], \"f806\", \"M479.93 317.12a37.33 37.33 0 0 0-28.28-36.19L416 272v-49.59c0-11.44-9.69-21.29-23.15-23.54l-38.4-6.4C336.63 189.5 320 200.86 320 216v32a8 8 0 0 1-16 0V50c0-26.28-20.25-49.2-46.52-50A48 48 0 0 0 208 48v200a8 8 0 0 1-16 0v-32c0-15.15-16.63-26.51-34.45-23.54l-30.68 5.12c-18 3-30.87 16.12-30.87 31.38V376a8 8 0 0 1-16 0v-76l-27.36 15A37.34 37.34 0 0 0 32 348.4v73.47a37.31 37.31 0 0 0 10.93 26.39l30.93 30.93A112 112 0 0 0 153.05 512h215A112 112 0 0 0 480 400z\"],\n    \"hand-paper\": [448, 512, [], \"f256\", \"M408.781 128.007C386.356 127.578 368 146.36 368 168.79V256h-8V79.79c0-22.43-18.356-41.212-40.781-40.783C297.488 39.423 280 57.169 280 79v177h-8V40.79C272 18.36 253.644-.422 231.219.007 209.488.423 192 18.169 192 40v216h-8V80.79c0-22.43-18.356-41.212-40.781-40.783C121.488 40.423 104 58.169 104 80v235.992l-31.648-43.519c-12.993-17.866-38.009-21.817-55.877-8.823-17.865 12.994-21.815 38.01-8.822 55.877l125.601 172.705A48 48 0 0 0 172.073 512h197.59c22.274 0 41.622-15.324 46.724-37.006l26.508-112.66a192.011 192.011 0 0 0 5.104-43.975V168c.001-21.831-17.487-39.577-39.218-39.993z\"],\n    \"hand-peace\": [448, 512, [], \"f25b\", \"M408 216c-22.092 0-40 17.909-40 40h-8v-32c0-22.091-17.908-40-40-40s-40 17.909-40 40v32h-8V48c0-26.51-21.49-48-48-48s-48 21.49-48 48v208h-13.572L92.688 78.449C82.994 53.774 55.134 41.63 30.461 51.324 5.787 61.017-6.356 88.877 3.337 113.551l74.765 190.342-31.09 24.872c-15.381 12.306-19.515 33.978-9.741 51.081l64 112A39.998 39.998 0 0 0 136 512h240c18.562 0 34.686-12.77 38.937-30.838l32-136A39.97 39.97 0 0 0 448 336v-80c0-22.091-17.908-40-40-40z\"],\n    \"hand-point-down\": [384, 512, [], \"f0a7\", \"M91.826 467.2V317.966c-8.248 5.841-16.558 10.57-24.918 14.153C35.098 345.752-.014 322.222 0 288c.008-18.616 10.897-32.203 29.092-40 28.286-12.122 64.329-78.648 77.323-107.534 7.956-17.857 25.479-28.453 43.845-28.464l.001-.002h171.526c11.812 0 21.897 8.596 23.703 20.269 7.25 46.837 38.483 61.76 38.315 123.731-.007 2.724.195 13.254.195 16 0 50.654-22.122 81.574-71.263 72.6-9.297 18.597-39.486 30.738-62.315 16.45-21.177 24.645-53.896 22.639-70.944 6.299V467.2c0 24.15-20.201 44.8-43.826 44.8-23.283 0-43.826-21.35-43.826-44.8zM112 72V24c0-13.255 10.745-24 24-24h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24zm212-24c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"],\n    \"hand-point-left\": [512, 512, [], \"f0a5\", \"M44.8 155.826h149.234c-5.841-8.248-10.57-16.558-14.153-24.918C166.248 99.098 189.778 63.986 224 64c18.616.008 32.203 10.897 40 29.092 12.122 28.286 78.648 64.329 107.534 77.323 17.857 7.956 28.453 25.479 28.464 43.845l.002.001v171.526c0 11.812-8.596 21.897-20.269 23.703-46.837 7.25-61.76 38.483-123.731 38.315-2.724-.007-13.254.195-16 .195-50.654 0-81.574-22.122-72.6-71.263-18.597-9.297-30.738-39.486-16.45-62.315-24.645-21.177-22.639-53.896-6.299-70.944H44.8c-24.15 0-44.8-20.201-44.8-43.826 0-23.283 21.35-43.826 44.8-43.826zM440 176h48c13.255 0 24 10.745 24 24v192c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24zm24 212c11.046 0 20-8.954 20-20s-8.954-20-20-20-20 8.954-20 20 8.954 20 20 20z\"],\n    \"hand-point-right\": [512, 512, [], \"f0a4\", \"M512 199.652c0 23.625-20.65 43.826-44.8 43.826h-99.851c16.34 17.048 18.346 49.766-6.299 70.944 14.288 22.829 2.147 53.017-16.45 62.315C353.574 425.878 322.654 448 272 448c-2.746 0-13.276-.203-16-.195-61.971.168-76.894-31.065-123.731-38.315C120.596 407.683 112 397.599 112 385.786V214.261l.002-.001c.011-18.366 10.607-35.889 28.464-43.845 28.886-12.994 95.413-49.038 107.534-77.323 7.797-18.194 21.384-29.084 40-29.092 34.222-.014 57.752 35.098 44.119 66.908-3.583 8.359-8.312 16.67-14.153 24.918H467.2c23.45 0 44.8 20.543 44.8 43.826zM96 200v192c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24zM68 368c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"],\n    \"hand-point-up\": [384, 512, [], \"f0a6\", \"M135.652 0c23.625 0 43.826 20.65 43.826 44.8v99.851c17.048-16.34 49.766-18.346 70.944 6.299 22.829-14.288 53.017-2.147 62.315 16.45C361.878 158.426 384 189.346 384 240c0 2.746-.203 13.276-.195 16 .168 61.971-31.065 76.894-38.315 123.731C343.683 391.404 333.599 400 321.786 400H150.261l-.001-.002c-18.366-.011-35.889-10.607-43.845-28.464C93.421 342.648 57.377 276.122 29.092 264 10.897 256.203.008 242.616 0 224c-.014-34.222 35.098-57.752 66.908-44.119 8.359 3.583 16.67 8.312 24.918 14.153V44.8c0-23.45 20.543-44.8 43.826-44.8zM136 416h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24v-48c0-13.255 10.745-24 24-24zm168 28c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z\"],\n    \"hand-pointer\": [448, 512, [], \"f25a\", \"M448 240v96c0 3.084-.356 6.159-1.063 9.162l-32 136C410.686 499.23 394.562 512 376 512H168a40.004 40.004 0 0 1-32.35-16.473l-127.997-176c-12.993-17.866-9.043-42.883 8.822-55.876 17.867-12.994 42.884-9.043 55.877 8.823L104 315.992V40c0-22.091 17.908-40 40-40s40 17.909 40 40v200h8v-40c0-22.091 17.908-40 40-40s40 17.909 40 40v40h8v-24c0-22.091 17.908-40 40-40s40 17.909 40 40v24h8c0-22.091 17.908-40 40-40s40 17.909 40 40zm-256 80h-8v96h8v-96zm88 0h-8v96h8v-96zm88 0h-8v96h8v-96z\"],\n    \"hand-rock\": [512, 512, [], \"f255\", \"M464.8 80c-26.9-.4-48.8 21.2-48.8 48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v32h-8V80.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v136l-8-7.1v-48.1c0-26.3-20.9-48.3-47.2-48.8C21.9 127.6 0 149.2 0 176v66.4c0 27.4 11.7 53.5 32.2 71.8l111.7 99.3c10.2 9.1 16.1 22.2 16.1 35.9v6.7c0 13.3 10.7 24 24 24h240c13.3 0 24-10.7 24-24v-2.9c0-12.8 2.6-25.5 7.5-37.3l49-116.3c5-11.8 7.5-24.5 7.5-37.3V128.8c0-26.3-20.9-48.4-47.2-48.8z\"],\n    \"hand-scissors\": [512, 512, [], \"f257\", \"M216 440c0-22.092 17.909-40 40-40v-8h-32c-22.091 0-40-17.908-40-40s17.909-40 40-40h32v-8H48c-26.51 0-48-21.49-48-48s21.49-48 48-48h208v-13.572l-177.551-69.74c-24.674-9.694-36.818-37.555-27.125-62.228 9.693-24.674 37.554-36.817 62.228-27.124l190.342 74.765 24.872-31.09c12.306-15.381 33.978-19.515 51.081-9.741l112 64A40.002 40.002 0 0 1 512 168v240c0 18.562-12.77 34.686-30.838 38.937l-136 32A39.982 39.982 0 0 1 336 480h-80c-22.091 0-40-17.908-40-40z\"],\n    \"hand-spock\": [512, 512, [], \"f259\", \"M481.3 97.1c-21.5-5.1-43.1 8.2-48.2 29.6L402.3 256h-11.1l43.6-174.3c5.4-21.4-7.7-43.1-29.1-48.5s-43.1 7.7-48.5 29.1L308.8 256h-15.1L242 31.1c-5-21.6-26.4-35-48-30.1-21.5 4.9-35 26.4-30 47.9l47.6 207h-9.8L167 103.1c-4.9-21.5-26.3-35-47.9-30.1-21.5 4.9-35 26.3-30.1 47.9l39 171.6v79.4l-60.6-57c-16.1-15.1-41.4-14.4-56.5 1.7s-14.4 41.4 1.7 56.5L146.3 499c8.9 8.4 20.7 13 32.9 13h216.7c21.3 0 40-14 46-34.4l26.2-88.3c2.6-8.9 4-18 4-27.3v-42c0-7.5.9-15 2.6-22.2L511 145.3c5-21.5-8.3-43.1-29.7-48.2z\"],\n    \"hands\": [640, 512, [], \"f4c2\", \"M204.8 230.4c-10.6-14.1-30.7-17-44.8-6.4-14.1 10.6-17 30.7-6.4 44.8l38.1 50.8c4.8 6.4 4.1 15.3-1.5 20.9l-12.8 12.8c-6.7 6.7-17.6 6.2-23.6-1.1L64 244.4V96c0-17.7-14.3-32-32-32S0 78.3 0 96v218.4c0 10.9 3.7 21.5 10.5 30l104.1 134.3c5 6.5 8.4 13.9 10.4 21.7 1.8 6.9 8.1 11.6 15.3 11.6H272c8.8 0 16-7.2 16-16V384c0-27.7-9-54.6-25.6-76.8l-57.6-76.8zM608 64c-17.7 0-32 14.3-32 32v148.4l-89.8 107.8c-6 7.2-17 7.7-23.6 1.1l-12.8-12.8c-5.6-5.6-6.3-14.5-1.5-20.9l38.1-50.8c10.6-14.1 7.7-34.2-6.4-44.8-14.1-10.6-34.2-7.7-44.8 6.4l-57.6 76.8C361 329.4 352 356.3 352 384v112c0 8.8 7.2 16 16 16h131.7c7.1 0 13.5-4.7 15.3-11.6 2-7.8 5.4-15.2 10.4-21.7l104.1-134.3c6.8-8.5 10.5-19.1 10.5-30V96c0-17.7-14.3-32-32-32z\"],\n    \"hands-helping\": [640, 512, [], \"f4c4\", \"M488 192H336v56c0 39.7-32.3 72-72 72s-72-32.3-72-72V126.4l-64.9 39C107.8 176.9 96 197.8 96 220.2v47.3l-80 46.2C.7 322.5-4.6 342.1 4.3 357.4l80 138.6c8.8 15.3 28.4 20.5 43.7 11.7L231.4 448H368c35.3 0 64-28.7 64-64h16c17.7 0 32-14.3 32-32v-64h8c13.3 0 24-10.7 24-24v-48c0-13.3-10.7-24-24-24zm147.7-37.4L555.7 16C546.9.7 527.3-4.5 512 4.3L408.6 64H306.4c-12 0-23.7 3.4-33.9 9.7L239 94.6c-9.4 5.8-15 16.1-15 27.1V248c0 22.1 17.9 40 40 40s40-17.9 40-40v-88h184c30.9 0 56 25.1 56 56v28.5l80-46.2c15.3-8.9 20.5-28.4 11.7-43.7z\"],\n    \"handshake\": [640, 512, [], \"f2b5\", \"M434.7 64h-85.9c-8 0-15.7 3-21.6 8.4l-98.3 90c-.1.1-.2.3-.3.4-16.6 15.6-16.3 40.5-2.1 56 12.7 13.9 39.4 17.6 56.1 2.7.1-.1.3-.1.4-.2l79.9-73.2c6.5-5.9 16.7-5.5 22.6 1 6 6.5 5.5 16.6-1 22.6l-26.1 23.9L504 313.8c2.9 2.4 5.5 5 7.9 7.7V128l-54.6-54.6c-5.9-6-14.1-9.4-22.6-9.4zM544 128.2v223.9c0 17.7 14.3 32 32 32h64V128.2h-96zm48 223.9c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM0 384h64c17.7 0 32-14.3 32-32V128.2H0V384zm48-63.9c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16c0-8.9 7.2-16 16-16zm435.9 18.6L334.6 217.5l-30 27.5c-29.7 27.1-75.2 24.5-101.7-4.4-26.9-29.4-24.8-74.9 4.4-101.7L289.1 64h-83.8c-8.5 0-16.6 3.4-22.6 9.4L128 128v223.9h18.3l90.5 81.9c27.4 22.3 67.7 18.1 90-9.3l.2-.2 17.9 15.5c15.9 13 39.4 10.5 52.3-5.4l31.4-38.6 5.4 4.4c13.7 11.1 33.9 9.1 45-4.7l9.5-11.7c11.2-13.8 9.1-33.9-4.6-45.1z\"],\n    \"hanukiah\": [640, 512, [], \"f6e6\", \"M232 160c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm-64 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm224 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm64 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm88 8c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v120h32V168zm-440-8c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm520 0h-32c-8.84 0-16 7.16-16 16v112c0 17.67-14.33 32-32 32H352V128c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v192H96c-17.67 0-32-14.33-32-32V176c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v112c0 53.02 42.98 96 96 96h192v64H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H352v-64h192c53.02 0 96-42.98 96-96V176c0-8.84-7.16-16-16-16zm-16-32c13.25 0 24-11.94 24-26.67S608 48 608 48s-24 38.61-24 53.33S594.75 128 608 128zm-576 0c13.25 0 24-11.94 24-26.67S32 48 32 48 8 86.61 8 101.33 18.75 128 32 128zm288-48c13.25 0 24-11.94 24-26.67S320 0 320 0s-24 38.61-24 53.33S306.75 80 320 80zm-208 48c13.25 0 24-11.94 24-26.67S112 48 112 48s-24 38.61-24 53.33S98.75 128 112 128zm64 0c13.25 0 24-11.94 24-26.67S176 48 176 48s-24 38.61-24 53.33S162.75 128 176 128zm64 0c13.25 0 24-11.94 24-26.67S240 48 240 48s-24 38.61-24 53.33S226.75 128 240 128zm160 0c13.25 0 24-11.94 24-26.67S400 48 400 48s-24 38.61-24 53.33S386.75 128 400 128zm64 0c13.25 0 24-11.94 24-26.67S464 48 464 48s-24 38.61-24 53.33S450.75 128 464 128zm64 0c13.25 0 24-11.94 24-26.67S528 48 528 48s-24 38.61-24 53.33S514.75 128 528 128z\"],\n    \"hard-hat\": [512, 512, [], \"f807\", \"M480 288c0-80.25-49.28-148.92-119.19-177.62L320 192V80a16 16 0 0 0-16-16h-96a16 16 0 0 0-16 16v112l-40.81-81.62C81.28 139.08 32 207.75 32 288v64h448zm16 96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"hashtag\": [448, 512, [], \"f292\", \"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"],\n    \"hat-wizard\": [512, 512, [], \"f6e8\", \"M496 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-304-64l-64-32 64-32 32-64 32 64 64 32-64 32-16 32h208l-86.41-201.63a63.955 63.955 0 0 1-1.89-45.45L416 0 228.42 107.19a127.989 127.989 0 0 0-53.46 59.15L64 416h144l-16-32zm64-224l16-32 16 32 32 16-32 16-16 32-16-32-32-16 32-16z\"],\n    \"haykal\": [512, 512, [], \"f666\", \"M496.25 202.52l-110-15.44 41.82-104.34c6.67-16.64-11.6-32.18-26.59-22.63L307.44 120 273.35 12.82C270.64 4.27 263.32 0 256 0c-7.32 0-14.64 4.27-17.35 12.82l-34.09 107.19-94.04-59.89c-14.99-9.55-33.25 5.99-26.59 22.63l41.82 104.34-110 15.43c-17.54 2.46-21.68 26.27-6.03 34.67l98.16 52.66-74.48 83.54c-10.92 12.25-1.72 30.93 13.29 30.93 1.31 0 2.67-.14 4.07-.45l108.57-23.65-4.11 112.55c-.43 11.65 8.87 19.22 18.41 19.22 5.15 0 10.39-2.21 14.2-7.18l68.18-88.9 68.18 88.9c3.81 4.97 9.04 7.18 14.2 7.18 9.54 0 18.84-7.57 18.41-19.22l-4.11-112.55 108.57 23.65c17.36 3.76 29.21-17.2 17.35-30.49l-74.48-83.54 98.16-52.66c15.64-8.39 11.5-32.2-6.04-34.66zM338.51 311.68l-51.89-11.3 1.97 53.79L256 311.68l-32.59 42.49 1.96-53.79-51.89 11.3 35.6-39.93-46.92-25.17 52.57-7.38-19.99-49.87 44.95 28.62L256 166.72l16.29 51.23 44.95-28.62-19.99 49.87 52.57 7.38-46.92 25.17 35.61 39.93z\"],\n    \"hdd\": [576, 512, [], \"f0a0\", \"M576 304v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48zm-48-80a79.557 79.557 0 0 1 30.777 6.165L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L17.223 230.165A79.557 79.557 0 0 1 48 224h480zm-48 96c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm-96 0c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n    \"heading\": [512, 512, [], \"f1dc\", \"M496 80V48c0-8.837-7.163-16-16-16H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.621v128H154.379V96H192c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.275v320H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.621V288H357.62v128H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.275V96H480c8.837 0 16-7.163 16-16z\"],\n    \"headphones\": [512, 512, [], \"f025\", \"M256 32C114.52 32 0 146.496 0 288v48a32 32 0 0 0 17.689 28.622l14.383 7.191C34.083 431.903 83.421 480 144 480h24c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-24c-31.342 0-59.671 12.879-80 33.627V288c0-105.869 86.131-192 192-192s192 86.131 192 192v1.627C427.671 268.879 399.342 256 368 256h-24c-13.255 0-24 10.745-24 24v176c0 13.255 10.745 24 24 24h24c60.579 0 109.917-48.098 111.928-108.187l14.382-7.191A32 32 0 0 0 512 336v-48c0-141.479-114.496-256-256-256z\"],\n    \"headphones-alt\": [512, 512, [], \"f58f\", \"M160 288h-16c-35.35 0-64 28.7-64 64.12v63.76c0 35.41 28.65 64.12 64 64.12h16c17.67 0 32-14.36 32-32.06V320.06c0-17.71-14.33-32.06-32-32.06zm208 0h-16c-17.67 0-32 14.35-32 32.06v127.88c0 17.7 14.33 32.06 32 32.06h16c35.35 0 64-28.71 64-64.12v-63.76c0-35.41-28.65-64.12-64-64.12zM256 32C112.91 32 4.57 151.13 0 288v112c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V288c0-114.67 93.33-207.8 208-207.82 114.67.02 208 93.15 208 207.82v112c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V288C507.43 151.13 399.09 32 256 32z\"],\n    \"headset\": [512, 512, [], \"f590\", \"M192 208c0-17.67-14.33-32-32-32h-16c-35.35 0-64 28.65-64 64v48c0 35.35 28.65 64 64 64h16c17.67 0 32-14.33 32-32V208zm176 144c35.35 0 64-28.65 64-64v-48c0-35.35-28.65-64-64-64h-16c-17.67 0-32 14.33-32 32v112c0 17.67 14.33 32 32 32h16zM256 0C113.18 0 4.58 118.83 0 256v16c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-16c0-114.69 93.31-208 208-208s208 93.31 208 208h-.12c.08 2.43.12 165.72.12 165.72 0 23.35-18.93 42.28-42.28 42.28H320c0-26.51-21.49-48-48-48h-32c-26.51 0-48 21.49-48 48s21.49 48 48 48h181.72c49.86 0 90.28-40.42 90.28-90.28V256C507.42 118.83 398.82 0 256 0z\"],\n    \"heart\": [512, 512, [], \"f004\", \"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"],\n    \"heart-broken\": [512, 512, [], \"f7a9\", \"M473.7 73.8l-2.4-2.5c-46-47-118-51.7-169.6-14.8L336 159.9l-96 64 48 128-144-144 96-64-28.6-86.5C159.7 19.6 87 24 40.7 71.4l-2.4 2.4C-10.4 123.6-12.5 202.9 31 256l212.1 218.6c7.1 7.3 18.6 7.3 25.7 0L481 255.9c43.5-53 41.4-132.3-7.3-182.1z\"],\n    \"heartbeat\": [512, 512, [], \"f21e\", \"M320.2 243.8l-49.7 99.4c-6 12.1-23.4 11.7-28.9-.6l-56.9-126.3-30 71.7H60.6l182.5 186.5c7.1 7.3 18.6 7.3 25.7 0L451.4 288H342.3l-22.1-44.2zM473.7 73.9l-2.4-2.5c-51.5-52.6-135.8-52.6-187.4 0L256 100l-27.9-28.5c-51.5-52.7-135.9-52.7-187.4 0l-2.4 2.4C-10.4 123.7-12.5 203 31 256h102.4l35.9-86.2c5.4-12.9 23.6-13.2 29.4-.4l58.2 129.3 49-97.9c5.9-11.8 22.7-11.8 28.6 0l27.6 55.2H481c43.5-53 41.4-132.3-7.3-182.1z\"],\n    \"helicopter\": [640, 512, [], \"f533\", \"M304 384h272c17.67 0 32-14.33 32-32 0-123.71-100.29-224-224-224V64h176c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16H144c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h176v64H112L68.8 70.4C65.78 66.37 61.03 64 56 64H16.01C5.6 64-2.04 73.78.49 83.88L32 192l160 64 86.4 115.2A31.992 31.992 0 0 0 304 384zm112-188.49C478.55 208.3 528.03 257.44 540.79 320H416V195.51zm219.37 263.3l-22.15-22.2c-6.25-6.26-16.24-6.1-22.64.01-7.09 6.77-13.84 11.25-24.64 11.25H240c-8.84 0-16 7.18-16 16.03v32.06c0 8.85 7.16 16.03 16 16.03h325.94c14.88 0 35.3-.47 68.45-29.52 7.02-6.14 7.57-17.05.98-23.66z\"],\n    \"highlighter\": [544, 512, [], \"f591\", \"M0 479.98L99.92 512l35.45-35.45-67.04-67.04L0 479.98zm124.61-240.01a36.592 36.592 0 0 0-10.79 38.1l13.05 42.83-50.93 50.94 96.23 96.23 50.86-50.86 42.74 13.08c13.73 4.2 28.65-.01 38.15-10.78l35.55-41.64-173.34-173.34-41.52 35.44zm403.31-160.7l-63.2-63.2c-20.49-20.49-53.38-21.52-75.12-2.35L190.55 183.68l169.77 169.78L530.27 154.4c19.18-21.74 18.15-54.63-2.35-75.13z\"],\n    \"hiking\": [384, 512, [], \"f6ec\", \"M80.95 472.23c-4.28 17.16 6.14 34.53 23.28 38.81 2.61.66 5.22.95 7.8.95 14.33 0 27.37-9.7 31.02-24.23l25.24-100.97-52.78-52.78-34.56 138.22zm14.89-196.12L137 117c2.19-8.42-3.14-16.95-11.92-19.06-43.88-10.52-88.35 15.07-99.32 57.17L.49 253.24c-2.19 8.42 3.14 16.95 11.92 19.06l63.56 15.25c8.79 2.1 17.68-3.02 19.87-11.44zM368 160h-16c-8.84 0-16 7.16-16 16v16h-34.75l-46.78-46.78C243.38 134.11 228.61 128 212.91 128c-27.02 0-50.47 18.3-57.03 44.52l-26.92 107.72a32.012 32.012 0 0 0 8.42 30.39L224 397.25V480c0 17.67 14.33 32 32 32s32-14.33 32-32v-82.75c0-17.09-6.66-33.16-18.75-45.25l-46.82-46.82c.15-.5.49-.89.62-1.41l19.89-79.57 22.43 22.43c6 6 14.14 9.38 22.62 9.38h48v240c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V176c.01-8.84-7.15-16-15.99-16zM240 96c26.51 0 48-21.49 48-48S266.51 0 240 0s-48 21.49-48 48 21.49 48 48 48z\"],\n    \"hippo\": [640, 512, [], \"f6ed\", \"M581.12 96.2c-27.67-.15-52.5 17.58-76.6 26.62C489.98 88.27 455.83 64 416 64c-11.28 0-21.95 2.3-32 5.88V56c0-13.26-10.75-24-24-24h-16c-13.25 0-24 10.74-24 24v48.98C286.01 79.58 241.24 64 192 64 85.96 64 0 135.64 0 224v240c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16v-70.79C128.35 407.57 166.72 416 208 416s79.65-8.43 112-22.79V464c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V288h128v32c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-32c17.67 0 32-14.33 32-32v-92.02c0-34.09-24.79-67.59-58.88-67.78zM448 176c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"],\n    \"history\": [512, 512, [], \"f1da\", \"M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z\"],\n    \"hockey-puck\": [512, 512, [], \"f453\", \"M0 160c0-53 114.6-96 256-96s256 43 256 96-114.6 96-256 96S0 213 0 160zm0 82.2V352c0 53 114.6 96 256 96s256-43 256-96V242.2c-113.4 82.3-398.5 82.4-512 0z\"],\n    \"holly-berry\": [448, 512, [], \"f7aa\", \"M144 192c26.5 0 48-21.5 48-48s-21.5-48-48-48-48 21.5-48 48 21.5 48 48 48zm112-48c0 26.5 21.5 48 48 48s48-21.5 48-48-21.5-48-48-48-48 21.5-48 48zm-32-48c26.5 0 48-21.5 48-48S250.5 0 224 0s-48 21.5-48 48 21.5 48 48 48zm-16.2 139.1c.1-12.4-13.1-20.1-23.8-13.7-34.3 20.3-71.4 32.7-108.7 36.2-9.7.9-15.6 11.3-11.6 20.2 6.2 13.9 11.1 28.6 14.7 43.8 3.6 15.2-5.3 30.6-20.2 35.1-14.9 4.5-30.1 7.6-45.3 9.1-9.7 1-15.7 11.3-11.7 20.2 15 32.8 22.9 69.5 23 107.7.1 14.4 15.2 23.1 27.6 16 33.2-19 68.9-30.5 104.8-33.9 9.7-.9 15.6-11.3 11.6-20.2-6.2-13.9-11.1-28.6-14.7-43.8-3.6-15.2 5.3-30.6 20.2-35.1 14.9-4.5 30.1-7.6 45.3-9.1 9.7-1 15.7-11.3 11.7-20.2-15.5-34.2-23.3-72.5-22.9-112.3zM435 365.6c-15.2-1.6-30.3-4.7-45.3-9.1-14.9-4.5-23.8-19.9-20.2-35.1 3.6-15.2 8.5-29.8 14.7-43.8 4-8.9-1.9-19.3-11.6-20.2-37.3-3.5-74.4-15.9-108.7-36.2-10.7-6.3-23.9 1.4-23.8 13.7 0 1.6-.2 3.2-.2 4.9.2 33.3 7 65.7 19.9 94 5.7 12.4 5.2 26.6-.6 38.9 4.9 1.2 9.9 2.2 14.8 3.7 14.9 4.5 23.8 19.9 20.2 35.1-3.6 15.2-8.5 29.8-14.7 43.8-4 8.9 1.9 19.3 11.6 20.2 35.9 3.4 71.6 14.9 104.8 33.9 12.5 7.1 27.6-1.6 27.6-16 .2-38.2 8-75 23-107.7 4.3-8.7-1.8-19.1-11.5-20.1z\"],\n    \"home\": [576, 512, [], \"f015\", \"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"],\n    \"horse\": [576, 512, [], \"f6f0\", \"M575.92 76.6c-.01-8.13-3.02-15.87-8.58-21.8-3.78-4.03-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66C576.85 4.68 572.96 0 567.9 0H447.92c-70.69 0-128 57.31-128 128H160c-28.84 0-54.4 12.98-72 33.11V160c-48.53 0-88 39.47-88 88v56c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-56c0-13.22 6.87-24.39 16.78-31.68-.21 2.58-.78 5.05-.78 7.68 0 27.64 11.84 52.36 30.54 69.88l-25.72 68.6a63.945 63.945 0 0 0-2.16 37.99l24.85 99.41A15.982 15.982 0 0 0 107.02 512h65.96c10.41 0 18.05-9.78 15.52-19.88l-26.31-105.26 23.84-63.59L320 345.6V496c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V318.22c19.74-20.19 32-47.75 32-78.22 0-.22-.07-.42-.08-.64V136.89l16 7.11 18.9 37.7c7.45 14.87 25.05 21.55 40.49 15.37l32.55-13.02a31.997 31.997 0 0 0 20.12-29.74l-.06-77.71zm-64 19.4c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"],\n    \"horse-head\": [512, 512, [], \"f7ab\", \"M509.8 332.5l-69.9-164.3c-14.9-41.2-50.4-71-93-79.2 18-10.6 46.3-35.9 34.2-82.3-1.3-5-7.1-7.9-12-6.1L166.9 76.3C35.9 123.4 0 238.9 0 398.8V480c0 17.7 14.3 32 32 32h236.2c23.8 0 39.3-25 28.6-46.3L256 384v-.7c-45.6-3.5-84.6-30.7-104.3-69.6-1.6-3.1-.9-6.9 1.6-9.3l12.1-12.1c3.9-3.9 10.6-2.7 12.9 2.4 14.8 33.7 48.2 57.4 87.4 57.4 17.2 0 33-5.1 46.8-13.2l46 63.9c6 8.4 15.7 13.3 26 13.3h50.3c8.5 0 16.6-3.4 22.6-9.4l45.3-39.8c8.9-9.1 11.7-22.6 7.1-34.4zM328 224c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24z\"],\n    \"hospital\": [448, 512, [], \"f0f8\", \"M448 492v20H0v-20c0-6.627 5.373-12 12-12h20V120c0-13.255 10.745-24 24-24h88V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v72h88c13.255 0 24 10.745 24 24v360h20c6.627 0 12 5.373 12 12zM308 192h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-168 64h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm104 128h-40c-6.627 0-12 5.373-12 12v84h64v-84c0-6.627-5.373-12-12-12zm64-96h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-116 12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zM182 96h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6z\"],\n    \"hospital-alt\": [576, 512, [], \"f47d\", \"M544 96H416V32c0-17.7-14.3-32-32-32H192c-17.7 0-32 14.3-32 32v64H32c-17.7 0-32 14.3-32 32v368c0 8.8 7.2 16 16 16h544c8.8 0 16-7.2 16-16V128c0-17.7-14.3-32-32-32zM160 436c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm160 128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm16-170c0 3.3-2.7 6-6 6h-26v26c0 3.3-2.7 6-6 6h-20c-3.3 0-6-2.7-6-6v-26h-26c-3.3 0-6-2.7-6-6v-20c0-3.3 2.7-6 6-6h26V86c0-3.3 2.7-6 6-6h20c3.3 0 6 2.7 6 6v26h26c3.3 0 6 2.7 6 6v20zm144 298c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"],\n    \"hospital-symbol\": [512, 512, [], \"f47e\", \"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm112 376c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-88h-96v88c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V136c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v88h96v-88c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v240z\"],\n    \"hot-tub\": [512, 512, [], \"f593\", \"M414.21 177.65c1.02 8.21 7.75 14.35 15.75 14.35h16.12c9.51 0 17.08-8.57 16-18.35-4.34-39.11-22.4-74.53-50.13-97.16-17.37-14.17-28.82-36.75-31.98-62.15C378.96 6.14 372.22 0 364.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 31.97 62.14zm-108 0c1.02 8.21 7.75 14.35 15.75 14.35h16.12c9.51 0 17.08-8.57 16-18.35-4.34-39.11-22.4-74.53-50.13-97.16-17.37-14.17-28.82-36.75-31.98-62.15C270.96 6.14 264.22 0 256.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 31.97 62.14zM480 256H256l-110.93-83.2a63.99 63.99 0 0 0-38.4-12.8H64c-35.35 0-64 28.65-64 64v224c0 35.35 28.65 64 64 64h384c35.35 0 64-28.65 64-64V288c0-17.67-14.33-32-32-32zM128 440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zM64 128c35.35 0 64-28.65 64-64S99.35 0 64 0 0 28.65 0 64s28.65 64 64 64z\"],\n    \"hotdog\": [512, 512, [], \"f80f\", \"M488.56 23.44a80 80 0 0 0-113.12 0l-352 352a80 80 0 1 0 113.12 113.12l352-352a80 80 0 0 0 0-113.12zm-49.93 95.19c-19.6 19.59-37.52 22.67-51.93 25.14C373.76 146 364.4 147.6 352 160s-14 21.76-16.23 34.71c-2.48 14.4-5.55 32.33-25.15 51.92s-37.52 22.67-51.92 25.15C245.75 274 236.4 275.6 224 288s-14 21.75-16.23 34.7c-2.47 14.4-5.54 32.33-25.14 51.92s-37.53 22.68-51.93 25.15C117.76 402 108.4 403.6 96 416a16 16 0 0 1-22.63-22.63c19.6-19.59 37.52-22.67 51.92-25.14 13-2.22 22.3-3.82 34.71-16.23s14-21.75 16.22-34.7c2.48-14.4 5.55-32.33 25.15-51.92s37.52-22.67 51.92-25.14c13-2.22 22.3-3.83 34.7-16.23s14-21.76 16.24-34.71c2.47-14.4 5.54-32.33 25.14-51.92s37.52-22.68 51.92-25.15C394.24 110 403.59 108.41 416 96a16 16 0 0 1 22.63 22.63zM31.44 322.18L322.18 31.44l-11.54-11.55c-25-25-63.85-26.66-86.79-3.72L16.17 223.85c-22.94 22.94-21.27 61.79 3.72 86.78zm449.12-132.36L189.82 480.56l11.54 11.55c25 25 63.85 26.66 86.79 3.72l207.68-207.68c22.94-22.94 21.27-61.79-3.72-86.79z\"],\n    \"hotel\": [576, 512, [], \"f594\", \"M560 64c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h15.98v384H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h240v-80c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v80h240c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-16V64h16zm-304 44.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zm0 96c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zm-128-96c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zM179.2 256h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8zM192 384c0-53.02 42.98-96 96-96s96 42.98 96 96H192zm256-140.8c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4z\"],\n    \"hourglass\": [384, 512, [], \"f254\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64z\"],\n    \"hourglass-end\": [384, 512, [], \"f253\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64zM192 208c-57.787 0-104-66.518-104-144h208c0 77.945-46.51 144-104 144z\"],\n    \"hourglass-half\": [384, 512, [], \"f252\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-75.078 384H99.08c17.059-46.797 52.096-80 92.92-80 40.821 0 75.862 33.196 92.922 80zm.019-256H99.078C91.988 108.548 88 86.748 88 64h208c0 22.805-3.987 44.587-11.059 64z\"],\n    \"hourglass-start\": [384, 512, [], \"f251\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-64 448H88c0-77.458 46.204-144 104-144 57.786 0 104 66.517 104 144z\"],\n    \"house-damage\": [576, 512, [], \"f6f1\", \"M288 114.96L69.47 307.71c-1.62 1.46-3.69 2.14-5.47 3.35V496c0 8.84 7.16 16 16 16h149.23L192 439.19l104.11-64-60.16-119.22L384 392.75l-104.11 64L319.81 512H496c8.84 0 16-7.16 16-16V311.1c-1.7-1.16-3.72-1.82-5.26-3.2L288 114.96zm282.69 121.32L512 184.45V48c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v51.69L314.75 10.31C307.12 3.45 297.56.01 288 0s-19.1 3.41-26.7 10.27L5.31 236.28c-6.57 5.91-7.12 16.02-1.21 22.6l21.4 23.82c5.9 6.57 16.02 7.12 22.6 1.21L277.42 81.63c6.05-5.33 15.12-5.33 21.17 0L527.91 283.9c6.57 5.9 16.69 5.36 22.6-1.21l21.4-23.82c5.9-6.57 5.36-16.69-1.22-22.59z\"],\n    \"hryvnia\": [384, 512, [], \"f6f2\", \"M368 240c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-41.86c13.41-28.63 13.74-63.33-4.13-94.05C303.34 49.84 267.1 32 229.96 32h-78.82c-24.32 0-47.86 8.53-66.54 24.09L72.83 65.9c-10.18 8.49-11.56 23.62-3.07 33.8l20.49 24.59c8.49 10.19 23.62 11.56 33.81 3.07l11.73-9.78c4.32-3.6 9.77-5.57 15.39-5.57h83.62c11.69 0 21.2 9.52 21.2 21.2 0 5.91-2.48 11.58-6.81 15.58L219.7 176H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h134.37l-34.67 32H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h41.86c-13.41 28.63-13.74 63.33 4.13 94.05C80.66 462.15 116.9 480 154.04 480h78.82c24.32 0 47.86-8.53 66.54-24.09l11.77-9.81c10.18-8.49 11.56-23.62 3.07-33.8l-20.49-24.59c-8.49-10.19-23.62-11.56-33.81-3.07l-11.75 9.8a23.992 23.992 0 0 1-15.36 5.56H149.2c-11.69 0-21.2-9.52-21.2-21.2 0-5.91 2.48-11.58 6.81-15.58L164.3 336H368c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H233.63l34.67-32H368z\"],\n    \"i-cursor\": [256, 512, [], \"f246\", \"M256 52.048V12.065C256 5.496 250.726.148 244.158.066 211.621-.344 166.469.011 128 37.959 90.266.736 46.979-.114 11.913.114 5.318.157 0 5.519 0 12.114v39.645c0 6.687 5.458 12.078 12.145 11.998C38.111 63.447 96 67.243 96 112.182V224H60c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h36v112c0 44.932-56.075 48.031-83.95 47.959C5.404 447.942 0 453.306 0 459.952v39.983c0 6.569 5.274 11.917 11.842 11.999 32.537.409 77.689.054 116.158-37.894 37.734 37.223 81.021 38.073 116.087 37.845 6.595-.043 11.913-5.405 11.913-12V460.24c0-6.687-5.458-12.078-12.145-11.998C217.889 448.553 160 444.939 160 400V288h36c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-36V112.182c0-44.932 56.075-48.213 83.95-48.142 6.646.018 12.05-5.346 12.05-11.992z\"],\n    \"ice-cream\": [448, 512, [], \"f810\", \"M368 160h-.94a144 144 0 1 0-286.12 0H80a48 48 0 0 0 0 96h288a48 48 0 0 0 0-96zM195.38 493.69a31.52 31.52 0 0 0 57.24 0L352 288H96z\"],\n    \"icicles\": [512, 512, [], \"f7ad\", \"M511.4 37.9C515.1 18.2 500 0 480 0H32C10.6 0-4.8 20.7 1.4 41.2l87.1 273.4c2.5 7.2 12.7 7.2 15.1 0L140 190.5l44.2 187.3c1.9 8.3 13.7 8.3 15.6 0l46.5-196.9 34.1 133.4c2.3 7.6 13 7.6 15.3 0l45.8-172.5 66.7 363.8c1.7 8.6 14 8.6 15.7 0l87.5-467.7z\"],\n    \"id-badge\": [384, 512, [], \"f2c1\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM144 32h96c8.8 0 16 7.2 16 16s-7.2 16-16 16h-96c-8.8 0-16-7.2-16-16s7.2-16 16-16zm48 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 416 80 407.4 80 396.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"],\n    \"id-card\": [576, 512, [], \"f2c2\", \"M528 32H48C21.5 32 0 53.5 0 80v16h576V80c0-26.5-21.5-48-48-48zM0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V128H0v304zm352-232c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zM176 192c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zM67.1 396.2C75.5 370.5 99.6 352 128 352h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.9-5.2 19.8-15.6 19.8H82.7c-10.4 0-18.8-10-15.6-19.8z\"],\n    \"id-card-alt\": [576, 512, [], \"f47f\", \"M528 64H384v96H192V64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM288 224c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm93.3 224H194.7c-10.4 0-18.8-10-15.6-19.8 8.3-25.6 32.4-44.2 60.9-44.2h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.8-5.2 19.8-15.6 19.8zM352 32c0-17.7-14.3-32-32-32h-64c-17.7 0-32 14.3-32 32v96h128V32z\"],\n    \"igloo\": [576, 512, [], \"f7ae\", \"M320 33.9c-10.5-1.2-21.2-1.9-32-1.9-99.8 0-187.8 50.8-239.4 128H320V33.9zM96 192H30.3C11.1 230.6 0 274 0 320h96V192zM352 39.4V160h175.4C487.2 99.9 424.8 55.9 352 39.4zM480 320h96c0-46-11.1-89.4-30.3-128H480v128zm-64 64v96h128c17.7 0 32-14.3 32-32v-96H411.5c2.6 10.3 4.5 20.9 4.5 32zm32-192H128v128h49.8c22.2-38.1 63-64 110.2-64s88 25.9 110.2 64H448V192zM0 448c0 17.7 14.3 32 32 32h128v-96c0-11.1 1.9-21.7 4.5-32H0v96zm288-160c-53 0-96 43-96 96v96h192v-96c0-53-43-96-96-96z\"],\n    \"image\": [512, 512, [], \"f03e\", \"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z\"],\n    \"images\": [576, 512, [], \"f302\", \"M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v208c0 44.112 35.888 80 80 80h336zm96-80V80c0-26.51-21.49-48-48-48H144c-26.51 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h384c26.51 0 48-21.49 48-48zM256 128c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-96 144l55.515-55.515c4.686-4.686 12.284-4.686 16.971 0L272 256l135.515-135.515c4.686-4.686 12.284-4.686 16.971 0L512 208v112H160v-48z\"],\n    \"inbox\": [576, 512, [], \"f01c\", \"M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z\"],\n    \"indent\": [448, 512, [], \"f03c\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm176 144h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm-52.687-111.313l-96-95.984C17.266 138.652 0 145.776 0 160.016v191.975c0 14.329 17.325 21.304 27.313 11.313l96-95.992c6.249-6.247 6.249-16.377 0-22.625z\"],\n    \"industry\": [512, 512, [], \"f275\", \"M475.115 163.781L336 252.309v-68.28c0-18.916-20.931-30.399-36.885-20.248L160 252.309V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h464c13.255 0 24-10.745 24-24V184.029c0-18.917-20.931-30.399-36.885-20.248z\"],\n    \"infinity\": [640, 512, [], \"f534\", \"M471.1 96C405 96 353.3 137.3 320 174.6 286.7 137.3 235 96 168.9 96 75.8 96 0 167.8 0 256s75.8 160 168.9 160c66.1 0 117.8-41.3 151.1-78.6 33.3 37.3 85 78.6 151.1 78.6 93.1 0 168.9-71.8 168.9-160S564.2 96 471.1 96zM168.9 320c-40.2 0-72.9-28.7-72.9-64s32.7-64 72.9-64c38.2 0 73.4 36.1 94 64-20.4 27.6-55.9 64-94 64zm302.2 0c-38.2 0-73.4-36.1-94-64 20.4-27.6 55.9-64 94-64 40.2 0 72.9 28.7 72.9 64s-32.7 64-72.9 64z\"],\n    \"info\": [192, 512, [], \"f129\", \"M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z\"],\n    \"info-circle\": [512, 512, [], \"f05a\", \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"],\n    \"italic\": [320, 512, [], \"f033\", \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"],\n    \"jedi\": [544, 512, [], \"f669\", \"M479.99 352l58.88-58.87c3.29-16.8 5.13-34.12 5.13-51.86 0-5.81-.68-11.51-1.05-17.27H496l41.25-41.24c-14.5-64.79-52.43-123.05-107.91-162.27-2.77-1.96-5.97-2.99-9.25-2.99-5.37 0-10.41 2.71-13.49 7.24-3.05 4.49-3.64 9.99-1.61 15.09 6.55 16.46 9.86 33.73 9.86 51.31 0 45.12-21.03 86.57-57.69 113.73-4.02 2.98-6.46 7.5-6.7 12.4-.24 4.92 1.76 9.66 5.49 13.03 32.93 29.75 47.35 73.51 38.57 117.07-9.74 48.35-48.84 87.1-97.31 96.5l-2.5-65.34L321.88 397c2.98 2.06 7.39 1.69 10.02-.8a8.002 8.002 0 0 0 1.34-9.92l-20.11-33.73 42.07-8.72c3.7-.75 6.38-4.05 6.38-7.83 0-3.77-2.69-7.06-6.38-7.83l-42.07-8.73 20.13-33.77c1.92-3.23 1.34-7.31-1.38-9.91-2.7-2.55-6.97-2.89-10-.8l-30.39 20.67L279.96 7.7a7.964 7.964 0 0 0-8-7.7c-4.33 0-7.84 3.38-8 7.67l-11.52 287.97-30.39-20.66c-3.14-2.12-7.27-1.83-10 .78-2.72 2.59-3.3 6.67-1.36 9.94l20.11 33.73-42.07 8.73c-3.7.75-6.38 4.05-6.38 7.83s2.67 7.08 6.38 7.83l42.07 8.72-20.13 33.77c-1.92 3.23-1.34 7.33 1.39 9.94 2.59 2.45 7.03 2.75 10 .75l27.16-18.48-2.5 65.26c-56.94-11.64-99.89-61.89-99.89-121.92 0-35.08 14.62-67.6 41.17-91.58 3.72-3.36 5.72-8.11 5.48-13.01-.24-4.9-2.68-9.41-6.69-12.38-36.67-27.16-57.71-68.62-57.71-113.74 0-17.56 3.31-34.81 9.84-51.26 2.02-5.09 1.43-10.59-1.62-15.09-3.08-4.54-8.13-7.25-13.51-7.25-3.3 0-6.5 1.04-9.27 3-55.87 39.52-93.6 97.37-107.97 162.07L47.93 224H.72c-.63 9.92-.97 19.91-.5 29.99.62 13.43 2.54 26.53 5.11 39.41l58.6 58.6H24.02c41.25 90.23 131.13 154.94 235.1 159.71 4.3.2 8.59.29 12.85.29 110.34 0 205.35-65.83 247.98-160h-39.96z\"],\n    \"joint\": [640, 512, [], \"f595\", \"M444.34 181.1c22.38 15.68 35.66 41.16 35.66 68.59V280c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-30.31c0-43.24-21.01-83.41-56.34-108.06C463.85 125.02 448 99.34 448 70.31V8c0-4.42-3.58-8-8-8h-48c-4.42 0-8 3.58-8 8v66.4c0 43.69 24.56 81.63 60.34 106.7zM194.97 358.98C126.03 370.07 59.69 394.69 0 432c83.65 52.28 180.3 80 278.94 80h88.57L254.79 380.49c-14.74-17.2-37.45-25.11-59.82-21.51zM553.28 87.09c-5.67-3.8-9.28-9.96-9.28-16.78V8c0-4.42-3.58-8-8-8h-48c-4.42 0-8 3.58-8 8v62.31c0 22.02 10.17 43.41 28.64 55.39C550.79 153.04 576 199.54 576 249.69V280c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-30.31c0-65.44-32.41-126.19-86.72-162.6zM360.89 352.05c-34.4.06-86.81.15-88.21.17l117.8 137.43A63.987 63.987 0 0 0 439.07 512h88.45L409.57 374.4a63.955 63.955 0 0 0-48.68-22.35zM616 352H432l117.99 137.65A63.987 63.987 0 0 0 598.58 512H616c13.25 0 24-10.75 24-24V376c0-13.26-10.75-24-24-24z\"],\n    \"journal-whills\": [448, 512, [], \"f66a\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM133.08 144.39l21.26 21.26c1.56 1.56 3.61 2.34 5.66 2.34s4.09-.78 5.66-2.34c3.12-3.12 3.12-8.19 0-11.31l-26.42-26.42c10-20.9 26.24-37.97 46.37-49.26C179.62 88.4 176 99.74 176 112c0 19.96 9.33 37.57 23.66 49.31C190.01 171.37 184 184.96 184 200c0 26.94 19.04 49.4 44.38 54.76l1.36-32.71-10.37 7.04c-.69.45-1.47.69-2.25.69-1 0-1.98-.38-2.75-1.09a4.006 4.006 0 0 1-.69-4.95l8.54-14.31-17.91-3.72c-1.86-.39-3.19-2.03-3.19-3.92s1.33-3.53 3.19-3.92l17.91-3.72-8.54-14.31c-.95-1.61-.67-3.67.69-4.95 1.36-1.3 3.44-1.44 5-.41l12.01 8.16L236 71.83c.09-2.14 1.86-3.83 4-3.83s3.91 1.69 4 3.83l4.68 112.29 14.2-9.65a4.067 4.067 0 0 1 5 .41 4.006 4.006 0 0 1 .69 4.95l-8.54 14.31 17.91 3.72c1.86.39 3.19 2.03 3.19 3.92s-1.33 3.53-3.19 3.92l-17.91 3.72 8.54 14.31c.95 1.61.67 3.67-.69 4.95-.77.72-1.77 1.09-2.75 1.09-.78 0-1.56-.23-2.25-.69l-12.68-8.62 1.43 34.28C276.96 249.4 296 226.94 296 200c0-15.04-6.01-28.63-15.66-38.69C294.67 149.57 304 131.96 304 112c0-12.26-3.62-23.6-9.6-33.33 20.13 11.28 36.37 28.36 46.37 49.26l-26.42 26.42c-3.12 3.12-3.12 8.19 0 11.31 1.56 1.56 3.61 2.34 5.66 2.34s4.09-.78 5.66-2.34l21.26-21.26c2.97 10.08 5.07 20.55 5.07 31.6 0 .52-.14.99-.15 1.51l-37.11 32.47a7.975 7.975 0 0 0-.75 11.28 7.97 7.97 0 0 0 6.02 2.73c1.88 0 3.75-.66 5.27-1.98l23.59-20.64C337.32 250.96 293.09 288 240 288s-97.32-37.04-108.86-86.62l23.59 20.64A7.957 7.957 0 0 0 160 224c2.22 0 4.44-.92 6.02-2.73 2.92-3.33 2.58-8.38-.75-11.28l-37.11-32.47c-.01-.52-.15-.99-.15-1.51-.01-11.06 2.09-21.53 5.07-31.62zM380.8 448H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"],\n    \"kaaba\": [576, 512, [], \"f66b\", \"M554.12 83.51L318.36 4.93a95.962 95.962 0 0 0-60.71 0L21.88 83.51A32.006 32.006 0 0 0 0 113.87v49.01l265.02-79.51c15.03-4.5 30.92-4.5 45.98 0l265 79.51v-49.01c0-13.77-8.81-26-21.88-30.36zm-279.9 30.52L0 196.3v228.38c0 15 10.42 27.98 25.06 31.24l242.12 53.8a95.937 95.937 0 0 0 41.65 0l242.12-53.8c14.64-3.25 25.06-16.24 25.06-31.24V196.29l-274.2-82.26c-9.04-2.72-18.59-2.72-27.59 0zM128 230.11c0 3.61-2.41 6.77-5.89 7.72l-80 21.82C37.02 261.03 32 257.2 32 251.93v-16.58c0-3.61 2.41-6.77 5.89-7.72l80-21.82c5.09-1.39 10.11 2.44 10.11 7.72v16.58zm144-39.28c0 3.61-2.41 6.77-5.89 7.72l-96 26.18c-5.09 1.39-10.11-2.44-10.11-7.72v-16.58c0-3.61 2.41-6.77 5.89-7.72l96-26.18c5.09-1.39 10.11 2.44 10.11 7.72v16.58zm176 22.7c0-5.28 5.02-9.11 10.11-7.72l80 21.82c3.48.95 5.89 4.11 5.89 7.72v16.58c0 5.28-5.02 9.11-10.11 7.72l-80-21.82a7.997 7.997 0 0 1-5.89-7.72v-16.58zm-144-39.27c0-5.28 5.02-9.11 10.11-7.72l96 26.18c3.48.95 5.89 4.11 5.89 7.72v16.58c0 5.28-5.02 9.11-10.11 7.72l-96-26.18a7.997 7.997 0 0 1-5.89-7.72v-16.58z\"],\n    \"key\": [512, 512, [], \"f084\", \"M512 176.001C512 273.203 433.202 352 336 352c-11.22 0-22.19-1.062-32.827-3.069l-24.012 27.014A23.999 23.999 0 0 1 261.223 384H224v40c0 13.255-10.745 24-24 24h-40v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-78.059c0-6.365 2.529-12.47 7.029-16.971l161.802-161.802C163.108 213.814 160 195.271 160 176 160 78.798 238.797.001 335.999 0 433.488-.001 512 78.511 512 176.001zM336 128c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48-48 21.49-48 48z\"],\n    \"keyboard\": [576, 512, [], \"f11c\", \"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"],\n    \"khanda\": [512, 512, [], \"f66d\", \"M415.81 66c-6.37-3.5-14.37-2.33-19.36 3.02a15.974 15.974 0 0 0-1.91 19.52c16.49 26.16 25.2 56.39 25.2 87.41-.19 53.25-26.77 102.69-71.27 132.41l-76.63 53.35v-20.1l44.05-36.09c3.92-4.2 5-10.09 2.81-15.28L310.85 273c33.84-19.26 56.94-55.25 56.94-96.99 0-40.79-22.02-76.13-54.59-95.71l5.22-11.44c2.34-5.53.93-11.83-3.57-16.04L255.86 0l-58.99 52.81c-4.5 4.21-5.9 10.51-3.57 16.04l5.22 11.44c-32.57 19.58-54.59 54.93-54.59 95.72 0 41.75 23.09 77.73 56.94 96.99l-7.85 17.24c-2.19 5.18-1.1 11.07 2.81 15.28l44.05 36.09v19.9l-76.59-53.33C119.02 278.62 92.44 229.19 92.26 176c0-31.08 8.71-61.31 25.2-87.47 3.87-6.16 2.4-13.77-2.59-19.08-5-5.34-13.68-6.2-20.02-2.7C16.32 109.6-22.3 205.3 13.36 295.99c7.07 17.99 17.89 34.38 30.46 49.06l55.97 65.36c4.87 5.69 13.04 7.24 19.65 3.72l79.35-42.23L228 392.23l-47.08 32.78c-1.67-.37-3.23-1.01-5.01-1.01-13.25 0-23.99 10.74-23.99 24 0 13.25 10.74 24 23.99 24 12.1 0 21.69-9.11 23.33-20.76l40.63-28.28v29.95c-9.39 5.57-15.99 15.38-15.99 27.1 0 17.67 14.32 32 31.98 32s31.98-14.33 31.98-32c0-11.71-6.61-21.52-15.99-27.1v-30.15l40.91 28.48C314.41 462.89 324 472 336.09 472c13.25 0 23.99-10.75 23.99-24 0-13.26-10.74-24-23.99-24-1.78 0-3.34.64-5.01 1.01L284 392.23l29.21-20.34 79.35 42.23c6.61 3.52 14.78 1.97 19.65-3.71l52.51-61.31c18.87-22.02 34-47.5 41.25-75.59 21.62-83.66-16.45-167.27-90.16-207.51zm-95.99 110c0 22.3-11.49 41.92-28.83 53.38l-5.65-12.41c-8.75-24.52-8.75-51.04 0-75.56l7.83-17.18c16.07 11.65 26.65 30.45 26.65 51.77zm-127.93 0c0-21.32 10.58-40.12 26.66-51.76l7.83 17.18c8.75 24.52 8.75 51.03 0 75.56l-5.65 12.41c-17.34-11.46-28.84-31.09-28.84-53.39z\"],\n    \"kiss\": [496, 512, [], \"f596\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm136 156c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C290.6 368.7 304 383 304 396zm24-156c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"kiss-beam\": [496, 512, [], \"f597\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-39 219.9l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.5 8.5-10.9 12-15.1 4.5zM304 396c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C290.6 368.7 304 383 304 396zm65-168.1l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.5 8.5-10.9 12-15.1 4.5z\"],\n    \"kiss-wink-heart\": [504, 512, [], \"f598\", \"M501.1 402.5c-8-20.8-31.5-31.5-53.1-25.9l-8.4 2.2-2.3-8.4c-5.9-21.4-27-36.5-49-33-25.2 4-40.6 28.6-34 52.6l22.9 82.6c1.5 5.3 7 8.5 12.4 7.1l83-21.5c24.1-6.3 37.7-31.8 28.5-55.7zm-177.6-4c-5.6-20.3-2.3-42 9-59.7 29.7-46.3 98.7-45.5 127.8 4.3 6.4.1 12.6 1.4 18.6 2.9 10.9-27.9 17.1-58.2 17.1-90C496 119 385 8 248 8S0 119 0 256s111 248 248 248c35.4 0 68.9-7.5 99.4-20.9-.3-.7-23.9-84.6-23.9-84.6zM168 240c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm120 156c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-5.7-12.3 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.8-3.7-4.6-16.6 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C274.6 368.7 288 383 288 396zm16-179c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S400 181 404 206.2c1.7 11.1-11.3 18.3-19.8 10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L304 217z\"],\n    \"kiwi-bird\": [576, 512, [], \"f535\", \"M575.81 217.98C572.64 157.41 518.28 112 457.63 112h-9.37c-52.82 0-104.25-16.25-147.74-46.24-41.99-28.96-96.04-41.62-153.21-28.7C129.3 41.12-.08 78.24 0 224c.04 70.95 38.68 132.8 95.99 166.01V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-54.26c15.36 3.96 31.4 6.26 48 6.26 5.44 0 10.68-.73 16-1.18V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-59.43c14.24-5.06 27.88-11.39 40.34-19.51C342.07 355.25 393.86 336 448.46 336c25.48 0 16.01-.31 23.05-.78l74.41 136.44c2.86 5.23 8.3 8.34 14.05 8.34 1.31 0 2.64-.16 3.95-.5 7.09-1.8 12.05-8.19 12.05-15.5 0 0 .14-240.24-.16-246.02zM463.97 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm80 153.25l-39.86-73.08c15.12-5.83 28.73-14.6 39.86-25.98v99.06z\"],\n    \"landmark\": [512, 512, [], \"f66f\", \"M501.62 92.11L267.24 2.04a31.958 31.958 0 0 0-22.47 0L10.38 92.11A16.001 16.001 0 0 0 0 107.09V144c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-36.91c0-6.67-4.14-12.64-10.38-14.98zM64 192v160H48c-8.84 0-16 7.16-16 16v48h448v-48c0-8.84-7.16-16-16-16h-16V192h-64v160h-96V192h-64v160h-96V192H64zm432 256H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"language\": [640, 512, [], \"f1ab\", \"M152.1 236.2c-3.5-12.1-7.8-33.2-7.8-33.2h-.5s-4.3 21.1-7.8 33.2l-11.1 37.5H163zM616 96H336v320h280c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm-24 120c0 6.6-5.4 12-12 12h-11.4c-6.9 23.6-21.7 47.4-42.7 69.9 8.4 6.4 17.1 12.5 26.1 18 5.5 3.4 7.3 10.5 4.1 16.2l-7.9 13.9c-3.4 5.9-10.9 7.8-16.7 4.3-12.6-7.8-24.5-16.1-35.4-24.9-10.9 8.7-22.7 17.1-35.4 24.9-5.8 3.5-13.3 1.6-16.7-4.3l-7.9-13.9c-3.2-5.6-1.4-12.8 4.2-16.2 9.3-5.7 18-11.7 26.1-18-7.9-8.4-14.9-17-21-25.7-4-5.7-2.2-13.6 3.7-17.1l6.5-3.9 7.3-4.3c5.4-3.2 12.4-1.7 16 3.4 5 7 10.8 14 17.4 20.9 13.5-14.2 23.8-28.9 30-43.2H412c-6.6 0-12-5.4-12-12v-16c0-6.6 5.4-12 12-12h64v-16c0-6.6 5.4-12 12-12h16c6.6 0 12 5.4 12 12v16h64c6.6 0 12 5.4 12 12zM0 120v272c0 13.3 10.7 24 24 24h280V96H24c-13.3 0-24 10.7-24 24zm58.9 216.1L116.4 167c1.7-4.9 6.2-8.1 11.4-8.1h32.5c5.1 0 9.7 3.3 11.4 8.1l57.5 169.1c2.6 7.8-3.1 15.9-11.4 15.9h-22.9a12 12 0 0 1-11.5-8.6l-9.4-31.9h-60.2l-9.1 31.8c-1.5 5.1-6.2 8.7-11.5 8.7H70.3c-8.2 0-14-8.1-11.4-15.9z\"],\n    \"laptop\": [640, 512, [], \"f109\", \"M624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"],\n    \"laptop-code\": [640, 512, [], \"f5fc\", \"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"],\n    \"laptop-medical\": [640, 512, [], \"f812\", \"M232 224h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8zM576 48a48.14 48.14 0 0 0-48-48H112a48.14 48.14 0 0 0-48 48v336h512zm-64 272H128V64h384zm112 96H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33-17.47-32.77-32H16a16 16 0 0 0-16 16v16a64.19 64.19 0 0 0 64 64h512a64.19 64.19 0 0 0 64-64v-16a16 16 0 0 0-16-16z\"],\n    \"laugh\": [496, 512, [], \"f599\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 152c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm88 272h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18-8.9 71-69.5 126-142.9 126z\"],\n    \"laugh-beam\": [496, 512, [], \"f59a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm24 199.4c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.8 4.1-15.1-4.5zm-160 0c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.3 7.4-15.8 4-15.1-4.5zM398.9 306C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"],\n    \"laugh-squint\": [496, 512, [], \"f59b\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 161.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 180l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM398.9 306C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"],\n    \"laugh-wink\": [496, 512, [], \"f59c\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm20.1 198.1c4-25.2 34.2-42.1 59.9-42.1s55.9 16.9 59.9 42.1c1.7 11.1-11.4 18.3-19.8 10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L288 217c-8.4 7.4-21.6.3-19.9-10.9zM168 160c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm230.9 146C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"],\n    \"layer-group\": [512, 512, [], \"f5fd\", \"M12.41 148.02l232.94 105.67c6.8 3.09 14.49 3.09 21.29 0l232.94-105.67c16.55-7.51 16.55-32.52 0-40.03L266.65 2.31a25.607 25.607 0 0 0-21.29 0L12.41 107.98c-16.55 7.51-16.55 32.53 0 40.04zm487.18 88.28l-58.09-26.33-161.64 73.27c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.51 209.97l-58.1 26.33c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 276.3c16.55-7.5 16.55-32.5 0-40zm0 127.8l-57.87-26.23-161.86 73.37c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.29 337.87 12.41 364.1c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 404.1c16.55-7.5 16.55-32.5 0-40z\"],\n    \"leaf\": [576, 512, [], \"f06c\", \"M546.2 9.7c-5.6-12.5-21.6-13-28.3-1.2C486.9 62.4 431.4 96 368 96h-80C182 96 96 182 96 288c0 7 .8 13.7 1.5 20.5C161.3 262.8 253.4 224 384 224c8.8 0 16 7.2 16 16s-7.2 16-16 16C132.6 256 26 410.1 2.4 468c-6.6 16.3 1.2 34.9 17.5 41.6 16.4 6.8 35-1.1 41.8-17.3 1.5-3.6 20.9-47.9 71.9-90.6 32.4 43.9 94 85.8 174.9 77.2C465.5 467.5 576 326.7 576 154.3c0-50.2-10.8-102.2-29.8-144.6z\"],\n    \"lemon\": [512, 512, [], \"f094\", \"M489.038 22.963C465.944-.13 434.648-5.93 413.947 6.129c-58.906 34.312-181.25-53.077-321.073 86.746S40.441 355.041 6.129 413.945c-12.059 20.702-6.26 51.999 16.833 75.093 23.095 23.095 54.392 28.891 75.095 16.832 58.901-34.31 181.246 53.079 321.068-86.743S471.56 156.96 505.871 98.056c12.059-20.702 6.261-51.999-16.833-75.093zM243.881 95.522c-58.189 14.547-133.808 90.155-148.358 148.358-1.817 7.27-8.342 12.124-15.511 12.124-1.284 0-2.59-.156-3.893-.481-8.572-2.144-13.784-10.83-11.642-19.403C81.901 166.427 166.316 81.93 236.119 64.478c8.575-2.143 17.261 3.069 19.403 11.642s-3.069 17.259-11.641 19.402z\"],\n    \"less-than\": [384, 512, [], \"f536\", \"M365.46 357.74L147.04 255.89l218.47-101.88c16.02-7.47 22.95-26.51 15.48-42.53l-13.52-29C360 66.46 340.96 59.53 324.94 67L18.48 209.91a32.014 32.014 0 0 0-18.48 29v34.24c0 12.44 7.21 23.75 18.48 29l306.31 142.83c16.06 7.49 35.15.54 42.64-15.52l13.56-29.08c7.49-16.06.54-35.15-15.53-42.64z\"],\n    \"less-than-equal\": [448, 512, [], \"f537\", \"M54.98 214.2l301.41 119.87c18.39 6.03 38.71-2.54 45.38-19.15l12.09-30.08c6.68-16.61-2.82-34.97-21.21-41l-175.44-68.05 175.56-68.09c18.29-6 27.74-24.27 21.1-40.79l-12.03-29.92c-6.64-16.53-26.86-25.06-45.15-19.06L54.98 137.89C41.21 142.41 32 154.5 32 168.07v15.96c0 13.56 9.21 25.65 22.98 30.17zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"],\n    \"level-down-alt\": [320, 512, [], \"f3be\", \"M313.553 392.331L209.587 504.334c-9.485 10.214-25.676 10.229-35.174 0L70.438 392.331C56.232 377.031 67.062 352 88.025 352H152V80H68.024a11.996 11.996 0 0 1-8.485-3.515l-56-56C-4.021 12.926 1.333 0 12.024 0H208c13.255 0 24 10.745 24 24v328h63.966c20.878 0 31.851 24.969 17.587 40.331z\"],\n    \"level-up-alt\": [320, 512, [], \"f3bf\", \"M313.553 119.669L209.587 7.666c-9.485-10.214-25.676-10.229-35.174 0L70.438 119.669C56.232 134.969 67.062 160 88.025 160H152v272H68.024a11.996 11.996 0 0 0-8.485 3.515l-56 56C-4.021 499.074 1.333 512 12.024 512H208c13.255 0 24-10.745 24-24V160h63.966c20.878 0 31.851-24.969 17.587-40.331z\"],\n    \"life-ring\": [512, 512, [], \"f1cd\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm173.696 119.559l-63.399 63.399c-10.987-18.559-26.67-34.252-45.255-45.255l63.399-63.399a218.396 218.396 0 0 1 45.255 45.255zM256 352c-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96-42.981 96-96 96zM127.559 82.304l63.399 63.399c-18.559 10.987-34.252 26.67-45.255 45.255l-63.399-63.399a218.372 218.372 0 0 1 45.255-45.255zM82.304 384.441l63.399-63.399c10.987 18.559 26.67 34.252 45.255 45.255l-63.399 63.399a218.396 218.396 0 0 1-45.255-45.255zm302.137 45.255l-63.399-63.399c18.559-10.987 34.252-26.67 45.255-45.255l63.399 63.399a218.403 218.403 0 0 1-45.255 45.255z\"],\n    \"lightbulb\": [352, 512, [], \"f0eb\", \"M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"],\n    \"link\": [512, 512, [], \"f0c1\", \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"],\n    \"lira-sign\": [384, 512, [], \"f195\", \"M371.994 256h-48.019C317.64 256 312 260.912 312 267.246 312 368 230.179 416 144 416V256.781l134.603-29.912A12 12 0 0 0 288 215.155v-40.976c0-7.677-7.109-13.38-14.603-11.714L144 191.219V160.78l134.603-29.912A12 12 0 0 0 288 119.154V78.179c0-7.677-7.109-13.38-14.603-11.714L144 95.219V44c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v68.997L9.397 125.131A12 12 0 0 0 0 136.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 178.558v30.439L9.397 221.131A12 12 0 0 0 0 232.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 274.558V468c0 6.627 5.373 12 12 12h79.583c134.091 0 223.255-77.834 228.408-211.592.261-6.782-5.211-12.408-11.997-12.408z\"],\n    \"list\": [512, 512, [], \"f03a\", \"M128 116V76c0-8.837 7.163-16 16-16h352c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H144c-8.837 0-16-7.163-16-16zm16 176h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 144h64c8.837 0 16-7.163 16-16V64c0-8.837-7.163-16-16-16H16C7.163 48 0 55.163 0 64v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16z\"],\n    \"list-alt\": [512, 512, [], \"f022\", \"M464 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM128 120c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm288-136v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12z\"],\n    \"list-ol\": [512, 512, [], \"f0cb\", \"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n    \"list-ul\": [512, 512, [], \"f0ca\", \"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n    \"location-arrow\": [512, 512, [], \"f124\", \"M444.52 3.52L28.74 195.42c-47.97 22.39-31.98 92.75 19.19 92.75h175.91v175.91c0 51.17 70.36 67.17 92.75 19.19l191.9-415.78c15.99-38.39-25.59-79.97-63.97-63.97z\"],\n    \"lock\": [448, 512, [], \"f023\", \"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\"],\n    \"lock-open\": [576, 512, [], \"f3c1\", \"M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z\"],\n    \"long-arrow-alt-down\": [256, 512, [], \"f309\", \"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"],\n    \"long-arrow-alt-left\": [448, 512, [], \"f30a\", \"M134.059 296H436c6.627 0 12-5.373 12-12v-56c0-6.627-5.373-12-12-12H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.569 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296z\"],\n    \"long-arrow-alt-right\": [448, 512, [], \"f30b\", \"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\"],\n    \"long-arrow-alt-up\": [256, 512, [], \"f30c\", \"M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z\"],\n    \"low-vision\": [576, 512, [], \"f2a8\", \"M569.344 231.631C512.96 135.949 407.81 72 288 72c-28.468 0-56.102 3.619-82.451 10.409L152.778 10.24c-7.601-10.858-22.564-13.5-33.423-5.9l-13.114 9.178c-10.86 7.601-13.502 22.566-5.9 33.426l43.131 58.395C89.449 131.73 40.228 174.683 6.682 231.581c-.01.017-.023.033-.034.05-8.765 14.875-8.964 33.528 0 48.739 38.5 65.332 99.742 115.862 172.859 141.349L55.316 244.302A272.194 272.194 0 0 1 83.61 208.39l119.4 170.58h.01l40.63 58.04a330.055 330.055 0 0 0 78.94 1.17l-189.98-271.4a277.628 277.628 0 0 1 38.777-21.563l251.836 356.544c7.601 10.858 22.564 13.499 33.423 5.9l13.114-9.178c10.86-7.601 13.502-22.567 5.9-33.426l-43.12-58.377-.007-.009c57.161-27.978 104.835-72.04 136.81-126.301a47.938 47.938 0 0 0 .001-48.739zM390.026 345.94l-19.066-27.23c24.682-32.567 27.711-76.353 8.8-111.68v.03c0 23.65-19.17 42.82-42.82 42.82-23.828 0-42.82-19.349-42.82-42.82 0-23.65 19.17-42.82 42.82-42.82h.03c-24.75-13.249-53.522-15.643-79.51-7.68l-19.068-27.237C253.758 123.306 270.488 120 288 120c75.162 0 136 60.826 136 136 0 34.504-12.833 65.975-33.974 89.94z\"],\n    \"luggage-cart\": [640, 512, [], \"f59d\", \"M224 320h32V96h-32c-17.67 0-32 14.33-32 32v160c0 17.67 14.33 32 32 32zm352-32V128c0-17.67-14.33-32-32-32h-32v224h32c17.67 0 32-14.33 32-32zm48 96H128V16c0-8.84-7.16-16-16-16H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h48v368c0 8.84 7.16 16 16 16h82.94c-1.79 5.03-2.94 10.36-2.94 16 0 26.51 21.49 48 48 48s48-21.49 48-48c0-5.64-1.15-10.97-2.94-16h197.88c-1.79 5.03-2.94 10.36-2.94 16 0 26.51 21.49 48 48 48s48-21.49 48-48c0-5.64-1.15-10.97-2.94-16H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM480 96V48c0-26.51-21.49-48-48-48h-96c-26.51 0-48 21.49-48 48v272h192V96zm-48 0h-96V48h96v48z\"],\n    \"magic\": [512, 512, [], \"f0d0\", \"M224 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32zM80 160l26.66-53.33L160 80l-53.34-26.67L80 0 53.34 53.33 0 80l53.34 26.67L80 160zm352 128l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368l-53.34-26.67L432 288zm70.62-193.77L417.77 9.38C411.53 3.12 403.34 0 395.15 0c-8.19 0-16.38 3.12-22.63 9.38L9.38 372.52c-12.5 12.5-12.5 32.76 0 45.25l84.85 84.85c6.25 6.25 14.44 9.37 22.62 9.37 8.19 0 16.38-3.12 22.63-9.37l363.14-363.15c12.5-12.48 12.5-32.75 0-45.24zM359.45 203.46l-50.91-50.91 86.6-86.6 50.91 50.91-86.6 86.6z\"],\n    \"magnet\": [512, 512, [], \"f076\", \"M164.07 148.1H12a12 12 0 0 1-12-12v-80a36 36 0 0 1 36-36h104a36 36 0 0 1 36 36v80a11.89 11.89 0 0 1-11.93 12zm347.93-12V56a36 36 0 0 0-36-36H372a36 36 0 0 0-36 36v80a12 12 0 0 0 12 12h152a11.89 11.89 0 0 0 12-11.9zm-164 44a12 12 0 0 0-12 12v52c0 128.1-160 127.9-160 0v-52a12 12 0 0 0-12-12H12.1a12 12 0 0 0-12 12.1c.1 21.4.6 40.3 0 53.3 0 150.6 136.17 246.6 256.75 246.6s255-96 255-246.7c-.6-12.8-.2-33 0-53.2a12 12 0 0 0-12-12.1z\"],\n    \"mail-bulk\": [576, 512, [], \"f674\", \"M160 448c-25.6 0-51.2-22.4-64-32-64-44.8-83.2-60.8-96-70.4V480c0 17.67 14.33 32 32 32h256c17.67 0 32-14.33 32-32V345.6c-12.8 9.6-32 25.6-96 70.4-12.8 9.6-38.4 32-64 32zm128-192H32c-17.67 0-32 14.33-32 32v16c25.6 19.2 22.4 19.2 115.2 86.4 9.6 6.4 28.8 25.6 44.8 25.6s35.2-19.2 44.8-22.4c92.8-67.2 89.6-67.2 115.2-86.4V288c0-17.67-14.33-32-32-32zm256-96H224c-17.67 0-32 14.33-32 32v32h96c33.21 0 60.59 25.42 63.71 57.82l.29-.22V416h192c17.67 0 32-14.33 32-32V192c0-17.67-14.33-32-32-32zm-32 128h-64v-64h64v64zm-352-96c0-35.29 28.71-64 64-64h224V32c0-17.67-14.33-32-32-32H96C78.33 0 64 14.33 64 32v192h96v-32z\"],\n    \"male\": [192, 512, [], \"f183\", \"M96 0c35.346 0 64 28.654 64 64s-28.654 64-64 64-64-28.654-64-64S60.654 0 96 0m48 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H48c-26.51 0-48 21.49-48 48v136c0 13.255 10.745 24 24 24h16v136c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V352h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48z\"],\n    \"map\": [576, 512, [], \"f279\", \"M0 117.66v346.32c0 11.32 11.43 19.06 21.94 14.86L160 416V32L20.12 87.95A32.006 32.006 0 0 0 0 117.66zM192 416l192 64V96L192 32v384zM554.06 33.16L416 96v384l139.88-55.95A31.996 31.996 0 0 0 576 394.34V48.02c0-11.32-11.43-19.06-21.94-14.86z\"],\n    \"map-marked\": [576, 512, [], \"f59f\", \"M288 0c-69.59 0-126 56.41-126 126 0 56.26 82.35 158.8 113.9 196.02 6.39 7.54 17.82 7.54 24.2 0C331.65 284.8 414 182.26 414 126 414 56.41 357.59 0 288 0zM20.12 215.95A32.006 32.006 0 0 0 0 245.66v250.32c0 11.32 11.43 19.06 21.94 14.86L160 448V214.92c-8.84-15.98-16.07-31.54-21.25-46.42L20.12 215.95zM288 359.67c-14.07 0-27.38-6.18-36.51-16.96-19.66-23.2-40.57-49.62-59.49-76.72v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72-9.13 10.77-22.44 16.95-36.51 16.95zm266.06-198.51L416 224v288l139.88-55.95A31.996 31.996 0 0 0 576 426.34V176.02c0-11.32-11.43-19.06-21.94-14.86z\"],\n    \"map-marked-alt\": [576, 512, [], \"f5a0\", \"M288 0c-69.59 0-126 56.41-126 126 0 56.26 82.35 158.8 113.9 196.02 6.39 7.54 17.82 7.54 24.2 0C331.65 284.8 414 182.26 414 126 414 56.41 357.59 0 288 0zm0 168c-23.2 0-42-18.8-42-42s18.8-42 42-42 42 18.8 42 42-18.8 42-42 42zM20.12 215.95A32.006 32.006 0 0 0 0 245.66v250.32c0 11.32 11.43 19.06 21.94 14.86L160 448V214.92c-8.84-15.98-16.07-31.54-21.25-46.42L20.12 215.95zM288 359.67c-14.07 0-27.38-6.18-36.51-16.96-19.66-23.2-40.57-49.62-59.49-76.72v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72-9.13 10.77-22.44 16.95-36.51 16.95zm266.06-198.51L416 224v288l139.88-55.95A31.996 31.996 0 0 0 576 426.34V176.02c0-11.32-11.43-19.06-21.94-14.86z\"],\n    \"map-marker\": [384, 512, [], \"f041\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z\"],\n    \"map-marker-alt\": [384, 512, [], \"f3c5\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"],\n    \"map-pin\": [288, 512, [], \"f276\", \"M112 316.94v156.69l22.02 33.02c4.75 7.12 15.22 7.12 19.97 0L176 473.63V316.94c-10.39 1.92-21.06 3.06-32 3.06s-21.61-1.14-32-3.06zM144 0C64.47 0 0 64.47 0 144s64.47 144 144 144 144-64.47 144-144S223.53 0 144 0zm0 76c-37.5 0-68 30.5-68 68 0 6.62-5.38 12-12 12s-12-5.38-12-12c0-50.73 41.28-92 92-92 6.62 0 12 5.38 12 12s-5.38 12-12 12z\"],\n    \"map-signs\": [512, 512, [], \"f277\", \"M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z\"],\n    \"marker\": [512, 512, [], \"f5a1\", \"M93.95 290.03A327.038 327.038 0 0 0 .17 485.11l-.03.23c-1.7 15.28 11.21 28.2 26.49 26.51a327.02 327.02 0 0 0 195.34-93.8l75.4-75.4-128.02-128.02-75.4 75.4zM485.49 26.51c-35.35-35.35-92.67-35.35-128.02 0l-21.76 21.76-36.56-36.55c-15.62-15.62-40.95-15.62-56.56 0L138.47 115.84c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0l87.15-87.15 19.59 19.59L191.98 192 320 320.02l165.49-165.49c35.35-35.35 35.35-92.66 0-128.02z\"],\n    \"mars\": [384, 512, [], \"f222\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c0-6.6-5.4-12-12-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"mars-double\": [512, 512, [], \"f227\", \"M340 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C198.5 72.1 172.2 64 144 64 64.5 64 0 128.5 0 208s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.5 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 288c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80zm356-128.1h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7c-18.2-11.4-39-18.9-61.5-21.3-2.1 21.8-8.2 43.3-18.4 63.3 1.1 0 2.2-.1 3.2-.1 44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80c0-1.1 0-2.2.1-3.2-20 10.2-41.5 16.4-63.3 18.4C168.4 455.6 229.6 512 304 512c79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12v-79c0-6.7-5.4-12.1-12-12.1z\"],\n    \"mars-stroke\": [384, 512, [], \"f229\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-17.5 17.5-14.1-14.1c-4.7-4.7-12.3-4.7-17 0L224.5 133c-4.7 4.7-4.7 12.3 0 17l14.1 14.1-18 18c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l18-18 14.1 14.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L329.2 164l17.5-17.5 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c-.1-6.6-5.5-12-12.1-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"mars-stroke-h\": [480, 512, [], \"f22b\", \"M476.2 247.5l-55.9-55.9c-7.6-7.6-20.5-2.2-20.5 8.5V224H376v-20c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v20h-27.6c-5.8-25.6-18.7-49.9-38.6-69.8C189.6 98 98.4 98 42.2 154.2c-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 19.9-19.9 32.8-44.2 38.6-69.8H312v20c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-20h23.9v23.9c0 10.7 12.9 16 20.5 8.5l55.9-55.9c4.6-4.7 4.6-12.3-.1-17zm-275.6 65.1c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"],\n    \"mars-stroke-v\": [288, 512, [], \"f22a\", \"M245.8 234.2c-19.9-19.9-44.2-32.8-69.8-38.6v-25.4h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V81.4h23.9c10.7 0 16-12.9 8.5-20.5L152.5 5.1c-4.7-4.7-12.3-4.7-17 0L79.6 61c-7.6 7.6-2.2 20.5 8.5 20.5H112v24.7H92c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h20v25.4c-25.6 5.8-49.9 18.7-69.8 38.6-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 56.3-56.2 56.3-147.4 0-203.6zm-45.2 158.4c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"],\n    \"mask\": [640, 512, [], \"f6fa\", \"M320.67 64c-442.6 0-357.57 384-158.46 384 39.9 0 77.47-20.69 101.42-55.86l25.73-37.79c15.66-22.99 46.97-22.99 62.63 0l25.73 37.79C401.66 427.31 439.23 448 479.13 448c189.86 0 290.63-384-158.46-384zM184 308.36c-41.06 0-67.76-25.66-80.08-41.05-5.23-6.53-5.23-16.09 0-22.63 12.32-15.4 39.01-41.05 80.08-41.05s67.76 25.66 80.08 41.05c5.23 6.53 5.23 16.09 0 22.63-12.32 15.4-39.02 41.05-80.08 41.05zm272 0c-41.06 0-67.76-25.66-80.08-41.05-5.23-6.53-5.23-16.09 0-22.63 12.32-15.4 39.01-41.05 80.08-41.05s67.76 25.66 80.08 41.05c5.23 6.53 5.23 16.09 0 22.63-12.32 15.4-39.02 41.05-80.08 41.05z\"],\n    \"medal\": [512, 512, [], \"f5a2\", \"M223.75 130.75L154.62 15.54A31.997 31.997 0 0 0 127.18 0H16.03C3.08 0-4.5 14.57 2.92 25.18l111.27 158.96c29.72-27.77 67.52-46.83 109.56-53.39zM495.97 0H384.82c-11.24 0-21.66 5.9-27.44 15.54l-69.13 115.21c42.04 6.56 79.84 25.62 109.56 53.38L509.08 25.18C516.5 14.57 508.92 0 495.97 0zM256 160c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm92.52 157.26l-37.93 36.96 8.97 52.22c1.6 9.36-8.26 16.51-16.65 12.09L256 393.88l-46.9 24.65c-8.4 4.45-18.25-2.74-16.65-12.09l8.97-52.22-37.93-36.96c-6.82-6.64-3.05-18.23 6.35-19.59l52.43-7.64 23.43-47.52c2.11-4.28 6.19-6.39 10.28-6.39 4.11 0 8.22 2.14 10.33 6.39l23.43 47.52 52.43 7.64c9.4 1.36 13.17 12.95 6.35 19.59z\"],\n    \"medkit\": [512, 512, [], \"f0fa\", \"M96 480h320V128h-32V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v48H96v352zm96-384h128v32H192V96zm320 80v256c0 26.51-21.49 48-48 48h-16V128h16c26.51 0 48 21.49 48 48zM64 480H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v352zm288-208v32c0 8.837-7.163 16-16 16h-48v48c0 8.837-7.163 16-16 16h-32c-8.837 0-16-7.163-16-16v-48h-48c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h48v-48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v48h48c8.837 0 16 7.163 16 16z\"],\n    \"meh\": [496, 512, [], \"f11a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm176 192H152c-21.2 0-21.2-32 0-32h192c21.2 0 21.2 32 0 32zm-16-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"meh-blank\": [496, 512, [], \"f5a4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm160 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"meh-rolling-eyes\": [496, 512, [], \"f5a5\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM88 224c0-24.3 13.7-45.2 33.6-56-.7 2.6-1.6 5.2-1.6 8 0 17.7 14.3 32 32 32s32-14.3 32-32c0-2.8-.9-5.4-1.6-8 19.9 10.8 33.6 31.7 33.6 56 0 35.3-28.7 64-64 64s-64-28.7-64-64zm224 176H184c-21.2 0-21.2-32 0-32h128c21.2 0 21.2 32 0 32zm32-112c-35.3 0-64-28.7-64-64 0-24.3 13.7-45.2 33.6-56-.7 2.6-1.6 5.2-1.6 8 0 17.7 14.3 32 32 32s32-14.3 32-32c0-2.8-.9-5.4-1.6-8 19.9 10.8 33.6 31.7 33.6 56 0 35.3-28.7 64-64 64z\"],\n    \"memory\": [640, 512, [], \"f538\", \"M640 130.94V96c0-17.67-14.33-32-32-32H32C14.33 64 0 78.33 0 96v34.94c18.6 6.61 32 24.19 32 45.06s-13.4 38.45-32 45.06V320h640v-98.94c-18.6-6.61-32-24.19-32-45.06s13.4-38.45 32-45.06zM224 256h-64V128h64v128zm128 0h-64V128h64v128zm128 0h-64V128h64v128zM0 448h64v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h64v-96H0v96z\"],\n    \"menorah\": [640, 512, [], \"f676\", \"M144 128h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm96 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm192 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm96 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm80-32c17.67 0 32-14.33 32-32S608 0 608 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S512 0 512 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S416 0 416 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S320 0 320 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S224 0 224 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S128 0 128 0 96 46.33 96 64s14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S32 0 32 0 0 46.33 0 64s14.33 32 32 32zm544 192c0 17.67-14.33 32-32 32H352V144c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v176H96c-17.67 0-32-14.33-32-32V144c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v144c0 53.02 42.98 96 96 96h192v64H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H352v-64h192c53.02 0 96-42.98 96-96V144c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v144z\"],\n    \"mercury\": [288, 512, [], \"f223\", \"M288 208c0-44.2-19.9-83.7-51.2-110.1 2.5-1.8 4.9-3.8 7.2-5.8 24.7-21.2 39.8-48.8 43.2-78.8.9-7.1-4.7-13.3-11.9-13.3h-40.5C229 0 224.1 4.1 223 9.8c-2.4 12.5-9.6 24.3-20.7 33.8C187 56.8 166.3 64 144 64s-43-7.2-58.4-20.4C74.5 34.1 67.4 22.3 64.9 9.8 63.8 4.1 58.9 0 53.2 0H12.7C5.5 0-.1 6.2.8 13.3 4.2 43.4 19.2 71 44 92.2c2.3 2 4.7 3.9 7.2 5.8C19.9 124.3 0 163.8 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"],\n    \"meteor\": [512, 512, [], \"f753\", \"M491.2.7C452.5 12.3 379.4 35 303.5 62c-2.1-7-4-13.5-5.6-18.6-3-9.7-13.9-14.2-22.9-9.5C232.6 56 122.2 116.5 60.6 176.4c-1.1 1-2.5 2-3.5 3C19 217.4 0 267.3 0 317.2 0 367 19 416.9 57 455c38 38 87.9 57.1 137.8 57 49.9 0 99.8-19 137.9-57.1 1-1 2-2.4 3-3.5 59.8-61.6 120.4-172.1 142.5-214.4 4.7-9 .2-19.9-9.5-22.9-5.2-1.6-11.6-3.5-18.6-5.6 27-76 49.7-149 61.3-187.7C515 8.4 503.6-3 491.2.7zM192 448c-70.7 0-128-57.3-128-128s57.3-128 128-128 128 57.3 128 128-57.3 128-128 128zm-32-192c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm48 96c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16z\"],\n    \"microchip\": [512, 512, [], \"f2db\", \"M416 48v416c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h224c26.51 0 48 21.49 48 48zm96 58v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42V88h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zM30 376h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6z\"],\n    \"microphone\": [352, 512, [], \"f130\", \"M176 352c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96zm160-160h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16z\"],\n    \"microphone-alt\": [352, 512, [], \"f3c9\", \"M336 192h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16zM176 352c53.02 0 96-42.98 96-96h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96z\"],\n    \"microphone-alt-slash\": [640, 512, [], \"f539\", \"M633.82 458.1L476.26 336.33C488.74 312.21 496 284.98 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67h-43.67l-41.4-32H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.78c11.71-1.62 23.1-4.28 33.96-8.08l-50.4-38.96c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z\"],\n    \"microphone-slash\": [640, 512, [], \"f131\", \"M633.82 458.1l-157.8-121.96C488.61 312.13 496 285.01 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67V96c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.77c11.66-1.6 22.85-4.54 33.67-8.31l-50.11-38.73c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z\"],\n    \"microscope\": [512, 512, [], \"f610\", \"M160 320h12v16c0 8.84 7.16 16 16 16h40c8.84 0 16-7.16 16-16v-16h12c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32V16c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v16c-17.67 0-32 14.33-32 32v224c0 17.67 14.33 32 32 32zm304 128h-1.29C493.24 413.99 512 369.2 512 320c0-105.88-86.12-192-192-192v64c70.58 0 128 57.42 128 128s-57.42 128-128 128H48c-26.51 0-48 21.49-48 48 0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48zm-360-32h208c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8H104c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8z\"],\n    \"minus\": [448, 512, [], \"f068\", \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"minus-circle\": [512, 512, [], \"f056\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z\"],\n    \"minus-square\": [448, 512, [], \"f146\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z\"],\n    \"mitten\": [448, 512, [], \"f7b5\", \"M368 416H48c-8.8 0-16 7.2-16 16v64c0 8.8 7.2 16 16 16h320c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16zm57-209.1c-27.2-22.6-67.5-19-90.1 8.2l-20.9 25-29.6-128.4c-18-77.5-95.4-125.9-172.8-108C34.2 21.6-14.2 98.9 3.7 176.4L51.6 384h309l72.5-87c22.7-27.2 19-67.5-8.1-90.1z\"],\n    \"mobile\": [320, 512, [], \"f10b\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"mobile-alt\": [320, 512, [], \"f3cd\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z\"],\n    \"money-bill\": [640, 512, [], \"f0d6\", \"M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 176c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 48h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z\"],\n    \"money-bill-alt\": [640, 512, [], \"f3d1\", \"M352 288h-16v-88c0-4.42-3.58-8-8-8h-13.58c-4.74 0-9.37 1.4-13.31 4.03l-15.33 10.22a7.994 7.994 0 0 0-2.22 11.09l8.88 13.31a7.994 7.994 0 0 0 11.09 2.22l.47-.31V288h-16c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h64c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zM608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 192c-53.02 0-96-50.15-96-112 0-61.86 42.98-112 96-112s96 50.14 96 112c0 61.87-43 112-96 112zm272 32h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z\"],\n    \"money-bill-wave\": [640, 512, [], \"f53a\", \"M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM48 132.22c20.12 5.04 41.12 7.57 62.72 8.93C104.84 170.54 79 192.69 48 192.69v-60.47zm0 285v-47.78c34.37 0 62.18 27.27 63.71 61.4-22.53-1.81-43.59-6.31-63.71-13.62zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 27.78c-17.52-4.39-35.71-6.85-54.32-8.44 5.87-26.08 27.5-45.88 54.32-49.28v57.72zm0-236.11c-30.89-3.91-54.86-29.7-55.81-61.55 19.54 2.17 38.09 6.23 55.81 12.66v48.89z\"],\n    \"money-bill-wave-alt\": [640, 512, [], \"f53b\", \"M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96z\"],\n    \"money-check\": [640, 512, [], \"f53c\", \"M0 448c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V128H0v320zm448-208c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-32zm0 120c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H456c-4.42 0-8-3.58-8-8v-16zM64 264c0-4.42 3.58-8 8-8h304c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm0 96c0-4.42 3.58-8 8-8h176c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zM624 32H16C7.16 32 0 39.16 0 48v48h640V48c0-8.84-7.16-16-16-16z\"],\n    \"money-check-alt\": [640, 512, [], \"f53d\", \"M608 32H32C14.33 32 0 46.33 0 64v384c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zM176 327.88V344c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V152c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07zM416 312c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16zm160 0c0 4.42-3.58 8-8 8h-80c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16zm0-96c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h272c4.42 0 8 3.58 8 8v16z\"],\n    \"monument\": [384, 512, [], \"f5a6\", \"M368 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h352c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-78.86-347.26a31.97 31.97 0 0 0-9.21-19.44L203.31 4.69c-6.25-6.25-16.38-6.25-22.63 0l-76.6 76.61a31.97 31.97 0 0 0-9.21 19.44L64 416h256l-30.86-315.26zM240 307.2c0 6.4-6.4 12.8-12.8 12.8h-70.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h70.4c6.4 0 12.8 6.4 12.8 12.8v38.4z\"],\n    \"moon\": [512, 512, [], \"f186\", \"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"],\n    \"mortar-pestle\": [512, 512, [], \"f5a7\", \"M501.54 60.91c17.22-17.22 12.51-46.25-9.27-57.14a35.696 35.696 0 0 0-37.37 3.37L251.09 160h151.37l99.08-99.09zM496 192H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c0 80.98 50.2 150.11 121.13 178.32-12.76 16.87-21.72 36.8-24.95 58.69-1.46 9.92 6.04 18.98 16.07 18.98h223.5c10.03 0 17.53-9.06 16.07-18.98-3.22-21.89-12.18-41.82-24.95-58.69C429.8 406.11 480 336.98 480 256h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"mosque\": [640, 512, [], \"f678\", \"M0 480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V160H0v320zm579.16-192c17.86-17.39 28.84-37.34 28.84-58.91 0-52.86-41.79-93.79-87.92-122.9-41.94-26.47-80.63-57.77-111.96-96.22L400 0l-8.12 9.97c-31.33 38.45-70.01 69.76-111.96 96.22C233.79 135.3 192 176.23 192 229.09c0 21.57 10.98 41.52 28.84 58.91h358.32zM608 320H192c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h32v-64c0-17.67 14.33-32 32-32s32 14.33 32 32v64h64v-72c0-48 48-72 48-72s48 24 48 72v72h64v-64c0-17.67 14.33-32 32-32s32 14.33 32 32v64h32c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zM64 0S0 32 0 96v32h128V96c0-64-64-96-64-96z\"],\n    \"motorcycle\": [640, 512, [], \"f21c\", \"M512.9 192c-14.9-.1-29.1 2.3-42.4 6.9L437.6 144H520c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24h-45.3c-6.8 0-13.3 2.9-17.8 7.9l-37.5 41.7-22.8-38C392.2 68.4 384.4 64 376 64h-80c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h66.4l19.2 32H227.9c-17.7-23.1-44.9-40-99.9-40H72.5C59 104 47.7 115 48 128.5c.2 13 10.9 23.5 24 23.5h56c24.5 0 38.7 10.9 47.8 24.8l-11.3 20.5c-13-3.9-26.9-5.7-41.3-5.2C55.9 194.5 1.6 249.6 0 317c-1.6 72.1 56.3 131 128 131 59.6 0 109.7-40.8 124-96h84.2c13.7 0 24.6-11.4 24-25.1-2.1-47.1 17.5-93.7 56.2-125l12.5 20.8c-27.6 23.7-45.1 58.9-44.8 98.2.5 69.6 57.2 126.5 126.8 127.1 71.6.7 129.8-57.5 129.2-129.1-.7-69.6-57.6-126.4-127.2-126.9zM128 400c-44.1 0-80-35.9-80-80s35.9-80 80-80c4.2 0 8.4.3 12.5 1L99 316.4c-8.8 16 2.8 35.6 21 35.6h81.3c-12.4 28.2-40.6 48-73.3 48zm463.9-75.6c-2.2 40.6-35 73.4-75.5 75.5-46.1 2.5-84.4-34.3-84.4-79.9 0-21.4 8.4-40.8 22.1-55.1l49.4 82.4c4.5 7.6 14.4 10 22 5.5l13.7-8.2c7.6-4.5 10-14.4 5.5-22l-48.6-80.9c5.2-1.1 10.5-1.6 15.9-1.6 45.6-.1 82.3 38.2 79.9 84.3z\"],\n    \"mountain\": [640, 512, [], \"f6fc\", \"M634.92 462.7l-288-448C341.03 5.54 330.89 0 320 0s-21.03 5.54-26.92 14.7l-288 448a32.001 32.001 0 0 0-1.17 32.64A32.004 32.004 0 0 0 32 512h576c11.71 0 22.48-6.39 28.09-16.67a31.983 31.983 0 0 0-1.17-32.63zM320 91.18L405.39 224H320l-64 64-38.06-38.06L320 91.18z\"],\n    \"mouse-pointer\": [320, 512, [], \"f245\", \"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\"],\n    \"mug-hot\": [512, 512, [], \"f7b6\", \"M127.1 146.5c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C111.8 5.9 105 0 96.8 0H80.4C70.6 0 63 8.5 64.1 18c3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zm112 0c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C223.8 5.9 217 0 208.8 0h-16.4c-9.8 0-17.5 8.5-16.3 18 3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zM400 192H32c-17.7 0-32 14.3-32 32v192c0 53 43 96 96 96h192c53 0 96-43 96-96h16c61.8 0 112-50.2 112-112s-50.2-112-112-112zm0 160h-16v-96h16c26.5 0 48 21.5 48 48s-21.5 48-48 48z\"],\n    \"music\": [512, 512, [], \"f001\", \"M511.99 32.01c0-21.71-21.1-37.01-41.6-30.51L150.4 96c-13.3 4.2-22.4 16.5-22.4 30.5v261.42c-10.05-2.38-20.72-3.92-32-3.92-53.02 0-96 28.65-96 64s42.98 64 96 64 96-28.65 96-64V214.31l256-75.02v184.63c-10.05-2.38-20.72-3.92-32-3.92-53.02 0-96 28.65-96 64s42.98 64 96 64 96-28.65 96-64l-.01-351.99z\"],\n    \"network-wired\": [640, 512, [], \"f6ff\", \"M640 264v-16c0-8.84-7.16-16-16-16H344v-40h72c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H224c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h72v40H16c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h104v40H64c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h304v40h-56c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h104c8.84 0 16-7.16 16-16zM256 128V64h128v64H256zm-64 320H96v-64h96v64zm352 0h-96v-64h96v64z\"],\n    \"neuter\": [288, 512, [], \"f22c\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V468c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V316.4c64.1-14.5 112-71.9 112-140.4zm-144 80c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"newspaper\": [576, 512, [], \"f1ea\", \"M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z\"],\n    \"not-equal\": [448, 512, [], \"f53e\", \"M416 208c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32h-23.88l51.87-66.81c5.37-7.02 4.04-17.06-2.97-22.43L415.61 3.3c-7.02-5.38-17.06-4.04-22.44 2.97L311.09 112H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h204.56l-74.53 96H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h55.49l-51.87 66.81c-5.37 7.01-4.04 17.05 2.97 22.43L64 508.7c7.02 5.38 17.06 4.04 22.43-2.97L168.52 400H416c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32H243.05l74.53-96H416z\"],\n    \"notes-medical\": [384, 512, [], \"f481\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm96 304c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm0-192c0 4.4-3.6 8-8 8H104c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h176c4.4 0 8 3.6 8 8v16z\"],\n    \"object-group\": [512, 512, [], \"f247\", \"M480 128V96h20c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v20H64V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v40c0 6.627 5.373 12 12 12h20v320H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-20h384v20c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V128zM96 276V140c0-6.627 5.373-12 12-12h168c6.627 0 12 5.373 12 12v136c0 6.627-5.373 12-12 12H108c-6.627 0-12-5.373-12-12zm320 96c0 6.627-5.373 12-12 12H236c-6.627 0-12-5.373-12-12v-52h72c13.255 0 24-10.745 24-24v-72h84c6.627 0 12 5.373 12 12v136z\"],\n    \"object-ungroup\": [576, 512, [], \"f248\", \"M64 320v26a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6v-52a6 6 0 0 1 6-6h26V96H6a6 6 0 0 1-6-6V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v26h288V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-26v192h26a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-26H64zm480-64v-32h26a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-52a6 6 0 0 0-6 6v26H408v72h8c13.255 0 24 10.745 24 24v64c0 13.255-10.745 24-24 24h-64c-13.255 0-24-10.745-24-24v-8H192v72h-26a6 6 0 0 0-6 6v52a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-26h288v26a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-26V256z\"],\n    \"oil-can\": [640, 512, [], \"f613\", \"M629.8 160.31L416 224l-50.49-25.24a64.07 64.07 0 0 0-28.62-6.76H280v-48h56c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h56v48h-56L37.72 166.86a31.9 31.9 0 0 0-5.79-.53C14.67 166.33 0 180.36 0 198.34v94.95c0 15.46 11.06 28.72 26.28 31.48L96 337.46V384c0 17.67 14.33 32 32 32h274.63c8.55 0 16.75-3.42 22.76-9.51l212.26-214.75c1.5-1.5 2.34-3.54 2.34-5.66V168c.01-5.31-5.08-9.15-10.19-7.69zM96 288.67l-48-8.73v-62.43l48 8.73v62.43zm453.33 84.66c0 23.56 19.1 42.67 42.67 42.67s42.67-19.1 42.67-42.67S592 288 592 288s-42.67 61.77-42.67 85.33z\"],\n    \"om\": [512, 512, [], \"f679\", \"M360.6 60.94a10.43 10.43 0 0 0 14.76 0l21.57-21.56a10.43 10.43 0 0 0 0-14.76L375.35 3.06c-4.08-4.07-10.68-4.07-14.76 0l-21.57 21.56a10.43 10.43 0 0 0 0 14.76l21.58 21.56zM412.11 192c-26.69 0-51.77 10.39-70.64 29.25l-24.25 24.25c-6.78 6.77-15.78 10.5-25.38 10.5H245c10.54-22.1 14.17-48.11 7.73-75.23-10.1-42.55-46.36-76.11-89.52-83.19-36.15-5.93-70.9 5.04-96.01 28.78-7.36 6.96-6.97 18.85 1.12 24.93l26.15 19.63c5.72 4.3 13.66 4.32 19.2-.21 8.45-6.9 19.02-10.71 30.27-10.71 26.47 0 48.01 21.53 48.01 48s-21.54 48-48.01 48h-31.9c-11.96 0-19.74 12.58-14.39 23.28l16.09 32.17c2.53 5.06 7.6 8.1 13.17 8.55h33.03c35.3 0 64.01 28.7 64.01 64s-28.71 64-64.01 64c-96.02 0-122.35-54.02-145.15-92.03-4.53-7.55-14.77-3.58-14.79 5.22C-.09 416 41.13 512 159.94 512c70.59 0 128.02-57.42 128.02-128 0-23.42-6.78-45.1-17.81-64h21.69c26.69 0 51.77-10.39 70.64-29.25l24.25-24.25c6.78-6.77 15.78-10.5 25.38-10.5 19.78 0 35.88 16.09 35.88 35.88V392c0 13.23-18.77 24-32.01 24-39.4 0-66.67-24.24-81.82-42.89-4.77-5.87-14.2-2.54-14.2 5.02V416s0 64 96.02 64c48.54 0 96.02-39.47 96.02-88V291.88c0-55.08-44.8-99.88-99.89-99.88zm42.18-124.73c-85.55 65.12-169.05 2.75-172.58.05-6.02-4.62-14.44-4.38-20.14.55-5.74 4.92-7.27 13.17-3.66 19.8 1.61 2.95 40.37 72.34 118.8 72.34 79.92 0 98.78-31.36 101.75-37.66 1.02-2.12 1.53-4.47 1.53-6.83V80c0-13.22-15.14-20.69-25.7-12.73z\"],\n    \"otter\": [640, 512, [], \"f700\", \"M608 32h-32l-13.25-13.25A63.97 63.97 0 0 0 517.49 0H497c-11.14 0-22.08 2.91-31.75 8.43L312 96h-56C149.96 96 64 181.96 64 288v1.61c0 32.75-16 62.14-39.56 84.89-18.19 17.58-28.1 43.68-23.19 71.8 6.76 38.8 42.9 65.7 82.28 65.7H192c17.67 0 32-14.33 32-32s-14.33-32-32-32H80c-8.83 0-16-7.17-16-16s7.17-16 16-16h224c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-64l149.49-80.5L448 416h80c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-28.22l-55.11-110.21L521.14 192H544c53.02 0 96-42.98 96-96V64c0-17.67-14.33-32-32-32zm-96 16c8.84 0 16 7.16 16 16s-7.16 16-16 16-16-7.16-16-16 7.16-16 16-16zm32 96h-34.96L407.2 198.84l-13.77-27.55L512 112h77.05c-6.62 18.58-24.22 32-45.05 32z\"],\n    \"outdent\": [448, 512, [], \"f03b\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm208 144h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm192-128h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM4.687 267.313l96 95.984C110.734 373.348 128 366.224 128 351.984V160.008c0-14.329-17.325-21.304-27.313-11.313l-96 95.992c-6.249 6.248-6.249 16.378 0 22.626z\"],\n    \"pager\": [512, 512, [], \"f815\", \"M448 64H64a64 64 0 0 0-64 64v256a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V128a64 64 0 0 0-64-64zM160 368H80a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h80zm128-16a16 16 0 0 1-16 16h-80v-48h80a16 16 0 0 1 16 16zm160-128a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h320a32 32 0 0 1 32 32z\"],\n    \"paint-brush\": [512, 512, [], \"f1fc\", \"M167.02 309.34c-40.12 2.58-76.53 17.86-97.19 72.3-2.35 6.21-8 9.98-14.59 9.98-11.11 0-45.46-27.67-55.25-34.35C0 439.62 37.93 512 128 512c75.86 0 128-43.77 128-120.19 0-3.11-.65-6.08-.97-9.13l-88.01-73.34zM457.89 0c-15.16 0-29.37 6.71-40.21 16.45C213.27 199.05 192 203.34 192 257.09c0 13.7 3.25 26.76 8.73 38.7l63.82 53.18c7.21 1.8 14.64 3.03 22.39 3.03 62.11 0 98.11-45.47 211.16-256.46 7.38-14.35 13.9-29.85 13.9-45.99C512 20.64 486 0 457.89 0z\"],\n    \"paint-roller\": [512, 512, [], \"f5aa\", \"M416 128V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v96c0 17.67 14.33 32 32 32h352c17.67 0 32-14.33 32-32zm32-64v128c0 17.67-14.33 32-32 32H256c-35.35 0-64 28.65-64 64v32c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32v-32h160c53.02 0 96-42.98 96-96v-64c0-35.35-28.65-64-64-64z\"],\n    \"palette\": [512, 512, [], \"f53f\", \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"pallet\": [640, 512, [], \"f482\", \"M144 256h352c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H384v128l-64-32-64 32V0H144c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16zm480 128c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h48v64H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-48v-64h48zm-336 64H128v-64h160v64zm224 0H352v-64h160v64z\"],\n    \"paper-plane\": [512, 512, [], \"f1d8\", \"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"],\n    \"paperclip\": [448, 512, [], \"f0c6\", \"M43.246 466.142c-58.43-60.289-57.341-157.511 1.386-217.581L254.392 34c44.316-45.332 116.351-45.336 160.671 0 43.89 44.894 43.943 117.329 0 162.276L232.214 383.128c-29.855 30.537-78.633 30.111-107.982-.998-28.275-29.97-27.368-77.473 1.452-106.953l143.743-146.835c6.182-6.314 16.312-6.422 22.626-.241l22.861 22.379c6.315 6.182 6.422 16.312.241 22.626L171.427 319.927c-4.932 5.045-5.236 13.428-.648 18.292 4.372 4.634 11.245 4.711 15.688.165l182.849-186.851c19.613-20.062 19.613-52.725-.011-72.798-19.189-19.627-49.957-19.637-69.154 0L90.39 293.295c-34.763 35.56-35.299 93.12-1.191 128.313 34.01 35.093 88.985 35.137 123.058.286l172.06-175.999c6.177-6.319 16.307-6.433 22.626-.256l22.877 22.364c6.319 6.177 6.434 16.307.256 22.626l-172.06 175.998c-59.576 60.938-155.943 60.216-214.77-.485z\"],\n    \"parachute-box\": [512, 512, [], \"f4cd\", \"M511.9 175c-9.1-75.6-78.4-132.4-158.3-158.7C390 55.7 416 116.9 416 192h28.1L327.5 321.5c-2.5-.6-4.8-1.5-7.5-1.5h-48V192h112C384 76.8 315.1 0 256 0S128 76.8 128 192h112v128h-48c-2.7 0-5 .9-7.5 1.5L67.9 192H96c0-75.1 26-136.3 62.4-175.7C78.5 42.7 9.2 99.5.1 175c-1.1 9.1 6.8 17 16 17h8.7l136.7 151.9c-.7 2.6-1.6 5.2-1.6 8.1v128c0 17.7 14.3 32 32 32h128c17.7 0 32-14.3 32-32V352c0-2.9-.9-5.4-1.6-8.1L487.1 192h8.7c9.3 0 17.2-7.8 16.1-17z\"],\n    \"paragraph\": [448, 512, [], \"f1dd\", \"M408 32H177.531C88.948 32 16.045 103.335 16 191.918 15.956 280.321 87.607 352 176 352v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h32v344c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h40c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24z\"],\n    \"parking\": [448, 512, [], \"f540\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM240 320h-48v48c0 8.8-7.2 16-16 16h-32c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16h96c52.9 0 96 43.1 96 96s-43.1 96-96 96zm0-128h-48v64h48c17.6 0 32-14.4 32-32s-14.4-32-32-32z\"],\n    \"passport\": [448, 512, [], \"f5ab\", \"M129.62 176h39.09c1.49-27.03 6.54-51.35 14.21-70.41-27.71 13.24-48.02 39.19-53.3 70.41zm0 32c5.29 31.22 25.59 57.17 53.3 70.41-7.68-19.06-12.72-43.38-14.21-70.41h-39.09zM224 286.69c7.69-7.45 20.77-34.42 23.43-78.69h-46.87c2.67 44.26 15.75 71.24 23.44 78.69zM200.57 176h46.87c-2.66-44.26-15.74-71.24-23.43-78.69-7.7 7.45-20.78 34.43-23.44 78.69zm64.51 102.41c27.71-13.24 48.02-39.19 53.3-70.41h-39.09c-1.49 27.03-6.53 51.35-14.21 70.41zM416 0H64C28.65 0 0 28.65 0 64v384c0 35.35 28.65 64 64 64h352c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32zm-80 416H112c-8.8 0-16-7.2-16-16s7.2-16 16-16h224c8.8 0 16 7.2 16 16s-7.2 16-16 16zm-112-96c-70.69 0-128-57.31-128-128S153.31 64 224 64s128 57.31 128 128-57.31 128-128 128zm41.08-214.41c7.68 19.06 12.72 43.38 14.21 70.41h39.09c-5.28-31.22-25.59-57.17-53.3-70.41z\"],\n    \"pastafarianism\": [640, 512, [], \"f67b\", \"M624.54 347.67c-32.7-12.52-57.36 4.25-75.37 16.45-17.06 11.53-23.25 14.42-31.41 11.36-8.12-3.09-10.83-9.38-15.89-29.38-3.33-13.15-7.44-29.32-17.95-42.65 2.24-2.91 4.43-5.79 6.38-8.57C500.47 304.45 513.71 312 532 312c33.95 0 50.87-25.78 62.06-42.83 10.59-16.14 15-21.17 21.94-21.17 13.25 0 24-10.75 24-24s-10.75-24-24-24c-33.95 0-50.87 25.78-62.06 42.83-10.6 16.14-15 21.17-21.94 21.17-17.31 0-37.48-61.43-97.26-101.91l17.25-34.5C485.43 125.5 512 97.98 512 64c0-35.35-28.65-64-64-64s-64 28.65-64 64c0 13.02 3.94 25.1 10.62 35.21l-18.15 36.3c-16.98-4.6-35.6-7.51-56.46-7.51s-39.49 2.91-56.46 7.51l-18.15-36.3C252.06 89.1 256 77.02 256 64c0-35.35-28.65-64-64-64s-64 28.65-64 64c0 33.98 26.56 61.5 60.02 63.6l17.25 34.5C145.68 202.44 125.15 264 108 264c-6.94 0-11.34-5.03-21.94-21.17C74.88 225.78 57.96 200 24 200c-13.25 0-24 10.75-24 24s10.75 24 24 24c6.94 0 11.34 5.03 21.94 21.17C57.13 286.22 74.05 312 108 312c18.29 0 31.53-7.55 41.7-17.11 1.95 2.79 4.14 5.66 6.38 8.57-10.51 13.33-14.62 29.5-17.95 42.65-5.06 20-7.77 26.28-15.89 29.38-8.11 3.06-14.33.17-31.41-11.36-18.03-12.2-42.72-28.92-75.37-16.45-12.39 4.72-18.59 18.58-13.87 30.97 4.72 12.41 18.61 18.61 30.97 13.88 8.16-3.09 14.34-.19 31.39 11.36 13.55 9.16 30.83 20.86 52.42 20.84 7.17 0 14.83-1.28 22.97-4.39 32.66-12.44 39.98-41.33 45.33-62.44 2.21-8.72 3.99-14.49 5.95-18.87 16.62 13.61 36.95 25.88 61.64 34.17-9.96 37-32.18 90.8-60.26 90.8-13.25 0-24 10.75-24 24s10.75 24 24 24c66.74 0 97.05-88.63 107.42-129.14 6.69.6 13.42 1.14 20.58 1.14s13.89-.54 20.58-1.14C350.95 423.37 381.26 512 448 512c13.25 0 24-10.75 24-24s-10.75-24-24-24c-27.94 0-50.21-53.81-60.22-90.81 24.69-8.29 45-20.56 61.62-34.16 1.96 4.38 3.74 10.15 5.95 18.87 5.34 21.11 12.67 50 45.33 62.44 8.14 3.11 15.8 4.39 22.97 4.39 21.59 0 38.87-11.69 52.42-20.84 17.05-11.55 23.28-14.45 31.39-11.36 12.39 4.75 26.27-1.47 30.97-13.88 4.71-12.4-1.49-26.26-13.89-30.98zM448 48c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16zm-256 0c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16z\"],\n    \"paste\": [448, 512, [], \"f0ea\", \"M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z\"],\n    \"pause\": [448, 512, [], \"f04c\", \"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"],\n    \"pause-circle\": [512, 512, [], \"f28b\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160zm112 0c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160z\"],\n    \"paw\": [512, 512, [], \"f1b0\", \"M256 224c-79.41 0-192 122.76-192 200.25 0 34.9 26.81 55.75 71.74 55.75 48.84 0 81.09-25.08 120.26-25.08 39.51 0 71.85 25.08 120.26 25.08 44.93 0 71.74-20.85 71.74-55.75C448 346.76 335.41 224 256 224zm-147.28-12.61c-10.4-34.65-42.44-57.09-71.56-50.13-29.12 6.96-44.29 40.69-33.89 75.34 10.4 34.65 42.44 57.09 71.56 50.13 29.12-6.96 44.29-40.69 33.89-75.34zm84.72-20.78c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z\"],\n    \"peace\": [496, 512, [], \"f67c\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm184 248c0 31.93-8.2 61.97-22.57 88.17L280 240.63V74.97c86.23 15.21 152 90.5 152 181.03zM216 437.03c-33.86-5.97-64.49-21.2-89.29-43.02L216 322.57v114.46zm64-114.46L369.29 394c-24.8 21.82-55.43 37.05-89.29 43.02V322.57zm-64-247.6v165.66L86.57 344.17C72.2 317.97 64 287.93 64 256c0-90.53 65.77-165.82 152-181.03z\"],\n    \"pen\": [512, 512, [], \"f304\", \"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"],\n    \"pen-alt\": [512, 512, [], \"f305\", \"M497.94 74.17l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.75 18.75-49.15 0-67.91zm-246.8-20.53c-15.62-15.62-40.94-15.62-56.56 0L75.8 172.43c-6.25 6.25-6.25 16.38 0 22.62l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l101.82-101.82 22.63 22.62L93.95 290.03A327.038 327.038 0 0 0 .17 485.11l-.03.23c-1.7 15.28 11.21 28.2 26.49 26.51a327.02 327.02 0 0 0 195.34-93.8l196.79-196.79-82.77-82.77-84.85-84.85z\"],\n    \"pen-fancy\": [512, 512, [], \"f5ac\", \"M79.18 282.94a32.005 32.005 0 0 0-20.24 20.24L0 480l4.69 4.69 92.89-92.89c-.66-2.56-1.57-5.03-1.57-7.8 0-17.67 14.33-32 32-32s32 14.33 32 32-14.33 32-32 32c-2.77 0-5.24-.91-7.8-1.57l-92.89 92.89L32 512l176.82-58.94a31.983 31.983 0 0 0 20.24-20.24l33.07-84.07-98.88-98.88-84.07 33.07zM369.25 28.32L186.14 227.81l97.85 97.85 199.49-183.11C568.4 67.48 443.73-55.94 369.25 28.32z\"],\n    \"pen-nib\": [512, 512, [], \"f5ad\", \"M136.6 138.79a64.003 64.003 0 0 0-43.31 41.35L0 460l14.69 14.69L164.8 324.58c-2.99-6.26-4.8-13.18-4.8-20.58 0-26.51 21.49-48 48-48s48 21.49 48 48-21.49 48-48 48c-7.4 0-14.32-1.81-20.58-4.8L37.31 497.31 52 512l279.86-93.29a64.003 64.003 0 0 0 41.35-43.31L416 224 288 96l-151.4 42.79zm361.34-64.62l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.75 18.75-49.15 0-67.91z\"],\n    \"pen-square\": [448, 512, [], \"f14b\", \"M400 480H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zM238.1 177.9L102.4 313.6l-6.3 57.1c-.8 7.6 5.6 14.1 13.3 13.3l57.1-6.3L302.2 242c2.3-2.3 2.3-6.1 0-8.5L246.7 178c-2.5-2.4-6.3-2.4-8.6-.1zM345 165.1L314.9 135c-9.4-9.4-24.6-9.4-33.9 0l-23.1 23.1c-2.3 2.3-2.3 6.1 0 8.5l55.5 55.5c2.3 2.3 6.1 2.3 8.5 0L345 199c9.3-9.3 9.3-24.5 0-33.9z\"],\n    \"pencil-alt\": [512, 512, [], \"f303\", \"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"],\n    \"pencil-ruler\": [512, 512, [], \"f5ae\", \"M109.46 244.04l134.58-134.56-44.12-44.12-61.68 61.68a7.919 7.919 0 0 1-11.21 0l-11.21-11.21c-3.1-3.1-3.1-8.12 0-11.21l61.68-61.68-33.64-33.65C131.47-3.1 111.39-3.1 99 9.29L9.29 99c-12.38 12.39-12.39 32.47 0 44.86l100.17 100.18zm388.47-116.8c18.76-18.76 18.75-49.17 0-67.93l-45.25-45.25c-18.76-18.76-49.18-18.76-67.95 0l-46.02 46.01 113.2 113.2 46.02-46.03zM316.08 82.71l-297 296.96L.32 487.11c-2.53 14.49 10.09 27.11 24.59 24.56l107.45-18.84L429.28 195.9 316.08 82.71zm186.63 285.43l-33.64-33.64-61.68 61.68c-3.1 3.1-8.12 3.1-11.21 0l-11.21-11.21c-3.09-3.1-3.09-8.12 0-11.21l61.68-61.68-44.14-44.14L267.93 402.5l100.21 100.2c12.39 12.39 32.47 12.39 44.86 0l89.71-89.7c12.39-12.39 12.39-32.47 0-44.86z\"],\n    \"people-carry\": [640, 512, [], \"f4ce\", \"M128 96c26.5 0 48-21.5 48-48S154.5 0 128 0 80 21.5 80 48s21.5 48 48 48zm384 0c26.5 0 48-21.5 48-48S538.5 0 512 0s-48 21.5-48 48 21.5 48 48 48zm125.7 372.1l-44-110-41.1 46.4-2 18.2 27.7 69.2c5 12.5 17 20.1 29.7 20.1 4 0 8-.7 11.9-2.3 16.4-6.6 24.4-25.2 17.8-41.6zm-34.2-209.8L585 178.1c-4.6-20-18.6-36.8-37.5-44.9-18.5-8-39-6.7-56.1 3.3-22.7 13.4-39.7 34.5-48.1 59.4L432 229.8 416 240v-96c0-8.8-7.2-16-16-16H240c-8.8 0-16 7.2-16 16v96l-16.1-10.2-11.3-33.9c-8.3-25-25.4-46-48.1-59.4-17.2-10-37.6-11.3-56.1-3.3-18.9 8.1-32.9 24.9-37.5 44.9l-18.4 80.2c-4.6 20 .7 41.2 14.4 56.7l67.2 75.9 10.1 92.6C130 499.8 143.8 512 160 512c1.2 0 2.3-.1 3.5-.2 17.6-1.9 30.2-17.7 28.3-35.3l-10.1-92.8c-1.5-13-6.9-25.1-15.6-35l-43.3-49 17.6-70.3 6.8 20.4c4.1 12.5 11.9 23.4 24.5 32.6l51.1 32.5c4.6 2.9 12.1 4.6 17.2 5h160c5.1-.4 12.6-2.1 17.2-5l51.1-32.5c12.6-9.2 20.4-20 24.5-32.6l6.8-20.4 17.6 70.3-43.3 49c-8.7 9.9-14.1 22-15.6 35l-10.1 92.8c-1.9 17.6 10.8 33.4 28.3 35.3 1.2.1 2.3.2 3.5.2 16.1 0 30-12.1 31.8-28.5l10.1-92.6 67.2-75.9c13.6-15.5 19-36.7 14.4-56.7zM46.3 358.1l-44 110c-6.6 16.4 1.4 35 17.8 41.6 16.8 6.6 35.1-1.7 41.6-17.8l27.7-69.2-2-18.2-41.1-46.4z\"],\n    \"pepper-hot\": [512, 512, [], \"f816\", \"M330.67 263.12V173.4l-52.75-24.22C219.44 218.76 197.58 400 56 400a56 56 0 0 0 0 112c212.64 0 370.65-122.87 419.18-210.34l-37.05-38.54zm131.09-128.37C493.92 74.91 477.18 26.48 458.62 3a8 8 0 0 0-11.93-.59l-22.9 23a8.06 8.06 0 0 0-.89 10.23c6.86 10.36 17.05 35.1-1.4 72.32A142.85 142.85 0 0 0 364.34 96c-28 0-54 8.54-76.34 22.59l74.67 34.29v78.24h89.09L506.44 288c3.26-12.62 5.56-25.63 5.56-39.31a154 154 0 0 0-50.24-113.94z\"],\n    \"percent\": [448, 512, [], \"f295\", \"M112 224c61.9 0 112-50.1 112-112S173.9 0 112 0 0 50.1 0 112s50.1 112 112 112zm0-160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm224 224c-61.9 0-112 50.1-112 112s50.1 112 112 112 112-50.1 112-112-50.1-112-112-112zm0 160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zM392.3.2l31.6-.1c19.4-.1 30.9 21.8 19.7 37.8L77.4 501.6a23.95 23.95 0 0 1-19.6 10.2l-33.4.1c-19.5 0-30.9-21.9-19.7-37.8l368-463.7C377.2 4 384.5.2 392.3.2z\"],\n    \"percentage\": [384, 512, [], \"f541\", \"M109.25 173.25c24.99-24.99 24.99-65.52 0-90.51-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 25 25 65.52 25 90.51 0zm256 165.49c-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 24.99 24.99 65.52 24.99 90.51 0 25-24.99 25-65.51 0-90.51zm-1.94-231.43l-22.62-22.62c-12.5-12.5-32.76-12.5-45.25 0L20.69 359.44c-12.5 12.5-12.5 32.76 0 45.25l22.62 22.62c12.5 12.5 32.76 12.5 45.25 0l274.75-274.75c12.5-12.49 12.5-32.75 0-45.25z\"],\n    \"person-booth\": [576, 512, [], \"f756\", \"M192 496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320h-64v176zm32-272h-50.9l-45.2-45.3C115.8 166.6 99.7 160 82.7 160H64c-17.1 0-33.2 6.7-45.3 18.8C6.7 190.9 0 207 0 224.1L.2 320 0 480c0 17.7 14.3 32 31.9 32 17.6 0 32-14.3 32-32l.1-100.7c.9.5 1.6 1.3 2.5 1.7l29.1 43v56c0 17.7 14.3 32 32 32s32-14.3 32-32v-56.5c0-9.9-2.3-19.8-6.7-28.6l-41.2-61.3V253l20.9 20.9c9.1 9.1 21.1 14.1 33.9 14.1H224c17.7 0 32-14.3 32-32s-14.3-32-32-32zM64 128c26.5 0 48-21.5 48-48S90.5 32 64 32 16 53.5 16 80s21.5 48 48 48zm224-96l31.5 223.1-30.9 154.6c-4.3 21.6 13 38.3 31.4 38.3 15.2 0 28-9.1 32.3-30.4.9 16.9 14.6 30.4 31.7 30.4 17.7 0 32-14.3 32-32 0 17.7 14.3 32 32 32s32-14.3 32-32V0H288v32zm-96 0v160h64V0h-32c-17.7 0-32 14.3-32 32zM544 0h-32v496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V32c0-17.7-14.3-32-32-32z\"],\n    \"phone\": [512, 512, [], \"f095\", \"M493.4 24.6l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-36 76.7-98.9 140.5-177.2 177.2l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48C3.9 366.5-2 378.1.6 389.4l24 104C27.1 504.2 36.7 512 48 512c256.1 0 464-207.5 464-464 0-11.2-7.7-20.9-18.6-23.4z\"],\n    \"phone-slash\": [640, 512, [], \"f3dd\", \"M268.2 381.4l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48c-10.7 4.6-16.5 16.1-13.9 27.5l24 104c2.5 10.8 12.1 18.6 23.4 18.6 100.7 0 193.7-32.4 269.7-86.9l-80-61.8c-10.9 6.5-22.1 12.7-33.6 18.1zm365.6 76.7L475.1 335.5C537.9 256.4 576 156.9 576 48c0-11.2-7.7-20.9-18.6-23.4l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-12.2 26.1-27.9 50.3-46 72.8L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z\"],\n    \"phone-square\": [448, 512, [], \"f098\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM94 416c-7.033 0-13.057-4.873-14.616-11.627l-14.998-65a15 15 0 0 1 8.707-17.16l69.998-29.999a15 15 0 0 1 17.518 4.289l30.997 37.885c48.944-22.963 88.297-62.858 110.781-110.78l-37.886-30.997a15.001 15.001 0 0 1-4.289-17.518l30-69.998a15 15 0 0 1 17.16-8.707l65 14.998A14.997 14.997 0 0 1 384 126c0 160.292-129.945 290-290 290z\"],\n    \"phone-volume\": [384, 512, [], \"f2a0\", \"M97.333 506.966c-129.874-129.874-129.681-340.252 0-469.933 5.698-5.698 14.527-6.632 21.263-2.422l64.817 40.513a17.187 17.187 0 0 1 6.849 20.958l-32.408 81.021a17.188 17.188 0 0 1-17.669 10.719l-55.81-5.58c-21.051 58.261-20.612 122.471 0 179.515l55.811-5.581a17.188 17.188 0 0 1 17.669 10.719l32.408 81.022a17.188 17.188 0 0 1-6.849 20.958l-64.817 40.513a17.19 17.19 0 0 1-21.264-2.422zM247.126 95.473c11.832 20.047 11.832 45.008 0 65.055-3.95 6.693-13.108 7.959-18.718 2.581l-5.975-5.726c-3.911-3.748-4.793-9.622-2.261-14.41a32.063 32.063 0 0 0 0-29.945c-2.533-4.788-1.65-10.662 2.261-14.41l5.975-5.726c5.61-5.378 14.768-4.112 18.718 2.581zm91.787-91.187c60.14 71.604 60.092 175.882 0 247.428-4.474 5.327-12.53 5.746-17.552.933l-5.798-5.557c-4.56-4.371-4.977-11.529-.93-16.379 49.687-59.538 49.646-145.933 0-205.422-4.047-4.85-3.631-12.008.93-16.379l5.798-5.557c5.022-4.813 13.078-4.394 17.552.933zm-45.972 44.941c36.05 46.322 36.108 111.149 0 157.546-4.39 5.641-12.697 6.251-17.856 1.304l-5.818-5.579c-4.4-4.219-4.998-11.095-1.285-15.931 26.536-34.564 26.534-82.572 0-117.134-3.713-4.836-3.115-11.711 1.285-15.931l5.818-5.579c5.159-4.947 13.466-4.337 17.856 1.304z\"],\n    \"piggy-bank\": [576, 512, [], \"f4d3\", \"M560 224h-29.5c-8.8-20-21.6-37.7-37.4-52.5L512 96h-32c-29.4 0-55.4 13.5-73 34.3-7.6-1.1-15.1-2.3-23-2.3H256c-77.4 0-141.9 55-156.8 128H56c-14.8 0-26.5-13.5-23.5-28.8C34.7 215.8 45.4 208 57 208h1c3.3 0 6-2.7 6-6v-20c0-3.3-2.7-6-6-6-28.5 0-53.9 20.4-57.5 48.6C-3.9 258.8 22.7 288 56 288h40c0 52.2 25.4 98.1 64 127.3V496c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-48h128v48c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-80.7c11.8-8.9 22.3-19.4 31.3-31.3H560c8.8 0 16-7.2 16-16V240c0-8.8-7.2-16-16-16zm-128 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM256 96h128c5.4 0 10.7.4 15.9.8 0-.3.1-.5.1-.8 0-53-43-96-96-96s-96 43-96 96c0 2.1.5 4.1.6 6.2 15.2-3.9 31-6.2 47.4-6.2z\"],\n    \"pills\": [576, 512, [], \"f484\", \"M112 32C50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V144c0-61.9-50.1-112-112-112zm48 224H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm139.7-29.7c-3.5-3.5-9.4-3.1-12.3.8-45.3 62.5-40.4 150.1 15.9 206.4 56.3 56.3 143.9 61.2 206.4 15.9 4-2.9 4.3-8.8.8-12.3L299.7 226.3zm229.8-19c-56.3-56.3-143.9-61.2-206.4-15.9-4 2.9-4.3 8.8-.8 12.3l210.8 210.8c3.5 3.5 9.4 3.1 12.3-.8 45.3-62.6 40.5-150.1-15.9-206.4z\"],\n    \"pizza-slice\": [512, 512, [], \"f818\", \"M158.87.15c-16.16-1.52-31.2 8.42-35.33 24.12l-14.81 56.27c187.62 5.49 314.54 130.61 322.48 317l56.94-15.78c15.72-4.36 25.49-19.68 23.62-35.9C490.89 165.08 340.78 17.32 158.87.15zm-58.47 112L.55 491.64a16.21 16.21 0 0 0 20 19.75l379-105.1c-4.27-174.89-123.08-292.14-299.15-294.1zM128 416a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-152a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm104 104a32 32 0 1 1 32-32 32 32 0 0 1-32 32z\"],\n    \"place-of-worship\": [640, 512, [], \"f67f\", \"M620.61 366.55L512 320v192h112c8.84 0 16-7.16 16-16V395.96a32 32 0 0 0-19.39-29.41zM0 395.96V496c0 8.84 7.16 16 16 16h112V320L19.39 366.55A32 32 0 0 0 0 395.96zm464.46-149.28L416 217.6V102.63c0-8.49-3.37-16.62-9.38-22.63L331.31 4.69c-6.25-6.25-16.38-6.25-22.62 0L233.38 80c-6 6-9.38 14.14-9.38 22.63V217.6l-48.46 29.08A31.997 31.997 0 0 0 160 274.12V512h96v-96c0-35.35 28.66-64 64-64s64 28.65 64 64v96h96V274.12c0-11.24-5.9-21.66-15.54-27.44z\"],\n    \"plane\": [576, 512, [], \"f072\", \"M480 192H365.71L260.61 8.06A16.014 16.014 0 0 0 246.71 0h-65.5c-10.63 0-18.3 10.17-15.38 20.39L214.86 192H112l-43.2-57.6c-3.02-4.03-7.77-6.4-12.8-6.4H16.01C5.6 128-2.04 137.78.49 147.88L32 256 .49 364.12C-2.04 374.22 5.6 384 16.01 384H56c5.04 0 9.78-2.37 12.8-6.4L112 320h102.86l-49.03 171.6c-2.92 10.22 4.75 20.4 15.38 20.4h65.5c5.74 0 11.04-3.08 13.89-8.06L365.71 320H480c35.35 0 96-28.65 96-64s-60.65-64-96-64z\"],\n    \"plane-arrival\": [640, 512, [], \"f5af\", \"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM44.81 205.66l88.74 80a62.607 62.607 0 0 0 25.47 13.93l287.6 78.35c26.48 7.21 54.56 8.72 81 1.36 29.67-8.27 43.44-21.21 47.25-35.71 3.83-14.5-1.73-32.71-23.37-54.96-19.28-19.82-44.35-32.79-70.83-40l-97.51-26.56L282.8 30.22c-1.51-5.81-5.95-10.35-11.66-11.91L206.05.58c-10.56-2.88-20.9 5.32-20.71 16.44l47.92 164.21-102.2-27.84-27.59-67.88c-1.93-4.89-6.01-8.57-11.02-9.93L52.72 64.75c-10.34-2.82-20.53 5-20.72 15.88l.23 101.78c.19 8.91 6.03 17.34 12.58 23.25z\"],\n    \"plane-departure\": [640, 512, [], \"f5b0\", \"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM80.55 341.27c6.28 6.84 15.1 10.72 24.33 10.71l130.54-.18a65.62 65.62 0 0 0 29.64-7.12l290.96-147.65c26.74-13.57 50.71-32.94 67.02-58.31 18.31-28.48 20.3-49.09 13.07-63.65-7.21-14.57-24.74-25.27-58.25-27.45-29.85-1.94-59.54 5.92-86.28 19.48l-98.51 49.99-218.7-82.06a17.799 17.799 0 0 0-18-1.11L90.62 67.29c-10.67 5.41-13.25 19.65-5.17 28.53l156.22 98.1-103.21 52.38-72.35-36.47a17.804 17.804 0 0 0-16.07.02L9.91 230.22c-10.44 5.3-13.19 19.12-5.57 28.08l76.21 82.97z\"],\n    \"play\": [448, 512, [], \"f04b\", \"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"],\n    \"play-circle\": [512, 512, [], \"f144\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\"],\n    \"plug\": [384, 512, [], \"f1e6\", \"M256 144V32c0-17.673 14.327-32 32-32s32 14.327 32 32v112h-64zm112 16H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h16v32c0 77.406 54.969 141.971 128 156.796V512h64v-99.204c73.031-14.825 128-79.39 128-156.796v-32h16c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm-240-16V32c0-17.673-14.327-32-32-32S64 14.327 64 32v112h64z\"],\n    \"plus\": [448, 512, [], \"f067\", \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"plus-circle\": [512, 512, [], \"f055\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n    \"plus-square\": [448, 512, [], \"f0fe\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n    \"podcast\": [448, 512, [], \"f2ce\", \"M267.429 488.563C262.286 507.573 242.858 512 224 512c-18.857 0-38.286-4.427-43.428-23.437C172.927 460.134 160 388.898 160 355.75c0-35.156 31.142-43.75 64-43.75s64 8.594 64 43.75c0 32.949-12.871 104.179-20.571 132.813zM156.867 288.554c-18.693-18.308-29.958-44.173-28.784-72.599 2.054-49.724 42.395-89.956 92.124-91.881C274.862 121.958 320 165.807 320 220c0 26.827-11.064 51.116-28.866 68.552-2.675 2.62-2.401 6.986.628 9.187 9.312 6.765 16.46 15.343 21.234 25.363 1.741 3.654 6.497 4.66 9.449 1.891 28.826-27.043 46.553-65.783 45.511-108.565-1.855-76.206-63.595-138.208-139.793-140.369C146.869 73.753 80 139.215 80 220c0 41.361 17.532 78.7 45.55 104.989 2.953 2.771 7.711 1.77 9.453-1.887 4.774-10.021 11.923-18.598 21.235-25.363 3.029-2.2 3.304-6.566.629-9.185zM224 0C100.204 0 0 100.185 0 224c0 89.992 52.602 165.647 125.739 201.408 4.333 2.118 9.267-1.544 8.535-6.31-2.382-15.512-4.342-30.946-5.406-44.339-.146-1.836-1.149-3.486-2.678-4.512-47.4-31.806-78.564-86.016-78.187-147.347.592-96.237 79.29-174.648 175.529-174.899C320.793 47.747 400 126.797 400 224c0 61.932-32.158 116.49-80.65 147.867-.999 14.037-3.069 30.588-5.624 47.23-.732 4.767 4.203 8.429 8.535 6.31C395.227 389.727 448 314.187 448 224 448 100.205 347.815 0 224 0zm0 160c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64z\"],\n    \"poll\": [448, 512, [], \"f681\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM160 368c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V240c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v128zm96 0c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V144c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v224zm96 0c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-64c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v64z\"],\n    \"poll-h\": [448, 512, [], \"f682\", \"M448 432V80c0-26.5-21.5-48-48-48H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48zM112 192c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h128c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16H112zm0 96c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h224c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16H112zm0 96c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-64z\"],\n    \"poo\": [512, 512, [], \"f2fe\", \"M451.4 369.1C468.7 356 480 335.4 480 312c0-39.8-32.2-72-72-72h-14.1c13.4-11.7 22.1-28.8 22.1-48 0-35.3-28.7-64-64-64h-5.9c3.6-10.1 5.9-20.7 5.9-32 0-53-43-96-96-96-5.2 0-10.2.7-15.1 1.5C250.3 14.6 256 30.6 256 48c0 44.2-35.8 80-80 80h-16c-35.3 0-64 28.7-64 64 0 19.2 8.7 36.3 22.1 48H104c-39.8 0-72 32.2-72 72 0 23.4 11.3 44 28.6 57.1C26.3 374.6 0 404.1 0 440c0 39.8 32.2 72 72 72h368c39.8 0 72-32.2 72-72 0-35.9-26.3-65.4-60.6-70.9zM192 256c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm159.5 139C341 422.9 293 448 256 448s-85-25.1-95.5-53c-2-5.3 2-11 7.8-11h175.4c5.8 0 9.8 5.7 7.8 11zM320 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"poo-storm\": [448, 512, [], \"f75a\", \"M308 336h-57.7l17.3-64.9c2-7.6-3.7-15.1-11.6-15.1h-68c-6 0-11.1 4.5-11.9 10.4l-16 120c-1 7.2 4.6 13.6 11.9 13.6h59.3l-23 97.2c-1.8 7.6 4 14.8 11.7 14.8 4.2 0 8.2-2.2 10.4-6l88-152c4.6-8-1.2-18-10.4-18zm66.4-111.3c5.9-9.6 9.6-20.6 9.6-32.7 0-35.3-28.7-64-64-64h-5.9c3.6-10.1 5.9-20.7 5.9-32 0-53-43-96-96-96-5.2 0-10.2.7-15.1 1.5C218.3 14.6 224 30.6 224 48c0 44.2-35.8 80-80 80h-16c-35.3 0-64 28.7-64 64 0 12.1 3.7 23.1 9.6 32.7C32.6 228 0 262.2 0 304c0 44 36 80 80 80h48.3c.1-.6 0-1.2 0-1.8l16-120c3-21.8 21.7-38.2 43.7-38.2h68c13.8 0 26.5 6.3 34.9 17.2s11.2 24.8 7.6 38.1l-6.6 24.7h16c15.7 0 30.3 8.4 38.1 22 7.8 13.6 7.8 30.5 0 44l-8.1 14h30c44 0 80-36 80-80 .1-41.8-32.5-76-73.5-79.3z\"],\n    \"poop\": [512, 512, [], \"f619\", \"M451.36 369.14C468.66 355.99 480 335.41 480 312c0-39.77-32.24-72-72-72h-14.07c13.42-11.73 22.07-28.78 22.07-48 0-35.35-28.65-64-64-64h-5.88c3.57-10.05 5.88-20.72 5.88-32 0-53.02-42.98-96-96-96-5.17 0-10.15.74-15.11 1.52C250.31 14.64 256 30.62 256 48c0 44.18-35.82 80-80 80h-16c-35.35 0-64 28.65-64 64 0 19.22 8.65 36.27 22.07 48H104c-39.76 0-72 32.23-72 72 0 23.41 11.34 43.99 28.64 57.14C26.31 374.62 0 404.12 0 440c0 39.76 32.24 72 72 72h368c39.76 0 72-32.24 72-72 0-35.88-26.31-65.38-60.64-70.86z\"],\n    \"portrait\": [384, 512, [], \"f3e0\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM192 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 384 80 375.4 80 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"],\n    \"pound-sign\": [320, 512, [], \"f154\", \"M308 352h-45.495c-6.627 0-12 5.373-12 12v50.848H128V288h84c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-84v-63.556c0-32.266 24.562-57.086 61.792-57.086 23.658 0 45.878 11.505 57.652 18.849 5.151 3.213 11.888 2.051 15.688-2.685l28.493-35.513c4.233-5.276 3.279-13.005-2.119-17.081C273.124 54.56 236.576 32 187.931 32 106.026 32 48 84.742 48 157.961V224H20c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h28v128H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12V364c0-6.627-5.373-12-12-12z\"],\n    \"power-off\": [512, 512, [], \"f011\", \"M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z\"],\n    \"pray\": [384, 512, [], \"f683\", \"M256 128c35.35 0 64-28.65 64-64S291.35 0 256 0s-64 28.65-64 64 28.65 64 64 64zm-30.63 169.75c14.06 16.72 39 19.09 55.97 5.22l88-72.02c17.09-13.98 19.59-39.19 5.62-56.28-13.97-17.11-39.19-19.59-56.31-5.62l-57.44 47-38.91-46.31c-15.44-18.39-39.22-27.92-64-25.33-24.19 2.48-45.25 16.27-56.37 36.92l-49.37 92.03c-23.4 43.64-8.69 96.37 34.19 123.75L131.56 432H40c-22.09 0-40 17.91-40 40s17.91 40 40 40h208c34.08 0 53.77-42.79 28.28-68.28L166.42 333.86l34.8-64.87 24.15 28.76z\"],\n    \"praying-hands\": [640, 512, [], \"f684\", \"M272 191.91c-17.6 0-32 14.4-32 32v80c0 8.84-7.16 16-16 16s-16-7.16-16-16v-76.55c0-17.39 4.72-34.47 13.69-49.39l77.75-129.59c9.09-15.16 4.19-34.81-10.97-43.91-14.45-8.67-32.72-4.3-42.3 9.21-.2.23-.62.21-.79.48l-117.26 175.9C117.56 205.9 112 224.31 112 243.29v80.23l-90.12 30.04A31.974 31.974 0 0 0 0 383.91v96c0 10.82 8.52 32 32 32 2.69 0 5.41-.34 8.06-1.03l179.19-46.62C269.16 449.99 304 403.8 304 351.91v-128c0-17.6-14.4-32-32-32zm346.12 161.73L528 323.6v-80.23c0-18.98-5.56-37.39-16.12-53.23L394.62 14.25c-.18-.27-.59-.24-.79-.48-9.58-13.51-27.85-17.88-42.3-9.21-15.16 9.09-20.06 28.75-10.97 43.91l77.75 129.59c8.97 14.92 13.69 32 13.69 49.39V304c0 8.84-7.16 16-16 16s-16-7.16-16-16v-80c0-17.6-14.4-32-32-32s-32 14.4-32 32v128c0 51.89 34.84 98.08 84.75 112.34l179.19 46.62c2.66.69 5.38 1.03 8.06 1.03 23.48 0 32-21.18 32-32v-96c0-13.77-8.81-25.99-21.88-30.35z\"],\n    \"prescription\": [384, 512, [], \"f5b1\", \"M301.26 352l78.06-78.06c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0L256 306.74l-83.96-83.96C219.31 216.8 256 176.89 256 128c0-53.02-42.98-96-96-96H16C7.16 32 0 39.16 0 48v256c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-80h18.75l128 128-78.06 78.06c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0L256 397.25l78.06 78.06c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63L301.26 352zM64 96h96c17.64 0 32 14.36 32 32s-14.36 32-32 32H64V96z\"],\n    \"prescription-bottle\": [384, 512, [], \"f485\", \"M32 192h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v64zM360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24z\"],\n    \"prescription-bottle-alt\": [384, 512, [], \"f486\", \"M360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24zM32 480c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v352zm64-184c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48z\"],\n    \"print\": [512, 512, [], \"f02f\", \"M448 192V77.25c0-8.49-3.37-16.62-9.37-22.63L393.37 9.37c-6-6-14.14-9.37-22.63-9.37H96C78.33 0 64 14.33 64 32v160c-35.35 0-64 28.65-64 64v112c0 8.84 7.16 16 16 16h48v96c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32v-96h48c8.84 0 16-7.16 16-16V256c0-35.35-28.65-64-64-64zm-64 256H128v-96h256v96zm0-224H128V64h192v48c0 8.84 7.16 16 16 16h48v96zm48 72c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"procedures\": [640, 512, [], \"f487\", \"M528 224H272c-8.8 0-16 7.2-16 16v144H64V144c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v352c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48h512v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V336c0-61.9-50.1-112-112-112zM136 96h126.1l27.6 55.2c5.9 11.8 22.7 11.8 28.6 0L368 51.8 390.1 96H512c8.8 0 16-7.2 16-16s-7.2-16-16-16H409.9L382.3 8.8C376.4-3 359.6-3 353.7 8.8L304 108.2l-19.9-39.8c-1.4-2.7-4.1-4.4-7.2-4.4H136c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm24 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64z\"],\n    \"project-diagram\": [640, 512, [], \"f542\", \"M384 320H256c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zM192 32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v128c0 17.67 14.33 32 32 32h95.72l73.16 128.04C211.98 300.98 232.4 288 256 288h.28L192 175.51V128h224V64H192V32zM608 0H480c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32z\"],\n    \"puzzle-piece\": [576, 512, [], \"f12e\", \"M519.442 288.651c-41.519 0-59.5 31.593-82.058 31.593C377.409 320.244 432 144 432 144s-196.288 80-196.288-3.297c0-35.827 36.288-46.25 36.288-85.985C272 19.216 243.885 0 210.539 0c-34.654 0-66.366 18.891-66.366 56.346 0 41.364 31.711 59.277 31.711 81.75C175.885 207.719 0 166.758 0 166.758v333.237s178.635 41.047 178.635-28.662c0-22.473-40-40.107-40-81.471 0-37.456 29.25-56.346 63.577-56.346 33.673 0 61.788 19.216 61.788 54.717 0 39.735-36.288 50.158-36.288 85.985 0 60.803 129.675 25.73 181.23 25.73 0 0-34.725-120.101 25.827-120.101 35.962 0 46.423 36.152 86.308 36.152C556.712 416 576 387.99 576 354.443c0-34.199-18.962-65.792-56.558-65.792z\"],\n    \"qrcode\": [448, 512, [], \"f029\", \"M0 224h192V32H0v192zM64 96h64v64H64V96zm192-64v192h192V32H256zm128 128h-64V96h64v64zM0 480h192V288H0v192zm64-128h64v64H64v-64zm352-64h32v128h-96v-32h-32v96h-64V288h96v32h64v-32zm0 160h32v32h-32v-32zm-64 0h32v32h-32v-32z\"],\n    \"question\": [384, 512, [], \"f128\", \"M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z\"],\n    \"question-circle\": [512, 512, [], \"f059\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\"],\n    \"quidditch\": [640, 512, [], \"f458\", \"M256.5 216.8L343.2 326s-16.6 102.4-76.6 150.1C206.7 523.8 0 510.2 0 510.2s3.8-23.1 11-55.4l94.6-112.2c4-4.7-.9-11.6-6.6-9.5l-60.4 22.1c14.4-41.7 32.7-80 54.6-97.5 59.9-47.8 163.3-40.9 163.3-40.9zm238 135c-44 0-79.8 35.8-79.8 79.9 0 44.1 35.7 79.9 79.8 79.9 44.1 0 79.8-35.8 79.8-79.9 0-44.2-35.8-79.9-79.8-79.9zM636.5 31L616.7 6c-5.5-6.9-15.5-8-22.4-2.6L361.8 181.3l-34.1-43c-5.1-6.4-15.1-5.2-18.6 2.2l-25.3 54.6 86.7 109.2 58.8-12.4c8-1.7 11.4-11.2 6.3-17.6l-34.1-42.9L634 53.5c6.9-5.5 8-15.6 2.5-22.5z\"],\n    \"quote-left\": [512, 512, [], \"f10d\", \"M464 256h-80v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8c-88.4 0-160 71.6-160 160v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zm-288 0H96v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8C71.6 32 0 103.6 0 192v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"],\n    \"quote-right\": [512, 512, [], \"f10e\", \"M464 32H336c-26.5 0-48 21.5-48 48v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48zm-288 0H48C21.5 32 0 53.5 0 80v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48z\"],\n    \"quran\": [448, 512, [], \"f687\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM301.08 145.82c.6-1.21 1.76-1.82 2.92-1.82s2.32.61 2.92 1.82l11.18 22.65 25 3.63c2.67.39 3.74 3.67 1.81 5.56l-18.09 17.63 4.27 24.89c.36 2.11-1.31 3.82-3.21 3.82-.5 0-1.02-.12-1.52-.38L304 211.87l-22.36 11.75c-.5.26-1.02.38-1.52.38-1.9 0-3.57-1.71-3.21-3.82l4.27-24.89-18.09-17.63c-1.94-1.89-.87-5.17 1.81-5.56l24.99-3.63 11.19-22.65zm-57.89-69.01c13.67 0 27.26 2.49 40.38 7.41a6.775 6.775 0 1 1-2.38 13.12c-.67 0-3.09-.21-4.13-.21-52.31 0-94.86 42.55-94.86 94.86 0 52.3 42.55 94.86 94.86 94.86 1.03 0 3.48-.21 4.13-.21 3.93 0 6.8 3.14 6.8 6.78 0 2.98-1.94 5.51-4.62 6.42-13.07 4.87-26.59 7.34-40.19 7.34C179.67 307.19 128 255.51 128 192c0-63.52 51.67-115.19 115.19-115.19zM380.8 448H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"],\n    \"radiation\": [496, 512, [], \"f7b9\", \"M167.8 256.2H16.2C7.1 256.2-.6 263.9 0 273c5.1 75.8 44.4 142.2 102.5 184.2 7.4 5.3 17.9 2.9 22.7-4.8L205.6 324c-22.6-14.3-37.8-39.2-37.8-67.8zm37.8-67.7c12.3-7.7 26.8-12.4 42.4-12.4s30 4.7 42.4 12.4L370.8 60c4.8-7.7 2.4-18.1-5.6-22.4C330.3 18.8 290.4 8 248 8s-82.3 10.8-117.2 29.6c-8 4.3-10.4 14.8-5.6 22.4l80.4 128.5zm42.4 19.7c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm231.8 48H328.2c0 28.6-15.2 53.5-37.8 67.7l80.4 128.4c4.8 7.7 15.3 10.2 22.7 4.8 58.1-42 97.4-108.4 102.5-184.2.6-9-7.1-16.7-16.2-16.7z\"],\n    \"radiation-alt\": [496, 512, [], \"f7ba\", \"M184 256h-79.1c-9.2 0-16.9 7.7-16 16.8 4.6 43.6 27 81.8 59.5 107.8 7.6 6.1 18.8 4.5 24-3.8l41.7-66.8c-18-11.2-30.1-31.2-30.1-54zm97.8-54.1l41.8-66.9c4.9-7.8 2.4-18.4-5.8-22.5C296.7 102.1 273.1 96 248 96s-48.7 6.1-69.9 16.5c-8.2 4.1-10.6 14.7-5.8 22.5l41.8 66.9c9.8-6.2 21.4-9.9 33.8-9.9s24.1 3.7 33.9 9.9zM391.1 256H312c0 22.8-12.1 42.8-30.2 54.1l41.7 66.8c5.2 8.3 16.4 9.9 24 3.8 32.6-26 54.9-64.2 59.5-107.8 1.1-9.2-6.7-16.9-15.9-16.9zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 432c-101.5 0-184-82.5-184-184S146.5 72 248 72s184 82.5 184 184-82.5 184-184 184zm0-216c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"rainbow\": [576, 512, [], \"f75b\", \"M268.3 32.7C115.4 42.9 0 176.9 0 330.2V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C64 186.8 180.9 80.3 317.5 97.9 430.4 112.4 512 214 512 327.8V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-165.3-140-298.6-307.7-287.3zm-5.6 96.9C166 142 96 229.1 96 326.7V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-74.8 64.5-134.8 140.8-127.4 66.5 6.5 115.2 66.2 115.2 133.1V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-114.2-100.2-205.4-217.3-190.4zm6.2 96.3c-45.6 8.9-76.9 51.5-76.9 97.9V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-17.6 14.3-32 32-32s32 14.4 32 32v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-59.2-53.8-106-115.1-94.1z\"],\n    \"random\": [512, 512, [], \"f074\", \"M504.971 359.029c9.373 9.373 9.373 24.569 0 33.941l-80 79.984c-15.01 15.01-40.971 4.49-40.971-16.971V416h-58.785a12.004 12.004 0 0 1-8.773-3.812l-70.556-75.596 53.333-57.143L352 336h32v-39.981c0-21.438 25.943-31.998 40.971-16.971l80 79.981zM12 176h84l52.781 56.551 53.333-57.143-70.556-75.596A11.999 11.999 0 0 0 122.785 96H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12zm372 0v39.984c0 21.46 25.961 31.98 40.971 16.971l80-79.984c9.373-9.373 9.373-24.569 0-33.941l-80-79.981C409.943 24.021 384 34.582 384 56.019V96h-58.785a12.004 12.004 0 0 0-8.773 3.812L96 336H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h110.785c3.326 0 6.503-1.381 8.773-3.812L352 176h32z\"],\n    \"receipt\": [384, 512, [], \"f543\", \"M358.4 3.2L320 48 265.6 3.2a15.9 15.9 0 0 0-19.2 0L192 48 137.6 3.2a15.9 15.9 0 0 0-19.2 0L64 48 25.6 3.2C15-4.7 0 2.8 0 16v480c0 13.2 15 20.7 25.6 12.8L64 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L192 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L320 464l38.4 44.8c10.5 7.9 25.6.4 25.6-12.8V16c0-13.2-15-20.7-25.6-12.8zM320 360c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16z\"],\n    \"recycle\": [512, 512, [], \"f1b8\", \"M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z\"],\n    \"redo\": [512, 512, [], \"f01e\", \"M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z\"],\n    \"redo-alt\": [512, 512, [], \"f2f9\", \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\"],\n    \"registered\": [512, 512, [], \"f25d\", \"M285.363 207.475c0 18.6-9.831 28.431-28.431 28.431h-29.876v-56.14h23.378c28.668 0 34.929 8.773 34.929 27.709zM504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM363.411 360.414c-46.729-84.825-43.299-78.636-44.702-80.98 23.432-15.172 37.945-42.979 37.945-74.486 0-54.244-31.5-89.252-105.498-89.252h-70.667c-13.255 0-24 10.745-24 24V372c0 13.255 10.745 24 24 24h22.567c13.255 0 24-10.745 24-24v-71.663h25.556l44.129 82.937a24.001 24.001 0 0 0 21.188 12.727h24.464c18.261-.001 29.829-19.591 21.018-35.587z\"],\n    \"reply\": [512, 512, [], \"f3e5\", \"M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z\"],\n    \"reply-all\": [576, 512, [], \"f122\", \"M136.309 189.836L312.313 37.851C327.72 24.546 352 35.348 352 56.015v82.763c129.182 10.231 224 52.212 224 183.548 0 61.441-39.582 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 38.512-123.162-3.922-169.482-112.59-182.015v84.175c0 20.701-24.3 31.453-39.687 18.164L136.309 226.164c-11.071-9.561-11.086-26.753 0-36.328zm-128 36.328L184.313 378.15C199.7 391.439 224 380.687 224 359.986v-15.818l-108.606-93.785A55.96 55.96 0 0 1 96 207.998a55.953 55.953 0 0 1 19.393-42.38L224 71.832V56.015c0-20.667-24.28-31.469-39.687-18.164L8.309 189.836c-11.086 9.575-11.071 26.767 0 36.328z\"],\n    \"republican\": [640, 512, [], \"f75e\", \"M544 192c0-88.4-71.6-160-160-160H160C71.6 32 0 103.6 0 192v64h544v-64zm-367.7-21.6l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L128 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L272 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L416 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zM624 320h-32c-8.8 0-16 7.2-16 16v64c0 8.8-7.2 16-16 16s-16-7.2-16-16V288H0v176c0 8.8 7.2 16 16 16h96c8.8 0 16-7.2 16-16v-80h192v80c0 8.8 7.2 16 16 16h96c8.8 0 16-7.2 16-16V352h32v43.3c0 41.8 30 80.1 71.6 84.3 47.8 4.9 88.4-32.7 88.4-79.6v-64c0-8.8-7.2-16-16-16z\"],\n    \"restroom\": [640, 512, [], \"f7bd\", \"M128 128c35.3 0 64-28.7 64-64S163.3 0 128 0 64 28.7 64 64s28.7 64 64 64zm384 0c35.3 0 64-28.7 64-64S547.3 0 512 0s-64 28.7-64 64 28.7 64 64 64zm127.3 226.5l-45.6-185.8c-3.3-13.5-15.5-23-29.8-24.2-15 9.7-32.8 15.5-52 15.5-19.2 0-37-5.8-52-15.5-14.3 1.2-26.5 10.7-29.8 24.2l-45.6 185.8C381 369.6 393 384 409.2 384H464v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V384h54.8c16.2 0 28.2-14.4 24.5-29.5zM336 0h-32c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16zM180.1 144.4c-15 9.8-32.9 15.6-52.1 15.6-19.2 0-37.1-5.8-52.1-15.6C51.3 146.5 32 166.9 32 192v136c0 13.3 10.7 24 24 24h8v136c0 13.3 10.7 24 24 24h80c13.3 0 24-10.7 24-24V352h8c13.3 0 24-10.7 24-24V192c0-25.1-19.3-45.5-43.9-47.6z\"],\n    \"retweet\": [640, 512, [], \"f079\", \"M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z\"],\n    \"ribbon\": [448, 512, [], \"f4d6\", \"M6.1 444.3c-9.6 10.8-7.5 27.6 4.5 35.7l68.8 27.9c9.9 6.7 23.3 5 31.3-3.8l91.8-101.9-79.2-87.9-117.2 130zm435.8 0s-292-324.6-295.4-330.1c15.4-8.4 40.2-17.9 77.5-17.9s62.1 9.5 77.5 17.9c-3.3 5.6-56 64.6-56 64.6l79.1 87.7 34.2-38c28.7-31.9 33.3-78.6 11.4-115.5l-43.7-73.5c-4.3-7.2-9.9-13.3-16.8-18-40.7-27.6-127.4-29.7-171.4 0-6.9 4.7-12.5 10.8-16.8 18l-43.6 73.2c-1.5 2.5-37.1 62.2 11.5 116L337.5 504c8 8.9 21.4 10.5 31.3 3.8l68.8-27.9c11.9-8 14-24.8 4.3-35.6z\"],\n    \"ring\": [512, 512, [], \"f70b\", \"M256 64C110.06 64 0 125.91 0 208v98.13C0 384.48 114.62 448 256 448s256-63.52 256-141.87V208c0-82.09-110.06-144-256-144zm0 64c106.04 0 192 35.82 192 80 0 9.26-3.97 18.12-10.91 26.39C392.15 208.21 328.23 192 256 192s-136.15 16.21-181.09 42.39C67.97 226.12 64 217.26 64 208c0-44.18 85.96-80 192-80zM120.43 264.64C155.04 249.93 201.64 240 256 240s100.96 9.93 135.57 24.64C356.84 279.07 308.93 288 256 288s-100.84-8.93-135.57-23.36z\"],\n    \"road\": [576, 512, [], \"f018\", \"M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16c.5 4.72-3.21 8.84-7.96 8.84h-29.16c-4.75 0-8.46-4.12-7.96-8.84L267.91 64h-97.59c-11.93 0-22.76 7.29-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68c.86-8.14 7.72-14.32 15.91-14.32h68.8c8.19 0 15.05 6.18 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM260.4 135.16a8 8 0 0 1 7.96-7.16h39.29c4.09 0 7.53 3.09 7.96 7.16l4.6 43.58c.75 7.09-4.81 13.26-11.93 13.26h-40.54c-7.13 0-12.68-6.17-11.93-13.26l4.59-43.58zM315.64 304h-55.29c-9.5 0-16.91-8.23-15.91-17.68l5.07-48c.86-8.14 7.72-14.32 15.91-14.32h45.15c8.19 0 15.05 6.18 15.91 14.32l5.07 48c1 9.45-6.41 17.68-15.91 17.68z\"],\n    \"robot\": [640, 512, [], \"f544\", \"M0 256v128c0 17.7 14.3 32 32 32h32V224H32c-17.7 0-32 14.3-32 32zM464 96H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H176c-44.2 0-80 35.8-80 80v272c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V176c0-44.2-35.8-80-80-80zM256 416h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm128 120h-64v-32h64v32zm96 0h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-72h-32v192h32c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32z\"],\n    \"rocket\": [512, 512, [], \"f135\", \"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\"],\n    \"route\": [512, 512, [], \"f4d7\", \"M416 320h-96c-17.6 0-32-14.4-32-32s14.4-32 32-32h96s96-107 96-160-43-96-96-96-96 43-96 96c0 25.5 22.2 63.4 45.3 96H320c-52.9 0-96 43.1-96 96s43.1 96 96 96h96c17.6 0 32 14.4 32 32s-14.4 32-32 32H185.5c-16 24.8-33.8 47.7-47.3 64H416c52.9 0 96-43.1 96-96s-43.1-96-96-96zm0-256c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM96 256c-53 0-96 43-96 96s96 160 96 160 96-107 96-160-43-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"rss\": [448, 512, [], \"f09e\", \"M128.081 415.959c0 35.369-28.672 64.041-64.041 64.041S0 451.328 0 415.959s28.672-64.041 64.041-64.041 64.04 28.673 64.04 64.041zm175.66 47.25c-8.354-154.6-132.185-278.587-286.95-286.95C7.656 175.765 0 183.105 0 192.253v48.069c0 8.415 6.49 15.472 14.887 16.018 111.832 7.284 201.473 96.702 208.772 208.772.547 8.397 7.604 14.887 16.018 14.887h48.069c9.149.001 16.489-7.655 15.995-16.79zm144.249.288C439.596 229.677 251.465 40.445 16.503 32.01 7.473 31.686 0 38.981 0 48.016v48.068c0 8.625 6.835 15.645 15.453 15.999 191.179 7.839 344.627 161.316 352.465 352.465.353 8.618 7.373 15.453 15.999 15.453h48.068c9.034-.001 16.329-7.474 16.005-16.504z\"],\n    \"rss-square\": [448, 512, [], \"f143\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM112 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm157.533 0h-34.335c-6.011 0-11.051-4.636-11.442-10.634-5.214-80.05-69.243-143.92-149.123-149.123-5.997-.39-10.633-5.431-10.633-11.441v-34.335c0-6.535 5.468-11.777 11.994-11.425 110.546 5.974 198.997 94.536 204.964 204.964.352 6.526-4.89 11.994-11.425 11.994zm103.027 0h-34.334c-6.161 0-11.175-4.882-11.427-11.038-5.598-136.535-115.204-246.161-251.76-251.76C68.882 152.949 64 147.935 64 141.774V107.44c0-6.454 5.338-11.664 11.787-11.432 167.83 6.025 302.21 141.191 308.205 308.205.232 6.449-4.978 11.787-11.432 11.787z\"],\n    \"ruble-sign\": [384, 512, [], \"f158\", \"M239.36 320C324.48 320 384 260.542 384 175.071S324.48 32 239.36 32H76c-6.627 0-12 5.373-12 12v206.632H12c-6.627 0-12 5.373-12 12V308c0 6.627 5.373 12 12 12h52v32H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v52c0 6.627 5.373 12 12 12h58.56c6.627 0 12-5.373 12-12v-52H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H146.56v-32h92.8zm-92.8-219.252h78.72c46.72 0 74.88 29.11 74.88 74.323 0 45.832-28.16 75.561-76.16 75.561h-77.44V100.748z\"],\n    \"ruler\": [640, 512, [], \"f545\", \"M635.7 167.2L556.1 31.7c-8.8-15-28.3-20.1-43.5-11.5l-69 39.1L503.3 161c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L416 75l-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L333.2 122 278 153.3 337.8 255c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-59.7-101.7-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-27.9-47.5-55.2 31.3 59.7 101.7c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L84.9 262.9l-69 39.1C.7 310.7-4.6 329.8 4.2 344.8l79.6 135.6c8.8 15 28.3 20.1 43.5 11.5L624.1 210c15.2-8.6 20.4-27.8 11.6-42.8z\"],\n    \"ruler-combined\": [512, 512, [], \"f546\", \"M160 288h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56v-64h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56V96h-56c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8h56V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 2.77.91 5.24 1.57 7.8L160 329.38V288zm320 64h-32v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-41.37L24.2 510.43c2.56.66 5.04 1.57 7.8 1.57h448c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"],\n    \"ruler-horizontal\": [576, 512, [], \"f547\", \"M544 128h-48v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8H88c-4.42 0-8-3.58-8-8v-88H32c-17.67 0-32 14.33-32 32v192c0 17.67 14.33 32 32 32h512c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32z\"],\n    \"ruler-vertical\": [256, 512, [], \"f548\", \"M168 416c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 17.67 14.33 32 32 32h192c17.67 0 32-14.33 32-32v-64h-88z\"],\n    \"running\": [416, 512, [], \"f70c\", \"M272 96c26.51 0 48-21.49 48-48S298.51 0 272 0s-48 21.49-48 48 21.49 48 48 48zM113.69 317.47l-14.8 34.52H32c-17.67 0-32 14.33-32 32s14.33 32 32 32h77.45c19.25 0 36.58-11.44 44.11-29.09l8.79-20.52-10.67-6.3c-17.32-10.23-30.06-25.37-37.99-42.61zM384 223.99h-44.03l-26.06-53.25c-12.5-25.55-35.45-44.23-61.78-50.94l-71.08-21.14c-28.3-6.8-57.77-.55-80.84 17.14l-39.67 30.41c-14.03 10.75-16.69 30.83-5.92 44.86s30.84 16.66 44.86 5.92l39.69-30.41c7.67-5.89 17.44-8 25.27-6.14l14.7 4.37-37.46 87.39c-12.62 29.48-1.31 64.01 26.3 80.31l84.98 50.17-27.47 87.73c-5.28 16.86 4.11 34.81 20.97 40.09 3.19 1 6.41 1.48 9.58 1.48 13.61 0 26.23-8.77 30.52-22.45l31.64-101.06c5.91-20.77-2.89-43.08-21.64-54.39l-61.24-36.14 31.31-78.28 20.27 41.43c8 16.34 24.92 26.89 43.11 26.89H384c17.67 0 32-14.33 32-32s-14.33-31.99-32-31.99z\"],\n    \"rupee-sign\": [320, 512, [], \"f156\", \"M308 96c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v44.748c0 6.627 5.373 12 12 12h85.28c27.308 0 48.261 9.958 60.97 27.252H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h158.757c-6.217 36.086-32.961 58.632-74.757 58.632H12c-6.627 0-12 5.373-12 12v53.012c0 3.349 1.4 6.546 3.861 8.818l165.052 152.356a12.001 12.001 0 0 0 8.139 3.182h82.562c10.924 0 16.166-13.408 8.139-20.818L116.871 319.906c76.499-2.34 131.144-53.395 138.318-127.906H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-58.69c-3.486-11.541-8.28-22.246-14.252-32H308z\"],\n    \"sad-cry\": [496, 512, [], \"f5b3\", \"M248 8C111 8 0 119 0 256c0 90.1 48.2 168.7 120 212.1V288c0-8.8 7.2-16 16-16s16 7.2 16 16v196.7c29.5 12.4 62 19.3 96 19.3s66.5-6.9 96-19.3V288c0-8.8 7.2-16 16-16s16 7.2 16 16v180.1C447.8 424.7 496 346 496 256 496 119 385 8 248 8zm-65.5 216.5c-14.8-13.2-46.2-13.2-61 0L112 233c-3.8 3.3-9.3 4-13.7 1.6-4.4-2.4-6.9-7.4-6.1-12.4 4-25.2 34.2-42.1 59.9-42.1S208 197 212 222.2c.8 5-1.7 10-6.1 12.4-5.8 3.1-11.2.7-13.7-1.6l-9.7-8.5zM248 416c-26.5 0-48-28.7-48-64s21.5-64 48-64 48 28.7 48 64-21.5 64-48 64zm149.8-181.5c-5.8 3.1-11.2.7-13.7-1.6l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L304 233c-3.8 3.3-9.3 4-13.7 1.6-4.4-2.4-6.9-7.4-6.1-12.4 4-25.2 34.2-42.1 59.9-42.1S400 197 404 222.2c.6 4.9-1.8 9.9-6.2 12.3z\"],\n    \"sad-tear\": [496, 512, [], \"f5b4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM152 416c-26.5 0-48-21-48-47 0-20 28.5-60.4 41.6-77.8 3.2-4.3 9.6-4.3 12.8 0C171.5 308.6 200 349 200 369c0 26-21.5 47-48 47zm16-176c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm170.2 154.2C315.8 367.4 282.9 352 248 352c-21.2 0-21.2-32 0-32 44.4 0 86.3 19.6 114.7 53.8 13.8 16.4-11.2 36.5-24.5 20.4z\"],\n    \"satellite\": [512, 512, [], \"f7bf\", \"M502.7 265l-80.3-80.4 47.8-47.9c13.1-13.1 13.1-34.4 0-47.5l-47.5-47.5c-13.1-13.1-34.4-13.1-47.5 0l-47.8 47.9-80.3-80.3C240.8 3.1 232.7 0 224.5 0S208.2 3.1 202 9.3L105.3 106c-12.4 12.4-12.4 32.6 0 45.1l80.3 80.4-9.8 9.8C122.1 217 59.6 218.6 7.3 246.7c-8.5 4.6-9.6 16.4-2.8 23.2L112 377.4l-17.8 17.8c-2.6-.7-5-1.6-7.8-1.6-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32c0-2.8-.9-5.2-1.6-7.8l17.8-17.8 107.5 107.5c6.8 6.8 18.7 5.7 23.2-2.8 28.1-52.3 29.7-114.8 5.4-168.5l9.9-9.9 80.3 80.4c6.2 6.2 14.4 9.3 22.5 9.3s16.3-3.1 22.5-9.3l96.7-96.7c12.5-12.4 12.5-32.6.1-45zm-352-136.5l73.8-73.8 68.9 68.9-73.8 73.8-68.9-68.9zm232.8 232.8l-68.9-68.9 73.8-73.8 68.9 68.9-73.8 73.8z\"],\n    \"satellite-dish\": [512, 512, [], \"f7c0\", \"M188.8 345.9l27.4-27.4c2.6.7 5 1.6 7.8 1.6 17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32c0 2.8.9 5.2 1.6 7.8l-27.4 27.4L49.4 206.5c-7.3-7.3-20.1-6.1-25 3-41.8 77.8-29.9 176.7 35.7 242.3 65.6 65.6 164.6 77.5 242.3 35.7 9.2-4.9 10.4-17.7 3-25L188.8 345.9zM209 0c-9.2-.5-17 6.8-17 16v31.6c0 8.5 6.6 15.5 15 15.9 129.4 7 233.4 112 240.9 241.5.5 8.4 7.5 15 15.9 15h32.1c9.2 0 16.5-7.8 16-17C503.4 139.8 372.2 8.6 209 0zm.3 96c-9.3-.7-17.3 6.7-17.3 16.1v32.1c0 8.4 6.5 15.3 14.8 15.9 76.8 6.3 138 68.2 144.9 145.2.8 8.3 7.6 14.7 15.9 14.7h32.2c9.3 0 16.8-8 16.1-17.3-8.4-110.1-96.5-198.2-206.6-206.7z\"],\n    \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\"],\n    \"school\": [640, 512, [], \"f549\", \"M0 224v272c0 8.84 7.16 16 16 16h80V192H32c-17.67 0-32 14.33-32 32zm360-48h-24v-40c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v64c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zm137.75-63.96l-160-106.67a32.02 32.02 0 0 0-35.5 0l-160 106.67A32.002 32.002 0 0 0 128 138.66V512h128V368c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v144h128V138.67c0-10.7-5.35-20.7-14.25-26.63zM320 256c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zm288-64h-64v320h80c8.84 0 16-7.16 16-16V224c0-17.67-14.33-32-32-32z\"],\n    \"screwdriver\": [512, 512, [], \"f54a\", \"M448 0L320 96v62.06l-83.03 83.03c6.79 4.25 13.27 9.06 19.07 14.87 5.8 5.8 10.62 12.28 14.87 19.07L353.94 192H416l96-128-64-64zM128 278.59L10.92 395.67c-14.55 14.55-14.55 38.15 0 52.71l52.7 52.7c14.56 14.56 38.15 14.56 52.71 0L233.41 384c29.11-29.11 29.11-76.3 0-105.41s-76.3-29.11-105.41 0z\"],\n    \"scroll\": [640, 512, [], \"f70e\", \"M48 0C21.53 0 0 21.53 0 48v64c0 8.84 7.16 16 16 16h80V48C96 21.53 74.47 0 48 0zm208 412.57V352h288V96c0-52.94-43.06-96-96-96H111.59C121.74 13.41 128 29.92 128 48v368c0 38.87 34.65 69.65 74.75 63.12C234.22 474 256 444.46 256 412.57zM288 384v32c0 52.93-43.06 96-96 96h336c61.86 0 112-50.14 112-112 0-8.84-7.16-16-16-16H288z\"],\n    \"sd-card\": [384, 512, [], \"f7c2\", \"M320 0H128L0 128v320c0 35.3 28.7 64 64 64h256c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zM160 160h-48V64h48v96zm80 0h-48V64h48v96zm80 0h-48V64h48v96z\"],\n    \"search\": [512, 512, [], \"f002\", \"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"],\n    \"search-dollar\": [512, 512, [], \"f688\", \"M505.04 442.66l-99.71-99.69c-4.5-4.5-10.6-7-17-7h-16.3c27.6-35.3 44-79.69 44-127.99C416.03 93.09 322.92 0 208.02 0S0 93.09 0 207.98s93.11 207.98 208.02 207.98c48.3 0 92.71-16.4 128.01-44v16.3c0 6.4 2.5 12.5 7 17l99.71 99.69c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.59.1-33.99zm-297.02-90.7c-79.54 0-144-64.34-144-143.98 0-79.53 64.35-143.98 144-143.98 79.54 0 144 64.34 144 143.98 0 79.53-64.35 143.98-144 143.98zm27.11-152.54l-45.01-13.5c-5.16-1.55-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11c4.56 0 8.96 1.29 12.82 3.72 3.24 2.03 7.36 1.91 10.13-.73l11.75-11.21c3.53-3.37 3.33-9.21-.57-12.14-9.1-6.83-20.08-10.77-31.37-11.35V112c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v16.12c-23.63.63-42.68 20.55-42.68 45.07 0 19.97 12.99 37.81 31.58 43.39l45.01 13.5c5.16 1.55 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.1c-4.56 0-8.96-1.29-12.82-3.72-3.24-2.03-7.36-1.91-10.13.73l-11.75 11.21c-3.53 3.37-3.33 9.21.57 12.14 9.1 6.83 20.08 10.77 31.37 11.35V304c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-16.12c23.63-.63 42.68-20.54 42.68-45.07 0-19.97-12.99-37.81-31.59-43.39z\"],\n    \"search-location\": [512, 512, [], \"f689\", \"M505.04 442.66l-99.71-99.69c-4.5-4.5-10.6-7-17-7h-16.3c27.6-35.3 44-79.69 44-127.99C416.03 93.09 322.92 0 208.02 0S0 93.09 0 207.98s93.11 207.98 208.02 207.98c48.3 0 92.71-16.4 128.01-44v16.3c0 6.4 2.5 12.5 7 17l99.71 99.69c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.59.1-33.99zm-297.02-90.7c-79.54 0-144-64.34-144-143.98 0-79.53 64.35-143.98 144-143.98 79.54 0 144 64.34 144 143.98 0 79.53-64.35 143.98-144 143.98zm.02-239.96c-40.78 0-73.84 33.05-73.84 73.83 0 32.96 48.26 93.05 66.75 114.86a9.24 9.24 0 0 0 14.18 0c18.49-21.81 66.75-81.89 66.75-114.86 0-40.78-33.06-73.83-73.84-73.83zm0 96c-13.26 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"search-minus\": [512, 512, [], \"f010\", \"M304 192v32c0 6.6-5.4 12-12 12H124c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"],\n    \"search-plus\": [512, 512, [], \"f00e\", \"M304 192v32c0 6.6-5.4 12-12 12h-56v56c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-56h-56c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h56v-56c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v56h56c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"],\n    \"seedling\": [512, 512, [], \"f4d8\", \"M64 96H0c0 123.7 100.3 224 224 224v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C288 196.3 187.7 96 64 96zm384-64c-84.2 0-157.4 46.5-195.7 115.2 27.7 30.2 48.2 66.9 59 107.6C424 243.1 512 147.9 512 32h-64z\"],\n    \"server\": [512, 512, [], \"f233\", \"M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z\"],\n    \"shapes\": [512, 512, [], \"f61f\", \"M512 320v160c0 17.67-14.33 32-32 32H320c-17.67 0-32-14.33-32-32V320c0-17.67 14.33-32 32-32h160c17.67 0 32 14.33 32 32zm-384-64C57.31 256 0 313.31 0 384s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm351.03-32c25.34 0 41.18-26.67 28.51-48L412.51 16c-12.67-21.33-44.35-21.33-57.02 0l-95.03 160c-12.67 21.33 3.17 48 28.51 48h190.06z\"],\n    \"share\": [512, 512, [], \"f064\", \"M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z\"],\n    \"share-alt\": [448, 512, [], \"f1e0\", \"M352 320c-22.608 0-43.387 7.819-59.79 20.895l-102.486-64.054a96.551 96.551 0 0 0 0-41.683l102.486-64.054C308.613 184.181 329.392 192 352 192c53.019 0 96-42.981 96-96S405.019 0 352 0s-96 42.981-96 96c0 7.158.79 14.13 2.276 20.841L155.79 180.895C139.387 167.819 118.608 160 96 160c-53.019 0-96 42.981-96 96s42.981 96 96 96c22.608 0 43.387-7.819 59.79-20.895l102.486 64.054A96.301 96.301 0 0 0 256 416c0 53.019 42.981 96 96 96s96-42.981 96-96-42.981-96-96-96z\"],\n    \"share-alt-square\": [448, 512, [], \"f1e1\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zM304 296c-14.562 0-27.823 5.561-37.783 14.671l-67.958-40.775a56.339 56.339 0 0 0 0-27.793l67.958-40.775C276.177 210.439 289.438 216 304 216c30.928 0 56-25.072 56-56s-25.072-56-56-56-56 25.072-56 56c0 4.797.605 9.453 1.74 13.897l-67.958 40.775C171.823 205.561 158.562 200 144 200c-30.928 0-56 25.072-56 56s25.072 56 56 56c14.562 0 27.823-5.561 37.783-14.671l67.958 40.775a56.088 56.088 0 0 0-1.74 13.897c0 30.928 25.072 56 56 56s56-25.072 56-56C360 321.072 334.928 296 304 296z\"],\n    \"share-square\": [576, 512, [], \"f14d\", \"M568.482 177.448L424.479 313.433C409.3 327.768 384 317.14 384 295.985v-71.963c-144.575.97-205.566 35.113-164.775 171.353 4.483 14.973-12.846 26.567-25.006 17.33C155.252 383.105 120 326.488 120 269.339c0-143.937 117.599-172.5 264-173.312V24.012c0-21.174 25.317-31.768 40.479-17.448l144.003 135.988c10.02 9.463 10.028 25.425 0 34.896zM384 379.128V448H64V128h50.916a11.99 11.99 0 0 0 8.648-3.693c14.953-15.568 32.237-27.89 51.014-37.676C185.708 80.83 181.584 64 169.033 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48v-88.806c0-8.288-8.197-14.066-16.011-11.302a71.83 71.83 0 0 1-34.189 3.377c-7.27-1.046-13.8 4.514-13.8 11.859z\"],\n    \"shekel-sign\": [448, 512, [], \"f20b\", \"M248 168v168c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V168c0-75.11-60.89-136-136-136H24C10.75 32 0 42.74 0 56v408c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V112h112c30.93 0 56 25.07 56 56zM432 32h-48c-8.84 0-16 7.16-16 16v296c0 30.93-25.07 56-56 56H200V176c0-8.84-7.16-16-16-16h-48c-8.84 0-16 7.16-16 16v280c0 13.25 10.75 24 24 24h168c75.11 0 136-60.89 136-136V48c0-8.84-7.16-16-16-16z\"],\n    \"shield-alt\": [512, 512, [], \"f3ed\", \"M466.5 83.7l-192-80a48.15 48.15 0 0 0-36.9 0l-192 80C27.7 91.1 16 108.6 16 128c0 198.5 114.5 335.7 221.5 380.3 11.8 4.9 25.1 4.9 36.9 0C360.1 472.6 496 349.3 496 128c0-19.4-11.7-36.9-29.5-44.3zM256.1 446.3l-.1-381 175.9 73.3c-3.3 151.4-82.1 261.1-175.8 307.7z\"],\n    \"ship\": [640, 512, [], \"f21a\", \"M496.616 372.639l70.012-70.012c16.899-16.9 9.942-45.771-12.836-53.092L512 236.102V96c0-17.673-14.327-32-32-32h-64V24c0-13.255-10.745-24-24-24H248c-13.255 0-24 10.745-24 24v40h-64c-17.673 0-32 14.327-32 32v140.102l-41.792 13.433c-22.753 7.313-29.754 36.173-12.836 53.092l70.012 70.012C125.828 416.287 85.587 448 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24 61.023 0 107.499-20.61 143.258-59.396C181.677 487.432 216.021 512 256 512h128c39.979 0 74.323-24.568 88.742-59.396C508.495 491.384 554.968 512 616 512c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24-60.817 0-101.542-31.001-119.384-75.361zM192 128h256v87.531l-118.208-37.995a31.995 31.995 0 0 0-19.584 0L192 215.531V128z\"],\n    \"shipping-fast\": [640, 512, [], \"f48b\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H112C85.5 0 64 21.5 64 48v48H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h272c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H40c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H64v128c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n    \"shoe-prints\": [640, 512, [], \"f54b\", \"M192 160h32V32h-32c-35.35 0-64 28.65-64 64s28.65 64 64 64zM0 416c0 35.35 28.65 64 64 64h32V352H64c-35.35 0-64 28.65-64 64zm337.46-128c-34.91 0-76.16 13.12-104.73 32-24.79 16.38-44.52 32-104.73 32v128l57.53 15.97c26.21 7.28 53.01 13.12 80.31 15.05 32.69 2.31 65.6.67 97.58-6.2C472.9 481.3 512 429.22 512 384c0-64-84.18-96-174.54-96zM491.42 7.19C459.44.32 426.53-1.33 393.84.99c-27.3 1.93-54.1 7.77-80.31 15.04L256 32v128c60.2 0 79.94 15.62 104.73 32 28.57 18.88 69.82 32 104.73 32C555.82 224 640 192 640 128c0-45.22-39.1-97.3-148.58-120.81z\"],\n    \"shopping-bag\": [448, 512, [], \"f290\", \"M352 160v-32C352 57.42 294.579 0 224 0 153.42 0 96 57.42 96 128v32H0v272c0 44.183 35.817 80 80 80h288c44.183 0 80-35.817 80-80V160h-96zm-192-32c0-35.29 28.71-64 64-64s64 28.71 64 64v32H160v-32zm160 120c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm-192 0c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24z\"],\n    \"shopping-basket\": [576, 512, [], \"f291\", \"M576 216v16c0 13.255-10.745 24-24 24h-8l-26.113 182.788C514.509 462.435 494.257 480 470.37 480H105.63c-23.887 0-44.139-17.565-47.518-41.212L32 256h-8c-13.255 0-24-10.745-24-24v-16c0-13.255 10.745-24 24-24h67.341l106.78-146.821c10.395-14.292 30.407-17.453 44.701-7.058 14.293 10.395 17.453 30.408 7.058 44.701L170.477 192h235.046L326.12 82.821c-10.395-14.292-7.234-34.306 7.059-44.701 14.291-10.395 34.306-7.235 44.701 7.058L484.659 192H552c13.255 0 24 10.745 24 24zM312 392V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm112 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm-224 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24z\"],\n    \"shopping-cart\": [576, 512, [], \"f07a\", \"M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z\"],\n    \"shower\": [512, 512, [], \"f2cc\", \"M389.66 135.6L231.6 293.66c-9.37 9.37-24.57 9.37-33.94 0l-11.32-11.32c-9.37-9.37-9.37-24.57 0-33.94l.11-.11c-34.03-40.21-35.16-98.94-3.39-140.38-11.97-7.55-26.14-11.91-41.3-11.91C98.88 96 64 130.88 64 173.76V480H0V173.76C0 95.59 63.59 32 141.76 32c36.93 0 70.61 14.2 95.86 37.42 35.9-11.51 76.5-4.5 106.67 21.03l.11-.11c9.37-9.37 24.57-9.37 33.94 0l11.32 11.32c9.37 9.37 9.37 24.57 0 33.94zM384 208c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm48-16c8.837 0 16 7.163 16 16s-7.163 16-16 16-16-7.163-16-16 7.163-16 16-16zm80 16c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-128 32c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-96 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm64 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16z\"],\n    \"shuttle-van\": [640, 512, [], \"f5b6\", \"M628.88 210.65L494.39 49.27A48.01 48.01 0 0 0 457.52 32H32C14.33 32 0 46.33 0 64v288c0 17.67 14.33 32 32 32h32c0 53.02 42.98 96 96 96s96-42.98 96-96h128c0 53.02 42.98 96 96 96s96-42.98 96-96h32c17.67 0 32-14.33 32-32V241.38c0-11.23-3.94-22.1-11.12-30.73zM64 192V96h96v96H64zm96 240c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm160-240h-96V96h96v96zm160 240c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm-96-240V96h66.02l80 96H384z\"],\n    \"sign\": [512, 512, [], \"f4d9\", \"M496 64H128V16c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16v48H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V128h368c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16zM160 384h320V160H160v224z\"],\n    \"sign-in-alt\": [512, 512, [], \"f2f6\", \"M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z\"],\n    \"sign-language\": [448, 512, [], \"f2a7\", \"M91.434 483.987c-.307-16.018 13.109-29.129 29.13-29.129h62.293v-5.714H56.993c-16.021 0-29.437-13.111-29.13-29.129C28.16 404.491 40.835 392 56.428 392h126.429v-5.714H29.136c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h154.286v-5.714H57.707c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h168.566l-31.085-22.606c-12.762-9.281-15.583-27.149-6.302-39.912 9.281-12.761 27.15-15.582 39.912-6.302l123.361 89.715a34.287 34.287 0 0 1 14.12 27.728v141.136c0 15.91-10.946 29.73-26.433 33.374l-80.471 18.934a137.16 137.16 0 0 1-31.411 3.646H120c-15.593-.001-28.269-12.492-28.566-28.014zm73.249-225.701h36.423l-11.187-8.136c-18.579-13.511-20.313-40.887-3.17-56.536l-13.004-16.7c-9.843-12.641-28.43-15.171-40.88-5.088-12.065 9.771-14.133 27.447-4.553 39.75l36.371 46.71zm283.298-2.103l-5.003-152.452c-.518-15.771-13.722-28.136-29.493-27.619-15.773.518-28.137 13.722-27.619 29.493l1.262 38.415L283.565 11.019c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l76.889 98.745-4.509 3.511-94.79-121.734c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l94.443 121.288-4.509 3.511-77.675-99.754c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l52.053 66.849c12.497-8.257 29.055-8.285 41.69.904l123.36 89.714c10.904 7.93 17.415 20.715 17.415 34.198v16.999l61.064-47.549a34.285 34.285 0 0 0 13.202-28.177z\"],\n    \"sign-out-alt\": [512, 512, [], \"f2f5\", \"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z\"],\n    \"signal\": [640, 512, [], \"f012\", \"M216 288h-48c-8.84 0-16 7.16-16 16v192c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V304c0-8.84-7.16-16-16-16zM88 384H40c-8.84 0-16 7.16-16 16v96c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16v-96c0-8.84-7.16-16-16-16zm256-192h-48c-8.84 0-16 7.16-16 16v288c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V208c0-8.84-7.16-16-16-16zm128-96h-48c-8.84 0-16 7.16-16 16v384c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V112c0-8.84-7.16-16-16-16zM600 0h-48c-8.84 0-16 7.16-16 16v480c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16z\"],\n    \"signature\": [640, 512, [], \"f5b7\", \"M623.2 192c-51.8 3.5-125.7 54.7-163.1 71.5-29.1 13.1-54.2 24.4-76.1 24.4-22.6 0-26-16.2-21.3-51.9 1.1-8 11.7-79.2-42.7-76.1-25.1 1.5-64.3 24.8-169.5 126L192 182.2c30.4-75.9-53.2-151.5-129.7-102.8L7.4 116.3C0 121-2.2 130.9 2.5 138.4l17.2 27c4.7 7.5 14.6 9.7 22.1 4.9l58-38.9c18.4-11.7 40.7 7.2 32.7 27.1L34.3 404.1C27.5 421 37 448 64 448c8.3 0 16.5-3.2 22.6-9.4 42.2-42.2 154.7-150.7 211.2-195.8-2.2 28.5-2.1 58.9 20.6 83.8 15.3 16.8 37.3 25.3 65.5 25.3 35.6 0 68-14.6 102.3-30 33-14.8 99-62.6 138.4-65.8 8.5-.7 15.2-7.3 15.2-15.8v-32.1c.2-9.1-7.5-16.8-16.6-16.2z\"],\n    \"sim-card\": [384, 512, [], \"f7c4\", \"M320 0H128L0 128v320c0 35.3 28.7 64 64 64h256c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zM160 192h64v64h-64v-64zm-96 32c0-17.7 14.3-32 32-32h32v64H64v-32zm64 224H96c-17.7 0-32-14.3-32-32v-32h64v64zm96 0h-64v-64h64v64zm96-32c0 17.7-14.3 32-32 32h-32v-64h64v32zm0-64H64v-64h256v64zm0-96h-64v-64h32c17.7 0 32 14.3 32 32v32z\"],\n    \"sitemap\": [640, 512, [], \"f0e8\", \"M128 352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-24-80h192v48h48v-48h192v48h48v-57.59c0-21.17-17.23-38.41-38.41-38.41H344v-64h40c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h40v64H94.41C73.23 224 56 241.23 56 262.41V320h48v-48zm264 80h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm240 0h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"],\n    \"skating\": [448, 512, [], \"f7c5\", \"M400 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm0 448c-8.8 0-16 7.2-16 16s-7.2 16-16 16h-96c-8.8 0-16 7.2-16 16s7.2 16 16 16h96c26.5 0 48-21.5 48-48 0-8.8-7.2-16-16-16zm-282.2 8.6c-6.2 6.2-16.4 6.3-22.6 0l-67.9-67.9c-6.2-6.2-16.4-6.2-22.6 0s-6.2 16.4 0 22.6l67.9 67.9c9.4 9.4 21.7 14 34 14s24.6-4.7 33.9-14c6.2-6.2 6.2-16.4 0-22.6s-16.4-6.3-22.7 0zm56.1-179.8l-93.7 93.7c-12.5 12.5-12.5 32.8 0 45.2 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4l91.9-91.9-30.2-30.2c-5-5-9.4-10.7-13.2-16.8zM128 160h105.5l-20.1 17.2c-13.5 11.5-21.6 28.4-22.3 46.1-.7 17.8 6.1 35.2 18.7 47.7l78.2 78.2V432c0 17.7 14.3 32 32 32s32-14.3 32-32v-89.4c0-12.6-5.1-25-14.1-33.9l-61-61c.5-.4 1.2-.6 1.7-1.1l82.3-82.3c11.5-11.5 14.9-28.6 8.7-43.6-6.2-15-20.7-24.7-37-24.7H128c-17.7 0-32 14.3-32 32s14.3 32 32 32z\"],\n    \"skiing\": [512, 512, [], \"f7c9\", \"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm73 356.1c-9.4-9.4-24.6-9.4-33.9 0-12.1 12.1-30.5 15.4-45.1 8.7l-135.8-70.2 49.2-73.8c12.7-19 10.2-44.5-6-60.6L293 215.7l-107-53.1c-2.9 19.9 3.4 40 17.7 54.4l75.1 75.2-45.9 68.8L35 258.7c-11.7-6-26.2-1.5-32.3 10.3-6.1 11.8-1.5 26.3 10.3 32.3l391.9 202.5c11.9 5.5 24.5 8.1 37.1 8.1 23.2 0 46-9 63-26 9.3-9.3 9.3-24.5 0-33.8zM120 91.6l-11.5 22.5c14.4 7.3 31.2 4.9 42.8-4.8l47.2 23.4c-.1.1-.1.2-.2.3l114.5 56.8 32.4-13 6.4 19.1c4 12.1 12.6 22 24 27.7l58.1 29c15.9 7.9 35 1.5 42.9-14.3 7.9-15.8 1.5-35-14.3-42.9l-52.1-26.1-17.1-51.2c-8.1-24.2-40.9-56.6-84.5-39.2l-81.2 32.5-62.5-31c.3-14.5-7.2-28.6-20.9-35.6l-11.1 21.7h-.2l-34.4-7c-1.8-.4-3.7.2-5 1.7-1.9 2.2-1.7 5.5.5 7.4l26.2 23z\"],\n    \"skiing-nordic\": [576, 512, [], \"f7ca\", \"M336 96c26.5 0 48-21.5 48-48S362.5 0 336 0s-48 21.5-48 48 21.5 48 48 48zm216 320c-13.2 0-24 10.7-24 24 0 13.2-10.8 24-24 24h-69.5L460 285.6c11.7-4.7 20.1-16.2 20.1-29.6 0-17.7-14.3-32-32-32h-44L378 170.8c-12.5-25.5-35.5-44.2-61.8-50.9L245 98.7c-28.3-6.8-57.8-.5-80.8 17.1l-39.7 30.4c-14 10.7-16.7 30.8-5.9 44.9.7.9 1.7 1.3 2.4 2.1L66.9 464H24c-13.2 0-24 10.7-24 24s10.8 24 24 24h480c39.7 0 72-32.3 72-72 0-13.2-10.8-24-24-24zm-260.5 48h-96.9l43.1-91-22-13c-12.1-7.2-21.9-16.9-29.5-27.8L123.7 464H99.5l52.3-261.4c4.1-1 8.1-2.9 11.7-5.6l39.7-30.4c7.7-5.9 17.4-8 25.3-6.1l14.7 4.4-37.5 87.4c-12.6 29.5-1.3 64 26.3 80.3l85 50.2-25.5 81.2zm110.6 0h-43.6l23.6-75.5c5.9-20.8-2.9-43.1-21.6-54.4L299.3 298l31.3-78.3 20.3 41.4c8 16.3 24.9 26.9 43.1 26.9h33.3l-25.2 176z\"],\n    \"skull\": [512, 512, [], \"f54c\", \"M256 0C114.6 0 0 100.3 0 224c0 70.1 36.9 132.6 94.5 173.7 9.6 6.9 15.2 18.1 13.5 29.9l-9.4 66.2c-1.4 9.6 6 18.2 15.7 18.2H192v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h64v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h77.7c9.7 0 17.1-8.6 15.7-18.2l-9.4-66.2c-1.7-11.7 3.8-23 13.5-29.9C475.1 356.6 512 294.1 512 224 512 100.3 397.4 0 256 0zm-96 320c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm192 0c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64z\"],\n    \"skull-crossbones\": [448, 512, [], \"f714\", \"M439.15 453.06L297.17 384l141.99-69.06c7.9-3.95 11.11-13.56 7.15-21.46L432 264.85c-3.95-7.9-13.56-11.11-21.47-7.16L224 348.41 37.47 257.69c-7.9-3.95-17.51-.75-21.47 7.16L1.69 293.48c-3.95 7.9-.75 17.51 7.15 21.46L150.83 384 8.85 453.06c-7.9 3.95-11.11 13.56-7.15 21.47l14.31 28.63c3.95 7.9 13.56 11.11 21.47 7.15L224 419.59l186.53 90.72c7.9 3.95 17.51.75 21.47-7.15l14.31-28.63c3.95-7.91.74-17.52-7.16-21.47zM150 237.28l-5.48 25.87c-2.67 12.62 5.42 24.85 16.45 24.85h126.08c11.03 0 19.12-12.23 16.45-24.85l-5.5-25.87c41.78-22.41 70-62.75 70-109.28C368 57.31 303.53 0 224 0S80 57.31 80 128c0 46.53 28.22 86.87 70 109.28zM280 112c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32zm-112 0c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32z\"],\n    \"slash\": [640, 512, [], \"f715\", \"M594.53 508.63L6.18 53.9c-6.97-5.42-8.23-15.47-2.81-22.45L23.01 6.18C28.43-.8 38.49-2.06 45.47 3.37L633.82 458.1c6.97 5.42 8.23 15.47 2.81 22.45l-19.64 25.27c-5.42 6.98-15.48 8.23-22.46 2.81z\"],\n    \"sleigh\": [640, 512, [], \"f7cc\", \"M612.7 350.7l-9.3-7.4c-6.9-5.5-17-4.4-22.5 2.5l-10 12.5c-5.5 6.9-4.4 17 2.5 22.5l9.3 7.4c5.9 4.7 9.2 11.7 9.2 19.2 0 13.6-11 24.6-24.6 24.6H48c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h516c39 0 73.7-29.3 75.9-68.3 1.4-23.8-8.7-46.3-27.2-61zM32 224c0 59.6 40.9 109.2 96 123.5V400h64v-48h192v48h64v-48c53 0 96-43 96-96v-96c17.7 0 32-14.3 32-32s-14.3-32-32-32h-96v64c0 35.3-28.7 64-64 64h-20.7c-65.8 0-125.9-37.2-155.3-96-29.4-58.8-89.6-96-155.3-96H32C14.3 32 0 46.3 0 64s14.3 32 32 32v128z\"],\n    \"sliders-h\": [512, 512, [], \"f1de\", \"M496 384H160v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h80v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h336c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160h-80v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h336v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h80c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160H288V48c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h208v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h208c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16z\"],\n    \"smile\": [496, 512, [], \"f118\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm194.8 170.2C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.6-16.3 11-36.7 24.6-20.5 22.4 26.9 55.2 42.2 90.2 42.2s67.8-15.4 90.2-42.2c13.4-16.2 38.1 4.2 24.6 20.5z\"],\n    \"smile-beam\": [496, 512, [], \"f5b8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM112 223.4c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.3 7.4-15.8 4-15.1-4.5zm250.8 122.8C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.5-16.3 11-36.7 24.6-20.5 22.4 26.9 55.2 42.2 90.2 42.2s67.8-15.4 90.2-42.2c13.6-16.2 38.1 4.3 24.6 20.5zm6.2-118.3l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.6 8.6-11 11.9-15.1 4.5z\"],\n    \"smile-wink\": [496, 512, [], \"f4da\", \"M0 256c0 137 111 248 248 248s248-111 248-248S385 8 248 8 0 119 0 256zm200-48c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm158.5 16.5c-14.8-13.2-46.2-13.2-61 0L288 233c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S384 197 388 222.2c1.7 11.1-11.4 18.3-19.8 10.8l-9.7-8.5zM157.8 325.8C180.2 352.7 213 368 248 368s67.8-15.4 90.2-42.2c13.6-16.2 38.1 4.2 24.6 20.5C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.5-16.3 11.2-36.7 24.6-20.4z\"],\n    \"smog\": [640, 512, [], \"f75f\", \"M624 368H80c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h544c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zm-480 96H16c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h128c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zm416 0H224c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h336c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zM144 288h156.1c22.5 19.7 51.6 32 83.9 32s61.3-12.3 83.9-32H528c61.9 0 112-50.1 112-112S589.9 64 528 64c-18 0-34.7 4.6-49.7 12.1C454 31 406.8 0 352 0c-41 0-77.8 17.3-104 44.8C221.8 17.3 185 0 144 0 64.5 0 0 64.5 0 144s64.5 144 144 144z\"],\n    \"smoking\": [640, 512, [], \"f48d\", \"M632 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8zM553.3 87.1c-5.7-3.8-9.3-10-9.3-16.8V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v62.3c0 22 10.2 43.4 28.6 55.4 42.2 27.3 67.4 73.8 67.4 124V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-65.5-32.4-126.2-86.7-162.6zM432 352H48c-26.5 0-48 21.5-48 48v64c0 26.5 21.5 48 48 48h384c8.8 0 16-7.2 16-16V368c0-8.8-7.2-16-16-16zm-32 112H224v-64h176v64zm87.7-322.4C463.8 125 448 99.3 448 70.3V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v66.4c0 43.7 24.6 81.6 60.3 106.7 22.4 15.7 35.7 41.2 35.7 68.6V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-43.3-21-83.4-56.3-108.1zM536 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8z\"],\n    \"smoking-ban\": [512, 512, [], \"f54d\", \"M96 304c0 8.8 7.2 16 16 16h117.5l-96-96H112c-8.8 0-16 7.2-16 16v64zM256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm0 448c-105.9 0-192-86.1-192-192 0-41.4 13.3-79.7 35.7-111.1l267.4 267.4C335.7 434.7 297.4 448 256 448zm45.2-192H384v32h-50.8l-32-32zm111.1 111.1L365.2 320H400c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16H269.2L144.9 99.7C176.3 77.3 214.6 64 256 64c105.9 0 192 86.1 192 192 0 41.4-13.3 79.7-35.7 111.1zM320.6 128c-15.6 0-28.6-11.2-31.4-25.9-.7-3.6-4-6.1-7.7-6.1h-16.2c-5 0-8.7 4.5-8 9.4 4.6 30.9 31.2 54.6 63.3 54.6 15.6 0 28.6 11.2 31.4 25.9.7 3.6 4 6.1 7.7 6.1h16.2c5 0 8.7-4.5 8-9.4-4.6-30.9-31.2-54.6-63.3-54.6z\"],\n    \"sms\": [512, 512, [], \"f7cd\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7 1.3 3 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128.2 304H116c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h12.3c6 0 10.4-3.5 10.4-6.6 0-1.3-.8-2.7-2.1-3.8l-21.9-18.8c-8.5-7.2-13.3-17.5-13.3-28.1 0-21.3 19-38.6 42.4-38.6H156c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6 0 1.3.8 2.7 2.1 3.8l21.9 18.8c8.5 7.2 13.3 17.5 13.3 28.1.1 21.3-19 38.6-42.4 38.6zm191.8-8c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8v-68.2l-24.8 55.8c-2.9 5.9-11.4 5.9-14.3 0L224 227.8V296c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V192c0-8.8 7.2-16 16-16h16c6.1 0 11.6 3.4 14.3 8.8l17.7 35.4 17.7-35.4c2.7-5.4 8.3-8.8 14.3-8.8h16c8.8 0 16 7.2 16 16v104zm48.3 8H356c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h12.3c6 0 10.4-3.5 10.4-6.6 0-1.3-.8-2.7-2.1-3.8l-21.9-18.8c-8.5-7.2-13.3-17.5-13.3-28.1 0-21.3 19-38.6 42.4-38.6H396c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6 0 1.3.8 2.7 2.1 3.8l21.9 18.8c8.5 7.2 13.3 17.5 13.3 28.1.1 21.3-18.9 38.6-42.3 38.6z\"],\n    \"snowboarding\": [512, 512, [], \"f7ce\", \"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm28.8 153.6c5.8 4.3 12.5 6.4 19.2 6.4 9.7 0 19.3-4.4 25.6-12.8 10.6-14.1 7.8-34.2-6.4-44.8l-111.4-83.5c-13.8-10.3-29.1-18.4-45.4-23.8l-63.7-21.2-26.1-52.1C244.7 2 225.5-4.4 209.7 3.5c-15.8 7.9-22.2 27.1-14.3 42.9l29.1 58.1c5.7 11.4 15.6 19.9 27.7 24l16.4 5.5-41.2 20.6c-21.8 10.9-35.4 32.8-35.4 57.2v53.1l-74.1 24.7c-16.8 5.6-25.8 23.7-20.2 40.5 1.7 5.2 4.9 9.4 8.7 12.9l-38.7-14.1c-9.7-3.5-17.4-10.6-21.8-20-5.6-12-19.9-17.2-31.9-11.6s-17.2 19.9-11.6 31.9c9.8 21 27.1 36.9 48.9 44.8l364.8 132.7c9.7 3.5 19.7 5.3 29.7 5.3 12.5 0 24.9-2.7 36.5-8.2 12-5.6 17.2-19.9 11.6-31.9S474 454.7 462 460.3c-9.3 4.4-19.8 4.8-29.5 1.3l-90.8-33.1c8.7-4.1 15.6-11.8 17.8-21.9l21.9-102c3.9-18.2-3.2-37.2-18.1-48.4l-52-39 66-30.5 83.5 62.9zm-144.4 51.7l-19.7 92c-1.5 7.1-.1 13.9 2.8 20l-169.4-61.6c2.7-.2 5.4-.4 8-1.3l85-28.4c19.6-6.5 32.8-24.8 32.8-45.5V256l60.5 45.3z\"],\n    \"snowflake\": [448, 512, [], \"f2dc\", \"M440.3 345.2l-33.8-19.5 26-7c8.2-2.2 13.1-10.7 10.9-18.9l-4-14.9c-2.2-8.2-10.7-13.1-18.9-10.9l-70.8 19-63.9-37 63.8-36.9 70.8 19c8.2 2.2 16.7-2.7 18.9-10.9l4-14.9c2.2-8.2-2.7-16.7-10.9-18.9l-26-7 33.8-19.5c7.4-4.3 9.9-13.7 5.7-21.1L430.4 119c-4.3-7.4-13.7-9.9-21.1-5.7l-33.8 19.5 7-26c2.2-8.2-2.7-16.7-10.9-18.9l-14.9-4c-8.2-2.2-16.7 2.7-18.9 10.9l-19 70.8-62.8 36.2v-77.5l53.7-53.7c6.2-6.2 6.2-16.4 0-22.6l-11.3-11.3c-6.2-6.2-16.4-6.2-22.6 0L256 56.4V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v40.4l-19.7-19.7c-6.2-6.2-16.4-6.2-22.6 0L138.3 48c-6.3 6.2-6.3 16.4 0 22.6l53.7 53.7v77.5l-62.8-36.2-19-70.8c-2.2-8.2-10.7-13.1-18.9-10.9l-14.9 4c-8.2 2.2-13.1 10.7-10.9 18.9l7 26-33.8-19.5c-7.4-4.3-16.8-1.7-21.1 5.7L2.1 145.7c-4.3 7.4-1.7 16.8 5.7 21.1l33.8 19.5-26 7c-8.3 2.2-13.2 10.7-11 19l4 14.9c2.2 8.2 10.7 13.1 18.9 10.9l70.8-19 63.8 36.9-63.8 36.9-70.8-19c-8.2-2.2-16.7 2.7-18.9 10.9l-4 14.9c-2.2 8.2 2.7 16.7 10.9 18.9l26 7-33.8 19.6c-7.4 4.3-9.9 13.7-5.7 21.1l15.5 26.8c4.3 7.4 13.7 9.9 21.1 5.7l33.8-19.5-7 26c-2.2 8.2 2.7 16.7 10.9 18.9l14.9 4c8.2 2.2 16.7-2.7 18.9-10.9l19-70.8 62.8-36.2v77.5l-53.7 53.7c-6.3 6.2-6.3 16.4 0 22.6l11.3 11.3c6.2 6.2 16.4 6.2 22.6 0l19.7-19.7V496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-40.4l19.7 19.7c6.2 6.2 16.4 6.2 22.6 0l11.3-11.3c6.2-6.2 6.2-16.4 0-22.6L256 387.7v-77.5l62.8 36.2 19 70.8c2.2 8.2 10.7 13.1 18.9 10.9l14.9-4c8.2-2.2 13.1-10.7 10.9-18.9l-7-26 33.8 19.5c7.4 4.3 16.8 1.7 21.1-5.7l15.5-26.8c4.3-7.3 1.8-16.8-5.6-21z\"],\n    \"snowman\": [512, 512, [], \"f7d0\", \"M510.9 152.3l-5.9-14.5c-3.3-8-12.6-11.9-20.8-8.7L456 140.6v-29c0-8.6-7.2-15.6-16-15.6h-16c-8.8 0-16 7-16 15.6v46.9c0 .5.3 1 .3 1.5l-56.4 23c-5.9-10-13.3-18.9-22-26.6 13.6-16.6 22-37.4 22-60.5 0-53-43-96-96-96s-96 43-96 96c0 23.1 8.5 43.9 22 60.5-8.7 7.7-16 16.6-22 26.6l-56.4-23c.1-.5.3-1 .3-1.5v-46.9C104 103 96.8 96 88 96H72c-8.8 0-16 7-16 15.6v29l-28.1-11.5c-8.2-3.2-17.5.7-20.8 8.7l-5.9 14.5c-3.3 8 .7 17.1 8.9 20.3l135.2 55.2c-.4 4-1.2 8-1.2 12.2 0 10.1 1.7 19.6 4.2 28.9C120.9 296.4 104 334.2 104 376c0 54 28.4 100.9 70.8 127.8 9.3 5.9 20.3 8.2 31.3 8.2h99.2c13.3 0 26.3-4.1 37.2-11.7 46.5-32.3 74.4-89.4 62.9-152.6-5.5-30.2-20.5-57.6-41.6-79 2.5-9.2 4.2-18.7 4.2-28.7 0-4.2-.8-8.1-1.2-12.2L502 172.6c8.1-3.1 12.1-12.2 8.9-20.3zM224 96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32 272c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-88s-16-23.2-16-32 7.2-16 16-16 16 7.2 16 16-16 32-16 32zm32-56c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"snowplow\": [640, 512, [], \"f7d2\", \"M120 376c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm238.6 49.4c-14.5-14.5-22.6-34.1-22.6-54.6V269.2c0-20.5 8.1-40.1 22.6-54.6l36.7-36.7c6.2-6.2 6.2-16.4 0-22.6l-22.6-22.6c-6.2-6.2-16.4-6.2-22.6 0l-36.7 36.7c-26.5 26.5-41.4 62.4-41.4 99.9V288h-64v-50.9c0-8.7-1.8-17.2-5.2-25.2L364.5 29.1C356.9 11.4 339.6 0 320.3 0H176c-26.5 0-48 21.5-48 48v112h-16c-26.5 0-48 21.5-48 48v91.2C26.3 317.2 0 355.4 0 400c0 61.9 50.1 112 112 112h256c61.9 0 112-50.1 112-112 0-17.3-4.2-33.4-11.2-48H512v18.7c0 37.5 14.9 73.4 41.4 99.9l36.7 36.7c6.2 6.2 16.4 6.2 22.6 0l22.6-22.6c6.2-6.2 6.2-16.4 0-22.6l-36.7-36.7zM192 64h117.8l68.6 160H256l-64-64V64zm176 384H112c-26.5 0-48-21.5-48-48s21.5-48 48-48h256c26.5 0 48 21.5 48 48s-21.5 48-48 48z\"],\n    \"socks\": [512, 512, [], \"f696\", \"M214.66 311.01L288 256V96H128v176l-86.65 64.61c-39.4 29.56-53.86 84.42-29.21 127.06C30.39 495.25 63.27 512 96.08 512c20.03 0 40.25-6.25 57.52-19.2l21.86-16.39c-29.85-55.38-13.54-125.84 39.2-165.4zM288 32c0-11.05 3.07-21.3 8.02-30.38C293.4.92 290.85 0 288 0H160c-17.67 0-32 14.33-32 32v32h160V32zM480 0H352c-17.67 0-32 14.33-32 32v32h192V32c0-17.67-14.33-32-32-32zM320 272l-86.13 64.61c-39.4 29.56-53.86 84.42-29.21 127.06 18.25 31.58 50.61 48.33 83.42 48.33 20.03 0 40.25-6.25 57.52-19.2l115.2-86.4A127.997 127.997 0 0 0 512 304V96H320v176z\"],\n    \"solar-panel\": [640, 512, [], \"f5ba\", \"M431.98 448.01l-47.97.05V416h-128v32.21l-47.98.05c-8.82.01-15.97 7.16-15.98 15.99l-.05 31.73c-.01 8.85 7.17 16.03 16.02 16.02l223.96-.26c8.82-.01 15.97-7.16 15.98-15.98l.04-31.73c.01-8.85-7.17-16.03-16.02-16.02zM585.2 26.74C582.58 11.31 568.99 0 553.06 0H86.93C71 0 57.41 11.31 54.79 26.74-3.32 369.16.04 348.08.03 352c-.03 17.32 14.29 32 32.6 32h574.74c18.23 0 32.51-14.56 32.59-31.79.02-4.08 3.35 16.95-54.76-325.47zM259.83 64h120.33l9.77 96H250.06l9.77-96zm-75.17 256H71.09L90.1 208h105.97l-11.41 112zm16.29-160H98.24l16.29-96h96.19l-9.77 96zm32.82 160l11.4-112h149.65l11.4 112H233.77zm195.5-256h96.19l16.29 96H439.04l-9.77-96zm26.06 256l-11.4-112H549.9l19.01 112H455.33z\"],\n    \"sort\": [320, 512, [], \"f0dc\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z\"],\n    \"sort-alpha-down\": [448, 512, [], \"f15d\", \"M400.7 427.1h-61.1c.7-1 1.5-2 2.3-3.1l67.5-95.7c1.4-2 2.2-4.4 2.2-6.9V300c0-6.6-5.4-12-12-12H274.5c-6.6 0-12 5.4-12 12v28.9c0 6.6 5.4 12 12 12H331c-.7 1-1.5 2-2.3 3.1l-67.2 95.2c-1.4 2-2.2 4.4-2.2 6.9V468c0 6.6 5.4 12 12 12h129.4c6.6 0 12-5.4 12-12v-28.9c0-6.7-5.4-12-12-12zM176 368h-48V48c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16v320H16c-14.2 0-21.4 17.2-11.3 27.3l80 80c6.2 6.2 16.4 6.2 22.6 0l80-80c10-10 2.9-27.3-11.3-27.3zm248.2-159.9l-57.1-168c-1.7-4.9-6.2-8.1-11.4-8.1h-39.6c-5.1 0-9.7 3.3-11.4 8.1l-57.1 168c-2.6 7.8 3.1 15.9 11.4 15.9h35.7c5.4 0 10.1-3.5 11.5-8.7l8.1-28.2h42.9l8.3 28.3A12 12 0 0 0 377 224h35.7c8.4 0 14.2-8.1 11.5-15.9zm-95-71.5l6.8-22.9 6.6 22.9z\"],\n    \"sort-alpha-up\": [448, 512, [], \"f15e\", \"M107.3 36.7c-6.2-6.2-16.4-6.2-22.6 0l-80 80c-10 10-2.9 27.3 11.3 27.3h48v320c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V144h48c14.2 0 21.4-17.2 11.3-27.3zm293.4 390.4h-61.1c.7-1 1.5-2 2.3-3.1l67.5-95.7c1.4-2 2.2-4.4 2.2-6.9V300c0-6.6-5.4-12-12-12H274.5c-6.6 0-12 5.4-12 12v28.9c0 6.6 5.4 12 12 12H331c-.7 1-1.5 2-2.3 3.1l-67.2 95.2c-1.4 2-2.2 4.4-2.2 6.9V468c0 6.6 5.4 12 12 12h129.4c6.6 0 12-5.4 12-12v-28.9c0-6.7-5.4-12-12-12zm23.5-219l-57.1-168c-1.7-4.9-6.2-8.1-11.4-8.1h-39.6c-5.1 0-9.7 3.3-11.4 8.1l-57.1 168c-2.6 7.8 3.1 15.9 11.4 15.9h35.7c5.4 0 10.1-3.5 11.5-8.7l8.1-28.2h42.9l8.3 28.3A12 12 0 0 0 377 224h35.7c8.4 0 14.2-8.1 11.5-15.9zm-95-71.5l6.8-22.9 6.6 22.9z\"],\n    \"sort-amount-down\": [512, 512, [], \"f160\", \"M187.298 395.314l-79.984 80.002c-6.248 6.247-16.383 6.245-22.627 0L4.705 395.314C-5.365 385.244 1.807 368 16.019 368H64V48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v320h47.984c14.241 0 21.363 17.264 11.314 27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z\"],\n    \"sort-amount-up\": [512, 512, [], \"f161\", \"M4.702 116.686l79.984-80.002c6.248-6.247 16.383-6.245 22.627 0l79.981 80.002c10.07 10.07 2.899 27.314-11.314 27.314H128v320c0 8.837-7.163 16-16 16H80c-8.837 0-16-7.163-16-16V144H16.016c-14.241 0-21.363-17.264-11.314-27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z\"],\n    \"sort-down\": [320, 512, [], \"f0dd\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\"],\n    \"sort-numeric-down\": [448, 512, [], \"f162\", \"M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM175.984 368H128V48c0-8.837-7.163-16-16-16H80c-8.837 0-16 7.163-16 16v320H16.019c-14.212 0-21.384 17.244-11.314 27.314l79.981 80.002c6.245 6.245 16.38 6.247 22.627 0l79.984-80.002c10.05-10.05 2.928-27.314-11.313-27.314z\"],\n    \"sort-numeric-up\": [448, 512, [], \"f163\", \"M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM16.016 144H64v320c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144h47.981c14.212 0 21.384-17.244 11.314-27.314l-79.981-80.002c-6.245-6.245-16.38-6.247-22.627 0L4.702 116.686C-5.347 126.736 1.775 144 16.016 144z\"],\n    \"sort-up\": [320, 512, [], \"f0de\", \"M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z\"],\n    \"spa\": [576, 512, [], \"f5bb\", \"M568.25 192c-29.04.13-135.01 6.16-213.84 83-33.12 29.63-53.36 63.3-66.41 94.86-13.05-31.56-33.29-65.23-66.41-94.86-78.83-76.84-184.8-82.87-213.84-83-4.41-.02-7.79 3.4-7.75 7.82.23 27.92 7.14 126.14 88.77 199.3C172.79 480.94 256 480 288 480s115.19.95 199.23-80.88c81.64-73.17 88.54-171.38 88.77-199.3.04-4.42-3.34-7.84-7.75-7.82zM287.98 302.6c12.82-18.85 27.6-35.78 44.09-50.52 19.09-18.61 39.58-33.3 60.26-45.18-16.44-70.5-51.72-133.05-96.73-172.22-4.11-3.58-11.02-3.58-15.14 0-44.99 39.14-80.27 101.63-96.74 172.07 20.37 11.7 40.5 26.14 59.22 44.39a282.768 282.768 0 0 1 45.04 51.46z\"],\n    \"space-shuttle\": [640, 512, [], \"f197\", \"M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z\"],\n    \"spider\": [576, 512, [], \"f717\", \"M151.17 167.35L177.1 176h4.67l5.22-26.12c.72-3.58 1.8-7.58 3.21-11.79l-20.29-40.58 23.8-71.39c2.79-8.38-1.73-17.44-10.12-20.24L168.42.82c-8.38-2.8-17.45 1.73-20.24 10.12l-25.89 77.68a32.04 32.04 0 0 0 1.73 24.43l27.15 54.3zm422.14 182.03l-52.75-79.12a32.002 32.002 0 0 0-26.62-14.25H416l68.99-24.36a32.03 32.03 0 0 0 16.51-12.61l53.6-80.41c4.9-7.35 2.91-17.29-4.44-22.19l-13.31-8.88c-7.35-4.9-17.29-2.91-22.19 4.44l-50.56 75.83L404.1 208H368l-10.37-51.85C355.44 145.18 340.26 96 288 96c-52.26 0-67.44 49.18-69.63 60.15L208 208h-36.1l-60.49-20.17L60.84 112c-4.9-7.35-14.83-9.34-22.19-4.44l-13.31 8.88c-7.35 4.9-9.34 14.83-4.44 22.19l53.6 80.41a32.03 32.03 0 0 0 16.51 12.61L160 256H82.06a32.02 32.02 0 0 0-26.63 14.25L2.69 349.38c-4.9 7.35-2.92 17.29 4.44 22.19l13.31 8.88c7.35 4.9 17.29 2.91 22.19-4.44l48-72h47.06l-60.83 97.33A31.988 31.988 0 0 0 72 418.3V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-73.11l74.08-118.53c-1.01 14.05-2.08 28.11-2.08 42.21C192 399.64 232.76 448 288 448s96-48.36 96-101.43c0-14.1-1.08-28.16-2.08-42.21L456 422.89V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-77.71c0-6-1.69-11.88-4.86-16.96L438.31 304h47.06l48 72c4.9 7.35 14.84 9.34 22.19 4.44l13.31-8.88c7.36-4.9 9.34-14.83 4.44-22.18zM406.09 97.51l-20.29 40.58c1.41 4.21 2.49 8.21 3.21 11.79l5.22 26.12h4.67l25.93-8.65 27.15-54.3a31.995 31.995 0 0 0 1.73-24.43l-25.89-77.68C425.03 2.56 415.96-1.98 407.58.82l-15.17 5.06c-8.38 2.8-12.91 11.86-10.12 20.24l23.8 71.39z\"],\n    \"spinner\": [512, 512, [], \"f110\", \"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"],\n    \"splotch\": [512, 512, [], \"f5bc\", \"M472.29 195.89l-67.06-22.95c-19.28-6.6-33.54-20.92-38.14-38.3L351.1 74.19c-11.58-43.77-76.57-57.13-109.98-22.62l-46.14 47.67c-13.26 13.71-33.54 20.93-54.2 19.31l-71.88-5.62c-52.05-4.07-86.93 44.88-59.03 82.83l38.54 52.42c11.08 15.07 12.82 33.86 4.64 50.24L24.62 355.4c-20.59 41.25 22.84 84.87 73.49 73.81l69.96-15.28c20.11-4.39 41.45 0 57.07 11.73l54.32 40.83c39.32 29.56 101.04 7.57 104.45-37.22l4.7-61.86c1.35-17.79 12.8-33.86 30.63-42.99l62-31.74c44.88-22.96 39.59-80.17-8.95-96.79z\"],\n    \"spray-can\": [512, 512, [], \"f5bd\", \"M224 32c0-17.67-14.33-32-32-32h-64c-17.67 0-32 14.33-32 32v96h128V32zm256 96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm-256 32H96c-53.02 0-96 42.98-96 96v224c0 17.67 14.33 32 32 32h256c17.67 0 32-14.33 32-32V256c0-53.02-42.98-96-96-96zm-64 256c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zM480 96c17.67 0 32-14.33 32-32s-14.33-32-32-32-32 14.33-32 32 14.33 32 32 32zm-96 32c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm-96-96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm96 0c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm96 192c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"],\n    \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n    \"square-full\": [512, 512, [], \"f45c\", \"M512 512H0V0h512v512z\"],\n    \"square-root-alt\": [576, 512, [], \"f698\", \"M571.31 251.31l-22.62-22.62c-6.25-6.25-16.38-6.25-22.63 0L480 274.75l-46.06-46.06c-6.25-6.25-16.38-6.25-22.63 0l-22.62 22.62c-6.25 6.25-6.25 16.38 0 22.63L434.75 320l-46.06 46.06c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L480 365.25l46.06 46.06c6.25 6.25 16.38 6.25 22.63 0l22.62-22.62c6.25-6.25 6.25-16.38 0-22.63L525.25 320l46.06-46.06c6.25-6.25 6.25-16.38 0-22.63zM552 0H307.65c-14.54 0-27.26 9.8-30.95 23.87l-84.79 322.8-58.41-106.1A32.008 32.008 0 0 0 105.47 224H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h43.62l88.88 163.73C168.99 503.5 186.3 512 204.94 512c17.27 0 44.44-9 54.28-41.48L357.03 96H552c13.25 0 24-10.75 24-24V24c0-13.26-10.75-24-24-24z\"],\n    \"stamp\": [512, 512, [], \"f5bf\", \"M32 512h448v-64H32v64zm384-256h-66.56c-16.26 0-29.44-13.18-29.44-29.44v-9.46c0-27.37 8.88-53.41 21.46-77.72 9.11-17.61 12.9-38.39 9.05-60.42-6.77-38.78-38.47-70.7-77.26-77.45C212.62-9.04 160 37.33 160 96c0 14.16 3.12 27.54 8.69 39.58C182.02 164.43 192 194.7 192 226.49v.07c0 16.26-13.18 29.44-29.44 29.44H96c-53.02 0-96 42.98-96 96v32c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-32c0-53.02-42.98-96-96-96z\"],\n    \"star\": [576, 512, [], \"f005\", \"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"],\n    \"star-and-crescent\": [512, 512, [], \"f699\", \"M340.47 466.36c-1.45 0-6.89.46-9.18.46-116.25 0-210.82-94.57-210.82-210.82S215.04 45.18 331.29 45.18c2.32 0 7.7.46 9.18.46 7.13 0 13.33-5.03 14.75-12.07 1.46-7.25-2.55-14.49-9.47-17.09C316.58 5.54 286.39 0 256 0 114.84 0 0 114.84 0 256s114.84 256 256 256c30.23 0 60.28-5.49 89.32-16.32 5.96-2.02 10.28-7.64 10.28-14.26 0-8.09-6.39-15.06-15.13-15.06zm162.99-252.5l-76.38-11.1-34.16-69.21c-1.83-3.7-5.38-5.55-8.93-5.55s-7.1 1.85-8.93 5.55l-34.16 69.21-76.38 11.1c-8.17 1.18-11.43 11.22-5.52 16.99l55.27 53.87-13.05 76.07c-1.11 6.44 4.01 11.66 9.81 11.66 1.53 0 3.11-.36 4.64-1.17L384 335.37l68.31 35.91c1.53.8 3.11 1.17 4.64 1.17 5.8 0 10.92-5.23 9.81-11.66l-13.05-76.07 55.27-53.87c5.91-5.77 2.65-15.81-5.52-16.99z\"],\n    \"star-half\": [576, 512, [], \"f089\", \"M288 0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6V0z\"],\n    \"star-half-alt\": [536, 512, [], \"f5c0\", \"M508.55 171.51L362.18 150.2 296.77 17.81C290.89 5.98 279.42 0 267.95 0c-11.4 0-22.79 5.9-28.69 17.81l-65.43 132.38-146.38 21.29c-26.25 3.8-36.77 36.09-17.74 54.59l105.89 103-25.06 145.48C86.98 495.33 103.57 512 122.15 512c4.93 0 10-1.17 14.87-3.75l130.95-68.68 130.94 68.7c4.86 2.55 9.92 3.71 14.83 3.71 18.6 0 35.22-16.61 31.66-37.4l-25.03-145.49 105.91-102.98c19.04-18.5 8.52-50.8-17.73-54.6zm-121.74 123.2l-18.12 17.62 4.28 24.88 19.52 113.45-102.13-53.59-22.38-11.74.03-317.19 51.03 103.29 11.18 22.63 25.01 3.64 114.23 16.63-82.65 80.38z\"],\n    \"star-of-david\": [464, 512, [], \"f69a\", \"M405.68 256l53.21-89.39C473.3 142.4 455.48 112 426.88 112H319.96l-55.95-93.98C256.86 6.01 244.43 0 232 0s-24.86 6.01-32.01 18.02L144.04 112H37.11c-28.6 0-46.42 30.4-32.01 54.61L58.32 256 5.1 345.39C-9.31 369.6 8.51 400 37.11 400h106.93l55.95 93.98C207.14 505.99 219.57 512 232 512s24.86-6.01 32.01-18.02L319.96 400h106.93c28.6 0 46.42-30.4 32.01-54.61L405.68 256zm-12.78-88l-19.8 33.26L353.3 168h39.6zm-52.39 88l-52.39 88H175.88l-52.39-88 52.38-88h112.25l52.39 88zM232 73.72L254.79 112h-45.57L232 73.72zM71.1 168h39.6l-19.8 33.26L71.1 168zm0 176l19.8-33.26L110.7 344H71.1zM232 438.28L209.21 400h45.57L232 438.28zM353.29 344l19.8-33.26L392.9 344h-39.61z\"],\n    \"star-of-life\": [480, 512, [], \"f621\", \"M471.99 334.43L336.06 256l135.93-78.43c7.66-4.42 10.28-14.2 5.86-21.86l-32.02-55.43c-4.42-7.65-14.21-10.28-21.87-5.86l-135.93 78.43V16c0-8.84-7.17-16-16.01-16h-64.04c-8.84 0-16.01 7.16-16.01 16v156.86L56.04 94.43c-7.66-4.42-17.45-1.79-21.87 5.86L2.15 155.71c-4.42 7.65-1.8 17.44 5.86 21.86L143.94 256 8.01 334.43c-7.66 4.42-10.28 14.21-5.86 21.86l32.02 55.43c4.42 7.65 14.21 10.27 21.87 5.86l135.93-78.43V496c0 8.84 7.17 16 16.01 16h64.04c8.84 0 16.01-7.16 16.01-16V339.14l135.93 78.43c7.66 4.42 17.45 1.8 21.87-5.86l32.02-55.43c4.42-7.65 1.8-17.43-5.86-21.85z\"],\n    \"step-backward\": [448, 512, [], \"f048\", \"M64 468V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v176.4l195.5-181C352.1 22.3 384 36.6 384 64v384c0 27.4-31.9 41.7-52.5 24.6L136 292.7V468c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12z\"],\n    \"step-forward\": [448, 512, [], \"f051\", \"M384 44v424c0 6.6-5.4 12-12 12h-48c-6.6 0-12-5.4-12-12V291.6l-195.5 181C95.9 489.7 64 475.4 64 448V64c0-27.4 31.9-41.7 52.5-24.6L312 219.3V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12z\"],\n    \"stethoscope\": [512, 512, [], \"f0f1\", \"M447.1 112c-34.2.5-62.3 28.4-63 62.6-.5 24.3 12.5 45.6 32 56.8V344c0 57.3-50.2 104-112 104-60 0-109.2-44.1-111.9-99.2C265 333.8 320 269.2 320 192V36.6c0-11.4-8.1-21.3-19.3-23.5L237.8.5c-13-2.6-25.6 5.8-28.2 18.8L206.4 35c-2.6 13 5.8 25.6 18.8 28.2l30.7 6.1v121.4c0 52.9-42.2 96.7-95.1 97.2-53.4.5-96.9-42.7-96.9-96V69.4l30.7-6.1c13-2.6 21.4-15.2 18.8-28.2l-3.1-15.7C107.7 6.4 95.1-2 82.1.6L19.3 13C8.1 15.3 0 25.1 0 36.6V192c0 77.3 55.1 142 128.1 156.8C130.7 439.2 208.6 512 304 512c97 0 176-75.4 176-168V231.4c19.1-11.1 32-31.7 32-55.4 0-35.7-29.2-64.5-64.9-64zm.9 80c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"sticky-note\": [448, 512, [], \"f249\", \"M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z\"],\n    \"stop\": [448, 512, [], \"f04d\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n    \"stop-circle\": [512, 512, [], \"f28d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\"],\n    \"stopwatch\": [448, 512, [], \"f2f2\", \"M432 304c0 114.9-93.1 208-208 208S16 418.9 16 304c0-104 76.3-190.2 176-205.5V64h-28c-6.6 0-12-5.4-12-12V12c0-6.6 5.4-12 12-12h120c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-28v34.5c37.5 5.8 71.7 21.6 99.7 44.6l27.5-27.5c4.7-4.7 12.3-4.7 17 0l28.3 28.3c4.7 4.7 4.7 12.3 0 17l-29.4 29.4-.6.6C419.7 223.3 432 262.2 432 304zm-176 36V188.5c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12V340c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"],\n    \"store\": [616, 512, [], \"f54e\", \"M602 118.6L537.1 15C531.3 5.7 521 0 510 0H106C95 0 84.7 5.7 78.9 15L14 118.6c-33.5 53.5-3.8 127.9 58.8 136.4 4.5.6 9.1.9 13.7.9 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18.1 20.1 44.3 33.1 73.8 33.1 4.7 0 9.2-.3 13.7-.9 62.8-8.4 92.6-82.8 59-136.4zM529.5 288c-10 0-19.9-1.5-29.5-3.8V384H116v-99.8c-9.6 2.2-19.5 3.8-29.5 3.8-6 0-12.1-.4-18-1.2-5.6-.8-11.1-2.1-16.4-3.6V480c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32V283.2c-5.4 1.6-10.8 2.9-16.4 3.6-6.1.8-12.1 1.2-18.2 1.2z\"],\n    \"store-alt\": [640, 512, [], \"f54f\", \"M320 384H128V224H64v256c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V224h-64v160zm314.6-241.8l-85.3-128c-6-8.9-16-14.2-26.7-14.2H117.4c-10.7 0-20.7 5.3-26.6 14.2l-85.3 128c-14.2 21.3 1 49.8 26.6 49.8H608c25.5 0 40.7-28.5 26.6-49.8zM512 496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V224h-64v272z\"],\n    \"stream\": [512, 512, [], \"f550\", \"M16 128h416c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H16C7.16 32 0 39.16 0 48v64c0 8.84 7.16 16 16 16zm480 80H80c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm-64 176H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16z\"],\n    \"street-view\": [512, 512, [], \"f21d\", \"M367.9 329.76c-4.62 5.3-9.78 10.1-15.9 13.65v22.94c66.52 9.34 112 28.05 112 49.65 0 30.93-93.12 56-208 56S48 446.93 48 416c0-21.6 45.48-40.3 112-49.65v-22.94c-6.12-3.55-11.28-8.35-15.9-13.65C58.87 345.34 0 378.05 0 416c0 53.02 114.62 96 256 96s256-42.98 256-96c0-37.95-58.87-70.66-144.1-86.24zM256 128c35.35 0 64-28.65 64-64S291.35 0 256 0s-64 28.65-64 64 28.65 64 64 64zm-64 192v96c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-96c17.67 0 32-14.33 32-32v-96c0-26.51-21.49-48-48-48h-11.8c-11.07 5.03-23.26 8-36.2 8s-25.13-2.97-36.2-8H208c-26.51 0-48 21.49-48 48v96c0 17.67 14.33 32 32 32z\"],\n    \"strikethrough\": [512, 512, [], \"f0cc\", \"M496 288H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h480c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16zm-214.666 16c27.258 12.937 46.524 28.683 46.524 56.243 0 33.108-28.977 53.676-75.621 53.676-32.325 0-76.874-12.08-76.874-44.271V368c0-8.837-7.164-16-16-16H113.75c-8.836 0-16 7.163-16 16v19.204c0 66.845 77.717 101.82 154.487 101.82 88.578 0 162.013-45.438 162.013-134.424 0-19.815-3.618-36.417-10.143-50.6H281.334zm-30.952-96c-32.422-13.505-56.836-28.946-56.836-59.683 0-33.92 30.901-47.406 64.962-47.406 42.647 0 64.962 16.593 64.962 32.985V136c0 8.837 7.164 16 16 16h45.613c8.836 0 16-7.163 16-16v-30.318c0-52.438-71.725-79.875-142.575-79.875-85.203 0-150.726 40.972-150.726 125.646 0 22.71 4.665 41.176 12.777 56.547h129.823z\"],\n    \"stroopwafel\": [512, 512, [], \"f551\", \"M188.12 210.74L142.86 256l45.25 45.25L233.37 256l-45.25-45.26zm113.13-22.62L256 142.86l-45.25 45.25L256 233.37l45.25-45.25zm-90.5 135.76L256 369.14l45.26-45.26L256 278.63l-45.25 45.25zM256 0C114.62 0 0 114.62 0 256s114.62 256 256 256 256-114.62 256-256S397.38 0 256 0zm186.68 295.6l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-28.29-28.29-45.25 45.25 33.94 33.94 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-33.94-33.94-45.26 45.26 28.29 28.29c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0L256 414.39l-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l28.29-28.29-45.25-45.26-33.94 33.94 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 33.94-33.94-45.25-45.25-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0L69.32 295.6c-3.12-3.12-3.12-8.19 0-11.31L97.61 256l-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l28.29 28.29 45.25-45.26-33.94-33.94-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 33.94 33.94 45.26-45.25-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0L256 97.61l28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-28.29 28.29 45.26 45.25 33.94-33.94-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-33.94 33.94 45.25 45.26 28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31L414.39 256l28.29 28.28a8.015 8.015 0 0 1 0 11.32zM278.63 256l45.26 45.25L369.14 256l-45.25-45.26L278.63 256z\"],\n    \"subscript\": [512, 512, [], \"f12c\", \"M272 32h-67.8c-5.5 0-10.7 2.9-13.6 7.6l-40.3 65c-2.3 3.6-4.5 7.3-6.2 10.5-1.7-3.2-3.7-6.8-5.7-10.4L98.5 39.6c-2.9-4.7-8.1-7.6-13.6-7.6H16C7.2 32 0 39.2 0 48v32c0 8.8 7.2 16 16 16h30.1l52.8 77.3L42.3 256H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64c5.5 0 10.7-2.9 13.6-7.6l44.7-72.1c2.2-3.6 4.2-7.3 5.9-10.6 1.8 3.2 3.9 6.9 6.2 10.2l45.7 72.6c2.9 4.7 8 7.5 13.5 7.5H272c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-22l-58.6-84.3L244 96h28c8.8 0 16-7.2 16-16V48c0-8.8-7.2-16-16-16zm224 384H395.2c3.5-10.5 18.8-21.3 36.3-32.4 16.6-10.6 35.5-22.6 50.3-38.9 17.5-19.1 25.9-40.2 25.9-64.6 0-60.6-50.7-88.1-97.8-88.1-42.5 0-76.4 22-94.4 50.4-4.7 7.3-2.6 17 4.6 21.9l30.3 20.3c7 4.7 16.5 3.1 21.6-3.6 8-10.4 18.8-18.2 31.7-18.2 19.4 0 26.3 12.9 26.3 23.9 0 36.2-119.4 57-119.4 160 0 6.7.6 13 1.4 19.3 1.1 8 7.8 13.9 15.9 13.9H496c8.8 0 16-7.2 16-16v-32c0-8.7-7.2-15.9-16-15.9z\"],\n    \"subway\": [448, 512, [], \"f239\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zM200 232V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm200 0V120c0-13.255-10.745-24-24-24H272c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm-48 56c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm-256 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"],\n    \"suitcase\": [512, 512, [], \"f0f2\", \"M128 480h256V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v400zm64-384h128v32H192V96zm320 80v256c0 26.5-21.5 48-48 48h-48V128h48c26.5 0 48 21.5 48 48zM96 480H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h48v352z\"],\n    \"suitcase-rolling\": [384, 512, [], \"f5c1\", \"M336 160H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h16v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16h128v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16h16c26.51 0 48-21.49 48-48V208c0-26.51-21.49-48-48-48zm-16 216c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h240c4.42 0 8 3.58 8 8v16zm0-96c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h240c4.42 0 8 3.58 8 8v16zM144 48h96v80h48V48c0-26.51-21.49-48-48-48h-96c-26.51 0-48 21.49-48 48v80h48V48z\"],\n    \"sun\": [512, 512, [], \"f185\", \"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"],\n    \"superscript\": [512, 512, [], \"f12b\", \"M272 192h-67.8c-5.5 0-10.7 2.9-13.6 7.6l-40.3 65c-2.3 3.6-4.5 7.3-6.2 10.5-1.7-3.2-3.7-6.8-5.7-10.4l-39.9-65.1c-2.9-4.7-8.1-7.6-13.6-7.6H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h30.1l52.8 77.3L42.3 416H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64c5.5 0 10.7-2.9 13.6-7.6l44.7-72.1c2.2-3.6 4.2-7.3 5.9-10.6 1.8 3.2 3.9 6.9 6.2 10.2l45.7 72.6c2.9 4.7 8 7.5 13.5 7.5H272c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-22l-58.6-84.3L244 256h28c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm224 64H395.2c3.5-10.5 18.8-21.3 36.3-32.4 16.6-10.6 35.5-22.6 50.3-38.9 17.5-19.1 25.9-40.2 25.9-64.6 0-60.6-50.7-88.1-97.8-88.1-42.5 0-76.4 22-94.4 50.4-4.7 7.3-2.6 17 4.6 21.9l30.3 20.3c7 4.7 16.5 3.1 21.6-3.6 8-10.4 18.8-18.2 31.7-18.2 19.4 0 26.3 12.9 26.3 23.9 0 36.2-119.4 57-119.4 160 0 6.7.6 13 1.4 19.3 1.1 8 7.8 13.9 15.9 13.9H496c8.8 0 16-7.2 16-16v-32c0-8.7-7.2-15.9-16-15.9z\"],\n    \"surprise\": [496, 512, [], \"f5c2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 208c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm112 208c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm80-176c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"swatchbook\": [511, 512, [], \"f5c3\", \"M479.06 320H372.29L186.15 506.51c-2.06 2.07-4.49 3.58-6.67 5.49h299.58c17.64 0 31.94-14.33 31.94-32V352c0-17.67-14.3-32-31.94-32zm-44.5-152.9l-90.33-90.51c-12.47-12.5-32.69-12.5-45.17 0l-75.5 75.65V416c0 2.96-.67 5.73-.87 8.64l211.87-212.28c12.47-12.5 12.47-32.77 0-45.26zM191.62 32c0-17.67-14.3-32-31.94-32H31.94C14.3 0 0 14.33 0 32v384c0 53.02 42.9 96 95.81 96s95.81-42.98 95.81-96V32zM95.81 440c-13.23 0-23.95-10.75-23.95-24 0-13.26 10.73-24 23.95-24s23.95 10.74 23.95 24c.01 13.25-10.72 24-23.95 24zm31.94-184H63.88v-64h63.88v64zm0-128H63.88V64h63.88v64z\"],\n    \"swimmer\": [640, 512, [], \"f5c4\", \"M189.61 310.58c3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c16.02-14.77 34.5-22.58 53.46-22.58h16.3c18.96 0 37.45 7.81 53.46 22.58 3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c14.86-13.71 31.88-21.12 49.39-22.16l-112.84-80.6 18-12.86c3.64-2.58 8.28-3.52 12.62-2.61l100.35 21.53c25.91 5.53 51.44-10.97 57-36.88 5.55-25.92-10.95-51.44-36.88-57L437.68 98.47c-30.73-6.58-63.02.12-88.56 18.38l-80.02 57.17c-10.38 7.39-19.36 16.44-26.72 26.94L173.75 299c5.47 3.23 10.82 6.93 15.86 11.58zM624 352h-16c-26.04 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C461.8 343.58 442.04 352 416 352s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C269.8 343.58 250.04 352 224 352s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 343.58 58.04 352 32 352H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-512-96c44.18 0 80-35.82 80-80s-35.82-80-80-80-80 35.82-80 80 35.82 80 80 80z\"],\n    \"swimming-pool\": [640, 512, [], \"f5c5\", \"M624 416h-16c-26.04 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C461.8 407.58 442.04 416 416 416s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C269.8 407.58 250.04 416 224 416s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 407.58 58.04 416 32 416H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-400-32v-96h192v96c19.12 0 30.86-6.16 34.39-9.42 9.17-8.46 19.2-14.34 29.61-18.07V128c0-17.64 14.36-32 32-32s32 14.36 32 32v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16c0-52.94-43.06-96-96-96s-96 43.06-96 96v96H224v-96c0-17.64 14.36-32 32-32s32 14.36 32 32v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16c0-52.94-43.06-96-96-96s-96 43.06-96 96v228.5c10.41 3.73 20.44 9.62 29.61 18.07 3.53 3.27 15.27 9.43 34.39 9.43z\"],\n    \"synagogue\": [640, 512, [], \"f69b\", \"M70 196.51L6.67 268.29A26.643 26.643 0 0 0 0 285.93V512h128V239.58l-38-43.07c-5.31-6.01-14.69-6.01-20 0zm563.33 71.78L570 196.51c-5.31-6.02-14.69-6.02-20 0l-38 43.07V512h128V285.93c0-6.5-2.37-12.77-6.67-17.64zM339.99 7.01c-11.69-9.35-28.29-9.35-39.98 0l-128 102.4A32.005 32.005 0 0 0 160 134.4V512h96v-92.57c0-31.88 21.78-61.43 53.25-66.55C349.34 346.35 384 377.13 384 416v96h96V134.4c0-9.72-4.42-18.92-12.01-24.99l-128-102.4zm52.07 215.55c1.98 3.15-.29 7.24-4 7.24h-38.94L324 269.79c-1.85 2.95-6.15 2.95-8 0l-25.12-39.98h-38.94c-3.72 0-5.98-4.09-4-7.24l19.2-30.56-19.2-30.56c-1.98-3.15.29-7.24 4-7.24h38.94l25.12-40c1.85-2.95 6.15-2.95 8 0l25.12 39.98h38.95c3.71 0 5.98 4.09 4 7.24L372.87 192l19.19 30.56z\"],\n    \"sync\": [512, 512, [], \"f021\", \"M440.65 12.57l4 82.77A247.16 247.16 0 0 0 255.83 8C134.73 8 33.91 94.92 12.29 209.82A12 12 0 0 0 24.09 224h49.05a12 12 0 0 0 11.67-9.26 175.91 175.91 0 0 1 317-56.94l-101.46-4.86a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12H500a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12h-47.37a12 12 0 0 0-11.98 12.57zM255.83 432a175.61 175.61 0 0 1-146-77.8l101.8 4.87a12 12 0 0 0 12.57-12v-47.4a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12V500a12 12 0 0 0 12 12h47.35a12 12 0 0 0 12-12.6l-4.15-82.57A247.17 247.17 0 0 0 255.83 504c121.11 0 221.93-86.92 243.55-201.82a12 12 0 0 0-11.8-14.18h-49.05a12 12 0 0 0-11.67 9.26A175.86 175.86 0 0 1 255.83 432z\"],\n    \"sync-alt\": [512, 512, [], \"f2f1\", \"M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z\"],\n    \"syringe\": [512, 512, [], \"f48e\", \"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"],\n    \"table\": [512, 512, [], \"f0ce\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64v-96h160v96zm0-160H64v-96h160v96zm224 160H288v-96h160v96zm0-160H288v-96h160v96z\"],\n    \"table-tennis\": [512, 512, [], \"f45d\", \"M496.2 296.5C527.7 218.7 512 126.2 449 63.1 365.1-21 229-21 145.1 63.1l-56 56.1 211.5 211.5c46.1-62.1 131.5-77.4 195.6-34.2zm-217.9 79.7L57.9 155.9c-27.3 45.3-21.7 105 17.3 144.1l34.5 34.6L6.7 424c-8.6 7.5-9.1 20.7-1 28.8l53.4 53.5c8 8.1 21.2 7.6 28.7-1L177.1 402l35.7 35.7c19.7 19.7 44.6 30.5 70.3 33.3-7.1-17-11-35.6-11-55.1-.1-13.8 2.5-27 6.2-39.7zM416 320c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96z\"],\n    \"tablet\": [448, 512, [], \"f10a\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"tablet-alt\": [448, 512, [], \"f3fa\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm176-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h328c6.6 0 12 5.4 12 12v312z\"],\n    \"tablets\": [640, 512, [], \"f490\", \"M160 192C78.9 192 12.5 250.5.1 326.7c-.8 4.8 3.3 9.3 8.3 9.3h303.3c5 0 9.1-4.5 8.3-9.3C307.5 250.5 241.1 192 160 192zm151.6 176H8.4c-5 0-9.1 4.5-8.3 9.3C12.5 453.5 78.9 512 160 512s147.5-58.5 159.9-134.7c.8-4.8-3.3-9.3-8.3-9.3zM593.4 46.6c-56.5-56.5-144.2-61.4-206.9-16-4 2.9-4.3 8.9-.8 12.3L597 254.3c3.5 3.5 9.5 3.2 12.3-.8 45.5-62.7 40.6-150.4-15.9-206.9zM363 65.7c-3.5-3.5-9.5-3.2-12.3.8-45.4 62.7-40.5 150.4 15.9 206.9 56.5 56.5 144.2 61.4 206.9 15.9 4-2.9 4.3-8.9.8-12.3L363 65.7z\"],\n    \"tachometer-alt\": [576, 512, [], \"f3fd\", \"M288 32C128.94 32 0 160.94 0 320c0 52.8 14.25 102.26 39.06 144.8 5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2C561.75 422.26 576 372.8 576 320c0-159.06-128.94-288-288-288zm0 64c14.71 0 26.58 10.13 30.32 23.65-1.11 2.26-2.64 4.23-3.45 6.67l-9.22 27.67c-5.13 3.49-10.97 6.01-17.64 6.01-17.67 0-32-14.33-32-32S270.33 96 288 96zM96 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm48-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm246.77-72.41l-61.33 184C343.13 347.33 352 364.54 352 384c0 11.72-3.38 22.55-8.88 32H232.88c-5.5-9.45-8.88-20.28-8.88-32 0-33.94 26.5-61.43 59.9-63.59l61.34-184.01c4.17-12.56 17.73-19.45 30.36-15.17 12.57 4.19 19.35 17.79 15.17 30.36zm14.66 57.2l15.52-46.55c3.47-1.29 7.13-2.23 11.05-2.23 17.67 0 32 14.33 32 32s-14.33 32-32 32c-11.38-.01-20.89-6.28-26.57-15.22zM480 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"tag\": [512, 512, [], \"f02b\", \"M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"],\n    \"tags\": [640, 512, [], \"f02c\", \"M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z\"],\n    \"tape\": [640, 512, [], \"f4db\", \"M224 192c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm400 224H380.6c41.5-40.7 67.4-97.3 67.4-160 0-123.7-100.3-224-224-224S0 132.3 0 256s100.3 224 224 224h400c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400-64c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z\"],\n    \"tasks\": [512, 512, [], \"f0ae\", \"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\"],\n    \"taxi\": [512, 512, [], \"f1ba\", \"M462 241.64l-22-84.84c-9.6-35.2-41.6-60.8-76.8-60.8H352V64c0-17.67-14.33-32-32-32H192c-17.67 0-32 14.33-32 32v32h-11.2c-35.2 0-67.2 25.6-76.8 60.8l-22 84.84C21.41 248.04 0 273.47 0 304v48c0 23.63 12.95 44.04 32 55.12V448c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-40.88c19.05-11.09 32-31.5 32-55.12v-48c0-30.53-21.41-55.96-50-62.36zM96 352c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm20.55-112l17.2-66.36c2.23-8.16 9.59-13.64 15.06-13.64h214.4c5.47 0 12.83 5.48 14.85 12.86L395.45 240h-278.9zM416 352c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"teeth\": [640, 512, [], \"f62e\", \"M544 0H96C42.98 0 0 42.98 0 96v320c0 53.02 42.98 96 96 96h448c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96zM160 368c0 26.51-21.49 48-48 48s-48-21.49-48-48v-64c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v64zm0-128c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-64c0-26.51 21.49-48 48-48s48 21.49 48 48v64zm144 120c0 30.93-25.07 56-56 56s-56-25.07-56-56v-56c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v56zm0-120c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-88c0-30.93 25.07-56 56-56s56 25.07 56 56v88zm144 120c0 30.93-25.07 56-56 56s-56-25.07-56-56v-56c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v56zm0-120c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-88c0-30.93 25.07-56 56-56s56 25.07 56 56v88zm128 128c0 26.51-21.49 48-48 48s-48-21.49-48-48v-64c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v64zm0-128c0 8.84-7.16 16-16 16h-64c-8.84 0-16-7.16-16-16v-64c0-26.51 21.49-48 48-48s48 21.49 48 48v64z\"],\n    \"teeth-open\": [640, 512, [], \"f62f\", \"M544 0H96C42.98 0 0 42.98 0 96v64c0 35.35 28.66 64 64 64h512c35.34 0 64-28.65 64-64V96c0-53.02-42.98-96-96-96zM160 176c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-32c0-26.51 21.49-48 48-48s48 21.49 48 48v32zm144 0c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-56c0-30.93 25.07-56 56-56s56 25.07 56 56v56zm144 0c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-56c0-30.93 25.07-56 56-56s56 25.07 56 56v56zm128 0c0 8.84-7.16 16-16 16h-64c-8.84 0-16-7.16-16-16v-32c0-26.51 21.49-48 48-48s48 21.49 48 48v32zm0 144H64c-35.34 0-64 28.65-64 64v32c0 53.02 42.98 96 96 96h448c53.02 0 96-42.98 96-96v-32c0-35.35-28.66-64-64-64zm-416 80c0 26.51-21.49 48-48 48s-48-21.49-48-48v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32zm144-8c0 30.93-25.07 56-56 56s-56-25.07-56-56v-24c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v24zm144 0c0 30.93-25.07 56-56 56s-56-25.07-56-56v-24c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v24zm128 8c0 26.51-21.49 48-48 48s-48-21.49-48-48v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32z\"],\n    \"temperature-high\": [512, 512, [], \"f769\", \"M416 0c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-160-16C256 50.1 205.9 0 144 0S32 50.1 32 112v166.5C12.3 303.2 0 334 0 368c0 79.5 64.5 144 144 144s144-64.5 144-144c0-34-12.3-64.9-32-89.5V112zM144 448c-44.1 0-80-35.9-80-80 0-25.5 12.2-48.9 32-63.8V112c0-26.5 21.5-48 48-48s48 21.5 48 48v192.2c19.8 14.8 32 38.3 32 63.8 0 44.1-35.9 80-80 80zm16-125.1V112c0-8.8-7.2-16-16-16s-16 7.2-16 16v210.9c-18.6 6.6-32 24.2-32 45.1 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.5-32-45.1z\"],\n    \"temperature-low\": [512, 512, [], \"f76b\", \"M416 0c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-160-16C256 50.1 205.9 0 144 0S32 50.1 32 112v166.5C12.3 303.2 0 334 0 368c0 79.5 64.5 144 144 144s144-64.5 144-144c0-34-12.3-64.9-32-89.5V112zM144 448c-44.1 0-80-35.9-80-80 0-25.5 12.2-48.9 32-63.8V112c0-26.5 21.5-48 48-48s48 21.5 48 48v192.2c19.8 14.8 32 38.3 32 63.8 0 44.1-35.9 80-80 80zm16-125.1V304c0-8.8-7.2-16-16-16s-16 7.2-16 16v18.9c-18.6 6.6-32 24.2-32 45.1 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.5-32-45.1z\"],\n    \"tenge\": [384, 512, [], \"f7d7\", \"M372 160H12c-6.6 0-12 5.4-12 12v56c0 6.6 5.4 12 12 12h140v228c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V240h140c6.6 0 12-5.4 12-12v-56c0-6.6-5.4-12-12-12zm0-128H12C5.4 32 0 37.4 0 44v56c0 6.6 5.4 12 12 12h360c6.6 0 12-5.4 12-12V44c0-6.6-5.4-12-12-12z\"],\n    \"terminal\": [640, 512, [], \"f120\", \"M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z\"],\n    \"text-height\": [576, 512, [], \"f034\", \"M16 32h288c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96h-54.761v320H232c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H88c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm475.308 4.685l79.995 80.001C581.309 126.693 574.297 144 559.99 144H512v224h48c15.639 0 20.635 17.991 11.313 27.314l-79.995 80.001c-6.247 6.247-16.381 6.245-22.626 0l-79.995-80.001C378.691 385.307 385.703 368 400.01 368H448V144h-48c-15.639 0-20.635-17.991-11.313-27.314l79.995-80.001c6.247-6.248 16.381-6.245 22.626 0z\"],\n    \"text-width\": [448, 512, [], \"f035\", \"M16 32h416c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96H261.743v128H296c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H152c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm427.315 340.682l-80.001-79.995C353.991 283.365 336 288.362 336 304v48H112v-47.99c0-14.307-17.307-21.319-27.314-11.313L4.685 372.692c-6.245 6.245-6.247 16.379 0 22.626l80.001 79.995C94.009 484.635 112 479.638 112 464v-48h224v47.99c0 14.307 17.307 21.319 27.314 11.313l80.001-79.995c6.245-6.245 6.248-16.379 0-22.626z\"],\n    \"th\": [512, 512, [], \"f00a\", \"M149.333 56v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zm181.334 240v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm32-240v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24zm-32 80V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm-205.334 56H24c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm386.667-56H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm0 160H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zM181.333 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24z\"],\n    \"th-large\": [512, 512, [], \"f009\", \"M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z\"],\n    \"th-list\": [512, 512, [], \"f00b\", \"M149.333 216v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zM125.333 32H24C10.745 32 0 42.745 0 56v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zm80 448H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm-24-424v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24zm24 264H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24z\"],\n    \"theater-masks\": [640, 512, [], \"f630\", \"M206.86 245.15c-35.88 10.45-59.95 41.2-57.53 74.1 11.4-12.72 28.81-23.7 49.9-30.92l7.63-43.18zM95.81 295L64.08 115.49c-.29-1.62.28-2.62.24-2.65 57.76-32.06 123.12-49.01 189.01-49.01 1.61 0 3.23.17 4.85.19 13.95-13.47 31.73-22.83 51.59-26 18.89-3.02 38.05-4.55 57.18-5.32-9.99-13.95-24.48-24.23-41.77-27C301.27 1.89 277.24 0 253.32 0 176.66 0 101.02 19.42 33.2 57.06 9.03 70.48-3.92 98.48 1.05 126.58l31.73 179.51c14.23 80.52 136.33 142.08 204.45 142.08 3.59 0 6.75-.46 10.01-.8-13.52-17.08-28.94-40.48-39.5-67.58-47.61-12.98-106.06-51.62-111.93-84.79zm97.55-137.46c-.73-4.12-2.23-7.87-4.07-11.4-8.25 8.91-20.67 15.75-35.32 18.32-14.65 2.58-28.67.4-39.48-5.17-.52 3.94-.64 7.98.09 12.1 3.84 21.7 24.58 36.19 46.34 32.37 21.75-3.82 36.28-24.52 32.44-46.22zM606.8 120.9c-88.98-49.38-191.43-67.41-291.98-51.35-27.31 4.36-49.08 26.26-54.04 54.36l-31.73 179.51c-15.39 87.05 95.28 196.27 158.31 207.35 63.03 11.09 204.47-53.79 219.86-140.84l31.73-179.51c4.97-28.11-7.98-56.11-32.15-69.52zm-273.24 96.8c3.84-21.7 24.58-36.19 46.34-32.36 21.76 3.83 36.28 24.52 32.45 46.22-.73 4.12-2.23 7.87-4.07 11.4-8.25-8.91-20.67-15.75-35.32-18.32-14.65-2.58-28.67-.4-39.48 5.17-.53-3.95-.65-7.99.08-12.11zm70.47 198.76c-55.68-9.79-93.52-59.27-89.04-112.9 20.6 25.54 56.21 46.17 99.49 53.78 43.28 7.61 83.82.37 111.93-16.6-14.18 51.94-66.71 85.51-122.38 75.72zm130.3-151.34c-8.25-8.91-20.68-15.75-35.33-18.32-14.65-2.58-28.67-.4-39.48 5.17-.52-3.94-.64-7.98.09-12.1 3.84-21.7 24.58-36.19 46.34-32.37 21.75 3.83 36.28 24.52 32.45 46.22-.73 4.13-2.23 7.88-4.07 11.4z\"],\n    \"thermometer\": [512, 512, [], \"f491\", \"M476.8 20.4c-37.5-30.7-95.5-26.3-131.9 10.2l-45.7 46 50.5 50.5c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.4-50.5-45.1 45.4 50.3 50.4c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L209 167.4l-45.1 45.4L214 263c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.1-50.2L96 281.1V382L7 471c-9.4 9.4-9.4 24.6 0 33.9 9.4 9.4 24.6 9.4 33.9 0l89-89h99.9L484 162.6c34.9-34.9 42.2-101.5-7.2-142.2z\"],\n    \"thermometer-empty\": [256, 512, [], \"f2cb\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thermometer-full\": [256, 512, [], \"f2c7\", \"M224 96c0-53.019-42.981-96-96-96S32 42.981 32 96v203.347C12.225 321.756.166 351.136.002 383.333c-.359 70.303 56.787 128.176 127.089 128.664.299.002.61.003.909.003 70.698 0 128-57.304 128-128 0-32.459-12.088-62.09-32-84.653V96zm-96 368l-.576-.002c-43.86-.304-79.647-36.544-79.423-80.42.173-33.98 19.266-51.652 31.999-66.08V96c0-26.467 21.533-48 48-48s48 21.533 48 48v221.498c12.63 14.312 32 32.164 32 66.502 0 44.112-35.888 80-80 80zm64-80c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V96c0-17.673 14.327-32 32-32s32 14.327 32 32v232.583c19.124 11.068 32 31.732 32 55.417z\"],\n    \"thermometer-half\": [256, 512, [], \"f2c9\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V224c0-17.673 14.327-32 32-32s32 14.327 32 32v104.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thermometer-quarter\": [256, 512, [], \"f2ca\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V288c0-17.673 14.327-32 32-32s32 14.327 32 32v40.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thermometer-three-quarters\": [256, 512, [], \"f2c8\", \"M192 384c0 35.346-28.654 64-64 64-35.346 0-64-28.654-64-64 0-23.685 12.876-44.349 32-55.417V160c0-17.673 14.327-32 32-32s32 14.327 32 32v168.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thumbs-down\": [512, 512, [], \"f165\", \"M0 56v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56zm40 200c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24zm272 256c-20.183 0-29.485-39.293-33.931-57.795-5.206-21.666-10.589-44.07-25.393-58.902-32.469-32.524-49.503-73.967-89.117-113.111a11.98 11.98 0 0 1-3.558-8.521V59.901c0-6.541 5.243-11.878 11.783-11.998 15.831-.29 36.694-9.079 52.651-16.178C256.189 17.598 295.709.017 343.995 0h2.844c42.777 0 93.363.413 113.774 29.737 8.392 12.057 10.446 27.034 6.148 44.632 16.312 17.053 25.063 48.863 16.382 74.757 17.544 23.432 19.143 56.132 9.308 79.469l.11.11c11.893 11.949 19.523 31.259 19.439 49.197-.156 30.352-26.157 58.098-59.553 58.098H350.723C358.03 364.34 384 388.132 384 430.548 384 504 336 512 312 512z\"],\n    \"thumbs-up\": [512, 512, [], \"f164\", \"M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z\"],\n    \"thumbtack\": [384, 512, [], \"f08d\", \"M298.028 214.267L285.793 96H328c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v48c0 13.255 10.745 24 24 24h42.207L85.972 214.267C37.465 236.82 0 277.261 0 328c0 13.255 10.745 24 24 24h136v104.007c0 1.242.289 2.467.845 3.578l24 48c2.941 5.882 11.364 5.893 14.311 0l24-48a8.008 8.008 0 0 0 .845-3.578V352h136c13.255 0 24-10.745 24-24-.001-51.183-37.983-91.42-85.973-113.733z\"],\n    \"ticket-alt\": [576, 512, [], \"f3ff\", \"M128 160h320v192H128V160zm400 96c0 26.51 21.49 48 48 48v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c26.51 0 48-21.49 48-48s-21.49-48-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v96c-26.51 0-48 21.49-48 48zm-48-104c0-13.255-10.745-24-24-24H120c-13.255 0-24 10.745-24 24v208c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V152z\"],\n    \"times\": [352, 512, [], \"f00d\", \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"],\n    \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"],\n    \"tint\": [352, 512, [], \"f043\", \"M205.22 22.09c-7.94-28.78-49.44-30.12-58.44 0C100.01 179.85 0 222.72 0 333.91 0 432.35 78.72 512 176 512s176-79.65 176-178.09c0-111.75-99.79-153.34-146.78-311.82zM176 448c-61.75 0-112-50.25-112-112 0-8.84 7.16-16 16-16s16 7.16 16 16c0 44.11 35.89 80 80 80 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"],\n    \"tint-slash\": [640, 512, [], \"f5c7\", \"M633.82 458.1L494.97 350.78c.52-5.57 1.03-11.16 1.03-16.87 0-111.76-99.79-153.34-146.78-311.82-7.94-28.78-49.44-30.12-58.44 0-15.52 52.34-36.87 91.96-58.49 125.68L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM144 333.91C144 432.35 222.72 512 320 512c44.71 0 85.37-16.96 116.4-44.7L162.72 255.78c-11.41 23.5-18.72 48.35-18.72 78.13z\"],\n    \"tired\": [496, 512, [], \"f5c8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 189.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 208l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM248 288c51.9 0 115.3 43.8 123.2 106.7 1.7 13.6-8 24.6-17.7 20.4-25.9-11.1-64.4-17.4-105.5-17.4s-79.6 6.3-105.5 17.4c-9.8 4.2-19.4-7-17.7-20.4C132.7 331.8 196.1 288 248 288z\"],\n    \"toggle-off\": [576, 512, [], \"f204\", \"M384 64H192C85.961 64 0 149.961 0 256s85.961 192 192 192h192c106.039 0 192-85.961 192-192S490.039 64 384 64zM64 256c0-70.741 57.249-128 128-128 70.741 0 128 57.249 128 128 0 70.741-57.249 128-128 128-70.741 0-128-57.249-128-128zm320 128h-48.905c65.217-72.858 65.236-183.12 0-256H384c70.741 0 128 57.249 128 128 0 70.74-57.249 128-128 128z\"],\n    \"toggle-on\": [576, 512, [], \"f205\", \"M384 64H192C86 64 0 150 0 256s86 192 192 192h192c106 0 192-86 192-192S490 64 384 64zm0 320c-70.8 0-128-57.3-128-128 0-70.8 57.3-128 128-128 70.8 0 128 57.3 128 128 0 70.8-57.3 128-128 128z\"],\n    \"toilet\": [384, 512, [], \"f7d8\", \"M368 48c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v16c0 8.8 7.2 16 16 16h16v156.7C11.8 214.8 0 226.9 0 240c0 67.2 34.6 126.2 86.8 160.5l-21.4 70.2C59.1 491.2 74.5 512 96 512h192c21.5 0 36.9-20.8 30.6-41.3l-21.4-70.2C349.4 366.2 384 307.2 384 240c0-13.1-11.8-25.2-32-35.3V48h16zM80 72c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H88c-4.4 0-8-3.6-8-8V72zm112 200c-77.1 0-139.6-14.3-139.6-32s62.5-32 139.6-32 139.6 14.3 139.6 32-62.5 32-139.6 32z\"],\n    \"toilet-paper\": [576, 512, [], \"f71e\", \"M128 0C74.98 0 32 85.96 32 192v172.07c0 41.12-9.8 62.77-31.17 126.87C-2.62 501.3 5.09 512 16.01 512h280.92c13.77 0 26-8.81 30.36-21.88 12.83-38.48 24.71-72.4 24.71-126.05V192c0-83.6 23.67-153.52 60.44-192H128zM96 224c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zM480 0c-53.02 0-96 85.96-96 192s42.98 192 96 192 96-85.96 96-192S533.02 0 480 0zm0 256c-17.67 0-32-28.65-32-64s14.33-64 32-64 32 28.65 32 64-14.33 64-32 64z\"],\n    \"toolbox\": [512, 512, [], \"f552\", \"M502.63 214.63l-45.25-45.25c-6-6-14.14-9.37-22.63-9.37H384V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v80H77.25c-8.49 0-16.62 3.37-22.63 9.37L9.37 214.63c-6 6-9.37 14.14-9.37 22.63V320h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-82.75c0-8.48-3.37-16.62-9.37-22.62zM320 160H192V96h128v64zm64 208c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H192v16c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H0v96c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-96H384v16z\"],\n    \"tools\": [512, 512, [], \"f7d9\", \"M501.1 395.7L384 278.6c-23.1-23.1-57.6-27.6-85.4-13.9L192 158.1V96L64 0 0 64l96 128h62.1l106.6 106.6c-13.6 27.8-9.2 62.3 13.9 85.4l117.1 117.1c14.6 14.6 38.2 14.6 52.7 0l52.7-52.7c14.5-14.6 14.5-38.2 0-52.7zM331.7 225c28.3 0 54.9 11 74.9 31l19.4 19.4c15.8-6.9 30.8-16.5 43.8-29.5 37.1-37.1 49.7-89.3 37.9-136.7-2.2-9-13.5-12.1-20.1-5.5l-74.4 74.4-67.9-11.3L334 98.9l74.4-74.4c6.6-6.6 3.4-17.9-5.7-20.2-47.4-11.7-99.6.9-136.6 37.9-28.5 28.5-41.9 66.1-41.2 103.6l82.1 82.1c8.1-1.9 16.5-2.9 24.7-2.9zm-103.9 82l-56.7-56.7L18.7 402.8c-25 25-25 65.5 0 90.5s65.5 25 90.5 0l123.6-123.6c-7.6-19.9-9.9-41.6-5-62.7zM64 472c-13.2 0-24-10.8-24-24 0-13.3 10.7-24 24-24s24 10.7 24 24c0 13.2-10.7 24-24 24z\"],\n    \"tooth\": [448, 512, [], \"f5c9\", \"M443.98 96.25c-11.01-45.22-47.11-82.06-92.01-93.72-32.19-8.36-63 5.1-89.14 24.33-3.25 2.39-6.96 3.73-10.5 5.48l28.32 18.21c7.42 4.77 9.58 14.67 4.8 22.11-4.46 6.95-14.27 9.86-22.11 4.8L162.83 12.84c-20.7-10.85-43.38-16.4-66.81-10.31-44.9 11.67-81 48.5-92.01 93.72-10.13 41.62-.42 80.81 21.5 110.43 23.36 31.57 32.68 68.66 36.29 107.35 4.4 47.16 10.33 94.16 20.94 140.32l7.8 33.95c3.19 13.87 15.49 23.7 29.67 23.7 13.97 0 26.15-9.55 29.54-23.16l34.47-138.42c4.56-18.32 20.96-31.16 39.76-31.16s35.2 12.85 39.76 31.16l34.47 138.42c3.39 13.61 15.57 23.16 29.54 23.16 14.18 0 26.48-9.83 29.67-23.7l7.8-33.95c10.61-46.15 16.53-93.16 20.94-140.32 3.61-38.7 12.93-75.78 36.29-107.35 21.95-29.61 31.66-68.8 21.53-110.43z\"],\n    \"torah\": [640, 512, [], \"f6a0\", \"M48 0A48.05 48.05 0 0 0 0 48v64a16 16 0 0 0 16 16h80V48A48.05 48.05 0 0 0 48 0zm347.14 228.56h34.91l-17.47-29.17zm-59.09 52.07l16.78-28.07h-33.58zM242 228.56h34.9l-17.48-29.19zm188-105.12h-34.9l17.48 29.19zM256 412.57V352h288V96a96.1 96.1 0 0 0-96-96H111.59A79.24 79.24 0 0 1 128 48v368a64 64 0 0 0 74.75 63.12C234.22 474 256 444.46 256 412.57zm-38.59-303a20.11 20.11 0 0 1 17.5-10.15h56.3L318.8 53.3a20 20 0 0 1 17.25-9.82 19.66 19.66 0 0 1 17 9.68l27.7 46.28h56.36a20 20 0 0 1 17.14 30.29L426.57 176l27.79 46.43a19.6 19.6 0 0 1 .23 20 20.11 20.11 0 0 1-17.5 10.15h-56.3L353.2 298.7a20 20 0 0 1-17.2 9.82 19.66 19.66 0 0 1-17-9.68l-27.7-46.28h-56.39a20 20 0 0 1-17.14-30.29L245.43 176l-27.79-46.43a19.6 19.6 0 0 1-.23-19.98zM624 384H288v32a96.11 96.11 0 0 1-96 96h336a112 112 0 0 0 112-112 16 16 0 0 0-16-16zM276.86 123.44H242l17.47 29.17zM336 71.38l-16.83 28.06h33.58zm-31.12 157.18h62.3L398.59 176l-31.47-52.58h-62.3L273.41 176z\"],\n    \"torii-gate\": [512, 512, [], \"f6a1\", \"M376.45 32h-240.9A303.17 303.17 0 0 1 0 0v96c0 17.67 14.33 32 32 32h32v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h48v240c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V256h256v240c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V256h48c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-48v-64h32c17.67 0 32-14.33 32-32V0a303.17 303.17 0 0 1-135.55 32zM128 128h96v64h-96v-64zm256 64h-96v-64h96v64z\"],\n    \"tractor\": [640, 512, [], \"f722\", \"M528 336c-48.6 0-88 39.4-88 88s39.4 88 88 88 88-39.4 88-88-39.4-88-88-88zm0 112c-13.23 0-24-10.77-24-24s10.77-24 24-24 24 10.77 24 24-10.77 24-24 24zm80-288h-64v-40.2c0-14.12 4.7-27.76 13.15-38.84 4.42-5.8 3.55-14.06-1.32-19.49L534.2 37.3c-6.66-7.45-18.32-6.92-24.7.78C490.58 60.9 480 89.81 480 119.8V160H377.67L321.58 29.14A47.914 47.914 0 0 0 277.45 0H144c-26.47 0-48 21.53-48 48v146.52c-8.63-6.73-20.96-6.46-28.89 1.47L36 227.1c-8.59 8.59-8.59 22.52 0 31.11l5.06 5.06c-4.99 9.26-8.96 18.82-11.91 28.72H22c-12.15 0-22 9.85-22 22v44c0 12.15 9.85 22 22 22h7.14c2.96 9.91 6.92 19.46 11.91 28.73l-5.06 5.06c-8.59 8.59-8.59 22.52 0 31.11L67.1 476c8.59 8.59 22.52 8.59 31.11 0l5.06-5.06c9.26 4.99 18.82 8.96 28.72 11.91V490c0 12.15 9.85 22 22 22h44c12.15 0 22-9.85 22-22v-7.14c9.9-2.95 19.46-6.92 28.72-11.91l5.06 5.06c8.59 8.59 22.52 8.59 31.11 0l31.11-31.11c8.59-8.59 8.59-22.52 0-31.11l-5.06-5.06c4.99-9.26 8.96-18.82 11.91-28.72H330c12.15 0 22-9.85 22-22v-6h80.54c21.91-28.99 56.32-48 95.46-48 18.64 0 36.07 4.61 51.8 12.2l50.82-50.82c6-6 9.37-14.14 9.37-22.63V192c.01-17.67-14.32-32-31.99-32zM176 416c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zm22-256h-38V64h106.89l41.15 96H198z\"],\n    \"trademark\": [640, 512, [], \"f25c\", \"M260.6 96H12c-6.6 0-12 5.4-12 12v43.1c0 6.6 5.4 12 12 12h85.1V404c0 6.6 5.4 12 12 12h54.3c6.6 0 12-5.4 12-12V163.1h85.1c6.6 0 12-5.4 12-12V108c.1-6.6-5.3-12-11.9-12zM640 403l-24-296c-.5-6.2-5.7-11-12-11h-65.4c-5.1 0-9.7 3.3-11.3 8.1l-43.8 127.1c-7.2 20.6-16.1 52.8-16.1 52.8h-.9s-8.9-32.2-16.1-52.8l-43.8-127.1c-1.7-4.8-6.2-8.1-11.3-8.1h-65.4c-6.2 0-11.4 4.8-12 11l-24.4 296c-.6 7 4.9 13 12 13H360c6.3 0 11.5-4.9 12-11.2l9.1-132.9c1.8-24.2 0-53.7 0-53.7h.9s10.7 33.6 17.9 53.7l30.7 84.7c1.7 4.7 6.2 7.9 11.3 7.9h50.3c5.1 0 9.6-3.2 11.3-7.9l30.7-84.7c7.2-20.1 17.9-53.7 17.9-53.7h.9s-1.8 29.5 0 53.7l9.1 132.9c.4 6.3 5.7 11.2 12 11.2H628c7 0 12.5-6 12-13z\"],\n    \"traffic-light\": [384, 512, [], \"f637\", \"M384 192h-64v-37.88c37.2-13.22 64-48.38 64-90.12h-64V32c0-17.67-14.33-32-32-32H96C78.33 0 64 14.33 64 32v32H0c0 41.74 26.8 76.9 64 90.12V192H0c0 41.74 26.8 76.9 64 90.12V320H0c0 42.84 28.25 78.69 66.99 91.05C79.42 468.72 130.6 512 192 512s112.58-43.28 125.01-100.95C355.75 398.69 384 362.84 384 320h-64v-37.88c37.2-13.22 64-48.38 64-90.12zM192 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm0-128c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm0-128c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48z\"],\n    \"train\": [448, 512, [], \"f238\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zm-48 136V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24zm-176 64c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56z\"],\n    \"tram\": [512, 512, [], \"f7da\", \"M288 64c17.7 0 32-14.3 32-32S305.7 0 288 0s-32 14.3-32 32 14.3 32 32 32zm223.5-12.1c-2.3-8.6-11-13.6-19.6-11.3l-480 128c-8.5 2.3-13.6 11-11.3 19.6C2.5 195.3 8.9 200 16 200c1.4 0 2.8-.2 4.1-.5L240 140.8V224H64c-17.7 0-32 14.3-32 32v224c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32H272v-91.7l228.1-60.8c8.6-2.3 13.6-11.1 11.4-19.6zM176 384H80v-96h96v96zm160-96h96v96h-96v-96zm-32 0v96h-96v-96h96zM192 96c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"],\n    \"transgender\": [384, 512, [], \"f224\", \"M372 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C198.5 104.1 172.2 96 144 96 64.5 96 0 160.5 0 240c0 68.5 47.9 125.9 112 140.4V408H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM144 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"transgender-alt\": [480, 512, [], \"f225\", \"M468 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C294.5 104.1 268.2 96 240 96c-28.2 0-54.5 8.1-76.7 22.1l-16.5-16.5 19.8-19.8c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0l-19.8 19.8-19-19 16.9-16.9C107.1 12.9 101.7 0 91 0H12C5.4 0 0 5.4 0 12v79c0 10.7 12.9 16 20.5 8.5l16.9-16.9 19 19-19.8 19.8c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l19.8-19.8 16.5 16.5C104.1 185.5 96 211.8 96 240c0 68.5 47.9 125.9 112 140.4V408h-36c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM240 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"trash\": [448, 512, [], \"f1f8\", \"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"],\n    \"trash-alt\": [448, 512, [], \"f2ed\", \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"trash-restore\": [448, 512, [], \"f829\", \"M53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32zm70.11-175.8l89.38-94.26a15.41 15.41 0 0 1 22.62 0l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320h-57.37c-14.26 0-21.4-18.18-11.32-28.8zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"trash-restore-alt\": [448, 512, [], \"f82a\", \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm91.31-172.8l89.38-94.26a15.41 15.41 0 0 1 22.62 0l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320h-57.37c-14.26 0-21.4-18.18-11.32-28.8zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"tree\": [384, 512, [], \"f1bb\", \"M378.31 378.49L298.42 288h30.63c9.01 0 16.98-5 20.78-13.06 3.8-8.04 2.55-17.26-3.28-24.05L268.42 160h28.89c9.1 0 17.3-5.35 20.86-13.61 3.52-8.13 1.86-17.59-4.24-24.08L203.66 4.83c-6.03-6.45-17.28-6.45-23.32 0L70.06 122.31c-6.1 6.49-7.75 15.95-4.24 24.08C69.38 154.65 77.59 160 86.69 160h28.89l-78.14 90.91c-5.81 6.78-7.06 15.99-3.27 24.04C37.97 283 45.93 288 54.95 288h30.63L5.69 378.49c-6 6.79-7.36 16.09-3.56 24.26 3.75 8.05 12 13.25 21.01 13.25H160v24.45l-30.29 48.4c-5.32 10.64 2.42 23.16 14.31 23.16h95.96c11.89 0 19.63-12.52 14.31-23.16L224 440.45V416h136.86c9.01 0 17.26-5.2 21.01-13.25 3.8-8.17 2.44-17.47-3.56-24.26z\"],\n    \"trophy\": [576, 512, [], \"f091\", \"M552 64H448V24c0-13.3-10.7-24-24-24H152c-13.3 0-24 10.7-24 24v40H24C10.7 64 0 74.7 0 88v56c0 35.7 22.5 72.4 61.9 100.7 31.5 22.7 69.8 37.1 110 41.7C203.3 338.5 240 360 240 360v72h-48c-35.3 0-64 20.7-64 56v12c0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12v-12c0-35.3-28.7-56-64-56h-48v-72s36.7-21.5 68.1-73.6c40.3-4.6 78.6-19 110-41.7 39.3-28.3 61.9-65 61.9-100.7V88c0-13.3-10.7-24-24-24zM99.3 192.8C74.9 175.2 64 155.6 64 144v-16h64.2c1 32.6 5.8 61.2 12.8 86.2-15.1-5.2-29.2-12.4-41.7-21.4zM512 144c0 16.1-17.7 36.1-35.3 48.8-12.5 9-26.7 16.2-41.8 21.4 7-25 11.8-53.6 12.8-86.2H512v16z\"],\n    \"truck\": [640, 512, [], \"f0d1\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n    \"truck-loading\": [640, 512, [], \"f4de\", \"M50.2 375.6c2.3 8.5 11.1 13.6 19.6 11.3l216.4-58c8.5-2.3 13.6-11.1 11.3-19.6l-49.7-185.5c-2.3-8.5-11.1-13.6-19.6-11.3L151 133.3l24.8 92.7-61.8 16.5-24.8-92.7-77.3 20.7C3.4 172.8-1.7 181.6.6 190.1l49.6 185.5zM384 0c-17.7 0-32 14.3-32 32v323.6L5.9 450c-4.3 1.2-6.8 5.6-5.6 9.8l12.6 46.3c1.2 4.3 5.6 6.8 9.8 5.6l393.7-107.4C418.8 464.1 467.6 512 528 512c61.9 0 112-50.1 112-112V0H384zm144 448c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"truck-monster\": [640, 512, [], \"f63b\", \"M624 224h-16v-64c0-17.67-14.33-32-32-32h-73.6L419.22 24.02A64.025 64.025 0 0 0 369.24 0H256c-17.67 0-32 14.33-32 32v96H48c-8.84 0-16 7.16-16 16v80H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16.72c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64h65.45c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-336-96V64h81.24l51.2 64H288zm304 224h-5.2c-2.2-7.33-5.07-14.28-8.65-20.89l3.67-3.67c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-3.67 3.67A110.85 110.85 0 0 0 512 277.2V272c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v5.2c-7.33 2.2-14.28 5.07-20.89 8.65l-3.67-3.67c-6.25-6.25-16.38-6.25-22.63 0l-22.63 22.63c-6.25 6.25-6.25 16.38 0 22.63l3.67 3.67A110.85 110.85 0 0 0 373.2 352H368c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h5.2c2.2 7.33 5.07 14.28 8.65 20.89l-3.67 3.67c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l3.67-3.67c6.61 3.57 13.57 6.45 20.9 8.65v5.2c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-5.2c7.33-2.2 14.28-5.07 20.9-8.65l3.67 3.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63l-3.67-3.67a110.85 110.85 0 0 0 8.65-20.89h5.2c8.84 0 16-7.16 16-16v-32c-.02-8.84-7.18-16-16.02-16zm-112 80c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm-208-80h-5.2c-2.2-7.33-5.07-14.28-8.65-20.89l3.67-3.67c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-3.67 3.67A110.85 110.85 0 0 0 192 277.2V272c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v5.2c-7.33 2.2-14.28 5.07-20.89 8.65l-3.67-3.67c-6.25-6.25-16.38-6.25-22.63 0L58.18 304.8c-6.25 6.25-6.25 16.38 0 22.63l3.67 3.67a110.85 110.85 0 0 0-8.65 20.89H48c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h5.2c2.2 7.33 5.07 14.28 8.65 20.89l-3.67 3.67c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l3.67-3.67c6.61 3.57 13.57 6.45 20.9 8.65v5.2c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-5.2c7.33-2.2 14.28-5.07 20.9-8.65l3.67 3.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63l-3.67-3.67a110.85 110.85 0 0 0 8.65-20.89h5.2c8.84 0 16-7.16 16-16v-32C288 359.16 280.84 352 272 352zm-112 80c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48z\"],\n    \"truck-moving\": [640, 512, [], \"f4df\", \"M621.3 237.3l-58.5-58.5c-12-12-28.3-18.7-45.3-18.7H480V64c0-17.7-14.3-32-32-32H32C14.3 32 0 46.3 0 64v336c0 44.2 35.8 80 80 80 26.3 0 49.4-12.9 64-32.4 14.6 19.6 37.7 32.4 64 32.4 44.2 0 80-35.8 80-80 0-5.5-.6-10.8-1.6-16h163.2c-1.1 5.2-1.6 10.5-1.6 16 0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16H624c8.8 0 16-7.2 16-16v-85.5c0-17-6.7-33.2-18.7-45.2zM80 432c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm128 0c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm272-224h37.5c4.3 0 8.3 1.7 11.3 4.7l43.3 43.3H480v-48zm48 224c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z\"],\n    \"truck-pickup\": [640, 512, [], \"f63c\", \"M624 288h-16v-64c0-17.67-14.33-32-32-32h-48L419.22 56.02A64.025 64.025 0 0 0 369.24 32H256c-17.67 0-32 14.33-32 32v128H64c-17.67 0-32 14.33-32 32v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h49.61c-.76 5.27-1.61 10.52-1.61 16 0 61.86 50.14 112 112 112s112-50.14 112-112c0-5.48-.85-10.73-1.61-16h67.23c-.76 5.27-1.61 10.52-1.61 16 0 61.86 50.14 112 112 112s112-50.14 112-112c0-5.48-.85-10.73-1.61-16H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM288 96h81.24l76.8 96H288V96zM176 416c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48zm288 0c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48z\"],\n    \"tshirt\": [640, 512, [], \"f553\", \"M631.2 96.5L436.5 0C416.4 27.8 371.9 47.2 320 47.2S223.6 27.8 203.5 0L8.8 96.5c-7.9 4-11.1 13.6-7.2 21.5l57.2 114.5c4 7.9 13.6 11.1 21.5 7.2l56.6-27.7c10.6-5.2 23 2.5 23 14.4V480c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V226.3c0-11.8 12.4-19.6 23-14.4l56.6 27.7c7.9 4 17.5.8 21.5-7.2L638.3 118c4-7.9.8-17.6-7.1-21.5z\"],\n    \"tty\": [512, 512, [], \"f1e4\", \"M5.37 103.822c138.532-138.532 362.936-138.326 501.262 0 6.078 6.078 7.074 15.496 2.583 22.681l-43.214 69.138a18.332 18.332 0 0 1-22.356 7.305l-86.422-34.569a18.335 18.335 0 0 1-11.434-18.846L351.741 90c-62.145-22.454-130.636-21.986-191.483 0l5.953 59.532a18.331 18.331 0 0 1-11.434 18.846l-86.423 34.568a18.334 18.334 0 0 1-22.356-7.305L2.787 126.502a18.333 18.333 0 0 1 2.583-22.68zM96 308v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H92c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zM96 500v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H140c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"],\n    \"tv\": [640, 512, [], \"f26c\", \"M592 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h245.1v32h-160c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32h-160v-32H592c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h512v288z\"],\n    \"umbrella\": [576, 512, [], \"f0e9\", \"M575.7 280.8C547.1 144.5 437.3 62.6 320 49.9V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v17.9C138.3 62.6 29.5 144.5.3 280.8c-2.2 10.1 8.5 21.3 18.7 11.4 52-55 107.7-52.4 158.6 37 5.3 9.5 14.9 8.6 19.7 0 20.2-35.4 44.9-73.2 90.7-73.2 58.5 0 88.2 68.8 90.7 73.2 4.8 8.6 14.4 9.5 19.7 0 51-89.5 107.1-91.4 158.6-37 10.3 10 20.9-1.3 18.7-11.4zM256 301.7V432c0 8.8-7.2 16-16 16-7.8 0-13.2-5.3-15.1-10.7-5.9-16.7-24.1-25.4-40.8-19.5-16.7 5.9-25.4 24.2-19.5 40.8 11.2 31.9 41.6 53.3 75.4 53.3 44.1 0 80-35.9 80-80V301.6c-9.1-7.9-19.8-13.6-32-13.6-12.3.1-22.4 4.8-32 13.7z\"],\n    \"umbrella-beach\": [640, 512, [], \"f5ca\", \"M115.38 136.9l102.11 37.18c35.19-81.54 86.21-144.29 139-173.7-95.88-4.89-188.78 36.96-248.53 111.8-6.69 8.4-2.66 21.05 7.42 24.72zm132.25 48.16l238.48 86.83c35.76-121.38 18.7-231.66-42.63-253.98-7.4-2.7-15.13-4-23.09-4-58.02.01-128.27 69.17-172.76 171.15zM521.48 60.5c6.22 16.3 10.83 34.6 13.2 55.19 5.74 49.89-1.42 108.23-18.95 166.98l102.62 37.36c10.09 3.67 21.31-3.43 21.57-14.17 2.32-95.69-41.91-187.44-118.44-245.36zM560 447.98H321.06L386 269.5l-60.14-21.9-72.9 200.37H16c-8.84 0-16 7.16-16 16.01v32.01C0 504.83 7.16 512 16 512h544c8.84 0 16-7.17 16-16.01v-32.01c0-8.84-7.16-16-16-16z\"],\n    \"underline\": [448, 512, [], \"f0cd\", \"M224.264 388.24c-91.669 0-156.603-51.165-156.603-151.392V64H39.37c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h137.39c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.813v172.848c0 53.699 28.314 79.444 76.317 79.444 46.966 0 75.796-25.434 75.796-79.965V64h-28.291c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h136.868c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.291v172.848c0 99.405-64.881 151.392-156.082 151.392zM16 448h416c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16z\"],\n    \"undo\": [512, 512, [], \"f0e2\", \"M212.333 224.333H12c-6.627 0-12-5.373-12-12V12C0 5.373 5.373 0 12 0h48c6.627 0 12 5.373 12 12v78.112C117.773 39.279 184.26 7.47 258.175 8.007c136.906.994 246.448 111.623 246.157 248.532C504.041 393.258 393.12 504 256.333 504c-64.089 0-122.496-24.313-166.51-64.215-5.099-4.622-5.334-12.554-.467-17.42l33.967-33.967c4.474-4.474 11.662-4.717 16.401-.525C170.76 415.336 211.58 432 256.333 432c97.268 0 176-78.716 176-176 0-97.267-78.716-176-176-176-58.496 0-110.28 28.476-142.274 72.333h98.274c6.627 0 12 5.373 12 12v48c0 6.627-5.373 12-12 12z\"],\n    \"undo-alt\": [512, 512, [], \"f2ea\", \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\"],\n    \"universal-access\": [512, 512, [], \"f29a\", \"M256 48c114.953 0 208 93.029 208 208 0 114.953-93.029 208-208 208-114.953 0-208-93.029-208-208 0-114.953 93.029-208 208-208m0-40C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 56C149.961 64 64 149.961 64 256s85.961 192 192 192 192-85.961 192-192S362.039 64 256 64zm0 44c19.882 0 36 16.118 36 36s-16.118 36-36 36-36-16.118-36-36 16.118-36 36-36zm117.741 98.023c-28.712 6.779-55.511 12.748-82.14 15.807.851 101.023 12.306 123.052 25.037 155.621 3.617 9.26-.957 19.698-10.217 23.315-9.261 3.617-19.699-.957-23.316-10.217-8.705-22.308-17.086-40.636-22.261-78.549h-9.686c-5.167 37.851-13.534 56.208-22.262 78.549-3.615 9.255-14.05 13.836-23.315 10.217-9.26-3.617-13.834-14.056-10.217-23.315 12.713-32.541 24.185-54.541 25.037-155.621-26.629-3.058-53.428-9.027-82.141-15.807-8.6-2.031-13.926-10.648-11.895-19.249s10.647-13.926 19.249-11.895c96.686 22.829 124.283 22.783 220.775 0 8.599-2.03 17.218 3.294 19.249 11.895 2.029 8.601-3.297 17.219-11.897 19.249z\"],\n    \"university\": [512, 512, [], \"f19c\", \"M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z\"],\n    \"unlink\": [512, 512, [], \"f127\", \"M304.083 405.907c4.686 4.686 4.686 12.284 0 16.971l-44.674 44.674c-59.263 59.262-155.693 59.266-214.961 0-59.264-59.265-59.264-155.696 0-214.96l44.675-44.675c4.686-4.686 12.284-4.686 16.971 0l39.598 39.598c4.686 4.686 4.686 12.284 0 16.971l-44.675 44.674c-28.072 28.073-28.072 73.75 0 101.823 28.072 28.072 73.75 28.073 101.824 0l44.674-44.674c4.686-4.686 12.284-4.686 16.971 0l39.597 39.598zm-56.568-260.216c4.686 4.686 12.284 4.686 16.971 0l44.674-44.674c28.072-28.075 73.75-28.073 101.824 0 28.072 28.073 28.072 73.75 0 101.823l-44.675 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.598 39.598c4.686 4.686 12.284 4.686 16.971 0l44.675-44.675c59.265-59.265 59.265-155.695 0-214.96-59.266-59.264-155.695-59.264-214.961 0l-44.674 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.597 39.598zm234.828 359.28l22.627-22.627c9.373-9.373 9.373-24.569 0-33.941L63.598 7.029c-9.373-9.373-24.569-9.373-33.941 0L7.029 29.657c-9.373 9.373-9.373 24.569 0 33.941l441.373 441.373c9.373 9.372 24.569 9.372 33.941 0z\"],\n    \"unlock\": [448, 512, [], \"f09c\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"],\n    \"unlock-alt\": [448, 512, [], \"f13e\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zM264 408c0 22.1-17.9 40-40 40s-40-17.9-40-40v-48c0-22.1 17.9-40 40-40s40 17.9 40 40v48z\"],\n    \"upload\": [512, 512, [], \"f093\", \"M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"],\n    \"user\": [448, 512, [], \"f007\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"user-alt\": [512, 512, [], \"f406\", \"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"],\n    \"user-alt-slash\": [640, 512, [], \"f4fa\", \"M633.8 458.1L389.6 269.3C433.8 244.7 464 198.1 464 144 464 64.5 399.5 0 320 0c-67.1 0-123 46.1-139 108.2L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM198.4 320C124.2 320 64 380.2 64 454.4v9.6c0 26.5 21.5 48 48 48h382.2L245.8 320h-47.4z\"],\n    \"user-astronaut\": [448, 512, [], \"f4fb\", \"M64 224h13.5c24.7 56.5 80.9 96 146.5 96s121.8-39.5 146.5-96H384c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-13.5C345.8 39.5 289.6 0 224 0S102.2 39.5 77.5 96H64c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24c0 53-43 96-96 96h-48c-53 0-96-43-96-96v-24zm72 72l12-36 36-12-36-12-12-36-12 36-36 12 36 12 12 36zm151.6 113.4C297.7 340.7 262.2 352 224 352s-73.7-11.3-103.6-30.6C52.9 328.5 0 385 0 454.4v9.6c0 26.5 21.5 48 48 48h80v-64c0-17.7 14.3-32 32-32h128c17.7 0 32 14.3 32 32v64h80c26.5 0 48-21.5 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM272 448c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v48h32v-48c0-8.8-7.2-16-16-16z\"],\n    \"user-check\": [640, 512, [], \"f4fc\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4zm323-128.4l-27.8-28.1c-4.6-4.7-12.1-4.7-16.8-.1l-104.8 104-45.5-45.8c-4.6-4.7-12.1-4.7-16.8-.1l-28.1 27.9c-4.7 4.6-4.7 12.1-.1 16.8l81.7 82.3c4.6 4.7 12.1 4.7 16.8.1l141.3-140.2c4.6-4.7 4.7-12.2.1-16.8z\"],\n    \"user-circle\": [496, 512, [], \"f2bd\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z\"],\n    \"user-clock\": [640, 512, [], \"f4fd\", \"M496 224c-79.6 0-144 64.4-144 144s64.4 144 144 144 144-64.4 144-144-64.4-144-144-144zm64 150.3c0 5.3-4.4 9.7-9.7 9.7h-60.6c-5.3 0-9.7-4.4-9.7-9.7v-76.6c0-5.3 4.4-9.7 9.7-9.7h12.6c5.3 0 9.7 4.4 9.7 9.7V352h38.3c5.3 0 9.7 4.4 9.7 9.7v12.6zM320 368c0-27.8 6.7-54.1 18.2-77.5-8-1.5-16.2-2.5-24.6-2.5h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h347.1c-45.3-31.9-75.1-84.5-75.1-144zm-96-112c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128z\"],\n    \"user-cog\": [640, 512, [], \"f4fe\", \"M610.5 373.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 400.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm201.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6c-6 3.4-12.8 5.3-19.6 5.3-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-5.5-17.7 1.9-36.4 17.9-45.7l7.9-4.6c-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-16-9.2-23.4-28-17.9-45.7.9-2.9 2.2-5.8 3.2-8.7-3.8-.3-7.5-1.2-11.4-1.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c10.1 0 19.5-3.2 27.2-8.5-1.2-3.8-2-7.7-2-11.8v-9.2z\"],\n    \"user-edit\": [640, 512, [], \"f4ff\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h274.9c-2.4-6.8-3.4-14-2.6-21.3l6.8-60.9 1.2-11.1 7.9-7.9 77.3-77.3c-24.5-27.7-60-45.5-99.9-45.5zm45.3 145.3l-6.8 61c-1.1 10.2 7.5 18.8 17.6 17.6l60.9-6.8 137.9-137.9-71.7-71.7-137.9 137.8zM633 268.9L595.1 231c-9.3-9.3-24.5-9.3-33.8 0l-37.8 37.8-4.1 4.1 71.8 71.7 41.8-41.8c9.3-9.4 9.3-24.5 0-33.9z\"],\n    \"user-friends\": [640, 512, [], \"f500\", \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"],\n    \"user-graduate\": [448, 512, [], \"f501\", \"M319.4 320.6L224 416l-95.4-95.4C57.1 323.7 0 382.2 0 454.4v9.6c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-9.6c0-72.2-57.1-130.7-128.6-133.8zM13.6 79.8l6.4 1.5v58.4c-7 4.2-12 11.5-12 20.3 0 8.4 4.6 15.4 11.1 19.7L3.5 242c-1.7 6.9 2.1 14 7.6 14h41.8c5.5 0 9.3-7.1 7.6-14l-15.6-62.3C51.4 175.4 56 168.4 56 160c0-8.8-5-16.1-12-20.3V87.1l66 15.9c-8.6 17.2-14 36.4-14 57 0 70.7 57.3 128 128 128s128-57.3 128-128c0-20.6-5.3-39.8-14-57l96.3-23.2c18.2-4.4 18.2-27.1 0-31.5l-190.4-46c-13-3.1-26.7-3.1-39.7 0L13.6 48.2c-18.1 4.4-18.1 27.2 0 31.6z\"],\n    \"user-injured\": [448, 512, [], \"f728\", \"M277.37 11.98C261.08 4.47 243.11 0 224 0c-53.69 0-99.5 33.13-118.51 80h81.19l90.69-68.02zM342.51 80c-7.9-19.47-20.67-36.2-36.49-49.52L239.99 80h102.52zM224 256c70.69 0 128-57.31 128-128 0-5.48-.95-10.7-1.61-16H97.61c-.67 5.3-1.61 10.52-1.61 16 0 70.69 57.31 128 128 128zM80 299.7V512h128.26l-98.45-221.52A132.835 132.835 0 0 0 80 299.7zM0 464c0 26.51 21.49 48 48 48V320.24C18.88 344.89 0 381.26 0 422.4V464zm256-48h-55.38l42.67 96H256c26.47 0 48-21.53 48-48s-21.53-48-48-48zm57.6-128h-16.71c-22.24 10.18-46.88 16-72.89 16s-50.65-5.82-72.89-16h-7.37l42.67 96H256c44.11 0 80 35.89 80 80 0 18.08-6.26 34.59-16.41 48H400c26.51 0 48-21.49 48-48v-41.6c0-74.23-60.17-134.4-134.4-134.4z\"],\n    \"user-lock\": [640, 512, [], \"f502\", \"M320 320c0-11.1 3.1-21.4 8.1-30.5-4.8-.5-9.5-1.5-14.5-1.5h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h280.9c-5.5-9.5-8.9-20.3-8.9-32V320zm-96-64c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm384 32h-32v-48c0-44.2-35.8-80-80-80s-80 35.8-80 80v48h-32c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h224c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zm-80 0h-64v-48c0-17.6 14.4-32 32-32s32 14.4 32 32v48z\"],\n    \"user-md\": [448, 512, [], \"f0f0\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zM104 424c0 13.3 10.7 24 24 24s24-10.7 24-24-10.7-24-24-24-24 10.7-24 24zm216-135.4v49c36.5 7.4 64 39.8 64 78.4v41.7c0 7.6-5.4 14.2-12.9 15.7l-32.2 6.4c-4.3.9-8.5-1.9-9.4-6.3l-3.1-15.7c-.9-4.3 1.9-8.6 6.3-9.4l19.3-3.9V416c0-62.8-96-65.1-96 1.9v26.7l19.3 3.9c4.3.9 7.1 5.1 6.3 9.4l-3.1 15.7c-.9 4.3-5.1 7.1-9.4 6.3l-31.2-4.2c-7.9-1.1-13.8-7.8-13.8-15.9V416c0-38.6 27.5-70.9 64-78.4v-45.2c-2.2.7-4.4 1.1-6.6 1.9-18 6.3-37.3 9.8-57.4 9.8s-39.4-3.5-57.4-9.8c-7.4-2.6-14.9-4.2-22.6-5.2v81.6c23.1 6.9 40 28.1 40 53.4 0 30.9-25.1 56-56 56s-56-25.1-56-56c0-25.3 16.9-46.5 40-53.4v-80.4C48.5 301 0 355.8 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-72-56.8-130.3-128-133.8z\"],\n    \"user-minus\": [640, 512, [], \"f503\", \"M624 208H432c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h192c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"user-ninja\": [448, 512, [], \"f504\", \"M325.4 289.2L224 390.6 122.6 289.2C54 295.3 0 352.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-70.2-54-127.1-122.6-133.2zM32 192c27.3 0 51.8-11.5 69.2-29.7 15.1 53.9 64 93.7 122.8 93.7 70.7 0 128-57.3 128-128S294.7 0 224 0c-50.4 0-93.6 29.4-114.5 71.8C92.1 47.8 64 32 32 32c0 33.4 17.1 62.8 43.1 80-26 17.2-43.1 46.6-43.1 80zm144-96h96c17.7 0 32 14.3 32 32H144c0-17.7 14.3-32 32-32z\"],\n    \"user-nurse\": [448, 512, [], \"f82f\", \"M57.78 288h82.36c22.51 19.68 51.62 32 83.86 32s61.35-12.32 83.86-32h82.36a16 16 0 0 0 14.28-23.18c-15.23-29.85-31.28-62.23-42.15-95.54C354.78 146.09 352 121.59 352 97.2V48L224 0 96 48v49.2c0 24.39-2.75 48.89-10.33 72.08C74.78 202.59 58.73 235 43.5 264.82A16 16 0 0 0 57.78 288zM184 71.67a5 5 0 0 1 5-5h21.67V45a5 5 0 0 1 5-5h16.66a5 5 0 0 1 5 5v21.67H259a5 5 0 0 1 5 5v16.66a5 5 0 0 1-5 5h-21.67V115a5 5 0 0 1-5 5h-16.66a5 5 0 0 1-5-5V93.33H189a5 5 0 0 1-5-5zM144 160h160v32a80 80 0 0 1-160 0zm175.41 160L224 415.39 128.59 320C57.1 323.1 0 381.6 0 453.79A58.21 58.21 0 0 0 58.21 512h331.58A58.21 58.21 0 0 0 448 453.79C448 381.6 390.9 323.1 319.41 320z\"],\n    \"user-plus\": [640, 512, [], \"f234\", \"M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"user-secret\": [448, 512, [], \"f21b\", \"M383.9 308.3l23.9-62.6c4-10.5-3.7-21.7-15-21.7h-58.5c11-18.9 17.8-40.6 17.8-64v-.3c39.2-7.8 64-19.1 64-31.7 0-13.3-27.3-25.1-70.1-33-9.2-32.8-27-65.8-40.6-82.8-9.5-11.9-25.9-15.6-39.5-8.8l-27.6 13.8c-9 4.5-19.6 4.5-28.6 0L182.1 3.4c-13.6-6.8-30-3.1-39.5 8.8-13.5 17-31.4 50-40.6 82.8-42.7 7.9-70 19.7-70 33 0 12.6 24.8 23.9 64 31.7v.3c0 23.4 6.8 45.1 17.8 64H56.3c-11.5 0-19.2 11.7-14.7 22.3l25.8 60.2C27.3 329.8 0 372.7 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-48.4-25.8-90.4-64.1-114.1zM176 480l-41.6-192 49.6 32 24 40-32 120zm96 0l-32-120 24-40 49.6-32L272 480zm41.7-298.5c-3.9 11.9-7 24.6-16.5 33.4-10.1 9.3-48 22.4-64-25-2.8-8.4-15.4-8.4-18.3 0-17 50.2-56 32.4-64 25-9.5-8.8-12.7-21.5-16.5-33.4-.8-2.5-6.3-5.7-6.3-5.8v-10.8c28.3 3.6 61 5.8 96 5.8s67.7-2.1 96-5.8v10.8c-.1.1-5.6 3.2-6.4 5.8z\"],\n    \"user-shield\": [640, 512, [], \"f505\", \"M622.3 271.1l-115.2-45c-4.1-1.6-12.6-3.7-22.2 0l-115.2 45c-10.7 4.2-17.7 14-17.7 24.9 0 111.6 68.7 188.8 132.9 213.9 9.6 3.7 18 1.6 22.2 0C558.4 489.9 640 420.5 640 296c0-10.9-7-20.7-17.7-24.9zM496 462.4V273.3l95.5 37.3c-5.6 87.1-60.9 135.4-95.5 151.8zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm96 40c0-2.5.8-4.8 1.1-7.2-2.5-.1-4.9-.8-7.5-.8h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c6.8 0 13.3-1.5 19.2-4-54-42.9-99.2-116.7-99.2-212z\"],\n    \"user-slash\": [640, 512, [], \"f506\", \"M633.8 458.1L362.3 248.3C412.1 230.7 448 183.8 448 128 448 57.3 390.7 0 320 0c-67.1 0-121.5 51.8-126.9 117.4L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM96 422.4V464c0 26.5 21.5 48 48 48h350.2L207.4 290.3C144.2 301.3 96 356 96 422.4z\"],\n    \"user-tag\": [640, 512, [], \"f507\", \"M630.6 364.9l-90.3-90.2c-12-12-28.3-18.7-45.3-18.7h-79.3c-17.7 0-32 14.3-32 32v79.2c0 17 6.7 33.2 18.7 45.2l90.3 90.2c12.5 12.5 32.8 12.5 45.3 0l92.5-92.5c12.6-12.5 12.6-32.7.1-45.2zm-182.8-21c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24c0 13.2-10.7 24-24 24zm-223.8-88c70.7 0 128-57.3 128-128C352 57.3 294.7 0 224 0S96 57.3 96 128c0 70.6 57.3 127.9 128 127.9zm127.8 111.2V294c-12.2-3.6-24.9-6.2-38.2-6.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 287.9 0 348.1 0 422.3v41.6c0 26.5 21.5 48 48 48h352c15.5 0 29.1-7.5 37.9-18.9l-58-58c-18.1-18.1-28.1-42.2-28.1-67.9z\"],\n    \"user-tie\": [448, 512, [], \"f508\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm95.8 32.6L272 480l-32-136 32-56h-96l32 56-32 136-47.8-191.4C56.9 292 0 350.3 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-72.1-56.9-130.4-128.2-133.8z\"],\n    \"user-times\": [640, 512, [], \"f235\", \"M589.6 240l45.6-45.6c6.3-6.3 6.3-16.5 0-22.8l-22.8-22.8c-6.3-6.3-16.5-6.3-22.8 0L544 194.4l-45.6-45.6c-6.3-6.3-16.5-6.3-22.8 0l-22.8 22.8c-6.3 6.3-6.3 16.5 0 22.8l45.6 45.6-45.6 45.6c-6.3 6.3-6.3 16.5 0 22.8l22.8 22.8c6.3 6.3 16.5 6.3 22.8 0l45.6-45.6 45.6 45.6c6.3 6.3 16.5 6.3 22.8 0l22.8-22.8c6.3-6.3 6.3-16.5 0-22.8L589.6 240zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"users\": [640, 512, [], \"f0c0\", \"M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\"],\n    \"users-cog\": [640, 512, [], \"f509\", \"M610.5 341.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 368.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm224 32c1.9 0 3.7-.5 5.6-.6 8.3-21.7 20.5-42.1 36.3-59.2 7.4-8 17.9-12.6 28.9-12.6 6.9 0 13.7 1.8 19.6 5.3l7.9 4.6c.8-.5 1.6-.9 2.4-1.4 7-14.6 11.2-30.8 11.2-48 0-61.9-50.1-112-112-112S208 82.1 208 144c0 61.9 50.1 112 112 112zm105.2 194.5c-2.3-1.2-4.6-2.6-6.8-3.9-8.2 4.8-15.3 9.8-27.5 9.8-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-10.7-34.5 24.9-49.7 25.8-50.3-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-3.8-2.2-7-5-9.8-8.1-3.3.2-6.5.6-9.8.6-24.6 0-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h255.4c-3.7-6-6.2-12.8-6.2-20.3v-9.2zM173.1 274.6C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\"],\n    \"utensil-spoon\": [512, 512, [], \"f2e5\", \"M480.1 31.9c-55-55.1-164.9-34.5-227.8 28.5-49.3 49.3-55.1 110-28.8 160.4L9 413.2c-11.6 10.5-12.1 28.5-1 39.5L59.3 504c11 11 29.1 10.5 39.5-1.1l192.4-214.4c50.4 26.3 111.1 20.5 160.4-28.8 63-62.9 83.6-172.8 28.5-227.8z\"],\n    \"utensils\": [416, 512, [], \"f2e7\", \"M207.9 15.2c.8 4.7 16.1 94.5 16.1 128.8 0 52.3-27.8 89.6-68.9 104.6L168 486.7c.7 13.7-10.2 25.3-24 25.3H80c-13.7 0-24.7-11.5-24-25.3l12.9-238.1C27.7 233.6 0 196.2 0 144 0 109.6 15.3 19.9 16.1 15.2 19.3-5.1 61.4-5.4 64 16.3v141.2c1.3 3.4 15.1 3.2 16 0 1.4-25.3 7.9-139.2 8-141.8 3.3-20.8 44.7-20.8 47.9 0 .2 2.7 6.6 116.5 8 141.8.9 3.2 14.8 3.4 16 0V16.3c2.6-21.6 44.8-21.4 48-1.1zm119.2 285.7l-15 185.1c-1.2 14 9.9 26 23.9 26h56c13.3 0 24-10.7 24-24V24c0-13.2-10.7-24-24-24-82.5 0-221.4 178.5-64.9 300.9z\"],\n    \"vector-square\": [512, 512, [], \"f5cb\", \"M512 128V32c0-17.67-14.33-32-32-32h-96c-17.67 0-32 14.33-32 32H160c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v96c0 17.67 14.33 32 32 32v192c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32h192c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32V160c17.67 0 32-14.33 32-32zm-96-64h32v32h-32V64zM64 64h32v32H64V64zm32 384H64v-32h32v32zm352 0h-32v-32h32v32zm-32-96h-32c-17.67 0-32 14.33-32 32v32H160v-32c0-17.67-14.33-32-32-32H96V160h32c17.67 0 32-14.33 32-32V96h192v32c0 17.67 14.33 32 32 32h32v192z\"],\n    \"venus\": [288, 512, [], \"f221\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"],\n    \"venus-double\": [512, 512, [], \"f226\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80zm336 140.4V368h36c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-36v36c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-36h-36c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h36v-51.6c-21.2-4.8-40.6-14.3-57.2-27.3 14-16.7 25-36 32.1-57.1 14.5 14.8 34.7 24 57.1 24 44.1 0 80-35.9 80-80s-35.9-80-80-80c-22.3 0-42.6 9.2-57.1 24-7.1-21.1-18-40.4-32.1-57.1C303.4 43.6 334.3 32 368 32c79.5 0 144 64.5 144 144 0 68.5-47.9 125.9-112 140.4z\"],\n    \"venus-mars\": [576, 512, [], \"f228\", \"M564 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C422.5 72.1 396.2 64 368 64c-33.7 0-64.6 11.6-89.2 30.9 14 16.7 25 36 32.1 57.1 14.5-14.8 34.7-24 57.1-24 44.1 0 80 35.9 80 80s-35.9 80-80 80c-22.3 0-42.6-9.2-57.1-24-7.1 21.1-18 40.4-32.1 57.1 24.5 19.4 55.5 30.9 89.2 30.9 79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 64C64.5 64 0 128.5 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.6 112-71.9 112-140.4 0-79.5-64.5-144-144-144zm0 224c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"vial\": [480, 512, [], \"f492\", \"M477.7 186.1L309.5 18.3c-3.1-3.1-8.2-3.1-11.3 0l-34 33.9c-3.1 3.1-3.1 8.2 0 11.3l11.2 11.1L33 316.5c-38.8 38.7-45.1 102-9.4 143.5 20.6 24 49.5 36 78.4 35.9 26.4 0 52.8-10 72.9-30.1l246.3-245.7 11.2 11.1c3.1 3.1 8.2 3.1 11.3 0l34-33.9c3.1-3 3.1-8.1 0-11.2zM318 256H161l148-147.7 78.5 78.3L318 256z\"],\n    \"vials\": [640, 512, [], \"f493\", \"M72 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H72c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64zm480 384H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM360 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64z\"],\n    \"video\": [576, 512, [], \"f03d\", \"M336.2 64H47.8C21.4 64 0 85.4 0 111.8v288.4C0 426.6 21.4 448 47.8 448h288.4c26.4 0 47.8-21.4 47.8-47.8V111.8c0-26.4-21.4-47.8-47.8-47.8zm189.4 37.7L416 177.3v157.4l109.6 75.5c21.2 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.8z\"],\n    \"video-slash\": [640, 512, [], \"f4e2\", \"M633.8 458.1l-55-42.5c15.4-1.4 29.2-13.7 29.2-31.1v-257c0-25.5-29.1-40.4-50.4-25.8L448 177.3v137.2l-32-24.7v-178c0-26.4-21.4-47.8-47.8-47.8H123.9L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4L42.7 82 416 370.6l178.5 138c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.5-6.9 4.2-17-2.8-22.4zM32 400.2c0 26.4 21.4 47.8 47.8 47.8h288.4c11.2 0 21.4-4 29.6-10.5L32 154.7v245.5z\"],\n    \"vihara\": [640, 512, [], \"f6a7\", \"M632.88 400.71L544 352v-64l55.16-17.69c11.79-5.9 11.79-22.72 0-28.62L480 192v-64l27.31-16.3c7.72-7.72 5.61-20.74-4.16-25.62L320 0 136.85 86.07c-9.77 4.88-11.88 17.9-4.16 25.62L160 128v64L40.84 241.69c-11.79 5.9-11.79 22.72 0 28.62L96 288v64L7.12 400.71c-5.42 3.62-7.7 9.63-7 15.29.62 5.01 3.57 9.75 8.72 12.33L64 448v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h160v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h160v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48l55.15-19.67c5.16-2.58 8.1-7.32 8.72-12.33.71-5.67-1.57-11.68-6.99-15.29zM224 128h192v64H224v-64zm-64 224v-64h320v64H160z\"],\n    \"volleyball-ball\": [512, 512, [], \"f45f\", \"M231.39 243.48a285.56 285.56 0 0 0-22.7-105.7c-90.8 42.4-157.5 122.4-180.3 216.8a249 249 0 0 0 56.9 81.1 333.87 333.87 0 0 1 146.1-192.2zm-36.9-134.4a284.23 284.23 0 0 0-57.4-70.7c-91 49.8-144.8 152.9-125 262.2 33.4-83.1 98.4-152 182.4-191.5zm187.6 165.1c8.6-99.8-27.3-197.5-97.5-264.4-14.7-1.7-51.6-5.5-98.9 8.5A333.87 333.87 0 0 1 279.19 241a285 285 0 0 0 102.9 33.18zm-124.7 9.5a286.33 286.33 0 0 0-80.2 72.6c82 57.3 184.5 75.1 277.5 47.8a247.15 247.15 0 0 0 42.2-89.9 336.1 336.1 0 0 1-80.9 10.4c-54.6-.1-108.9-14.1-158.6-40.9zm-98.3 99.7c-15.2 26-25.7 54.4-32.1 84.2a247.07 247.07 0 0 0 289-22.1c-112.9 16.1-203.3-24.8-256.9-62.1zm180.3-360.6c55.3 70.4 82.5 161.2 74.6 253.6a286.59 286.59 0 0 0 89.7-14.2c0-2 .3-4 .3-6 0-107.8-68.7-199.1-164.6-233.4z\"],\n    \"volume-down\": [384, 512, [], \"f027\", \"M215.03 72.04L126.06 161H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V89.02c0-21.47-25.96-31.98-40.97-16.98zm123.2 108.08c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 229.28 336 242.62 336 257c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.87z\"],\n    \"volume-mute\": [512, 512, [], \"f6a9\", \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zM461.64 256l45.64-45.64c6.3-6.3 6.3-16.52 0-22.82l-22.82-22.82c-6.3-6.3-16.52-6.3-22.82 0L416 210.36l-45.64-45.64c-6.3-6.3-16.52-6.3-22.82 0l-22.82 22.82c-6.3 6.3-6.3 16.52 0 22.82L370.36 256l-45.63 45.63c-6.3 6.3-6.3 16.52 0 22.82l22.82 22.82c6.3 6.3 16.52 6.3 22.82 0L416 301.64l45.64 45.64c6.3 6.3 16.52 6.3 22.82 0l22.82-22.82c6.3-6.3 6.3-16.52 0-22.82L461.64 256z\"],\n    \"volume-off\": [256, 512, [], \"f026\", \"M215 71l-89 89H24a24 24 0 0 0-24 24v144a24 24 0 0 0 24 24h102.06L215 441c15 15 41 4.47 41-17V88c0-21.47-26-32-41-17z\"],\n    \"volume-up\": [576, 512, [], \"f028\", \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zm233.32-51.08c-11.17-7.33-26.18-4.24-33.51 6.95-7.34 11.17-4.22 26.18 6.95 33.51 66.27 43.49 105.82 116.6 105.82 195.58 0 78.98-39.55 152.09-105.82 195.58-11.17 7.32-14.29 22.34-6.95 33.5 7.04 10.71 21.93 14.56 33.51 6.95C528.27 439.58 576 351.33 576 256S528.27 72.43 448.35 19.97zM480 256c0-63.53-32.06-121.94-85.77-156.24-11.19-7.14-26.03-3.82-33.12 7.46s-3.78 26.21 7.41 33.36C408.27 165.97 432 209.11 432 256s-23.73 90.03-63.48 115.42c-11.19 7.14-14.5 22.07-7.41 33.36 6.51 10.36 21.12 15.14 33.12 7.46C447.94 377.94 480 319.54 480 256zm-141.77-76.87c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 228.28 336 241.63 336 256c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.86z\"],\n    \"vote-yea\": [640, 512, [], \"f772\", \"M608 320h-64v64h22.4c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8H96v-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h576c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32zm-96 64V64.3c0-17.9-14.5-32.3-32.3-32.3H160.4C142.5 32 128 46.5 128 64.3V384h384zM211.2 202l25.5-25.3c4.2-4.2 11-4.2 15.2.1l41.3 41.6 95.2-94.4c4.2-4.2 11-4.2 15.2.1l25.3 25.5c4.2 4.2 4.2 11-.1 15.2L300.5 292c-4.2 4.2-11 4.2-15.2-.1l-74.1-74.7c-4.3-4.2-4.2-11 0-15.2z\"],\n    \"vr-cardboard\": [640, 512, [], \"f729\", \"M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h160.22c25.19 0 48.03-14.77 58.36-37.74l27.74-61.64C286.21 331.08 302.35 320 320 320s33.79 11.08 41.68 28.62l27.74 61.64C399.75 433.23 422.6 448 447.78 448H608c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM160 304c-35.35 0-64-28.65-64-64s28.65-64 64-64 64 28.65 64 64-28.65 64-64 64zm320 0c-35.35 0-64-28.65-64-64s28.65-64 64-64 64 28.65 64 64-28.65 64-64 64z\"],\n    \"walking\": [320, 512, [], \"f554\", \"M208 96c26.5 0 48-21.5 48-48S234.5 0 208 0s-48 21.5-48 48 21.5 48 48 48zm94.5 149.1l-23.3-11.8-9.7-29.4c-14.7-44.6-55.7-75.8-102.2-75.9-36-.1-55.9 10.1-93.3 25.2-21.6 8.7-39.3 25.2-49.7 46.2L17.6 213c-7.8 15.8-1.5 35 14.2 42.9 15.6 7.9 34.6 1.5 42.5-14.3L81 228c3.5-7 9.3-12.5 16.5-15.4l26.8-10.8-15.2 60.7c-5.2 20.8.4 42.9 14.9 58.8l59.9 65.4c7.2 7.9 12.3 17.4 14.9 27.7l18.3 73.3c4.3 17.1 21.7 27.6 38.8 23.3 17.1-4.3 27.6-21.7 23.3-38.8l-22.2-89c-2.6-10.3-7.7-19.9-14.9-27.7l-45.5-49.7 17.2-68.7 5.5 16.5c5.3 16.1 16.7 29.4 31.7 37l23.3 11.8c15.6 7.9 34.6 1.5 42.5-14.3 7.7-15.7 1.4-35.1-14.3-43zM73.6 385.8c-3.2 8.1-8 15.4-14.2 21.5l-50 50.1c-12.5 12.5-12.5 32.8 0 45.3s32.7 12.5 45.2 0l59.4-59.4c6.1-6.1 10.9-13.4 14.2-21.5l13.5-33.8c-55.3-60.3-38.7-41.8-47.4-53.7l-20.7 51.5z\"],\n    \"wallet\": [512, 512, [], \"f555\", \"M461.2 128H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h384c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h397.2c28.02 0 50.8-21.53 50.8-48V176c0-26.47-22.78-48-50.8-48zM416 336c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"warehouse\": [640, 512, [], \"f494\", \"M504 352H136.4c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0 96H136.1c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0-192H136.6c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm106.5-139L338.4 3.7a48.15 48.15 0 0 0-36.9 0L29.5 117C11.7 124.5 0 141.9 0 161.3V504c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V256c0-17.6 14.6-32 32.6-32h382.8c18 0 32.6 14.4 32.6 32v248c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V161.3c0-19.4-11.7-36.8-29.5-44.3z\"],\n    \"water\": [576, 512, [], \"f773\", \"M562.1 383.9c-21.5-2.4-42.1-10.5-57.9-22.9-14.1-11.1-34.2-11.3-48.2 0-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3zm0-144c-21.5-2.4-42.1-10.5-57.9-22.9-14.1-11.1-34.2-11.3-48.2 0-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3zm0-144C540.6 93.4 520 85.4 504.2 73 490.1 61.9 470 61.7 456 73c-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3z\"],\n    \"wave-square\": [640, 512, [], \"f83e\", \"M476 480H324a36 36 0 0 1-36-36V96h-96v156a36 36 0 0 1-36 36H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h112V68a36 36 0 0 1 36-36h152a36 36 0 0 1 36 36v348h96V260a36 36 0 0 1 36-36h140a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H512v156a36 36 0 0 1-36 36z\"],\n    \"weight\": [512, 512, [], \"f496\", \"M448 64h-25.98C438.44 92.28 448 125.01 448 160c0 105.87-86.13 192-192 192S64 265.87 64 160c0-34.99 9.56-67.72 25.98-96H64C28.71 64 0 92.71 0 128v320c0 35.29 28.71 64 64 64h384c35.29 0 64-28.71 64-64V128c0-35.29-28.71-64-64-64zM256 320c88.37 0 160-71.63 160-160S344.37 0 256 0 96 71.63 96 160s71.63 160 160 160zm-.3-151.94l33.58-78.36c3.5-8.17 12.94-11.92 21.03-8.41 8.12 3.48 11.88 12.89 8.41 21l-33.67 78.55C291.73 188 296 197.45 296 208c0 22.09-17.91 40-40 40s-40-17.91-40-40c0-21.98 17.76-39.77 39.7-39.94z\"],\n    \"weight-hanging\": [512, 512, [], \"f5cd\", \"M510.28 445.86l-73.03-292.13c-3.8-15.19-16.44-25.72-30.87-25.72h-60.25c3.57-10.05 5.88-20.72 5.88-32 0-53.02-42.98-96-96-96s-96 42.98-96 96c0 11.28 2.3 21.95 5.88 32h-60.25c-14.43 0-27.08 10.54-30.87 25.72L1.72 445.86C-6.61 479.17 16.38 512 48.03 512h415.95c31.64 0 54.63-32.83 46.3-66.14zM256 128c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32z\"],\n    \"wheelchair\": [512, 512, [], \"f193\", \"M496.101 385.669l14.227 28.663c3.929 7.915.697 17.516-7.218 21.445l-65.465 32.886c-16.049 7.967-35.556 1.194-43.189-15.055L331.679 320H192c-15.925 0-29.426-11.71-31.679-27.475C126.433 55.308 128.38 70.044 128 64c0-36.358 30.318-65.635 67.052-63.929 33.271 1.545 60.048 28.905 60.925 62.201.868 32.933-23.152 60.423-54.608 65.039l4.67 32.69H336c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H215.182l4.572 32H352a32 32 0 0 1 28.962 18.392L438.477 396.8l36.178-18.349c7.915-3.929 17.517-.697 21.446 7.218zM311.358 352h-24.506c-7.788 54.204-54.528 96-110.852 96-61.757 0-112-50.243-112-112 0-41.505 22.694-77.809 56.324-97.156-3.712-25.965-6.844-47.86-9.488-66.333C45.956 198.464 0 261.963 0 336c0 97.047 78.953 176 176 176 71.87 0 133.806-43.308 161.11-105.192L311.358 352z\"],\n    \"wifi\": [640, 512, [], \"f1eb\", \"M634.91 154.88C457.74-8.99 182.19-8.93 5.09 154.88c-6.66 6.16-6.79 16.59-.35 22.98l34.24 33.97c6.14 6.1 16.02 6.23 22.4.38 145.92-133.68 371.3-133.71 517.25 0 6.38 5.85 16.26 5.71 22.4-.38l34.24-33.97c6.43-6.39 6.3-16.82-.36-22.98zM320 352c-35.35 0-64 28.65-64 64s28.65 64 64 64 64-28.65 64-64-28.65-64-64-64zm202.67-83.59c-115.26-101.93-290.21-101.82-405.34 0-6.9 6.1-7.12 16.69-.57 23.15l34.44 33.99c6 5.92 15.66 6.32 22.05.8 83.95-72.57 209.74-72.41 293.49 0 6.39 5.52 16.05 5.13 22.05-.8l34.44-33.99c6.56-6.46 6.33-17.06-.56-23.15z\"],\n    \"wind\": [512, 512, [], \"f72e\", \"M156.7 256H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h142.2c15.9 0 30.8 10.9 33.4 26.6 3.3 20-12.1 37.4-31.6 37.4-14.1 0-26.1-9.2-30.4-21.9-2.1-6.3-8.6-10.1-15.2-10.1H81.6c-9.8 0-17.7 8.8-15.9 18.4 8.6 44.1 47.6 77.6 94.2 77.6 57.1 0 102.7-50.1 95.2-108.6C249 291 205.4 256 156.7 256zM16 224h336c59.7 0 106.8-54.8 93.8-116.7-7.6-36.2-36.9-65.5-73.1-73.1-55.4-11.6-105.1 24.9-114.9 75.5-1.9 9.6 6.1 18.3 15.8 18.3h32.8c6.7 0 13.1-3.8 15.2-10.1C325.9 105.2 337.9 96 352 96c19.4 0 34.9 17.4 31.6 37.4-2.6 15.7-17.4 26.6-33.4 26.6H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16zm384 32H243.7c19.3 16.6 33.2 38.8 39.8 64H400c26.5 0 48 21.5 48 48s-21.5 48-48 48c-17.9 0-33.3-9.9-41.6-24.4-2.9-5-8.7-7.6-14.5-7.6h-33.8c-10.9 0-19 10.8-15.3 21.1 17.8 50.6 70.5 84.8 129.4 72.3 41.2-8.7 75.1-41.6 84.7-82.7C526 321.5 470.5 256 400 256z\"],\n    \"window-close\": [512, 512, [], \"f410\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z\"],\n    \"window-maximize\": [512, 512, [], \"f2d0\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16 160H64v-84c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12v84z\"],\n    \"window-minimize\": [512, 512, [], \"f2d1\", \"M464 352H48c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48z\"],\n    \"window-restore\": [512, 512, [], \"f2d2\", \"M512 48v288c0 26.5-21.5 48-48 48h-48V176c0-44.1-35.9-80-80-80H128V48c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zM384 176v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zm-68 28c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v52h252v-52z\"],\n    \"wine-bottle\": [512, 512, [], \"f72f\", \"M507.31 72.57L439.43 4.69c-6.25-6.25-16.38-6.25-22.63 0l-22.63 22.63c-6.25 6.25-6.25 16.38 0 22.63l-76.67 76.67c-46.58-19.7-102.4-10.73-140.37 27.23L18.75 312.23c-24.99 24.99-24.99 65.52 0 90.51l90.51 90.51c24.99 24.99 65.52 24.99 90.51 0l158.39-158.39c37.96-37.96 46.93-93.79 27.23-140.37l76.67-76.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.24-6.24 6.24-16.37-.01-22.62zM179.22 423.29l-90.51-90.51 122.04-122.04 90.51 90.51-122.04 122.04z\"],\n    \"wine-glass\": [288, 512, [], \"f4e3\", \"M216 464h-40V346.81c68.47-15.89 118.05-79.91 111.4-154.16l-15.95-178.1C270.71 6.31 263.9 0 255.74 0H32.26c-8.15 0-14.97 6.31-15.7 14.55L.6 192.66C-6.05 266.91 43.53 330.93 112 346.82V464H72c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h208c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40z\"],\n    \"wine-glass-alt\": [288, 512, [], \"f5ce\", \"M216 464h-40V346.81c68.47-15.89 118.05-79.91 111.4-154.16l-15.95-178.1C270.71 6.31 263.9 0 255.74 0H32.26c-8.15 0-14.97 6.31-15.7 14.55L.6 192.66C-6.05 266.91 43.53 330.93 112 346.82V464H72c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h208c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40zM61.75 48h164.5l7.17 80H54.58l7.17-80z\"],\n    \"won-sign\": [576, 512, [], \"f159\", \"M564 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-48l18.6-80.6c1.7-7.5-4-14.7-11.7-14.7h-46.1c-5.7 0-10.6 4-11.7 9.5L450.7 128H340.8l-19.7-86c-1.3-5.5-6.1-9.3-11.7-9.3h-44c-5.6 0-10.4 3.8-11.7 9.3l-20 86H125l-17.5-85.7c-1.1-5.6-6.1-9.6-11.8-9.6H53.6c-7.7 0-13.4 7.1-11.7 14.6L60 128H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h62.3l7.2 32H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h83.9l40.9 182.6c1.2 5.5 6.1 9.4 11.7 9.4h56.8c5.6 0 10.4-3.9 11.7-9.3L259.3 288h55.1l42.4 182.7c1.3 5.4 6.1 9.3 11.7 9.3h56.8c5.6 0 10.4-3.9 11.7-9.3L479.1 288H564c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-70.1l7.4-32zM183.8 342c-6.2 25.8-6.8 47.2-7.3 47.2h-1.1s-1.7-22-6.8-47.2l-11-54h38.8zm27.5-118h-66.8l-6.5-32h80.8zm62.9 0l2-8.6c1.9-8 3.5-16 4.8-23.4h11.8c1.3 7.4 2.9 15.4 4.8 23.4l2 8.6zm130.9 118c-5.1 25.2-6.8 47.2-6.8 47.2h-1.1c-.6 0-1.1-21.4-7.3-47.2l-12.4-54h39.1zm25.2-118h-67.4l-7.3-32h81.6z\"],\n    \"wrench\": [512, 512, [], \"f0ad\", \"M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"x-ray\": [640, 512, [], \"f497\", \"M240 384c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm160 32c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zM624 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16zm0 448h-48V96H64v352H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM480 248c0 4.4-3.6 8-8 8H336v32h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48v-16h-64v16c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48h64v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-32H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h136v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-24c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v24h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h136c4.4 0 8 3.6 8 8v16z\"],\n    \"yen-sign\": [384, 512, [], \"f157\", \"M351.2 32h-65.3c-4.6 0-8.8 2.6-10.8 6.7l-55.4 113.2c-14.5 34.7-27.1 71.9-27.1 71.9h-1.3s-12.6-37.2-27.1-71.9L108.8 38.7c-2-4.1-6.2-6.7-10.8-6.7H32.8c-9.1 0-14.8 9.7-10.6 17.6L102.3 200H44c-6.6 0-12 5.4-12 12v32c0 6.6 5.4 12 12 12h88.2l19.8 37.2V320H44c-6.6 0-12 5.4-12 12v32c0 6.6 5.4 12 12 12h108v92c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12v-92h108c6.6 0 12-5.4 12-12v-32c0-6.6-5.4-12-12-12H232v-26.8l19.8-37.2H340c6.6 0 12-5.4 12-12v-32c0-6.6-5.4-12-12-12h-58.3l80.1-150.4c4.3-7.9-1.5-17.6-10.6-17.6z\"],\n    \"yin-yang\": [496, 512, [], \"f6ad\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 376c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-128c-53.02 0-96 42.98-96 96s42.98 96 96 96c-106.04 0-192-85.96-192-192S141.96 64 248 64c53.02 0 96 42.98 96 96s-42.98 96-96 96zm0-128c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"]\n  };\n\n  bunker(function () {\n    defineIcons('fas', icons);\n  });\n\n}());\n(function () {\n  'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  var noop = function noop() {};\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n  var _MUTATION_OBSERVER = null;\n  var _PERFORMANCE = {\n    mark: noop,\n    measure: noop\n  };\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n    if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;\n    if (typeof performance !== 'undefined') _PERFORMANCE = performance;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var MUTATION_OBSERVER = _MUTATION_OBSERVER;\n  var PERFORMANCE = _PERFORMANCE;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n  var UNITS_IN_GRID = 16;\n  var DEFAULT_FAMILY_PREFIX = 'fa';\n  var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';\n  var DATA_FA_I2SVG = 'data-fa-i2svg';\n  var DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';\n  var DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';\n  var DATA_PREFIX = 'data-prefix';\n  var DATA_ICON = 'data-icon';\n  var HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';\n  var MUTATION_APPROACH_ASYNC = 'async';\n  var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n  var PREFIX_TO_STYLE = {\n    'fas': 'solid',\n    'far': 'regular',\n    'fal': 'light',\n    'fab': 'brands',\n    'fa': 'solid'\n  };\n  var STYLE_TO_PREFIX = {\n    'solid': 'fas',\n    'regular': 'far',\n    'light': 'fal',\n    'brands': 'fab'\n  };\n  var LAYERS_TEXT_CLASSNAME = 'fa-layers-text';\n  var FONT_FAMILY_PATTERN = /Font Awesome 5 (Solid|Regular|Light|Brands|Free|Pro)/;\n  var FONT_WEIGHT_TO_PREFIX = {\n    '900': 'fas',\n    '400': 'far',\n    'normal': 'far',\n    '300': 'fal'\n  };\n  var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);\n  var ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];\n  var RESERVED_CLASSES = ['xs', 'sm', 'lg', 'fw', 'ul', 'li', 'border', 'pull-left', 'pull-right', 'spin', 'pulse', 'rotate-90', 'rotate-180', 'rotate-270', 'flip-horizontal', 'flip-vertical', 'flip-both', 'stack', 'stack-1x', 'stack-2x', 'inverse', 'layers', 'layers-text', 'layers-counter'].concat(oneToTen.map(function (n) {\n    return \"\".concat(n, \"x\");\n  })).concat(oneToTwenty.map(function (n) {\n    return \"w-\".concat(n);\n  }));\n\n  var initial = WINDOW.FontAwesomeConfig || {};\n\n  function getAttrConfig(attr) {\n    var element = DOCUMENT.querySelector('script[' + attr + ']');\n\n    if (element) {\n      return element.getAttribute(attr);\n    }\n  }\n\n  function coerce(val) {\n    // Getting an empty string will occur if the attribute is set on the HTML tag but without a value\n    // We'll assume that this is an indication that it should be toggled to true\n    // For example <script data-search-pseudo-elements src=\"...\"></script>\n    if (val === '') return true;\n    if (val === 'false') return false;\n    if (val === 'true') return true;\n    return val;\n  }\n\n  if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {\n    var attrs = [['data-family-prefix', 'familyPrefix'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];\n    attrs.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          attr = _ref2[0],\n          key = _ref2[1];\n\n      var val = coerce(getAttrConfig(attr));\n\n      if (val !== undefined && val !== null) {\n        initial[key] = val;\n      }\n    });\n  }\n\n  var _default = {\n    familyPrefix: DEFAULT_FAMILY_PREFIX,\n    replacementClass: DEFAULT_REPLACEMENT_CLASS,\n    autoReplaceSvg: true,\n    autoAddCss: true,\n    autoA11y: true,\n    searchPseudoElements: false,\n    observeMutations: true,\n    mutateApproach: 'async',\n    keepOriginalSource: true,\n    measurePerformance: false,\n    showMissingIcons: true\n  };\n\n  var _config = _objectSpread({}, _default, initial);\n\n  if (!_config.autoReplaceSvg) _config.observeMutations = false;\n\n  var config = _objectSpread({}, _config);\n\n  WINDOW.FontAwesomeConfig = config;\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  var functions = [];\n\n  var listener = function listener() {\n    DOCUMENT.removeEventListener('DOMContentLoaded', listener);\n    loaded = 1;\n    functions.map(function (fn) {\n      return fn();\n    });\n  };\n\n  var loaded = false;\n\n  if (IS_DOM) {\n    loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);\n    if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);\n  }\n\n  function domready (fn) {\n    if (!IS_DOM) return;\n    loaded ? setTimeout(fn, 0) : functions.push(fn);\n  }\n\n  var PENDING = 'pending';\n  var SETTLED = 'settled';\n  var FULFILLED = 'fulfilled';\n  var REJECTED = 'rejected';\n\n  var NOOP = function NOOP() {};\n\n  var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';\n  var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;\n  var asyncQueue = [];\n  var asyncTimer;\n\n  function asyncFlush() {\n    // run promise callbacks\n    for (var i = 0; i < asyncQueue.length; i++) {\n      asyncQueue[i][0](asyncQueue[i][1]);\n    } // reset async asyncQueue\n\n\n    asyncQueue = [];\n    asyncTimer = false;\n  }\n\n  function asyncCall(callback, arg) {\n    asyncQueue.push([callback, arg]);\n\n    if (!asyncTimer) {\n      asyncTimer = true;\n      asyncSetTimer(asyncFlush, 0);\n    }\n  }\n\n  function invokeResolver(resolver, promise) {\n    function resolvePromise(value) {\n      resolve(promise, value);\n    }\n\n    function rejectPromise(reason) {\n      reject(promise, reason);\n    }\n\n    try {\n      resolver(resolvePromise, rejectPromise);\n    } catch (e) {\n      rejectPromise(e);\n    }\n  }\n\n  function invokeCallback(subscriber) {\n    var owner = subscriber.owner;\n    var settled = owner._state;\n    var value = owner._data;\n    var callback = subscriber[settled];\n    var promise = subscriber.then;\n\n    if (typeof callback === 'function') {\n      settled = FULFILLED;\n\n      try {\n        value = callback(value);\n      } catch (e) {\n        reject(promise, e);\n      }\n    }\n\n    if (!handleThenable(promise, value)) {\n      if (settled === FULFILLED) {\n        resolve(promise, value);\n      }\n\n      if (settled === REJECTED) {\n        reject(promise, value);\n      }\n    }\n  }\n\n  function handleThenable(promise, value) {\n    var resolved;\n\n    try {\n      if (promise === value) {\n        throw new TypeError('A promises callback cannot return that same promise.');\n      }\n\n      if (value && (typeof value === 'function' || _typeof(value) === 'object')) {\n        // then should be retrieved only once\n        var then = value.then;\n\n        if (typeof then === 'function') {\n          then.call(value, function (val) {\n            if (!resolved) {\n              resolved = true;\n\n              if (value === val) {\n                fulfill(promise, val);\n              } else {\n                resolve(promise, val);\n              }\n            }\n          }, function (reason) {\n            if (!resolved) {\n              resolved = true;\n              reject(promise, reason);\n            }\n          });\n          return true;\n        }\n      }\n    } catch (e) {\n      if (!resolved) {\n        reject(promise, e);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function resolve(promise, value) {\n    if (promise === value || !handleThenable(promise, value)) {\n      fulfill(promise, value);\n    }\n  }\n\n  function fulfill(promise, value) {\n    if (promise._state === PENDING) {\n      promise._state = SETTLED;\n      promise._data = value;\n      asyncCall(publishFulfillment, promise);\n    }\n  }\n\n  function reject(promise, reason) {\n    if (promise._state === PENDING) {\n      promise._state = SETTLED;\n      promise._data = reason;\n      asyncCall(publishRejection, promise);\n    }\n  }\n\n  function publish(promise) {\n    promise._then = promise._then.forEach(invokeCallback);\n  }\n\n  function publishFulfillment(promise) {\n    promise._state = FULFILLED;\n    publish(promise);\n  }\n\n  function publishRejection(promise) {\n    promise._state = REJECTED;\n    publish(promise);\n\n    if (!promise._handled && isNode) {\n      global.process.emit('unhandledRejection', promise._data, promise);\n    }\n  }\n\n  function notifyRejectionHandled(promise) {\n    global.process.emit('rejectionHandled', promise);\n  }\n  /**\n   * @class\n   */\n\n\n  function P(resolver) {\n    if (typeof resolver !== 'function') {\n      throw new TypeError('Promise resolver ' + resolver + ' is not a function');\n    }\n\n    if (this instanceof P === false) {\n      throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n    }\n\n    this._then = [];\n    invokeResolver(resolver, this);\n  }\n\n  P.prototype = {\n    constructor: P,\n    _state: PENDING,\n    _then: null,\n    _data: undefined,\n    _handled: false,\n    then: function then(onFulfillment, onRejection) {\n      var subscriber = {\n        owner: this,\n        then: new this.constructor(NOOP),\n        fulfilled: onFulfillment,\n        rejected: onRejection\n      };\n\n      if ((onRejection || onFulfillment) && !this._handled) {\n        this._handled = true;\n\n        if (this._state === REJECTED && isNode) {\n          asyncCall(notifyRejectionHandled, this);\n        }\n      }\n\n      if (this._state === FULFILLED || this._state === REJECTED) {\n        // already resolved, call callback async\n        asyncCall(invokeCallback, subscriber);\n      } else {\n        // subscribe\n        this._then.push(subscriber);\n      }\n\n      return subscriber.then;\n    },\n    catch: function _catch(onRejection) {\n      return this.then(null, onRejection);\n    }\n  };\n\n  P.all = function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError('You must pass an array to Promise.all().');\n    }\n\n    return new P(function (resolve, reject) {\n      var results = [];\n      var remaining = 0;\n\n      function resolver(index) {\n        remaining++;\n        return function (value) {\n          results[index] = value;\n\n          if (! --remaining) {\n            resolve(results);\n          }\n        };\n      }\n\n      for (var i = 0, promise; i < promises.length; i++) {\n        promise = promises[i];\n\n        if (promise && typeof promise.then === 'function') {\n          promise.then(resolver(i), reject);\n        } else {\n          results[i] = promise;\n        }\n      }\n\n      if (!remaining) {\n        resolve(results);\n      }\n    });\n  };\n\n  P.race = function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError('You must pass an array to Promise.race().');\n    }\n\n    return new P(function (resolve, reject) {\n      for (var i = 0, promise; i < promises.length; i++) {\n        promise = promises[i];\n\n        if (promise && typeof promise.then === 'function') {\n          promise.then(resolve, reject);\n        } else {\n          resolve(promise);\n        }\n      }\n    });\n  };\n\n  P.resolve = function (value) {\n    if (value && _typeof(value) === 'object' && value.constructor === P) {\n      return value;\n    }\n\n    return new P(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  P.reject = function (reason) {\n    return new P(function (resolve, reject) {\n      reject(reason);\n    });\n  };\n\n  var picked = typeof Promise === 'function' ? Promise : P;\n\n  var d = UNITS_IN_GRID;\n  var meaninglessTransform = {\n    size: 16,\n    x: 0,\n    y: 0,\n    rotate: 0,\n    flipX: false,\n    flipY: false\n  };\n\n  function isReserved(name) {\n    return ~RESERVED_CLASSES.indexOf(name);\n  }\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n  function insertCss(css) {\n    if (!css || !IS_DOM) {\n      return;\n    }\n\n    var style = DOCUMENT.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.innerHTML = css;\n    var headChildren = DOCUMENT.head.childNodes;\n    var beforeChild = null;\n\n    for (var i = headChildren.length - 1; i > -1; i--) {\n      var child = headChildren[i];\n      var tagName = (child.tagName || '').toUpperCase();\n\n      if (['STYLE', 'LINK'].indexOf(tagName) > -1) {\n        beforeChild = child;\n      }\n    }\n\n    DOCUMENT.head.insertBefore(style, beforeChild);\n    return css;\n  }\n  var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  function nextUniqueId() {\n    var size = 12;\n    var id = '';\n\n    while (size-- > 0) {\n      id += idPool[Math.random() * 62 | 0];\n    }\n\n    return id;\n  }\n  function toArray(obj) {\n    var array = [];\n\n    for (var i = (obj || []).length >>> 0; i--;) {\n      array[i] = obj[i];\n    }\n\n    return array;\n  }\n  function classArray(node) {\n    if (node.classList) {\n      return toArray(node.classList);\n    } else {\n      return (node.getAttribute('class') || '').split(' ').filter(function (i) {\n        return i;\n      });\n    }\n  }\n  function getIconName(familyPrefix, cls) {\n    var parts = cls.split('-');\n    var prefix = parts[0];\n    var iconName = parts.slice(1).join('-');\n\n    if (prefix === familyPrefix && iconName !== '' && !isReserved(iconName)) {\n      return iconName;\n    } else {\n      return null;\n    }\n  }\n  function htmlEscape(str) {\n    return \"\".concat(str).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n  function joinAttributes(attributes) {\n    return Object.keys(attributes || {}).reduce(function (acc, attributeName) {\n      return acc + \"\".concat(attributeName, \"=\\\"\").concat(htmlEscape(attributes[attributeName]), \"\\\" \");\n    }, '').trim();\n  }\n  function joinStyles(styles) {\n    return Object.keys(styles || {}).reduce(function (acc, styleName) {\n      return acc + \"\".concat(styleName, \": \").concat(styles[styleName], \";\");\n    }, '');\n  }\n  function transformIsMeaningful(transform) {\n    return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;\n  }\n  function transformForSvg(_ref) {\n    var transform = _ref.transform,\n        containerWidth = _ref.containerWidth,\n        iconWidth = _ref.iconWidth;\n    var outer = {\n      transform: \"translate(\".concat(containerWidth / 2, \" 256)\")\n    };\n    var innerTranslate = \"translate(\".concat(transform.x * 32, \", \").concat(transform.y * 32, \") \");\n    var innerScale = \"scale(\".concat(transform.size / 16 * (transform.flipX ? -1 : 1), \", \").concat(transform.size / 16 * (transform.flipY ? -1 : 1), \") \");\n    var innerRotate = \"rotate(\".concat(transform.rotate, \" 0 0)\");\n    var inner = {\n      transform: \"\".concat(innerTranslate, \" \").concat(innerScale, \" \").concat(innerRotate)\n    };\n    var path = {\n      transform: \"translate(\".concat(iconWidth / 2 * -1, \" -256)\")\n    };\n    return {\n      outer: outer,\n      inner: inner,\n      path: path\n    };\n  }\n  function transformForCss(_ref2) {\n    var transform = _ref2.transform,\n        _ref2$width = _ref2.width,\n        width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width,\n        _ref2$height = _ref2.height,\n        height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height,\n        _ref2$startCentered = _ref2.startCentered,\n        startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;\n    var val = '';\n\n    if (startCentered && IS_IE) {\n      val += \"translate(\".concat(transform.x / d - width / 2, \"em, \").concat(transform.y / d - height / 2, \"em) \");\n    } else if (startCentered) {\n      val += \"translate(calc(-50% + \".concat(transform.x / d, \"em), calc(-50% + \").concat(transform.y / d, \"em)) \");\n    } else {\n      val += \"translate(\".concat(transform.x / d, \"em, \").concat(transform.y / d, \"em) \");\n    }\n\n    val += \"scale(\".concat(transform.size / d * (transform.flipX ? -1 : 1), \", \").concat(transform.size / d * (transform.flipY ? -1 : 1), \") \");\n    val += \"rotate(\".concat(transform.rotate, \"deg) \");\n    return val;\n  }\n\n  var ALL_SPACE = {\n    x: 0,\n    y: 0,\n    width: '100%',\n    height: '100%'\n  };\n  function makeIconMasking (_ref) {\n    var children = _ref.children,\n        attributes = _ref.attributes,\n        main = _ref.main,\n        mask = _ref.mask,\n        transform = _ref.transform;\n    var mainWidth = main.width,\n        mainPath = main.icon;\n    var maskWidth = mask.width,\n        maskPath = mask.icon;\n    var trans = transformForSvg({\n      transform: transform,\n      containerWidth: maskWidth,\n      iconWidth: mainWidth\n    });\n    var maskRect = {\n      tag: 'rect',\n      attributes: _objectSpread({}, ALL_SPACE, {\n        fill: 'white'\n      })\n    };\n    var maskInnerGroup = {\n      tag: 'g',\n      attributes: _objectSpread({}, trans.inner),\n      children: [{\n        tag: 'path',\n        attributes: _objectSpread({}, mainPath.attributes, trans.path, {\n          fill: 'black'\n        })\n      }]\n    };\n    var maskOuterGroup = {\n      tag: 'g',\n      attributes: _objectSpread({}, trans.outer),\n      children: [maskInnerGroup]\n    };\n    var maskId = \"mask-\".concat(nextUniqueId());\n    var clipId = \"clip-\".concat(nextUniqueId());\n    var maskTag = {\n      tag: 'mask',\n      attributes: _objectSpread({}, ALL_SPACE, {\n        id: maskId,\n        maskUnits: 'userSpaceOnUse',\n        maskContentUnits: 'userSpaceOnUse'\n      }),\n      children: [maskRect, maskOuterGroup]\n    };\n    var defs = {\n      tag: 'defs',\n      children: [{\n        tag: 'clipPath',\n        attributes: {\n          id: clipId\n        },\n        children: [maskPath]\n      }, maskTag]\n    };\n    children.push(defs, {\n      tag: 'rect',\n      attributes: _objectSpread({\n        fill: 'currentColor',\n        'clip-path': \"url(#\".concat(clipId, \")\"),\n        mask: \"url(#\".concat(maskId, \")\")\n      }, ALL_SPACE)\n    });\n    return {\n      children: children,\n      attributes: attributes\n    };\n  }\n\n  function makeIconStandard (_ref) {\n    var children = _ref.children,\n        attributes = _ref.attributes,\n        main = _ref.main,\n        transform = _ref.transform,\n        styles = _ref.styles;\n    var styleString = joinStyles(styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    if (transformIsMeaningful(transform)) {\n      var trans = transformForSvg({\n        transform: transform,\n        containerWidth: main.width,\n        iconWidth: main.width\n      });\n      children.push({\n        tag: 'g',\n        attributes: _objectSpread({}, trans.outer),\n        children: [{\n          tag: 'g',\n          attributes: _objectSpread({}, trans.inner),\n          children: [{\n            tag: main.icon.tag,\n            children: main.icon.children,\n            attributes: _objectSpread({}, main.icon.attributes, trans.path)\n          }]\n        }]\n      });\n    } else {\n      children.push(main.icon);\n    }\n\n    return {\n      children: children,\n      attributes: attributes\n    };\n  }\n\n  function asIcon (_ref) {\n    var children = _ref.children,\n        main = _ref.main,\n        mask = _ref.mask,\n        attributes = _ref.attributes,\n        styles = _ref.styles,\n        transform = _ref.transform;\n\n    if (transformIsMeaningful(transform) && main.found && !mask.found) {\n      var width = main.width,\n          height = main.height;\n      var offset = {\n        x: width / height / 2,\n        y: 0.5\n      };\n      attributes['style'] = joinStyles(_objectSpread({}, styles, {\n        'transform-origin': \"\".concat(offset.x + transform.x / 16, \"em \").concat(offset.y + transform.y / 16, \"em\")\n      }));\n    }\n\n    return [{\n      tag: 'svg',\n      attributes: attributes,\n      children: children\n    }];\n  }\n\n  function asSymbol (_ref) {\n    var prefix = _ref.prefix,\n        iconName = _ref.iconName,\n        children = _ref.children,\n        attributes = _ref.attributes,\n        symbol = _ref.symbol;\n    var id = symbol === true ? \"\".concat(prefix, \"-\").concat(config.familyPrefix, \"-\").concat(iconName) : symbol;\n    return [{\n      tag: 'svg',\n      attributes: {\n        style: 'display: none;'\n      },\n      children: [{\n        tag: 'symbol',\n        attributes: _objectSpread({}, attributes, {\n          id: id\n        }),\n        children: children\n      }]\n    }];\n  }\n\n  function makeInlineSvgAbstract(params) {\n    var _params$icons = params.icons,\n        main = _params$icons.main,\n        mask = _params$icons.mask,\n        prefix = params.prefix,\n        iconName = params.iconName,\n        transform = params.transform,\n        symbol = params.symbol,\n        title = params.title,\n        extra = params.extra,\n        _params$watchable = params.watchable,\n        watchable = _params$watchable === void 0 ? false : _params$watchable;\n\n    var _ref = mask.found ? mask : main,\n        width = _ref.width,\n        height = _ref.height;\n\n    var widthClass = \"fa-w-\".concat(Math.ceil(width / height * 16));\n    var attrClass = [config.replacementClass, iconName ? \"\".concat(config.familyPrefix, \"-\").concat(iconName) : '', widthClass].filter(function (c) {\n      return extra.classes.indexOf(c) === -1;\n    }).concat(extra.classes).join(' ');\n    var content = {\n      children: [],\n      attributes: _objectSpread({}, extra.attributes, {\n        'data-prefix': prefix,\n        'data-icon': iconName,\n        'class': attrClass,\n        'role': 'img',\n        'xmlns': 'http://www.w3.org/2000/svg',\n        'viewBox': \"0 0 \".concat(width, \" \").concat(height)\n      })\n    };\n\n    if (watchable) {\n      content.attributes[DATA_FA_I2SVG] = '';\n    }\n\n    if (title) content.children.push({\n      tag: 'title',\n      attributes: {\n        id: content.attributes['aria-labelledby'] || \"title-\".concat(nextUniqueId())\n      },\n      children: [title]\n    });\n\n    var args = _objectSpread({}, content, {\n      prefix: prefix,\n      iconName: iconName,\n      main: main,\n      mask: mask,\n      transform: transform,\n      symbol: symbol,\n      styles: extra.styles\n    });\n\n    var _ref2 = mask.found && main.found ? makeIconMasking(args) : makeIconStandard(args),\n        children = _ref2.children,\n        attributes = _ref2.attributes;\n\n    args.children = children;\n    args.attributes = attributes;\n\n    if (symbol) {\n      return asSymbol(args);\n    } else {\n      return asIcon(args);\n    }\n  }\n  function makeLayersTextAbstract(params) {\n    var content = params.content,\n        width = params.width,\n        height = params.height,\n        transform = params.transform,\n        title = params.title,\n        extra = params.extra,\n        _params$watchable2 = params.watchable,\n        watchable = _params$watchable2 === void 0 ? false : _params$watchable2;\n\n    var attributes = _objectSpread({}, extra.attributes, title ? {\n      'title': title\n    } : {}, {\n      'class': extra.classes.join(' ')\n    });\n\n    if (watchable) {\n      attributes[DATA_FA_I2SVG] = '';\n    }\n\n    var styles = _objectSpread({}, extra.styles);\n\n    if (transformIsMeaningful(transform)) {\n      styles['transform'] = transformForCss({\n        transform: transform,\n        startCentered: true,\n        width: width,\n        height: height\n      });\n      styles['-webkit-transform'] = styles['transform'];\n    }\n\n    var styleString = joinStyles(styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    var val = [];\n    val.push({\n      tag: 'span',\n      attributes: attributes,\n      children: [content]\n    });\n\n    if (title) {\n      val.push({\n        tag: 'span',\n        attributes: {\n          class: 'sr-only'\n        },\n        children: [title]\n      });\n    }\n\n    return val;\n  }\n  function makeLayersCounterAbstract(params) {\n    var content = params.content,\n        title = params.title,\n        extra = params.extra;\n\n    var attributes = _objectSpread({}, extra.attributes, title ? {\n      'title': title\n    } : {}, {\n      'class': extra.classes.join(' ')\n    });\n\n    var styleString = joinStyles(extra.styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    var val = [];\n    val.push({\n      tag: 'span',\n      attributes: attributes,\n      children: [content]\n    });\n\n    if (title) {\n      val.push({\n        tag: 'span',\n        attributes: {\n          class: 'sr-only'\n        },\n        children: [title]\n      });\n    }\n\n    return val;\n  }\n\n  var noop$1 = function noop() {};\n\n  var p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {\n    mark: noop$1,\n    measure: noop$1\n  };\n  var preamble = \"FA \\\"5.8.1\\\"\";\n\n  var begin = function begin(name) {\n    p.mark(\"\".concat(preamble, \" \").concat(name, \" begins\"));\n    return function () {\n      return end(name);\n    };\n  };\n\n  var end = function end(name) {\n    p.mark(\"\".concat(preamble, \" \").concat(name, \" ends\"));\n    p.measure(\"\".concat(preamble, \" \").concat(name), \"\".concat(preamble, \" \").concat(name, \" begins\"), \"\".concat(preamble, \" \").concat(name, \" ends\"));\n  };\n\n  var perf = {\n    begin: begin,\n    end: end\n  };\n\n  /**\n   * Internal helper to bind a function known to have 4 arguments\n   * to a given context.\n   */\n\n  var bindInternal4 = function bindInternal4(func, thisContext) {\n    return function (a, b, c, d) {\n      return func.call(thisContext, a, b, c, d);\n    };\n  };\n\n  /**\n   * # Reduce\n   *\n   * A fast object `.reduce()` implementation.\n   *\n   * @param  {Object}   subject      The object to reduce over.\n   * @param  {Function} fn           The reducer function.\n   * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].\n   * @param  {Object}   thisContext  The context for the reducer.\n   * @return {mixed}                 The final result.\n   */\n\n\n  var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {\n    var keys = Object.keys(subject),\n        length = keys.length,\n        iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,\n        i,\n        key,\n        result;\n\n    if (initialValue === undefined) {\n      i = 1;\n      result = subject[keys[0]];\n    } else {\n      i = 0;\n      result = initialValue;\n    }\n\n    for (; i < length; i++) {\n      key = keys[i];\n      result = iterator(result, subject[key], key, subject);\n    }\n\n    return result;\n  };\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var styles = namespace.styles,\n      shims = namespace.shims;\n  var _byUnicode = {};\n  var _byLigature = {};\n  var _byOldName = {};\n  var build = function build() {\n    var lookup = function lookup(reducer) {\n      return reduce(styles, function (o, style, prefix) {\n        o[prefix] = reduce(style, reducer, {});\n        return o;\n      }, {});\n    };\n\n    _byUnicode = lookup(function (acc, icon, iconName) {\n      if (icon[3]) {\n        acc[icon[3]] = iconName;\n      }\n\n      return acc;\n    });\n    _byLigature = lookup(function (acc, icon, iconName) {\n      var ligatures = icon[2];\n      acc[iconName] = iconName;\n      ligatures.forEach(function (ligature) {\n        acc[ligature] = iconName;\n      });\n      return acc;\n    });\n    var hasRegular = 'far' in styles;\n    _byOldName = reduce(shims, function (acc, shim) {\n      var oldName = shim[0];\n      var prefix = shim[1];\n      var iconName = shim[2];\n\n      if (prefix === 'far' && !hasRegular) {\n        prefix = 'fas';\n      }\n\n      acc[oldName] = {\n        prefix: prefix,\n        iconName: iconName\n      };\n      return acc;\n    }, {});\n  };\n  build();\n  function byUnicode(prefix, unicode) {\n    return _byUnicode[prefix][unicode];\n  }\n  function byLigature(prefix, ligature) {\n    return _byLigature[prefix][ligature];\n  }\n  function byOldName(name) {\n    return _byOldName[name] || {\n      prefix: null,\n      iconName: null\n    };\n  }\n\n  var styles$1 = namespace.styles;\n  var emptyCanonicalIcon = function emptyCanonicalIcon() {\n    return {\n      prefix: null,\n      iconName: null,\n      rest: []\n    };\n  };\n  function getCanonicalIcon(values) {\n    return values.reduce(function (acc, cls) {\n      var iconName = getIconName(config.familyPrefix, cls);\n\n      if (styles$1[cls]) {\n        acc.prefix = cls;\n      } else if (config.autoFetchSvg && ['fas', 'far', 'fal', 'fab', 'fa'].indexOf(cls) > -1) {\n        acc.prefix = cls;\n      } else if (iconName) {\n        var shim = acc.prefix === 'fa' ? byOldName(iconName) : {};\n        acc.iconName = shim.iconName || iconName;\n        acc.prefix = shim.prefix || acc.prefix;\n      } else if (cls !== config.replacementClass && cls.indexOf('fa-w-') !== 0) {\n        acc.rest.push(cls);\n      }\n\n      return acc;\n    }, emptyCanonicalIcon());\n  }\n  function iconFromMapping(mapping, prefix, iconName) {\n    if (mapping && mapping[prefix] && mapping[prefix][iconName]) {\n      return {\n        prefix: prefix,\n        iconName: iconName,\n        icon: mapping[prefix][iconName]\n      };\n    }\n  }\n\n  function toHtml(abstractNodes) {\n    var tag = abstractNodes.tag,\n        _abstractNodes$attrib = abstractNodes.attributes,\n        attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,\n        _abstractNodes$childr = abstractNodes.children,\n        children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;\n\n    if (typeof abstractNodes === 'string') {\n      return htmlEscape(abstractNodes);\n    } else {\n      return \"<\".concat(tag, \" \").concat(joinAttributes(attributes), \">\").concat(children.map(toHtml).join(''), \"</\").concat(tag, \">\");\n    }\n  }\n\n  var noop$2 = function noop() {};\n\n  function isWatched(node) {\n    var i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;\n    return typeof i2svg === 'string';\n  }\n\n  function getMutator() {\n    if (config.autoReplaceSvg === true) {\n      return mutators.replace;\n    }\n\n    var mutator = mutators[config.autoReplaceSvg];\n    return mutator || mutators.replace;\n  }\n\n  var mutators = {\n    replace: function replace(mutation) {\n      var node = mutation[0];\n      var abstract = mutation[1];\n      var newOuterHTML = abstract.map(function (a) {\n        return toHtml(a);\n      }).join('\\n');\n\n      if (node.parentNode && node.outerHTML) {\n        node.outerHTML = newOuterHTML + (config.keepOriginalSource && node.tagName.toLowerCase() !== 'svg' ? \"<!-- \".concat(node.outerHTML, \" -->\") : '');\n      } else if (node.parentNode) {\n        var newNode = document.createElement('span');\n        node.parentNode.replaceChild(newNode, node);\n        newNode.outerHTML = newOuterHTML;\n      }\n    },\n    nest: function nest(mutation) {\n      var node = mutation[0];\n      var abstract = mutation[1]; // If we already have a replaced node we do not want to continue nesting within it.\n      // Short-circuit to the standard replacement\n\n      if (~classArray(node).indexOf(config.replacementClass)) {\n        return mutators.replace(mutation);\n      }\n\n      var forSvg = new RegExp(\"\".concat(config.familyPrefix, \"-.*\"));\n      delete abstract[0].attributes.style;\n      var splitClasses = abstract[0].attributes.class.split(' ').reduce(function (acc, cls) {\n        if (cls === config.replacementClass || cls.match(forSvg)) {\n          acc.toSvg.push(cls);\n        } else {\n          acc.toNode.push(cls);\n        }\n\n        return acc;\n      }, {\n        toNode: [],\n        toSvg: []\n      });\n      abstract[0].attributes.class = splitClasses.toSvg.join(' ');\n      var newInnerHTML = abstract.map(function (a) {\n        return toHtml(a);\n      }).join('\\n');\n      node.setAttribute('class', splitClasses.toNode.join(' '));\n      node.setAttribute(DATA_FA_I2SVG, '');\n      node.innerHTML = newInnerHTML;\n    }\n  };\n\n  function performOperationSync(op) {\n    op();\n  }\n\n  function perform(mutations, callback) {\n    var callbackFunction = typeof callback === 'function' ? callback : noop$2;\n\n    if (mutations.length === 0) {\n      callbackFunction();\n    } else {\n      var frame = performOperationSync;\n\n      if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {\n        frame = WINDOW.requestAnimationFrame || performOperationSync;\n      }\n\n      frame(function () {\n        var mutator = getMutator();\n        var mark = perf.begin('mutate');\n        mutations.map(mutator);\n        mark();\n        callbackFunction();\n      });\n    }\n  }\n  var disabled = false;\n  function disableObservation() {\n    disabled = true;\n  }\n  function enableObservation() {\n    disabled = false;\n  }\n  var mo = null;\n  function observe(options) {\n    if (!MUTATION_OBSERVER) {\n      return;\n    }\n\n    if (!config.observeMutations) {\n      return;\n    }\n\n    var treeCallback = options.treeCallback,\n        nodeCallback = options.nodeCallback,\n        pseudoElementsCallback = options.pseudoElementsCallback,\n        _options$observeMutat = options.observeMutationsRoot,\n        observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;\n    mo = new MUTATION_OBSERVER(function (objects) {\n      if (disabled) return;\n      toArray(objects).forEach(function (mutationRecord) {\n        if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {\n          if (config.searchPseudoElements) {\n            pseudoElementsCallback(mutationRecord.target);\n          }\n\n          treeCallback(mutationRecord.target);\n        }\n\n        if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {\n          pseudoElementsCallback(mutationRecord.target.parentNode);\n        }\n\n        if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {\n          if (mutationRecord.attributeName === 'class') {\n            var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)),\n                prefix = _getCanonicalIcon.prefix,\n                iconName = _getCanonicalIcon.iconName;\n\n            if (prefix) mutationRecord.target.setAttribute('data-prefix', prefix);\n            if (iconName) mutationRecord.target.setAttribute('data-icon', iconName);\n          } else {\n            nodeCallback(mutationRecord.target);\n          }\n        }\n      });\n    });\n    if (!IS_DOM) return;\n    mo.observe(observeMutationsRoot, {\n      childList: true,\n      attributes: true,\n      characterData: true,\n      subtree: true\n    });\n  }\n  function disconnect() {\n    if (!mo) return;\n    mo.disconnect();\n  }\n\n  function styleParser (node) {\n    var style = node.getAttribute('style');\n    var val = [];\n\n    if (style) {\n      val = style.split(';').reduce(function (acc, style) {\n        var styles = style.split(':');\n        var prop = styles[0];\n        var value = styles.slice(1);\n\n        if (prop && value.length > 0) {\n          acc[prop] = value.join(':').trim();\n        }\n\n        return acc;\n      }, {});\n    }\n\n    return val;\n  }\n\n  function toHex(unicode) {\n    var result = '';\n\n    for (var i = 0; i < unicode.length; i++) {\n      var hex = unicode.charCodeAt(i).toString(16);\n      result += ('000' + hex).slice(-4);\n    }\n\n    return result;\n  }\n\n  function classParser (node) {\n    var existingPrefix = node.getAttribute('data-prefix');\n    var existingIconName = node.getAttribute('data-icon');\n    var innerText = node.innerText !== undefined ? node.innerText.trim() : '';\n    var val = getCanonicalIcon(classArray(node));\n\n    if (existingPrefix && existingIconName) {\n      val.prefix = existingPrefix;\n      val.iconName = existingIconName;\n    }\n\n    if (val.prefix && innerText.length > 1) {\n      val.iconName = byLigature(val.prefix, node.innerText);\n    } else if (val.prefix && innerText.length === 1) {\n      val.iconName = byUnicode(val.prefix, toHex(node.innerText));\n    }\n\n    return val;\n  }\n\n  var parseTransformString = function parseTransformString(transformString) {\n    var transform = {\n      size: 16,\n      x: 0,\n      y: 0,\n      flipX: false,\n      flipY: false,\n      rotate: 0\n    };\n\n    if (!transformString) {\n      return transform;\n    } else {\n      return transformString.toLowerCase().split(' ').reduce(function (acc, n) {\n        var parts = n.toLowerCase().split('-');\n        var first = parts[0];\n        var rest = parts.slice(1).join('-');\n\n        if (first && rest === 'h') {\n          acc.flipX = true;\n          return acc;\n        }\n\n        if (first && rest === 'v') {\n          acc.flipY = true;\n          return acc;\n        }\n\n        rest = parseFloat(rest);\n\n        if (isNaN(rest)) {\n          return acc;\n        }\n\n        switch (first) {\n          case 'grow':\n            acc.size = acc.size + rest;\n            break;\n\n          case 'shrink':\n            acc.size = acc.size - rest;\n            break;\n\n          case 'left':\n            acc.x = acc.x - rest;\n            break;\n\n          case 'right':\n            acc.x = acc.x + rest;\n            break;\n\n          case 'up':\n            acc.y = acc.y - rest;\n            break;\n\n          case 'down':\n            acc.y = acc.y + rest;\n            break;\n\n          case 'rotate':\n            acc.rotate = acc.rotate + rest;\n            break;\n        }\n\n        return acc;\n      }, transform);\n    }\n  };\n  function transformParser (node) {\n    return parseTransformString(node.getAttribute('data-fa-transform'));\n  }\n\n  function symbolParser (node) {\n    var symbol = node.getAttribute('data-fa-symbol');\n    return symbol === null ? false : symbol === '' ? true : symbol;\n  }\n\n  function attributesParser (node) {\n    var extraAttributes = toArray(node.attributes).reduce(function (acc, attr) {\n      if (acc.name !== 'class' && acc.name !== 'style') {\n        acc[attr.name] = attr.value;\n      }\n\n      return acc;\n    }, {});\n    var title = node.getAttribute('title');\n\n    if (config.autoA11y) {\n      if (title) {\n        extraAttributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(nextUniqueId());\n      } else {\n        extraAttributes['aria-hidden'] = 'true';\n        extraAttributes['focusable'] = 'false';\n      }\n    }\n\n    return extraAttributes;\n  }\n\n  function maskParser (node) {\n    var mask = node.getAttribute('data-fa-mask');\n\n    if (!mask) {\n      return emptyCanonicalIcon();\n    } else {\n      return getCanonicalIcon(mask.split(' ').map(function (i) {\n        return i.trim();\n      }));\n    }\n  }\n\n  function blankMeta() {\n    return {\n      iconName: null,\n      title: null,\n      prefix: null,\n      transform: meaninglessTransform,\n      symbol: false,\n      mask: null,\n      extra: {\n        classes: [],\n        styles: {},\n        attributes: {}\n      }\n    };\n  }\n  function parseMeta(node) {\n    var _classParser = classParser(node),\n        iconName = _classParser.iconName,\n        prefix = _classParser.prefix,\n        extraClasses = _classParser.rest;\n\n    var extraStyles = styleParser(node);\n    var transform = transformParser(node);\n    var symbol = symbolParser(node);\n    var extraAttributes = attributesParser(node);\n    var mask = maskParser(node);\n    return {\n      iconName: iconName,\n      title: node.getAttribute('title'),\n      prefix: prefix,\n      transform: transform,\n      symbol: symbol,\n      mask: mask,\n      extra: {\n        classes: extraClasses,\n        styles: extraStyles,\n        attributes: extraAttributes\n      }\n    };\n  }\n\n  function MissingIcon(error) {\n    this.name = 'MissingIcon';\n    this.message = error || 'Icon unavailable';\n    this.stack = new Error().stack;\n  }\n  MissingIcon.prototype = Object.create(Error.prototype);\n  MissingIcon.prototype.constructor = MissingIcon;\n\n  var FILL = {\n    fill: 'currentColor'\n  };\n  var ANIMATION_BASE = {\n    attributeType: 'XML',\n    repeatCount: 'indefinite',\n    dur: '2s'\n  };\n  var RING = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'\n    })\n  };\n\n  var OPACITY_ANIMATE = _objectSpread({}, ANIMATION_BASE, {\n    attributeName: 'opacity'\n  });\n\n  var DOT = {\n    tag: 'circle',\n    attributes: _objectSpread({}, FILL, {\n      cx: '256',\n      cy: '364',\n      r: '28'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, ANIMATION_BASE, {\n        attributeName: 'r',\n        values: '28;14;28;28;14;28;'\n      })\n    }, {\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '1;0;1;1;0;1;'\n      })\n    }]\n  };\n  var QUESTION = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      opacity: '1',\n      d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '1;0;0;0;0;1;'\n      })\n    }]\n  };\n  var EXCLAMATION = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      opacity: '0',\n      d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '0;0;1;1;0;0;'\n      })\n    }]\n  };\n  var missing = {\n    tag: 'g',\n    children: [RING, DOT, QUESTION, EXCLAMATION]\n  };\n\n  var styles$2 = namespace.styles;\n  function findIcon(iconName, prefix) {\n    return new picked(function (resolve, reject) {\n      var val = {\n        found: false,\n        width: 512,\n        height: 512,\n        icon: missing\n      };\n\n      if (iconName && prefix && styles$2[prefix] && styles$2[prefix][iconName]) {\n        var icon = styles$2[prefix][iconName];\n        var width = icon[0];\n        var height = icon[1];\n        var vectorData = icon.slice(4);\n        val = {\n          found: true,\n          width: width,\n          height: height,\n          icon: {\n            tag: 'path',\n            attributes: {\n              fill: 'currentColor',\n              d: vectorData[0]\n            }\n          }\n        };\n        return resolve(val);\n      }\n\n      if (iconName && prefix && !config.showMissingIcons) {\n        reject(new MissingIcon(\"Icon is missing for prefix \".concat(prefix, \" with icon name \").concat(iconName)));\n      } else {\n        resolve(val);\n      }\n    });\n  }\n\n  var styles$3 = namespace.styles;\n\n  function generateSvgReplacementMutation(node, nodeMeta) {\n    var iconName = nodeMeta.iconName,\n        title = nodeMeta.title,\n        prefix = nodeMeta.prefix,\n        transform = nodeMeta.transform,\n        symbol = nodeMeta.symbol,\n        mask = nodeMeta.mask,\n        extra = nodeMeta.extra;\n    return new picked(function (resolve, reject) {\n      picked.all([findIcon(iconName, prefix), findIcon(mask.iconName, mask.prefix)]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            main = _ref2[0],\n            mask = _ref2[1];\n\n        resolve([node, makeInlineSvgAbstract({\n          icons: {\n            main: main,\n            mask: mask\n          },\n          prefix: prefix,\n          iconName: iconName,\n          transform: transform,\n          symbol: symbol,\n          mask: mask,\n          title: title,\n          extra: extra,\n          watchable: true\n        })]);\n      });\n    });\n  }\n\n  function generateLayersText(node, nodeMeta) {\n    var title = nodeMeta.title,\n        transform = nodeMeta.transform,\n        extra = nodeMeta.extra;\n    var width = null;\n    var height = null;\n\n    if (IS_IE) {\n      var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);\n      var boundingClientRect = node.getBoundingClientRect();\n      width = boundingClientRect.width / computedFontSize;\n      height = boundingClientRect.height / computedFontSize;\n    }\n\n    if (config.autoA11y && !title) {\n      extra.attributes['aria-hidden'] = 'true';\n    }\n\n    return picked.resolve([node, makeLayersTextAbstract({\n      content: node.innerHTML,\n      width: width,\n      height: height,\n      transform: transform,\n      title: title,\n      extra: extra,\n      watchable: true\n    })]);\n  }\n\n  function generateMutation(node) {\n    var nodeMeta = parseMeta(node);\n\n    if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {\n      return generateLayersText(node, nodeMeta);\n    } else {\n      return generateSvgReplacementMutation(node, nodeMeta);\n    }\n  }\n\n  function onTree(root) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (!IS_DOM) return;\n    var htmlClassList = DOCUMENT.documentElement.classList;\n\n    var hclAdd = function hclAdd(suffix) {\n      return htmlClassList.add(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n    };\n\n    var hclRemove = function hclRemove(suffix) {\n      return htmlClassList.remove(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n    };\n\n    var prefixes = config.autoFetchSvg ? Object.keys(PREFIX_TO_STYLE) : Object.keys(styles$3);\n    var prefixesDomQuery = [\".\".concat(LAYERS_TEXT_CLASSNAME, \":not([\").concat(DATA_FA_I2SVG, \"])\")].concat(prefixes.map(function (p) {\n      return \".\".concat(p, \":not([\").concat(DATA_FA_I2SVG, \"])\");\n    })).join(', ');\n\n    if (prefixesDomQuery.length === 0) {\n      return;\n    }\n\n    var candidates = toArray(root.querySelectorAll(prefixesDomQuery));\n\n    if (candidates.length > 0) {\n      hclAdd('pending');\n      hclRemove('complete');\n    } else {\n      return;\n    }\n\n    var mark = perf.begin('onTree');\n    var mutations = candidates.reduce(function (acc, node) {\n      try {\n        var mutation = generateMutation(node);\n\n        if (mutation) {\n          acc.push(mutation);\n        }\n      } catch (e) {\n        if (!PRODUCTION) {\n          if (e instanceof MissingIcon) {\n            console.error(e);\n          }\n        }\n      }\n\n      return acc;\n    }, []);\n    return new picked(function (resolve, reject) {\n      picked.all(mutations).then(function (resolvedMutations) {\n        perform(resolvedMutations, function () {\n          hclAdd('active');\n          hclAdd('complete');\n          hclRemove('pending');\n          if (typeof callback === 'function') callback();\n          mark();\n          resolve();\n        });\n      }).catch(function () {\n        mark();\n        reject();\n      });\n    });\n  }\n  function onNode(node) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    generateMutation(node).then(function (mutation) {\n      if (mutation) {\n        perform([mutation], callback);\n      }\n    });\n  }\n\n  function replaceForPosition(node, position) {\n    var pendingAttribute = \"\".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));\n    return new picked(function (resolve, reject) {\n      if (node.getAttribute(pendingAttribute) !== null) {\n        // This node is already being processed\n        return resolve();\n      }\n\n      var children = toArray(node.children);\n      var alreadyProcessedPseudoElement = children.filter(function (c) {\n        return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;\n      })[0];\n      var styles = WINDOW.getComputedStyle(node, position);\n      var fontFamily = styles.getPropertyValue('font-family').match(FONT_FAMILY_PATTERN);\n      var fontWeight = styles.getPropertyValue('font-weight');\n\n      if (alreadyProcessedPseudoElement && !fontFamily) {\n        // If we've already processed it but the current computed style does not result in a font-family,\n        // that probably means that a class name that was previously present to make the icon has been\n        // removed. So we now should delete the icon.\n        node.removeChild(alreadyProcessedPseudoElement);\n        return resolve();\n      } else if (fontFamily) {\n        var content = styles.getPropertyValue('content');\n        var prefix = ~['Light', 'Regular', 'Solid', 'Brands'].indexOf(fontFamily[1]) ? STYLE_TO_PREFIX[fontFamily[1].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[fontWeight];\n        var iconName = byUnicode(prefix, toHex(content.length === 3 ? content.substr(1, 1) : content)); // Only convert the pseudo element in this :before/:after position into an icon if we haven't\n        // already done so with the same prefix and iconName\n\n        if (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconName) {\n          node.setAttribute(pendingAttribute, iconName);\n\n          if (alreadyProcessedPseudoElement) {\n            // Delete the old one, since we're replacing it with a new one\n            node.removeChild(alreadyProcessedPseudoElement);\n          }\n\n          var meta = blankMeta();\n          var extra = meta.extra;\n          extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;\n          findIcon(iconName, prefix).then(function (main) {\n            var abstract = makeInlineSvgAbstract(_objectSpread({}, meta, {\n              icons: {\n                main: main,\n                mask: emptyCanonicalIcon()\n              },\n              prefix: prefix,\n              iconName: iconName,\n              extra: extra,\n              watchable: true\n            }));\n            var element = DOCUMENT.createElement('svg');\n\n            if (position === ':before') {\n              node.insertBefore(element, node.firstChild);\n            } else {\n              node.appendChild(element);\n            }\n\n            element.outerHTML = abstract.map(function (a) {\n              return toHtml(a);\n            }).join('\\n');\n            node.removeAttribute(pendingAttribute);\n            resolve();\n          }).catch(reject);\n        } else {\n          resolve();\n        }\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  function replace(node) {\n    return picked.all([replaceForPosition(node, ':before'), replaceForPosition(node, ':after')]);\n  }\n\n  function processable(node) {\n    return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');\n  }\n\n  function searchPseudoElements (root) {\n    if (!IS_DOM) return;\n    return new picked(function (resolve, reject) {\n      var operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);\n      var end = perf.begin('searchPseudoElements');\n      disableObservation();\n      picked.all(operations).then(function () {\n        end();\n        enableObservation();\n        resolve();\n      }).catch(function () {\n        end();\n        enableObservation();\n        reject();\n      });\n    });\n  }\n\n  var baseStyles = \"svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.3333333333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}\";\n\n  function css () {\n    var dfp = DEFAULT_FAMILY_PREFIX;\n    var drc = DEFAULT_REPLACEMENT_CLASS;\n    var fp = config.familyPrefix;\n    var rc = config.replacementClass;\n    var s = baseStyles;\n\n    if (fp !== dfp || rc !== drc) {\n      var dPatt = new RegExp(\"\\\\.\".concat(dfp, \"\\\\-\"), 'g');\n      var rPatt = new RegExp(\"\\\\.\".concat(drc), 'g');\n      s = s.replace(dPatt, \".\".concat(fp, \"-\")).replace(rPatt, \".\".concat(rc));\n    }\n\n    return s;\n  }\n\n  var Library =\n  /*#__PURE__*/\n  function () {\n    function Library() {\n      _classCallCheck(this, Library);\n\n      this.definitions = {};\n    }\n\n    _createClass(Library, [{\n      key: \"add\",\n      value: function add() {\n        var _this = this;\n\n        for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {\n          definitions[_key] = arguments[_key];\n        }\n\n        var additions = definitions.reduce(this._pullDefinitions, {});\n        Object.keys(additions).forEach(function (key) {\n          _this.definitions[key] = _objectSpread({}, _this.definitions[key] || {}, additions[key]);\n          defineIcons(key, additions[key]);\n          build();\n        });\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.definitions = {};\n      }\n    }, {\n      key: \"_pullDefinitions\",\n      value: function _pullDefinitions(additions, definition) {\n        var normalized = definition.prefix && definition.iconName && definition.icon ? {\n          0: definition\n        } : definition;\n        Object.keys(normalized).map(function (key) {\n          var _normalized$key = normalized[key],\n              prefix = _normalized$key.prefix,\n              iconName = _normalized$key.iconName,\n              icon = _normalized$key.icon;\n          if (!additions[prefix]) additions[prefix] = {};\n          additions[prefix][iconName] = icon;\n        });\n        return additions;\n      }\n    }]);\n\n    return Library;\n  }();\n\n  function prepIcon(icon) {\n    var width = icon[0];\n    var height = icon[1];\n    var vectorData = icon.slice(4);\n    return {\n      found: true,\n      width: width,\n      height: height,\n      icon: {\n        tag: 'path',\n        attributes: {\n          fill: 'currentColor',\n          d: vectorData[0]\n        }\n      }\n    };\n  }\n\n  function ensureCss() {\n    if (config.autoAddCss && !_cssInserted) {\n      insertCss(css());\n\n      _cssInserted = true;\n    }\n  }\n\n  function apiObject(val, abstractCreator) {\n    Object.defineProperty(val, 'abstract', {\n      get: abstractCreator\n    });\n    Object.defineProperty(val, 'html', {\n      get: function get() {\n        return val.abstract.map(function (a) {\n          return toHtml(a);\n        });\n      }\n    });\n    Object.defineProperty(val, 'node', {\n      get: function get() {\n        if (!IS_DOM) return;\n        var container = DOCUMENT.createElement('div');\n        container.innerHTML = val.html;\n        return container.children;\n      }\n    });\n    return val;\n  }\n\n  function findIconDefinition(iconLookup) {\n    var _iconLookup$prefix = iconLookup.prefix,\n        prefix = _iconLookup$prefix === void 0 ? 'fa' : _iconLookup$prefix,\n        iconName = iconLookup.iconName;\n    if (!iconName) return;\n    return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);\n  }\n\n  function resolveIcons(next) {\n    return function (maybeIconDefinition) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});\n      var mask = params.mask;\n\n      if (mask) {\n        mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});\n      }\n\n      return next(iconDefinition, _objectSpread({}, params, {\n        mask: mask\n      }));\n    };\n  }\n\n  var library = new Library();\n  var noAuto = function noAuto() {\n    config.autoReplaceSvg = false;\n    config.observeMutations = false;\n    disconnect();\n  };\n  var _cssInserted = false;\n  var dom = {\n    i2svg: function i2svg() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (IS_DOM) {\n        ensureCss();\n        var _params$node = params.node,\n            node = _params$node === void 0 ? DOCUMENT : _params$node,\n            _params$callback = params.callback,\n            callback = _params$callback === void 0 ? function () {} : _params$callback;\n\n        if (config.searchPseudoElements) {\n          searchPseudoElements(node);\n        }\n\n        return onTree(node, callback);\n      } else {\n        return picked.reject('Operation requires a DOM of some kind.');\n      }\n    },\n    css: css,\n    insertCss: function insertCss$$1() {\n      if (!_cssInserted) {\n        insertCss(css());\n\n        _cssInserted = true;\n      }\n    },\n    watch: function watch() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var autoReplaceSvgRoot = params.autoReplaceSvgRoot,\n          observeMutationsRoot = params.observeMutationsRoot;\n\n      if (config.autoReplaceSvg === false) {\n        config.autoReplaceSvg = true;\n      }\n\n      config.observeMutations = true;\n      domready(function () {\n        autoReplace({\n          autoReplaceSvgRoot: autoReplaceSvgRoot\n        });\n        observe({\n          treeCallback: onTree,\n          nodeCallback: onNode,\n          pseudoElementsCallback: searchPseudoElements,\n          observeMutationsRoot: observeMutationsRoot\n        });\n      });\n    }\n  };\n  var parse = {\n    transform: function transform(transformString) {\n      return parseTransformString(transformString);\n    }\n  };\n  var icon = resolveIcons(function (iconDefinition) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$transform = params.transform,\n        transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,\n        _params$symbol = params.symbol,\n        symbol = _params$symbol === void 0 ? false : _params$symbol,\n        _params$mask = params.mask,\n        mask = _params$mask === void 0 ? null : _params$mask,\n        _params$title = params.title,\n        title = _params$title === void 0 ? null : _params$title,\n        _params$classes = params.classes,\n        classes = _params$classes === void 0 ? [] : _params$classes,\n        _params$attributes = params.attributes,\n        attributes = _params$attributes === void 0 ? {} : _params$attributes,\n        _params$styles = params.styles,\n        styles = _params$styles === void 0 ? {} : _params$styles;\n    if (!iconDefinition) return;\n    var prefix = iconDefinition.prefix,\n        iconName = iconDefinition.iconName,\n        icon = iconDefinition.icon;\n    return apiObject(_objectSpread({\n      type: 'icon'\n    }, iconDefinition), function () {\n      ensureCss();\n\n      if (config.autoA11y) {\n        if (title) {\n          attributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(nextUniqueId());\n        } else {\n          attributes['aria-hidden'] = 'true';\n          attributes['focusable'] = 'false';\n        }\n      }\n\n      return makeInlineSvgAbstract({\n        icons: {\n          main: prepIcon(icon),\n          mask: mask ? prepIcon(mask.icon) : {\n            found: false,\n            width: null,\n            height: null,\n            icon: {}\n          }\n        },\n        prefix: prefix,\n        iconName: iconName,\n        transform: _objectSpread({}, meaninglessTransform, transform),\n        symbol: symbol,\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: classes\n        }\n      });\n    });\n  });\n  var text = function text(content) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$transform2 = params.transform,\n        transform = _params$transform2 === void 0 ? meaninglessTransform : _params$transform2,\n        _params$title2 = params.title,\n        title = _params$title2 === void 0 ? null : _params$title2,\n        _params$classes2 = params.classes,\n        classes = _params$classes2 === void 0 ? [] : _params$classes2,\n        _params$attributes2 = params.attributes,\n        attributes = _params$attributes2 === void 0 ? {} : _params$attributes2,\n        _params$styles2 = params.styles,\n        styles = _params$styles2 === void 0 ? {} : _params$styles2;\n    return apiObject({\n      type: 'text',\n      content: content\n    }, function () {\n      ensureCss();\n      return makeLayersTextAbstract({\n        content: content,\n        transform: _objectSpread({}, meaninglessTransform, transform),\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: [\"\".concat(config.familyPrefix, \"-layers-text\")].concat(_toConsumableArray(classes))\n        }\n      });\n    });\n  };\n  var counter = function counter(content) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$title3 = params.title,\n        title = _params$title3 === void 0 ? null : _params$title3,\n        _params$classes3 = params.classes,\n        classes = _params$classes3 === void 0 ? [] : _params$classes3,\n        _params$attributes3 = params.attributes,\n        attributes = _params$attributes3 === void 0 ? {} : _params$attributes3,\n        _params$styles3 = params.styles,\n        styles = _params$styles3 === void 0 ? {} : _params$styles3;\n    return apiObject({\n      type: 'counter',\n      content: content\n    }, function () {\n      ensureCss();\n      return makeLayersCounterAbstract({\n        content: content.toString(),\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: [\"\".concat(config.familyPrefix, \"-layers-counter\")].concat(_toConsumableArray(classes))\n        }\n      });\n    });\n  };\n  var layer = function layer(assembler) {\n    return apiObject({\n      type: 'layer'\n    }, function () {\n      ensureCss();\n      var children = [];\n      assembler(function (args) {\n        Array.isArray(args) ? args.map(function (a) {\n          children = children.concat(a.abstract);\n        }) : children = children.concat(args.abstract);\n      });\n      return [{\n        tag: 'span',\n        attributes: {\n          class: \"\".concat(config.familyPrefix, \"-layers\")\n        },\n        children: children\n      }];\n    });\n  };\n  var api = {\n    noAuto: noAuto,\n    config: config,\n    dom: dom,\n    library: library,\n    parse: parse,\n    findIconDefinition: findIconDefinition,\n    icon: icon,\n    text: text,\n    counter: counter,\n    layer: layer,\n    toHtml: toHtml\n  };\n\n  var autoReplace = function autoReplace() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _params$autoReplaceSv = params.autoReplaceSvgRoot,\n        autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;\n    if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({\n      node: autoReplaceSvgRoot\n    });\n  };\n\n  function bootstrap() {\n    if (IS_BROWSER) {\n      if (!WINDOW.FontAwesome) {\n        WINDOW.FontAwesome = api;\n      }\n\n      domready(function () {\n        autoReplace();\n        observe({\n          treeCallback: onTree,\n          nodeCallback: onNode,\n          pseudoElementsCallback: searchPseudoElements\n        });\n      });\n    }\n\n    namespace.hooks = _objectSpread({}, namespace.hooks, {\n      addPack: function addPack(prefix, icons) {\n        namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, icons);\n        build();\n        autoReplace();\n      },\n      addShims: function addShims(shims) {\n        var _namespace$shims;\n\n        (_namespace$shims = namespace.shims).push.apply(_namespace$shims, _toConsumableArray(shims));\n\n        build();\n        autoReplace();\n      }\n    });\n  }\n\n  bunker(bootstrap);\n\n}());\n","/**\n * ==============================\n * Debug\n * ==============================\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * List of Log Levels available.\n */\nexport const DebugLevel = {\n\tNONE: 0,\n\tERROR: 1,\n\tWARNING: 2,\n\tINFO: 3,\n\tDEBUG: 4,\n\tALL: 5\n};\n\n/**\n * This class acts as a proxy for the console. It shares the same methods as the\n * web console but they are conditioned to a debug level.\n *\n * @class\n */\nexport class Debug {\n\n\t/**\n\t * @static level - Set the log level\n\t *\n\t * @param {DebugLevel} level The debug level to use\n\t *\n\t * @return {void}\n\t */\n\tstatic level (level) {\n\t\tif (typeof level === 'number') {\n\t\t\tthis._level = level;\n\t\t}\n\t\treturn this._level;\n\t}\n\n\t/**\n\t * @static log - Log the given elements.\n\t *\n\t * Logs will only be made if the level is set to DEBUG or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic log (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.log (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static debug - Show a debugging log\n\t *\n\t * Logs will only be made if the level is set DEBUG or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic debug (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.debug (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static info - Show an info log\n\t *\n\t * Logs will only be made if the level is set to INFO or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic info (...args) {\n\t\tif (this.level () >= DebugLevel.INFO) {\n\t\t\tconsole.info (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static error - Show an error log\n\t *\n\t * Logs will only be made if the level is set to ERROR or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic error (...args) {\n\t\tif (this.level () >= DebugLevel.ERROR) {\n\t\t\tconsole.error (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static warning - Show an warning log\n\t *\n\t * Logs will only be made if the level is set to WARNING or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic warning (...args) {\n\t\tif (this.level () >= DebugLevel.WARNING) {\n\t\t\tconsole.warn (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static table - Show data as a table\n\t *\n\t * Table will only be made if the level is set to DEBUG or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic table (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.table (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static group - Start an indented group\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic group (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.group (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static groupCollapsed - Start an indented group collapsed by default\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic groupCollapsed (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.groupCollapsed (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static groupEnd - End a previously started group\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic groupEnd (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.groupEnd (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static time - Start a timer\n\t *\n\t * The timer will only start if the level is set to DEBUG or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic time (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.time (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static timeLog - Log the time a timer has been running for\n\t *\n\t * The time will only be logged if the level is set to DEBUG or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic timeLog (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.timeLog (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static timeEnd - End a timer\n\t *\n\t * The timer will only be available if the level is set to DEBUG or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic timeEnd (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.timeEnd (...args);\n\t\t}\n\t}\n\n\t/**\n\t * @static trace - Show the stack trace\n\t *\n\t * The stack trace will only be available if the level is set to DEBUG or above\n\t *\n\t * @param  {...any} args\n\t *\n\t * @return {void}\n\t */\n\tstatic trace (...args) {\n\t\tif (this.level () >= DebugLevel.DEBUG) {\n\t\t\tconsole.trace (...args);\n\t\t}\n\t}\n}\n\nDebug._level = DebugLevel.NONE;","/**\n * ==============================\n * DOM\n * ==============================\n */\n\n/**\n * Simple DOM manipulation functions\n *\n * @class\n */\nexport class DOM {\n\n\t/**\n\t * Create a new DOM object\n\t *\n\t * @constructor\n\t * @param  {string|Object|array} selector - Selector or DOM element to use\n\t * @return {DOM} - New instance of DOM\n\t */\n\tconstructor (selector) {\n\t\tif (typeof selector == 'string') {\n\t\t\tthis.collection = document.querySelectorAll (selector);\n\t\t\tthis.length = this.collection.length;\n\t\t} else if (selector instanceof NodeList) {\n\t\t\tthis.collection = selector;\n\t\t\tthis.length = selector.length;\n\t\t} else if (typeof selector == 'object') {\n\t\t\tif (selector.length >= 1) {\n\t\t\t\tthis.collection = selector;\n\t\t\t} else {\n\t\t\t\tthis.collection = [selector];\n\t\t\t}\n\t\t\tthis.length = this.collection.length;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Hide elements by setting their `display` property to 'none'.\n\t */\n\thide () {\n\t\tfor (const element of this.collection) {\n\t\t\telement.style.display = 'none';\n\t\t}\n\t}\n\n\t/**\n\t * Show elements by setting their `display` property to the given value.\n\t *\n\t * @param {string} [display='block'] - Display property to set\n\t */\n\tshow (display = 'block') {\n\t\tfor (const element of this.collection) {\n\t\t\telement.style.display = display;\n\t\t}\n\t}\n\n\t/**\n\t * Add a class to the classList object\n\t *\n\t * @param  {string} newClass - Class name to add\n\t */\n\taddClass (newClass) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.classList.add (newClass);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a given class from the classList object\n\t *\n\t * @param  {string} [oldClass=null] - Class to remove. If it's empty or null,\n\t * all classes will be removed\n\t */\n\tremoveClass (oldClass = null) {\n\t\tif (oldClass !== null) {\n\t\t\tfor (const element of this.collection) {\n\t\t\t\telement.classList.remove (oldClass);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const element of this.collection) {\n\t\t\t\twhile (element.classList.length > 0) {\n\t\t\t\t\telement.classList.remove (element.classList.item (0));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggle between two classes\n\t *\n\t * @param  {string} classes - Space separated class names\n\t */\n\ttoggleClass (classes) {\n\t\tclasses = classes.split (' ');\n\t\tfor (const element of this.collection) {\n\t\t\tfor (let j = 0; j < classes.length; j++) {\n\t\t\t\telement.classList.toggle (classes[j]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check if the first element matching the selector has the given class\n\t *\n\t * @param  {string} classToCheck - Class name to check for\n\t * @return {boolean} - Whether the class is present or not\n\t */\n\thasClass (classToCheck) {\n\t\tif (this.collection[0]) {\n\t\t\tfor (let j = 0; j < this.collection[0].classList.length; j++) {\n\t\t\t\tif (this.collection[0].classList[j] == classToCheck) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get or set the value from the first element matching the selector\n\t *\n\t * @param  {string} value - Value to set to the element.\n\t * @return {string} - If no value was provided, this returns the value of the\n\t * element instead of setting it\n\t */\n\tvalue (value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].value;\n\t\t\t} else {\n\t\t\t\tthis.collection[0].value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Focus on the first element matching the selector\n\t */\n\tfocus () {\n\t\tif (this.length > 0) {\n\t\t\tthis.collection[0].focus ();\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'click' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tclick (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('click', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'keyup' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tkeyup (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('keyup', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'keydown' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tkeydown (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('keydown', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'submit' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tsubmit (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('submit', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'change' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tchange (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('change', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'scroll' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tscroll (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('scroll', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback function to a given event\n\t *\n\t * @param  {string} event - Event to add the listener to\n\t * @param  {string} target - Target element on which to detect the event\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\ton (event, target, callback) {\n\t\tevent = event.split(' ');\n\t\tfor (const element of this.collection) {\n\t\t\tfor (let j = 0; j < event.length; j++) {\n\n\t\t\t\t// Check if no target was defined and just a function was provided\n\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\telement.addEventListener(event[j], target, false);\n\t\t\t\t} else if (typeof target === 'string' && typeof callback === 'function') {\n\t\t\t\t\telement.addEventListener(event[j], (e) => {\n\t\t\t\t\t\tif (e.target && $_(e.target).matches (target)) {\n\t\t\t\t\t\t\tcallback.call (e.target, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filter from the current collection to only those matching the new selector\n\t *\n\t * @param  {string} element - Selector to filter the collection with\n\t * @return {DOM} - New DOM instance with the filtered collection\n\t */\n\tfilter (selector) {\n\t\tif (this.length > 0) {\n\t\t\treturn new DOM (this.collection[0].querySelector (selector));\n\t\t}\n\t}\n\n\t/**\n\t * Get or set a `data` property\n\t *\n\t * @param  {string} name - Name of the data property\n\t * @param  {string} [value] - Value of the property\n\t * @return {string} - If no value is set, this function returns it's current value\n\t */\n\tdata (name, value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].dataset[name];\n\t\t\t} else {\n\t\t\t\tthis.collection[0].dataset[name] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get or set the text of the first element matching the selector\n\t *\n\t * @param  {string} [value] - Value to set the text to\n\t * @return {type} - If no value is present, this function returns its the\n\t * element's current text.\n\t */\n\ttext (value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].textContent;\n\t\t\t} else {\n\t\t\t\tthis.collection[0].textContent = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get or set the inner HTML of the first element matching the selector\n\t *\n\t * @param  {string} [value] - Value to set the HTML to\n\t * @return {type} - If no value is present, this function returns its the\n\t * element's current HTML.\n\t */\n\thtml (value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.collection[0].innerHTML = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Append an element to the first element matching the selector\n\t *\n\t * @param  {string} element - String representation of the element to add\n\t */\n\tappend (element) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof element === 'string') {\n\t\t\t\tconst div = document.createElement ('div');\n\t\t\t\tif (typeof element === 'string') {\n\t\t\t\t\tdiv.innerHTML = element.trim ();\n\t\t\t\t} else {\n\t\t\t\t\tdiv.innerHTML = element;\n\t\t\t\t}\n\t\t\t\tthis.collection[0].appendChild (div.firstChild);\n\t\t\t} else {\n\t\t\t\tthis.collection[0].appendChild (element);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Prepend an element to the first element matching the selector\n\t *\n\t * @param  {string} element - String representation of the element to add\n\t */\n\tprepend (element) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof element === 'string') {\n\t\t\t\tconst div = document.createElement ('div');\n\t\t\t\tif (typeof element === 'string') {\n\t\t\t\t\tdiv.innerHTML = element.trim ();\n\t\t\t\t} else {\n\t\t\t\t\tdiv.innerHTML = element;\n\t\t\t\t}\n\t\t\t\tif (this.collection[0].childNodes.length > 0) {\n\t\t\t\t\tthis.collection[0].insertBefore (div.firstChild, this.collection[0].childNodes[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.collection[0].appendChild (div.firstChild);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.collection[0].childNodes.length > 0) {\n\t\t\t\t\tthis.collection[0].insertBefore (element, this.collection[0].childNodes[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.collection[0].appendChild (element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Iterate over the collection of elements matching the selector\n\t *\n\t * @param  {function} callback - Callback to run for every element\n\t */\n\teach (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\tcallback (element);\n\t\t}\n\t}\n\n\t/**\n\t * Get an element from the collection given it's index\n\t *\n\t * @param  {int} index - Index of the element to retrieve\n\t * @return {HTMLElement} - HTML Element in the position indicated by the index\n\t */\n\tget (index) {\n\t\treturn this.collection[index];\n\t}\n\n\t/**\n\t * Get the first element in the collection\n\t *\n\t * @return {DOM} - DOM instance with the first element\n\t */\n\tfirst () {\n\t\tif (this.length > 0) {\n\t\t\treturn new DOM (this.collection[0]);\n\t\t}\n\t}\n\n\t/**\n\t * Get the last element in the collection\n\t *\n\t * @return {DOM} - DOM instance with the last element\n\t */\n\tlast () {\n\t\tif (this.length > 0) {\n\t\t\treturn new DOM (this.collection[this.collection.length - 1]);\n\t\t}\n\t}\n\n\t/**\n\t * Check if the elements in the collection are visible by chacking their\n\t * display, offsetWidth and offsetHeight properties\n\t *\n\t * @return {boolean} - Whether the elements are visible or not\n\t */\n\tisVisible () {\n\t\tfor (const element of this.collection) {\n\t\t\tif (element.display != 'none' && element.offsetWidth > 0 && element.offsetHeight > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get the parent of the first element matching the selector\n\t *\n\t * @return {DOM} - DOM instance of the parent element\n\t */\n\tparent () {\n\t\tif (this.collection[0]) {\n\t\t\treturn new DOM (this.collection[0].parentElement);\n\t\t}\n\t}\n\n\t/**\n\t * Find an element that matches the given selector in the first element of the collection\n\t *\n\t * @param  {string} selector - Selector to find the element with\n\t * @return {DOM} - Aegis instance with the element if found\n\t */\n\tfind (selector) {\n\t\tif (this.collection[0]) {\n\t\t\treturn new DOM (this.collection[0].querySelectorAll (selector));\n\t\t}\n\t}\n\n\t/**\n\t * Get the top and left offsets of the first element matching the selector\n\t *\n\t * @return {Object} - Object with `top` and `left` offsets\n\t */\n\toffset () {\n\t\tif (this.collection[0]) {\n\t\t\tconst rect = this.collection[0].getBoundingClientRect ();\n\t\t\treturn {\n\t\t\t\ttop: rect.top + document.body.scrollTop,\n\t\t\t\tleft: rect.left + document.body.scrollLeft\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Find the closest element matching the given selector. This bubbles up\n\t * from the initial object and then follows to its parents.\n\t *\n\t * @param  {string} selector - Selector to match the closest element with\n\t * @return {DOM} - DOM instance with the closest HTML element matching the selector\n\t */\n\tclosest (selector) {\n\t\tlet found = null;\n\t\tlet element = this;\n\t\twhile (typeof element.get (0) !== 'undefined' && found === null) {\n\t\t\t// Check if the current element matches the selector\n\t\t\tconst matches = element.matches (selector);\n\n\t\t\tif (matches === true) {\n\t\t\t\treturn element;\n\t\t\t}\n\n\t\t\tconst search = element.find (selector);\n\t\t\tif (search.length > 0) {\n\t\t\t\tfound = search;\n\t\t\t}\n\t\t\telement = element.parent ();\n\t\t}\n\n\t\tif (found !== null) {\n\t\t\treturn found;\n\t\t}\n\n\t\treturn element;\n\t}\n\n\t/**\n\t * Get or set the value of a given attribute\n\t *\n\t * @param  {string} attribute - Attribute's name\n\t * @param  {string|Number} [value] - Value to set the attribute to\n\t * @return {type} - If no value is provided, this function returns the current\n\t * value of the provided attribute\n\t */\n\tattribute (attribute, value) {\n\t\tif (this.collection[0]) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\tthis.collection[0].getAttribute (attribute);\n\t\t\t} else {\n\t\t\t\treturn this.collection[0].setAttribute (attribute, value);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check whether an element has an attribute or not\n\t *\n\t * @param {string} attribute - The name of the attribute to check existance for\n\t * @returns {boolean} - Whether or not the attribute is present\n\t */\n\thasAttribute (attribute) {\n\t\tif (this.collection[0]) {\n\t\t\treturn this.collection[0].hasAttribute (attribute);\n\t\t}\n\t}\n\n\t/**\n\t * Insert content to the `after` property of an element\n\t *\n\t * @param  {string} content - String representation of the content to add\n\t */\n\tafter (content) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.insertAdjacentHTML ('afterend', content);\n\t\t}\n\t}\n\n\t/**\n\t * Insert content to the `before` property of an element\n\t *\n\t * @param  {string} content - String representation of the content to add\n\t */\n\tbefore (content) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.insertAdjacentHTML ('beforebegin', content);\n\t\t}\n\t}\n\n\t/**\n\t * Get or modify the `style` properties of the elements matching the selector\n\t *\n\t * @param  {string|Object} properties - Properties to change or get. Can be\n\t * either an individual property or a JSON object with key-value pairs\n\t * @param  {string} [value] - Value to set the property to when only changing\n\t * one property\n\t * @return {string} - If a peoperty is given but not a value for it, this\n\t * function will return its current value\n\t */\n\tstyle (properties, value) {\n\t\tfor (let i = 0; i < this.collection.length; i++) {\n\t\t\tif (typeof properties === 'string' && value !== 'undefined') {\n\t\t\t\tthis.collection[i].style[properties] = value;\n\t\t\t} else if (typeof properties === 'string' && value === 'undefined') {\n\t\t\t\treturn this.collection[i].style[properties];\n\t\t\t} else if (typeof properties === 'object') {\n\t\t\t\tfor (const property in properties) {\n\t\t\t\t\tthis.collection[i].style[property] = properties[property];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Animate the given `style` properties on all elements in the collection in\n\t * with a given time duration\n\t *\n\t * @param  {Object} style - JSON object with the key-value pairs of properties\n\t * to animate\n\t * @param  {int} time - Time in milliseconds during which the properties will\n\t * be animated\n\t */\n\tanimate (style, time) {\n\t\tfor (let i = 0; i < this.collection.length; i++) {\n\t\t\tfor (const property in style) {\n\n\t\t\t\tconst start = new Date().getTime();\n\t\t\t\tconst collection = this.collection;\n\t\t\t\tlet timer;\n\t\t\t\tlet initialValue;\n\t\t\t\tif (typeof this.collection[i].style[property] !== 'undefined') {\n\t\t\t\t\tinitialValue = this.collection[i].style[property];\n\n\t\t\t\t\ttimer = setInterval (() => {\n\t\t\t\t\t\tconst step = Math.min (1, (new Date ().getTime () - start) / time);\n\n\t\t\t\t\t\tcollection[i].style[property] = (initialValue + step * (style[property] - initialValue));\n\n\t\t\t\t\t\tif (step == 1) {\n\t\t\t\t\t\t\tclearInterval (timer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 25);\n\t\t\t\t\tthis.collection[i].style[property] = initialValue;\n\n\t\t\t\t} else if (typeof (this.collection[i])[property] !== 'undefined') {\n\t\t\t\t\tinitialValue = (this.collection[i])[property];\n\n\t\t\t\t\ttimer = setInterval(() => {\n\t\t\t\t\t\tconst step = Math.min (1, (new Date ().getTime () - start) / time);\n\n\t\t\t\t\t\t(collection[i])[property] = (initialValue + step * (style[property] - initialValue));\n\n\t\t\t\t\t\tif (step == 1) {\n\t\t\t\t\t\t\tclearInterval (timer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 25);\n\t\t\t\t\t(this.collection[i])[property] = initialValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Use a fade in animation i the first element matching the selector\n\t *\n\t * @param  {type} [time=400] - Time duration for the animation\n\t * @param  {type} callback - Callback function to run once the animation is over\n\t */\n\tfadeIn (time = 400, callback) {\n\t\tif (this.collection[0]) {\n\t\t\tconst element = this.collection[0];\n\t\t\telement.style.opacity = 0;\n\n\t\t\tlet last = +new Date();\n\n\t\t\tconst tick = () => {\n\t\t\t\telement.style.opacity = +element.style.opacity + (new Date() - last) / time;\n\t\t\t\tlast = +new Date();\n\n\t\t\t\tif (+element.style.opacity < 1) {\n\t\t\t\t\t(window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttick();\n\t\t}\n\t}\n\n\t/**\n\t * Use a fade out animation i the first element matching the selector\n\t *\n\t * @param  {type} [time=400] - Time duration for the animation\n\t * @param  {type} callback - Callback function to run once the animation is over\n\t */\n\tfadeOut (time = 400, callback) {\n\t\tif (this.collection[0]) {\n\t\t\tlet last = +new Date ();\n\t\t\tconst element = this.collection[0];\n\t\t\tconst tick = () => {\n\t\t\t\telement.style.opacity = +element.style.opacity - (new Date() - last) / time;\n\t\t\t\tlast = +new Date ();\n\n\t\t\t\tif (+element.style.opacity > 0) {\n\t\t\t\t\t(window.requestAnimationFrame && requestAnimationFrame (tick)) || setTimeout(tick, 16);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\tcallback ();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\ttick ();\n\t\t}\n\t}\n\n\t/**\tCheck if the first element in the collection matches a given selector\n\t *\n\t * @param  {string} selector - Selector to match\n\t * @return {boolean} - Whether the element matches the selector or not\n\t */\n\tmatches (selector) {\n\t\tconst check = Element.prototype;\n\t\tconst polyfill = check.matches || check.webkitMatchesSelector || check.mozMatchesSelector || check.msMatchesSelector || function () {\n\t\t\treturn [].indexOf.call (document.querySelectorAll (selector), this) !== -1;\n\t\t};\n\t\treturn polyfill.call (this.collection[0], selector);\n\t}\n\n\t/**\n\t * Remove all elemets in the collection\n\t */\n\tremove () {\n\t\tfor (const element of this.collection) {\n\t\t\telement.parentNode.removeChild (element);\n\t\t}\n\t}\n\n\t/**\n\t * Replace the first element in the collection with a new one\n\t */\n\treplaceWith (element) {\n\t\tif (this.collection[0]) {\n\t\t\tif (typeof element === 'string') {\n\t\t\t\tconst div = document.createElement ('div');\n\t\t\t\tdiv.innerHTML = element;\n\t\t\t\tthis.collection[0].parentElement.replaceChild (div.firstChild, this.collection[0]);\n\t\t\t} else {\n\t\t\t\tthis.collection[0].parentElement.replaceChild (element, this.collection[0]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset every element in the collection\n\t */\n\treset () {\n\t\tif (this.length > 0) {\n\t\t\tthis.collection[0].reset ();\n\t\t}\n\t}\n\n\t/**\n\t * Get or set a property for the first element in the collection\n\t *\n\t * @param  {string} property - Property name to set or get\n\t * @param  {string|Number} [value] - Value to set the property to\n\t * @return {string|Number} - If no value is provided, this funcion will return the\n\t * current value of the indicated property\n\t */\n\tproperty (property, value) {\n\t\tif (this.collection[0]) {\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tthis.collection[0][property] = value;\n\t\t\t} else {\n\t\t\t\treturn this.collection[0][property];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Simple wrapper function to use the DOM library\n *\n * @param  {string|Object|array} selector - Selector or DOM element to use\n * @return {DOM} - DOM instance or class if no selector is used\n */\nexport function $_ (selector) {\n\tif (typeof selector !== 'undefined') {\n\t\treturn new DOM (selector);\n\t} else {\n\t\treturn DOM;\n\t}\n}\n\n/**\n * Utility function to attach the 'load' listener to the window\n *\n * @param  {function} callback - Callback function to run when the window is ready\n */\nexport function $_ready (callback) {\n\twindow.addEventListener ('load', callback);\n}","/**\n* ==============================\n* Request\n* ==============================\n*/\n\n/**\n * Simple Wrapper for the fetch API, providing simple functions to handle requests\n *\n * @class\n */\nexport class Request {\n\n\t/**\n\t * @static serialize - Serialize an object of data into a URI encoded format\n\t *\n\t * @param  {Object} data - Key-value object of data to serialize\n\t * @return {string} - Serialized Data\n\t */\n\tstatic serialize (data) {\n\t\treturn Object.keys (data).map ((key) => {\n\t\t\treturn encodeURIComponent (key) + '=' + encodeURIComponent (data[key]);\n\t\t}).join ('&');\n\t}\n\n\t/**\n\t * @static get - Make a GET request to a given URL with the provided data\n\t * parameters and an optional configuration object for the request.\n\t *\n\t * @param  {string} url - URL to make the request to\n\t * @param  {Object} [data = {}] - Parameters to send in the URL, represented\n\t * as a JSON object. These parameters will be sent as a query in the URL\n\t * @param  {Object} [options = {}] - Options object for configurations you want\n\t * to use in the fetch () request made.\n\t * @return {Promise<Response>} - Resolves to the response of the request\n\t */\n\tstatic get (url, data = {}, options = {}) {\n\t\tconst query = Request.serialize (data);\n\n\t\t// Check if there is actually any data parameters and join them to the\n\t\t// url as query parameters\n\t\tif (query !== '') {\n\t\t\turl = `${url}?${query}`;\n\t\t}\n\n\t\treturn fetch (url, options);\n\t}\n\n\t/**\n\t * @static post - Make a POST request to a given URL with the provided data\n\t * and an optional configuration object for the request.\n\t *\n\t * @param  {string} url - URL to make the request\n\t * @param  {Object} [data = {}] - Set of data to send in the URL, represented\n\t * as a JSON object\n \t * @param  {Object} [options = {}] - Options object for configurations you want\n\t * to use in the fetch () request made. The Content-Type header is used to\n\t * serialize data in the correct format and defaults to application/x-www-form-urlencoded\n\t * @return {Promise<Response>} - Resolves to the response of the request\n\t */\n\tstatic post (url, data, options = {}) {\n\t\tlet formData;\n\n\t\tif (typeof options.headers !== 'undefined') {\n\t\t\tconst contentType = options.headers['Content-Type'];\n\t\t\tif (typeof contentType !== 'undefined') {\n\t\t\t\tif (contentType == 'multipart/form-data') {\n\t\t\t\t\tformData = new FormData ();\n\t\t\t\t\tfor (const value in data) {\n\t\t\t\t\t\tformData.append (value, data[value]);\n\t\t\t\t\t}\n\t\t\t\t} else if (contentType == 'application/json') {\n\t\t\t\t\tformData = JSON.stringify (data);\n\t\t\t\t} else {\n\t\t\t\t\tformData = Request.serialize (data);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tformData = Request.serialize (data);\n\t\t}\n\n\t\tconst props = Object.assign ({}, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t},\n\t\t\tbody: formData\n\t\t}, options);\n\n\t\t// Delete the explicit multipart/form-data header to allow boundary automatic filling\n\t\tif (typeof props.headers !== 'undefined') {\n\t\t\tif (props.headers['Content-Type'] === 'multipart/form-data') {\n\t\t\t\tdelete props.headers['Content-Type'];\n\t\t\t}\n\t\t}\n\n\t\treturn fetch (url, props);\n\t}\n\n\t/**\n\t * @static put - Make a PUT request to a given URL with the provided data\n\t * and an optional configuration object for the request.\n\t *\n\t * @param  {string} url - URL to make the request\n\t * @param  {Object} [data = {}] - Set of data to send in the URL, represented\n\t * as a JSON object\n \t * @param  {Object} [options = {}] - Options object for configurations you want\n\t * to use in the fetch () request made. The Content-Type header is used to\n\t * serialize data in the correct format and defaults to application/x-www-form-urlencoded\n\t * @return {Promise<Response>} - Resolves to the response of the request\n\t */\n\tstatic put (url, data, options = {}) {\n\t\treturn Request.post (url, data, Object.assign ({}, {method: 'PUT'}, options));\n\t}\n\n\t/**\n\t * @static delete - Make a DELETE request to a given URL with the provided data\n\t * and an optional configuration object for the request.\n\t *\n\t * @param  {string} url - URL to make the request\n\t * @param  {Object} [data = {}] - Parameters to send in the URL, represented\n\t * as a JSON object. These parameters will be sent as a query in the URL\n \t * @param  {Object} [options = {}] - Options object for configurations you want\n\t * to use in the fetch () request made. The Content-Type header is used to\n\t * serialize data in the correct format and defaults to application/x-www-form-urlencoded\n\t * @return {Promise<Response>} - Resolves to the response of the request\n\t */\n\tstatic delete (url, data, options = {}) {\n\t\treturn Request.get (url, data, Object.assign ({}, {method: 'DELETE'}, options));\n\t}\n\n\t/**\n \t * @static json - Request a JSON object from a given URL through a GET request\n \t *\n \t * @param  {string} url - URL to make the request to\n \t * @param  {Object} [data = {}] - Parameters to send in the URL, represented\n \t * as a JSON object. These parameters will be sent as a query in the URL\n \t * @param  {Object} [options = {}] - Options object for configurations you want\n \t * to use in the fetch () request made.\n \t * @return {Promise<Object>} - Resolves to the json object obtained from the request response\n \t */\n\tstatic json (url, data = {}, options = {}) {\n\t\treturn Request.get (url, data, options).then ((response) => {\n\t\t\treturn response.json ();\n\t\t});\n\t}\n\n\t/**\n \t * @static blob - Request a Blob from a given URL through a GET request\n \t *\n \t * @param  {string} url - URL to make the request to\n \t * @param  {Object} [data = {}] - Parameters to send in the URL, represented\n \t * as a JSON object. These parameters will be sent as a query in the URL\n \t * @param  {Object} [options = {}] - Options object for configurations you want\n \t * to use in the fetch () request made.\n \t * @return {Promise<Blob>} - Resolves to the blob obtained from the request response\n \t */\n\tstatic blob (url, data = {}, options = {}) {\n\t\treturn Request.get (url, data, options).then ((response) => {\n\t\t\treturn response.blob ();\n\t\t});\n\t}\n}","/**\n * ==============================\n * File System\n * ==============================\n */\n\nimport { Request } from './Request';\n\n/**\n * A simple class wrapper for the File and FileReader web API, while this class\n * doesn't actually provide acces to the host file system, it does provide useful\n * utilities for form file inputs and remote content loading.\n *\n * @class\n */\nexport class FileSystem {\n\n\n\t/**\n\t * @static readRemote - Read a file from a remote location given a URL. This\n\t * function will fetch the file blob using the Request class and then use the\n\t * read () function to read the blob in the format required.\n\t *\n\t * @param {type} url - URL to fetch the file from\n\t * @param {type} [type = 'base64'] - Type of data to be read, values can be\n\t * 'text', 'base64' and 'buffer'. This parameter is used for the read () function.\n\t * @param {Object} [props = {}] - Props to send to the Request object\n\t * @return {Promise<ArrayBuffer|string>} - Content of the file. The format\n\t * depends on the type parameter used.\n\t */\n\tstatic readRemote (url, type = 'base64', props = {}) {\n\t\treturn Request.blob (url, {}, props).then ((file) => {\n\t\t\treturn FileSystem.read (file, type);\n\t\t});\n\t}\n\n\t/**\n\t * @static read - Read a given File or Blob object.\n\t *\n\t * @param  {File|Blob} file - File to read\n\t * @param  {string} [type = 'text'] - Type of data to be read, values can be\n\t * 'text', 'base64' and 'buffer'.\n\t * @return {Promise<Event, ArrayBuffer|string>} - Promise that resolves to\n\t * the Load event and content of the file. The format depends on the type\n\t * parameter used.\n\t */\n\tstatic read (file, type = 'text') {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\tconst reader = new FileReader ();\n\n\t\t\treader.onload = (event) => {\n\t\t\t\t// Pass down the event object and the content\n\t\t\t\tresolve (event, event.target.result);\n\t\t\t};\n\n\t\t\treader.onerror = (error) => {\n\t\t\t\treject (error);\n\t\t\t};\n\n\t\t\tif (type === 'base64') {\n\t\t\t\treader.readAsDataURL (file);\n\t\t\t} else if (type === 'buffer') {\n\t\t\t\treader.readAsArrayBuffer (file);\n\t\t\t} else {\n\t\t\t\treader.readAsText (file, 'UTF-8');\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @static create - Create a new File, this uses the File API and will note\n\t * actually create a file in the user's file system, however using it with\n\t * other features, that may be possible\n\t *\n\t * @param  {string} file - Name of the file (Including extension)\n\t * @param  {ArrayBuffer|ArrayBufferView|Blob|string} content - Content to save in the file\n\t * @param  {string} [type = 'text/plain'] - Mime Type for the file\n\t * @return {Promise<File>}\n\t */\n\tstatic create (name, content, type = 'text/plain') {\n\t\treturn Promise.resolve (new File ([content], name, {type}));\n\t}\n\n\t/**\n\t * @static extension - Returns the extension of a file given its file name.\n\t *\n\t * @param  {string} name - Name or full path of the file\n\t * @return {string} - File extension without the leading dot (.)\n\t */\n\tstatic extension (name) {\n\t\treturn name.split ('.').pop ();\n\t}\n\n\t/**\n\t * @static isImage - Check if a file is an image by its extension.\n\t *\n\t * @param  {string} name - Name or full path of the file\n\t * @return {boolean}\n\t */\n\tstatic isImage (name) {\n\t\tconst extensions = ['jpg', 'jpeg', 'png', 'gif', 'svg', 'webp', 'bmp'];\n\t\treturn extensions.indexOf (FileSystem.extension (name).toLowerCase ()) > -1;\n\t}\n\n}","/**\n* ==============================\n* Form\n* ==============================\n*/\n\nimport { $_ } from './DOM';\n\n/**\n * Utility class that provides simple function for filling and retrieving values\n * from froms. This class requires the use of the `data-form` attribute.\n *\n * @class\n */\nexport class Form {\n\n\t/**\n\t * @static fill - Fill a form's inputs with the given values. Each key in the\n\t * provided object must match the `name` attribute of the input to fill.\n\t *\n\t * @param  {string} name - Form name. Must match the `data-form` attribute of the Form.\n\t * @param  {Object} data - JSON object with key-value pairs to fill the inputs.\n\t */\n\tstatic fill (name, data) {\n\t\tfor (const field in data) {\n\t\t\tconst element = $_(`form[data-form='${name}'] [name='${field}']`).get (0);\n\t\t\tif (typeof element != 'undefined') {\n\t\t\t\tswitch (element.type) {\n\n\t\t\t\t\tcase 'file':\n\t\t\t\t\tcase 'file[]':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\telement.value = data[field];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * @static values - Get all the values from a form's input. The keys are mapped\n\t * using the `name` attribute of each input.\n\t *\n\t * @param  {string} name - Form name. Must match the `data-form` attribute of the Form.\n\t * @return {Object} - Key-value JSON object\n\t */\n\tstatic values (name) {\n\t\tconst data = {};\n\t\t$_(`form[data-form='${name}'] [name]`).each ((element) => {\n\t\t\tlet value;\n\t\t\tswitch (element.type) {\n\t\t\t\tcase 'file[]':\n\t\t\t\t\tvalue = element.files;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file':\n\t\t\t\t\tvalue = element.files[0];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvalue = element.value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (typeof value != 'undefined' && value !== null) {\n\t\t\t\tdata[element.name] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn data;\n\t}\n}","/**\n* ==============================\n* Platform\n* ==============================\n*/\n\n/**\n * General checks for what kind of platform is the being used to run the app.\n * @class\n */\nexport class Platform {\n\n\t/**\n\t * Check if the screen has a retina pixel ratio\n\t * @returns {boolean}\n\t */\n\tstatic retina () {\n\t\treturn window.devicePixelRatio >= 2;\n\t}\n\n\t/**\n\t * Check if the device is on portrait orientation\n\t * @returns {boolean}\n\t */\n\tstatic portrait () {\n\t\treturn window.orientation === 0 || window.orientation === 180;\n\t}\n\n\t/**\n\t * Check if the device is on landscape orientation\n\t * @returns {boolean}\n\t */\n\tstatic landscape () {\n\t\treturn (window.orientation === 90 || window.orientation === -90);\n\t}\n\n\t/**\n\t * Get device Orientation\n\t * @returns {string} portrait | landscape\n\t */\n\tstatic orientation () {\n\t\treturn Platform.portrait () ? 'portrait' : 'landscape';\n\t}\n\n\t/**\n\t * Check if the app is running over Electron\n\t * @returns {boolean}\n\t */\n\tstatic electron () {\n\t\treturn window && window.process && window.process.type;\n\t}\n\n\t/**\n\t * Check if the app is running over Cordova\n\t * @returns {boolean}\n\t */\n\tstatic cordova () {\n\t\treturn !!window.cordova;\n\t}\n\n\t/**\n\t * Check if the app is running in a desktop platform\n\t * @returns {boolean}\n\t */\n\tstatic desktop (platform = 'Any') {\n\t\tlet match = false;\n\t\tswitch (platform) {\n\t\t\tcase 'Windows':\n\t\t\t\tmatch = navigator.platform.includes ('Win');\n\t\t\t\tbreak;\n\n\t\t\tcase 'macOS':\n\t\t\t\tmatch = navigator.platform.includes ('Mac');\n\t\t\t\tbreak;\n\n\t\t\tcase 'Linux':\n\t\t\t\tmatch = navigator.platform.includes ('Linux');\n\t\t\t\tbreak;\n\n\t\t\tcase 'FreeBSD':\n\t\t\t\tmatch = navigator.platform.includes ('FreeBSD');\n\t\t\t\tbreak;\n\n\t\t\tcase 'webOS':\n\t\t\t\tmatch = navigator.platform.includes ('WebTV');\n\t\t\t\tbreak;\n\n\t\t\tcase 'Any':\n\t\t\tdefault:\n\t\t\t\tmatch = navigator.platform.includes ('Win')\n\t\t\t\t\t\t|| navigator.platform.includes ('Mac')\n\t\t\t\t\t\t|| navigator.platform.includes ('Linux')\n\t\t\t\t\t\t|| navigator.platform.includes ('FreeBSD')\n\t\t\t\t\t\t|| navigator.platform.includes ('WebTV');\n\t\t\t\tbreak;\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * Check if the app is running in a mobile platform\n\t * @param {string } [platform='Any'] - Check for a specific mobile platform [Android | iOS | Opera | Windows | BlackBerry | Any]\n\t * @returns {boolean}\n\t */\n\tstatic mobile (platform = 'Any') {\n\t\tlet match = false;\n\t\tswitch (platform) {\n\t\t\tcase 'Android':\n\t\t\t\tmatch = /Android/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'iOS':\n\t\t\t\tmatch = /iPhone|iPad|iPod/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'Opera':\n\t\t\t\tmatch = /Opera Mini/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'Windows':\n\t\t\t\tmatch = /Windows Phone|IEMobile|WPDesktop/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'BlackBerry':\n\t\t\t\tmatch = /BlackBerry|BB10/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'Any':\n\t\t\tdefault:\n\t\t\t\tmatch = /Android|iPhone|iPad|iPod|Windows Phone|IEMobile|WPDesktop|BlackBerry|BB10/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @static serviceWorkers - Check if the platform allows the use of service\n\t * workers\n\t *\n\t * @return {boolean} - Whether they're supported or not\n\t */\n\tstatic serviceWorkers () {\n\t\tif (typeof navigator !== 'undefined') {\n\t\t\tif ('serviceWorker' in navigator && location.protocol.indexOf ('http') > -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}","/**\n * ==============================\n * Preload\n * ==============================\n */\n\nimport { Request } from './Request';\n\n/**\n * A simple class for asset preloading. This class assumes you have a service\n * worker set up that will be caching all requests.\n * @class\n */\nexport class Preload {\n\n\t/**\n\t * @static image - Preload an image file\n\t *\n\t * @param  {string} route - Route to the image\n\t * @return {Promise} - Resolves to the image object or gets rejected with\n\t * the rejection event\n\t */\n\tstatic image (route) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image ();\n\n\t\t\timage.onload = () => {\n\t\t\t\tresolve (image);\n\t\t\t};\n\n\t\t\timage.onerror = (e) => {\n\t\t\t\treject (e);\n\t\t\t};\n\n\t\t\timage.src = route;\n\t\t});\n\t}\n\n\t/**\n\t * @static file - Preload any kind of file\n\t *\n\t * @param  {string} route - Route to the file\n\t * @return {Promise} - Resolves or rejects depending on request success\n\t */\n\tstatic file (route) {\n\t\treturn Request.blob (route);\n\t}\n}","/**\n* ==============================\n* Local Storage Adapter\n* ==============================\n*/\n\n/**\n * The Local Storage Adapter provides the Space Class the ability to interact\n * with the localStorage api found in most modern browsers.\n *\n * @class\n */\nexport class LocalStorage {\n\n\t/**\n\t * Create a new LocalStorage. If no configuration is provided, the LocalStorage\n\t * global object is used. The LocalStorage Adapter can provide independency\n\t * by store name and space name.\n\t *\n\t * @constructor\n\t * @param {Object} [configuration={name = '', version = '', store = ''}] - Configuration Object for the Adapter\n\t * @param {string} configuration.name - Name of the Space\n\t * @param {string} configuration.version - Version of the Space in Semantic versioning syntax\n\t * @param {string} configuration.store - Name of the Object Store to use\n\t *\n\t */\n\tconstructor ({name = '', version = '', store = ''}) {\n\t\tthis.name = name;\n\t\tthis.version = version;\n\t\tthis.store = store;\n\n\t\tthis.upgrades = {};\n\n\t\tif (this.version === '') {\n\t\t\tthis.numericVersion = 0;\n\t\t} else {\n\t\t\tthis.numericVersion = parseInt (version.replace (/\\./g, ''));\n\t\t}\n\n\t\tif (name !== '' && version !== '' && store !== '') {\n\t\t\tthis.id = `${this.name}::${this.store}::${this.version}_`;\n\t\t} else if (name !== '' && version !== '') {\n\t\t\tthis.id = `${this.name}::${this.version}_`;\n\t\t} else if (name !== '') {\n\t\t\tthis.id = `${this.name}::_`;\n\t\t} else {\n\t\t\tthis.id = '';\n\t\t}\n\t}\n\n\t/**\n\t * Open the Storage Object\n\t *\n\t * @return {Promise}\n\t */\n\topen () {\n\t\tif (typeof this.storage === 'object' && !(this.storage instanceof Promise)) {\n\t\t\treturn Promise.resolve (this);\n\t\t} else if (this.storage instanceof Promise) {\n\t\t\treturn this.storage;\n\t\t} else {\n\t\t\tthis.storage = new Promise ((resolve) => {\n\t\t\t\tlet upgradesToApply = [];\n\n\t\t\t\t// Check if this space is versioned\n\t\t\t\tif (this.version !== '') {\n\t\t\t\t\t// Get the versionless part of the ID to check if an upgrade needs\n\t\t\t\t\t// to ocurr based on the version available on storage and the current\n\t\t\t\t\t// version.\n\t\t\t\t\tlet versionless = '';\n\t\t\t\t\tif (this.name !== '' && this.version !== '' && this.store !== '') {\n\t\t\t\t\t\tversionless = `${this.name}::${this.store}::`;\n\t\t\t\t\t} else if (this.name !== '' && this.version !== '') {\n\t\t\t\t\t\tversionless = `${this.name}::`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get all the currently stored keys that contain the versionless\n\t\t\t\t\t// ID, which means they belong to this space\n\t\t\t\t\tconst storedVersions = Object.keys (window.localStorage).filter ((key) => {\n\t\t\t\t\t\treturn key.indexOf (versionless) === 0;\n\t\t\t\t\t}).map ((key) => {\n\t\t\t\t\t\t// Remove the versionless part of the ID and keep only the\n\t\t\t\t\t\t// part of the key belonging to the ID\n\t\t\t\t\t\treturn key.replace (versionless, '').split ('_')[0];\n\t\t\t\t\t}). filter ((key) => {\n\t\t\t\t\t\t// Filter all that didn't match the versionless part fully\n\t\t\t\t\t\treturn key.indexOf ('::') === -1;\n\t\t\t\t\t}).sort ();\n\n\t\t\t\t\tif (storedVersions.length > 0) {\n\t\t\t\t\t\t// We'll only take the lowest one every time\n\t\t\t\t\t\tconst oldVersion = storedVersions[0];\n\t\t\t\t\t\tconst oldVersionNumeric = parseInt (oldVersion.replace (/\\./g, ''));\n\n\t\t\t\t\t\tif (oldVersionNumeric < this.numericVersion) {\n\t\t\t\t\t\t\t// Check what upgrade functions have been declared in their respective order\n\t\t\t\t\t\t\tconst availableUpgrades = Object.keys (this.upgrades).sort ();\n\n\t\t\t\t\t\t\t// Find the first update that needs to be applied to the database given\n\t\t\t\t\t\t\t// the old version it currently has.\n\t\t\t\t\t\t\tconst startFrom = availableUpgrades.findIndex (u => {\n\t\t\t\t\t\t\t\tconst [old, ] = u.split ('::');\n\t\t\t\t\t\t\t\treturn parseInt (old) === oldVersionNumeric;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (startFrom > -1) {\n\t\t\t\t\t\t\t\tupgradesToApply = availableUpgrades.slice (startFrom).filter ((u) => {\n\t\t\t\t\t\t\t\t\tconst [old, next] = u.split ('::');\n\t\t\t\t\t\t\t\t\treturn parseInt (old) < this.numericVersion && parseInt (next) <= this.numericVersion;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Get the previous ID using the old version\n\t\t\t\t\t\t\tlet previousId = `${this.name}::${oldVersion}_`;\n\n\t\t\t\t\t\t\tif (this.name !== '' && this.version !== '' && this.store !== '') {\n\t\t\t\t\t\t\t\tpreviousId = `${this.name}::${this.store}::${oldVersion}_`;\n\t\t\t\t\t\t\t} else if (this.name !== '' && this.version !== '') {\n\t\t\t\t\t\t\t\tpreviousId = `${this.name}::${oldVersion}_`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Get all keys from the previous version\n\t\t\t\t\t\t\tconst keys = Object.keys (window.localStorage).filter ((key) => {\n\t\t\t\t\t\t\t\treturn key.indexOf (previousId) === 0;\n\t\t\t\t\t\t\t}).map ((key) => {\n\t\t\t\t\t\t\t\treturn key.replace (previousId, '');\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const key of keys) {\n\t\t\t\t\t\t\t\t// Get the value stored with the previous version\n\t\t\t\t\t\t\t\tconst previous = window.localStorage.getItem (`${previousId}${key}`);\n\n\t\t\t\t\t\t\t\t// Re-insert the value using the new ID as a key\n\t\t\t\t\t\t\t\twindow.localStorage.setItem (this.id + key, previous);\n\n\t\t\t\t\t\t\t\t// Delete the previous value.\n\t\t\t\t\t\t\t\twindow.localStorage.removeItem (`${previousId}${key}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve ({ upgrades: upgradesToApply });\n\t\t\t}).then (({ upgrades }) => {\n\t\t\t\tthis.storage = window.localStorage;\n\t\t\t\treturn new Promise ((resolve) => {\n\t\t\t\t\tconst res = () => resolve (this);\n\t\t\t\t\tthis._upgrade (upgrades, res);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn this.storage;\n\t\t}\n\t}\n\n\t/**\n\t * Store a key-value pair\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object|string|Number} - Value to save\n\t * @return {Promise<{key, value}>}\n\t */\n\tset (key, value) {\n\t\treturn this.open ().then (() => {\n\n\t\t\tif (typeof value === 'object') {\n\t\t\t\tthis.storage.setItem (this.id + key, JSON.stringify (value));\n\t\t\t} else {\n\t\t\t\tthis.storage.setItem (this.id + key, value);\n\t\t\t}\n\n\t\t\treturn Promise.resolve ({key, value});\n\t\t});\n\t}\n\n\t/**\n\t * Update a key-value pair. In difference with the set () method, the update\n\t * method will use an Object.assign () in the case of objects so no value is\n\t * lost.\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object|string|Number} - Value to save\n\t * @return {Promise<{key, value}>}\n\t */\n\tupdate (key, value) {\n\t\treturn this.get (key).then ((currentValue) => {\n\t\t\tif (typeof currentValue === 'object') {\n\t\t\t\tif (typeof value === 'object') {\n\t\t\t\t\tvalue = Object.assign ({}, currentValue, value);\n\t\t\t\t}\n\t\t\t\tthis.storage.setItem (this.id + key, JSON.stringify (value));\n\t\t\t} else {\n\t\t\t\tthis.storage.setItem (this.id + key, value);\n\t\t\t}\n\t\t\treturn Promise.resolve ({key, value});\n\t\t}).catch (() => {\n\t\t\treturn this.set (key, value);\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves a value from storage given it's key\n\t *\n\t * @param  {string} - Key with which the value was saved\n\t * @return {Promise<Object>|Promise<string>|Promise<Number>} - Resolves to the retreived value\n\t * or its rejected if it doesn't exist\n\t */\n\tget (key) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tlet value = null;\n\t\t\t\tvalue = this.storage.getItem (this.id + key);\n\t\t\t\ttry {\n\t\t\t\t\tconst o = JSON.parse (value);\n\t\t\t\t\tif (o && typeof o === 'object') {\n\t\t\t\t\t\tvalue = o;\n\t\t\t\t\t}\n\t\t\t\t} catch (exception) {\n\t\t\t\t\t// Unable to parse to JSON\n\t\t\t\t}\n\n\t\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\t\tresolve (value);\n\t\t\t\t} else {\n\t\t\t\t\treject ();\n\t\t\t\t}\n\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves all the values in the space in a key-value JSON object\n\t *\n\t * @return {Promise<Object>} - Resolves to the retreived values\n\t */\n\tgetAll () {\n\t\treturn this.keys ().then ((keys) => {\n\t\t\tconst values = {};\n\t\t\tconst promises = [];\n\t\t\tfor (const key of keys) {\n\t\t\t\tpromises.push (this.get (key).then ((value) => {\n\t\t\t\t\tvalues[key] = value;\n\t\t\t\t}));\n\t\t\t}\n\t\t\treturn Promise.all (promises).then (() => {\n\t\t\t\treturn values;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Check if the space contains a given key.\n\t *\n\t * @param  {string} key - Key to look for.\n\t * @return {Promise} Promise gets resolved if it exists and rejected if\n\t * doesn't\n\t */\n\tcontains (key) {\n\t\treturn this.keys ().then ((keys) => {\n\t\t\tif (keys.includes (key)) {\n\t\t\t\tPromise.resolve ();\n\t\t\t} else {\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Upgrade a Space Version\n\t *\n\t * @param oldVersion {string} - The version of the storage to be upgraded\n\t * @param newVersion {string} - The version to be upgraded to\n\t * @param callback {function} - Function to transform the old stored values to the new version's format\n\t * @returns {Promise}\n\t */\n\tupgrade (oldVersion, newVersion, callback) {\n\t\tthis.upgrades[`${parseInt (oldVersion.replace (/\\./g, ''))}::${parseInt (newVersion.replace (/\\./g, ''))}`] = callback;\n\t\treturn Promise.resolve ();\n\t}\n\n\t// This function acts as a helper for the upgrade progress by executing the\n\t// needed upgrade callbacks in the correct order and sychronously.\n\t_upgrade (upgradesToApply, resolve) {\n\t\t// Check if there are still upgrades to apply\n\t\tif (upgradesToApply.length > 0) {\n\t\t\tthis.upgrades[upgradesToApply[0]].call (this, this).then (() => {\n\t\t\t\tthis._upgrade (upgradesToApply.slice (1), resolve);\n\t\t\t}).catch ((e) => console.error (e));\n\t\t} else {\n\t\t\tresolve ();\n\t\t}\n\t}\n\n\t/**\n\t * Rename a Space\n\t *\n\t * @param {string} name - New name to be used.\n\t * @returns {Promise} - Result of the rename operation\n\t */\n\trename (name) {\n\t\t// Check if the name is different\n\t\tif (this.name !== name) {\n\t\t\treturn this.keys ().then ((keys) => {\n\t\t\t\t// Save the previous Space id\n\t\t\t\tconst oldId = this.id;\n\n\t\t\t\t// Set new object properties with the new name\n\t\t\t\tthis.name = name;\n\n\t\t\t\tif (this.name !== '' && this.version !== '' && this.store !== '') {\n\t\t\t\t\tthis.id = `${this.name}::${this.store}::${this.version}_`;\n\t\t\t\t} else if (this.name !== '' && this.version !== '') {\n\t\t\t\t\tthis.id = `${this.name}::${this.version}_`;\n\t\t\t\t} else if (this.name !== '') {\n\t\t\t\t\tthis.id = `${this.name}::_`;\n\t\t\t\t} else {\n\t\t\t\t\tthis.id = '';\n\t\t\t\t}\n\n\t\t\t\tconst promises = [];\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tpromises.push (this.set (key, this.storage.getItem (`${oldId}${key}`)).then (() => {\n\t\t\t\t\t\tthis.storage.removeItem (`${oldId}${key}`);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\treturn Promise.all (promises);\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.reject ();\n\t\t}\n\t}\n\n\t/**\n\t * Get the key that corresponds to a given index in the storage\n\t *\n\t * @param  {Number} index - Index to get the key from\n\t * @param  {boolean} [full=false] - Whether to return the full key name including space id or just the key name\n\t * @return {Promise<string>} - Resolves to the key's name\n\t */\n\tkey (index, full = false) {\n\t\treturn this.open ().then (() => {\n\t\t\tif (full === true) {\n\t\t\t\treturn Promise.resolve (this.storage.key (index));\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve (this.storage.key (index).replace (this.id, ''));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Return all keys stored in the space.\n\t *\n\t * @param {boolean} [full=false] - Whether to return the full key name including space id or just the key name\n\t * @return {Promise<string[]>} - Array of keys\n\t */\n\tkeys (full = false) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn Promise.resolve (Object.keys (this.storage).filter ((key) => {\n\t\t\t\treturn key.indexOf (this.id) === 0;\n\t\t\t}).map ((key) => {\n\t\t\t\tif (full === true) {\n\t\t\t\t\treturn key;\n\t\t\t\t} else {\n\t\t\t\t\treturn key.replace (this.id, '');\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * Delete a value from the space given its key\n\t *\n\t * @param  {string} key - Key of the item to delete\n\t * @return {Promise<value>} - Resolves to the value of the deleted object\n\t */\n\tremove (key) {\n\t\treturn this.get (key).then ((value) => {\n\t\t\tthis.storage.removeItem (this.id + key);\n\t\t\treturn Promise.resolve (value);\n\t\t});\n\t}\n\n\t/**\n\t * Clear the entire space\n\t *\n\t * @return {Promise} - Result of the clear operation\n\t */\n\tclear () {\n\t\treturn this.keys ().then ((keys) => {\n\t\t\tfor (const key of keys) {\n\t\t\t\tthis.remove (key);\n\t\t\t}\n\t\t\treturn Promise.resolve ();\n\t\t});\n\t}\n}","/**\n* ==============================\n* Session Storage Adapter\n* ==============================\n*/\n\nimport { LocalStorage } from './LocalStorage';\n\n/**\n * The Session Storage Adapter provides the Space Class the ability to interact\n * with the sessionStorage api found in most modern browsers. Since this API\n * shares pretty much the same methods to the local storage one, this class\n * inherits from the LocalStorage adapter.\n *\n * @class\n */\nexport class SessionStorage extends LocalStorage {\n\n\t/**\n\t * Create a new SessionStorage. If no configuration is provided, the SessionStorage\n\t * global object is used.The SessionStorage Adapter can provide independency\n\t * by store name and space name.\n\t *\n\t * @constructor\n\t * @param {Object} [configuration={name = '', version = '', store = ''}] - Configuration Object for the Adapter\n\t * @param {string} configuration.name - Name of the Space\n\t * @param {string} configuration.version - Version of the Space in Semantic versioning syntax\n\t * @param {string} configuration.store - Name of the Object Store to use\n\t *\n\t */\n\tconstructor ({name = '', version = '', store = ''}) {\n\t\tsuper ({name, version, store});\n\t}\n\n\t/**\n\t * Open the Storage Object\n\n\t * @return {Promise<SessionStorage>}\n\t */\n\topen () {\n\t\tif (typeof this.storage === 'undefined') {\n\t\t\tthis.storage = window.sessionStorage;\n\t\t}\n\t\treturn Promise.resolve (this);\n\t}\n}","/**\n* ==============================\n* IndexedDB Adapter\n* ==============================\n*/\n\n/**\n * The IndexedDB Adapter provides the Space Class the ability to interact\n * with the IndexedDB API found in most modern browsers.\n *\n * @class\n */\nexport class IndexedDB {\n\n\t/**\n\t * Create a new IndexedDB. Differently from Local and Session Storages, the\n\t * IndexedDB Adapter requires a mandatory name, version and store name.\n\t *\n\t * @constructor\n\t * @param {Object} [configuration={name = '', version = '', store = '', props = {}, index = {}}] - Configuration Object for the Adapter\n\t * @param {string} configuration.name - Name of the Space\n\t * @param {string} configuration.version - Version of the Space in Semantic versioning syntax\n\t * @param {string} configuration.store - Name of the Object Store to use\n\t * @param {Object} configuration.props - Optional Parameters for the Object Store\n\t * @param {Object} configuration.index - Object of the indexes to declare for\n\t * the  Object Store. Each index is a JSON object with the following properties:\n\t * @param {String} configuration.index[...].name - Name for the Index\n\t * @param {String} configuration.index[...].field - Field on the store to apply the index to\n\t * @param {Object} configuration.index[...].props - Index properties object\n\t */\n\tconstructor ({name = '', version = '', store = '', props = {}, index = {}}) {\n\t\tthis.name = name;\n\t\tthis.version = version;\n\t\tthis.store = store;\n\t\tthis.props = props;\n\t\tthis.index = index;\n\n\t\tthis.upgrades = {};\n\n\t\tif (this.version === '') {\n\t\t\tthis.numericVersion = 0;\n\t\t} else {\n\t\t\tthis.numericVersion = parseInt (version.replace (/\\./g, ''));\n\t\t}\n\t}\n\n\t/**\n\t * Open the Storage Object\n\t *\n\t * @return {Promise}\n\t */\n\topen () {\n\n\t\tif (this.name === '') {\n\t\t\tconsole.error ('No name has been defined for IndexedDB space.');\n\t\t\treturn Promise.reject ();\n\t\t}\n\n\t\tif (this.store === '') {\n\t\t\tconsole.error ('No store has been defined for IndexedDB space.');\n\t\t\treturn Promise.reject ();\n\t\t}\n\n\t\tif (this.storage instanceof IDBDatabase) {\n\t\t\treturn Promise.resolve (this);\n\t\t} else if (this.storage instanceof Promise) {\n\t\t\treturn this.storage;\n\t\t} else {\n\t\t\tthis.storage = new Promise ((resolve, reject) => {\n\t\t\t\tlet upgradesToApply = [];\n\t\t\t\tconst storage = window.indexedDB.open (this.name, this.numericVersion);\n\n\t\t\t\tstorage.onerror = (event) => {\n\t\t\t\t\treject (event);\n\t\t\t\t};\n\n\t\t\t\tstorage.onsuccess = (event) => {\n\t\t\t\t\tresolve ({ storage: event.target.result, upgrades: upgradesToApply });\n\t\t\t\t};\n\n\t\t\t\tstorage.onupgradeneeded = (event) => {\n\t\t\t\t\t// If the previous version is less than one, it means that\n\t\t\t\t\t// the database needs to be created first\n\t\t\t\t\tif (event.oldVersion < 1) {\n\t\t\t\t\t\t// Create all the needed Stores\n\t\t\t\t\t\tconst store = event.target.result.createObjectStore (this.store, this.props);\n\t\t\t\t\t\tfor (const index of Object.keys (this.index)) {\n\t\t\t\t\t\t\tstore.createIndex (this.index[index].name, this.index[index].field, this.index[index].props);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Check what upgrade functions have been declared in their respective order\n\t\t\t\t\t\tconst availableUpgrades = Object.keys (this.upgrades).sort ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Find the first update that needs to be applied to the database given\n\t\t\t\t\t\t// the old version it currently has.\n\t\t\t\t\t\tconst startFrom = availableUpgrades.findIndex (u => {\n\t\t\t\t\t\t\tconst [old, ] = u.split ('::');\n\t\t\t\t\t\t\treturn parseInt (old) === event.oldVersion;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (startFrom > -1) {\n\t\t\t\t\t\t\tupgradesToApply = availableUpgrades.slice (startFrom).filter ((u) => {\n\t\t\t\t\t\t\t\tconst [old, next] = u.split ('::');\n\t\t\t\t\t\t\t\treturn parseInt (old) < this.numericVersion && parseInt (next) <= this.numericVersion;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Once the transaction is done, resolve the storage object\n\t\t\t\t\tconst transaction = event.target.transaction;\n\t\t\t\t\ttransaction.addEventListener ('success', () => {\n\t\t\t\t\t\tresolve ({ storage: event.target.result, upgrades: upgradesToApply });\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}).then (({ storage, upgrades }) => {\n\t\t\t\tthis.storage = storage;\n\t\t\t\treturn new Promise ((resolve) => {\n\t\t\t\t\tconst res = () => resolve (storage);\n\t\t\t\t\tthis._upgrade (upgrades, res, event);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn this.storage;\n\t\t}\n\t}\n\n\t/**\n\t * Store a key-value pair. Because of the nature of a IndexedDB Database, the\n\t * stored values must be JSON objects.\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object} - Value to save\n\t * @return {Promise<Object>} - When resolved, a {key, value} object is handed\n\t * down, when it's rejected, the event is handed down.\n\t */\n\tset (key = null, value) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tconst transaction = this.storage.transaction (this.store, 'readwrite').objectStore (this.store);\n\t\t\t\tlet op;\n\t\t\t\tif (key !== null) {\n\t\t\t\t\top = transaction.put (Object.assign ({}, {id: key}, value));\n\t\t\t\t} else {\n\t\t\t\t\top = transaction.add (value);\n\t\t\t\t}\n\t\t\t\top.addEventListener ('success', (event) => { resolve ({key: event.target.result, value: value});});\n\t\t\t\top.addEventListener ('error', (event) => {reject (event);});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Update a key-value pair. In difference with the set () method, the update\n\t * method will use an Object.assign () in the case of objects so no value is\n\t * lost.\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object} - Value to save\n\t * @return {Promise<Object>} - When resolved, a {key, value} object is handed\n\t * down, when it's rejected, the event is handed down.\n\t */\n\tupdate (key, value) {\n\t\treturn this.get (key).then ((currentValue) => {\n\t\t\t// If this key did not exist on the storage, then create it using the\n\t\t\t// set method\n\t\t\tif (typeof currentValue === 'undefined') {\n\t\t\t\treturn this.set (key, value);\n\t\t\t}\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tconst transaction = this.storage.transaction (this.store, 'readwrite').objectStore (this.store);\n\t\t\t\tconst op = transaction.put (Object.assign ({}, currentValue, value));\n\t\t\t\top.addEventListener ('success', (event) => {resolve ({key: event.target.result, value: value});});\n\t\t\t\top.addEventListener ('error', (event) => {reject (event);});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves a value from storage given it's key\n\t *\n\t * @param  {string} - Key with which the value was saved\n\t * @return {Promise<Object>} - Resolves to the retreived value or its rejected\n\t * if it doesn't exist\n\t */\n\tget (key) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tconst transaction = this.storage.transaction (this.store).objectStore (this.store);\n\t\t\t\tconst op = transaction.get (key);\n\n\t\t\t\top.addEventListener ('success', (event) => {resolve (event.target.result);});\n\t\t\t\top.addEventListener ('error', (event) => {reject (event);});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves all the values in the space in a key-value JSON object\n\t *\n\t * @return {Promise<Object>} - Resolves to the retreived values\n\t */\n\tgetAll () {\n\t\treturn this.open ().then (() => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tconst transaction = this.storage.transaction (this.store).objectStore (this.store);\n\t\t\t\tconst op = transaction.getAll ();\n\n\t\t\t\top.addEventListener ('success', (event) => {resolve (event.target.result);});\n\t\t\t\top.addEventListener ('error', (event) => {reject (event);});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Check if the space contains a given key.\n\t *\n\t * @param  {string} key - Key to look for.\n\t * @return {Promise} - Promise gets resolved if it exists and rejected if it\n\t * doesn't\n\t */\n\tcontains (key) {\n\t\treturn this.get (key).then ((keys) => {\n\t\t\tif (keys.includes (key)) {\n\t\t\t\tPromise.resolve ();\n\t\t\t} else {\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Upgrade a Space Version. Upgrades must be declared before the open ()\n\t * method is executed.\n\t *\n\t * @param {string} oldVersion - The version to be upgraded\n\t * @param {string} newVersion - The version to be upgraded to\n\t * @param {function} callback - Function to transform the old stored values to the new version's format\n\t * @returns {Promise}\n\t */\n\tupgrade (oldVersion, newVersion, callback) {\n\t\tthis.upgrades[`${parseInt (oldVersion.replace (/\\./g, ''))}::${parseInt (newVersion.replace (/\\./g, ''))}`] = callback;\n\t\treturn Promise.resolve ();\n\t}\n\n\t// This function acts as a helper for the upgrade progress by executing the\n\t// needed upgrade callbacks in the correct order and sychronously.\n\t_upgrade (upgradesToApply, resolve, event) {\n\t\t// Check if there are still upgrades to apply\n\t\tif (upgradesToApply.length > 0) {\n\t\t\tthis.upgrades[upgradesToApply[0]].call (this, this, event).then (() => {\n\t\t\t\tthis._upgrade (upgradesToApply.slice (1), resolve, event);\n\t\t\t}).catch ((e) => console.error (e));\n\t\t} else {\n\t\t\tresolve ();\n\t\t}\n\t}\n\n\t/**\n\t * Renaming the space is not possible with the IndexedDB adapter therefore\n\t * this function always gets a rejection.\n\t *\n\t * @returns {Promise} - Result of the rename operation\n\t */\n\trename () {\n\t\treturn Promise.reject ();\n\t}\n\n\t/**\n\t * Getting a key by its index is not possible in this adapter, therefore this\n\t * function always gets rejected.\n\t *\n\t * @return {Promise} - Promise Rejection\n\t */\n\tkey () {\n\t\treturn Promise.reject ();\n\t}\n\n\t/**\n\t * Return all keys stored in the space.\n\t *\n\t * @return {Promise<string[]>}  - Array of keys\n\t */\n\tkeys () {\n\t\treturn this.open ().then (() => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tconst transaction = this.storage.transaction (this.store, 'readwrite').objectStore (this.store);\n\t\t\t\tconst op = transaction.getAllKeys ();\n\t\t\t\top.addEventListener ('success', (event) => {resolve (event.target.result);}, false);\n\t\t\t\top.addEventListener ('error', (event) => {reject (event);}, false);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Delete a value from the space given its key\n\t *\n\t * @param  {string} key - Key of the item to delete\n\t * @return {Promise<key, value>} - Resolves to the key and value of the deleted object\n\t */\n\tremove (key) {\n\t\treturn this.get (key).then ((value) => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tconst transaction = this.storage.transaction (this.store, 'readwrite').objectStore (this.store);\n\t\t\t\tconst op = transaction.delete (key);\n\t\t\t\top.addEventListener ('success', () => {resolve (value);}, false);\n\t\t\t\top.addEventListener ('error', (event) => {reject (event);}, false);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Clear the entire space\n\t *\n\t * @return {Promise} - Result of the clear operation\n\t */\n\tclear () {\n\t\treturn this.open ().then (() => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tconst transaction = this.storage.transaction (this.store, 'readwrite').objectStore (this.store);\n\t\t\t\tconst op = transaction.clear ();\n\t\t\t\top.addEventListener ('success', () => {resolve ();}, false);\n\t\t\t\top.addEventListener ('error', (event) => {reject (event);}, false);\n\t\t\t});\n\t\t});\n\t}\n}","/**\n* ==============================\n* Remote Storage Adapter\n* ==============================\n*/\n\nimport { Request } from './../Request';\n\n/**\n * The Remote Storage Adapter provides the Space Class the ability to interact\n * with a server in order to handle data persistance. The server's implementation\n * is up to the developer but it will need to respond to this adapter's request\n * formatting. This adapter uses the Request class to perfom its tasks.\n *\n * @class\n */\nexport class RemoteStorage {\n\n\t/**\n\t * Create a new Remote Storage. This adapter requires an endpoint url where\n\t * it will make the requests. If a store is defined, the request will be made\n\t * using the store as an URL, for example, let's assume the following endpoint:\n\t *\n\t * https://example.com/api/v1/\n\t *\n\t * If no store is defined, then the requests will be made to that simple route,\n\t * with a store definition, requests will be made to:\n\t *\n\t *  https://example.com/api/v1/{myStore}/\n\t *\n\t * The key of each item in this store represents another part of the request\n\t *\n\t * https://example.com/api/v1/{key}/\n\t *\n\t * Or:\n\t *\n\t * https://example.com/api/v1/{myStore}/{key}/\n\t *\n\t * This adapter just as the IndexedDB, works with JSON objects instead of string or\n\t * numeric values.\n\t *\n\t * @constructor\n\t * @param {object} [configuration={name = '', version = '', store = '', endpoint = '', props = {}] - Configuration Object for the Adapter\n\t * @param {string} configuration.name - Name of the Space\n\t * @param {string} configuration.version - Version of the Space in Semantic versioning syntax\n\t * @param {string} configuration.store - Name of the Object Store to use\n\t * @param {string} configuration.endpoint - Endpoint URL where the requests will be made\n\t * @param {string} configuration.props - Properties object to use for the fetch requests\n\t */\n\tconstructor ({name = '', version = '', store = '', endpoint = '', props = {}}) {\n\t\tthis.name = name;\n\t\tthis.version = version;\n\t\tthis.store = store;\n\t\tthis.endpoint = `${endpoint}${store}/`;\n\t\tthis.props = props;\n\t}\n\n\t/**\n\t * Open the Storage Object\n\t *\n\t * @return {Promise<RemoteStorage>}\n\t */\n\topen () {\n\t\tif (typeof this.storage === 'undefined') {\n\t\t\tthis.storage = Request;\n\t\t}\n\t\treturn Promise.resolve (this);\n\t}\n\n\t/**\n\t * Store a key-value pair. This function sends a POST request to the server\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object} value - Value to save\n\t * @return {Promise<Response>}\n\t */\n\tset (key, value) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn this.storage.post (this.endpoint + key, value, this.props);\n\t\t});\n\t}\n\n\t/**\n\t * Update a key-value pair. In difference with the set () method, the update\n\t * method will use an Object.assign () in the case of objects so no value is\n\t * lost. This function sends a PUT request to the server.\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object} value - Value to save\n\t * @return {Promise<Object>}\n\t */\n\tupdate (key, value) {\n\t\treturn this.get (key).then ((currentValue) => {\n\t\t\treturn this.storage.put (this.endpoint + key, Object.assign ({}, currentValue, value), this.props).then ((response) => {\n\t\t\t\treturn response.json ();\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves a value from storage given it's key\n\t *\n\t * @param  {string} - Key with which the value was saved\n\t * @return {Promise<Object>} - Resolves to the retreived value or its rejected\n\t * if it doesn't exist\n\t */\n\tget (key) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn this.storage.json (this.endpoint + key, {}, this.props);\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves all the values in the space in a key-value JSON object\n\t *\n\t * @return {Promise<Object>} - Resolves to the retreived values\n\t */\n\tgetAll () {\n\t\treturn this.open ().then (() => {\n\t\t\treturn this.storage.json (this.endpoint, {}, this.props);\n\t\t});\n\t}\n\n\t/**\n\t * Check if a space contains a given key.\n\t *\n\t * @param  {string} key - Key to look for.\n\t * @return {Promise} Promise gets resolved if it exists and rejected if it\n\t * doesn't\n\t */\n\tcontains (key) {\n\t\treturn this.keys ().then ((keys) => {\n\t\t\tif (keys.includes (key)) {\n\t\t\t\tPromise.resolve ();\n\t\t\t} else {\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Upgrading the Storage must be done on the server side, therefore this function\n\t * always gets rejected.\n\t *\n\t * @returns {Promise}\n\t */\n\tupgrade () {\n\t\treturn Promise.reject ();\n\t}\n\n\t/**\n\t * Renaming the Storage must be done on the server side, therefore this function\n\t * always gets rejected.\n\t *\n\t * @returns {Promise}\n\t */\n\trename () {\n\t\treturn Promise.reject ();\n\t}\n\n\t/**\n\t * Getting a key by its index is not possible in this adapter, therefore this\n\t * function always gets rejected.\n\t *\n\t * @return {Promise} - Promise Rejection\n\t */\n\tkey () {\n\t\treturn Promise.reject ();\n\t}\n\n\t/**\n\t * Return all keys stored in the space. This makes a GET request to the full\n\t * endpoint (the URL of the endpoint and store name) with a keys query\n\t * parameter:\n\t *\n\t * https://example.com/api/v1/?keys=true\n \t *\n\t * Or:\n \t *\n \t * https://example.com/api/v1/{myStore}/?keys=true\n\t *\n\t * @return {Promise<string[]>} - Array of keys\n\t */\n\tkeys () {\n\t\treturn this.open ().then (() => {\n\t\t\treturn this.storage.json (this.endpoint, {keys: true}, this.props);\n\t\t});\n\t}\n\n\t/**\n\t * Delete a value from the space given it's key. This function sends a DELETE\n\t * request to the server.\n\t *\n\t * @param  {string} key - Key of the item to delete\n\t * @return {Promise<key, value>} - Resolves to the key and value of the deleted object\n\t */\n\tremove (key) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn this.storage.delete (this.endpoint + key, {}, this.props).then ((response) => {\n\t\t\t\treturn Promise.resolve (key, response.json ());\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Clear the entire space. This function sends a DELETE request to the server.\n\t * The difference between a clear () and remove () operation is that the clear\n\t * operation does not uses a key in the URL where the request is made.\n\t *\n\t * @return {Promise} - Result of the clear operation\n\t */\n\tclear () {\n\t\treturn this.open ().then (() => {\n\t\t\treturn this.storage.delete (this.endpoint, {}, this.props);\n\t\t});\n\t}\n}","/**\n* ==============================\n* Space\n* ==============================\n*/\n\nimport { LocalStorage } from './SpaceAdapter/LocalStorage';\nimport { SessionStorage } from './SpaceAdapter/SessionStorage';\nimport { IndexedDB } from './SpaceAdapter/IndexedDB';\nimport { RemoteStorage } from './SpaceAdapter/RemoteStorage';\n\n/**\n * List of Adapters Available\n */\nexport const SpaceAdapter = {\n\tLocalStorage,\n\tSessionStorage,\n\tIndexedDB,\n\tRemoteStorage\n};\n\n/**\n * Space provides a simple wrapper for different Storage APIs. It aims to\n * provide data independence through storage namespaces and versioning, allowing\n * transparent data formatting and content modifications through versions.\n *\n * While this class documentation provides some information, specific details may\n * be addressed on the documentation of each adapter.\n *\n * @class\n */\nexport class Space {\n\n\t/**\n\t * Create a new Space Object. If no name and version is defined, the global LocalSpace space is used.\n\t *\n\t * @constructor\n\t * @param {SpaceAdapter} [adapter = SpaceAdapter.LocalStorage] - Space Adapter\n\t * to use. Currently LocalStorage, SessionStorage, IndexedDB and Server are\n\t * available\n\t * @param {Object} [configuration = {}] - Configuration object for the space.\n\t * This configuration may change depending on the adapter used, however all\n\t * adapters have support for a name, version and store properties.\n\t * @param {string} configuration.name - Name of the Space\n\t * @param {string} configuration.version - Version of the Space in Semantic versioning syntax\n\t * @param {string} configuration.store - Name of the Object Store to use\n\t */\n\tconstructor (adapter = SpaceAdapter.LocalStorage, configuration = {}) {\n\t\t// Assign the provided configuration to the default one\n\t\tthis._configuration = Object.assign ({}, {name: '', version: '', store: ''}, configuration);\n\n\t\t// Set up the adapter instance to use\n\t\tthis.adapter = new adapter (this._configuration);\n\n\t\t// This object stores all the callbacks the user can define for the\n\t\t// space operations\n\t\tthis.callbacks = {\n\t\t\t'create': [],\n\t\t\t'update': [],\n\t\t\t'delete': []\n\t\t};\n\n\t\t// A transformation is an object that can contain a set and get functions\n\t\t// every transformation will be applied to the retrieved value or to the\n\t\t// value before storing it.\n\t\tthis.transformations = {\n\n\t\t};\n\t}\n\n\t/**\n\t * Modify the space configuration, it will also be passed down to the adapter\n\t * using its configuration () function.\n\t *\n\t * @param  {object} - Configuration object to set up\n\t * @return {object} - Configuration object if no param was passed\n\t */\n\tconfiguration (object = null) {\n\t\tif (object !== null) {\n\t\t\tthis._configuration = Object.assign ({}, this._configuration, object);\n\t\t\tthis.adapter.configuration (object);\n\t\t} else {\n\t\t\treturn this._configuration;\n\t\t}\n\t}\n\n\t/**\n\t * Open the Storage Object to be used depending on the SpaceAdapter\n\t *\n\t * @return {Promise}\n\t */\n\topen () {\n\t\treturn this.adapter.open ().then (() => {\n\t\t\treturn Promise.resolve (this);\n\t\t});\n\t}\n\n\t/**\n\t * Store a key-value pair\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object|string|Number} - Value to save\n\t * @return {Promise<{key, value}>}\n\t */\n\tset (key, value) {\n\t\t// Apply all set transformations to the value\n\t\tfor (const id of Object.keys (this.transformations)) {\n\t\t\tif (typeof this.transformations[id].set === 'function') {\n\t\t\t\tvalue = this.transformations[id].set.call (null, key, value);\n\t\t\t}\n\t\t}\n\n\t\treturn this.adapter.set (key, value).then (({key, value}) => {\n\t\t\tfor (const callback of this.callbacks.create) {\n\t\t\t\tcallback.call (null, key, value);\n\t\t\t}\n\t\t\treturn Promise.resolve ({key, value});\n\t\t});\n\t}\n\n\t/**\n\t * Update a key-value pair. In difference with the set () method, the update\n\t * method will use an Object.assign () in the case of objects so no value is\n\t * lost.\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object|string|Number} - Value to save\n\t * @return {Promise<{key, value}>}\n\t */\n\tupdate (key, value) {\n\t\t// Apply all set transformations to the value\n\t\tfor (const id of Object.keys (this.transformations)) {\n\t\t\tif (typeof this.transformations[id].set === 'function') {\n\t\t\t\tvalue = this.transformations[id].set.call (null, key, value);\n\t\t\t}\n\t\t}\n\n\t\treturn this.adapter.update (key, value).then (({key, value}) => {\n\t\t\tfor (const callback of this.callbacks.update) {\n\t\t\t\tcallback.call (null, key, value);\n\t\t\t}\n\t\t\treturn Promise.resolve ({key, value});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves a value from storage given it's key\n\t *\n\t * @param  {string} - Key with which the value was saved\n\t * @return {Promise<Object>|Promise<string>|Promise<Number>} - Resolves to the retreived value\n\t * or its rejected if it doesn't exist.\n\t */\n\tget (key) {\n\t\treturn this.adapter.get (key).then ((value) => {\n\t\t\t// Apply all get transformations to the value\n\t\t\tfor (const id of Object.keys (this.transformations)) {\n\t\t\t\tif (typeof this.transformations[id].get === 'function') {\n\t\t\t\t\tvalue = this.transformations[id].get.call (null, key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves all the values in the space in a key-value JSON object\n\t *\n\t * @return {Promise<Object>} - Resolves to the retreived values\n\t */\n\tgetAll () {\n\t\treturn this.adapter.getAll ().then ((values) => {\n\t\t\t// Apply all get transformations to the value\n\t\t\tfor (const key of Object.keys (values)) {\n\t\t\t\tfor (const id of Object.keys (this.transformations)) {\n\t\t\t\t\tif (typeof this.transformations[id].get === 'function') {\n\t\t\t\t\t\tvalues[key] = this.transformations[id].get.call (null, key, values[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t});\n\t}\n\n\t/**\n\t * Iterate over every value in the space\n\t *\n\t * @param  {function (key, value)} callback - A callback function receiving the\n\t * key and value of a value. Must return a callback\n\t * @return {Promise} - Resolves when all callbacks have been resolved.\n\t */\n\teach (callback) {\n\t\treturn this.getAll ().then ((values) => {\n\t\t\tconst promises = [];\n\t\t\tfor (const i of Object.keys (values)) {\n\t\t\t\tpromises.push (callback.call (this, i, values[i]));\n\t\t\t}\n\t\t\treturn Promise.all (promises);\n\t\t});\n\t}\n\n\t/**\n\t * Check if a space contains a given key. Not all adapters may give this information\n\t *\n\t * @param  {string} key - Key to look for.\n\t * @return {Promise} - Promise gets resolved if it exists and rejected if\n\t * doesn't\n\t */\n\tcontains (key) {\n\t\treturn this.adapter.contains (key);\n\t}\n\n\t/**\n\t * Upgrade a Space Version. Not all adapters may provide this functionality\n\t *\n\t * @param oldVersion {string} - The version of the storage to be upgraded\n\t * @param newVersion {string} - The version to be upgraded to\n\t * @param callback {function} - Function to transform the old stored values to the new version's format\n\t *\n\t * @returns {Promise} - Result of the upgrade operation\n\t */\n\tupgrade (oldVersion, newVersion, callback) {\n\t\treturn this.adapter.upgrade (oldVersion, newVersion, callback).then (() => {\n\t\t\treturn Promise.resolve (this);\n\t\t});\n\t}\n\n\t/**\n\t * Rename a Space. Not all adapters may provide this functionality\n\t *\n\t * @param {string} name - New name to be used.\n\t * @returns {Promise} Result of the rename operation\n\t */\n\trename (name) {\n\t\treturn this.adapter.rename (name);\n\t}\n\n\t/**\n\t * Add a callback function to be run every time a value is created.\n\t *\n\t * @param  {function (key, value)} callback - Callback Function. Key and Value pair will be sent as parameters when run.\n\t */\n\tonCreate (callback) {\n\t\tthis.callbacks.create.push (callback);\n\t}\n\n\t/**\n\t * Add a callback function to be run every time a value is updated.\n\t *\n\t * @param  {function (key, value)} callback - Callback Function. Key and Value pair will be sent as parameters when run.\n\t */\n\tonUpdate (callback) {\n\t\tthis.callbacks.update.push (callback);\n\t}\n\n\t/**\n\t * Add a callback function to be run every time a value is deleted.\n\t *\n\t * @param  {function (key, value)} callback - Callback Function. Key and Value pair will be sent as parameters when run.\n\t */\n\tonDelete (callback) {\n\t\tthis.callbacks.delete.push (callback);\n\t}\n\n\t/**\n\t * Add a transformation function to the space.\n\t *\n\t * @param  {string} id - Unique transformation name or identifier\n\t * @param  {function (key, value)|null} get - Transformation function to apply to the content before\n\t * returning the value when using the get () function .\n\t * @param  {function (key, value)|null} set - Transformation function to apply to the content before\n\t * saving it when using the set () function befo.\n\t */\n\taddTransformation ({id, get, set}) {\n\t\tthis.transformations[id] = {\n\t\t\tid,\n\t\t\tget,\n\t\t\tset\n\t\t};\n\t}\n\n\t/**\n\t * Remove a transformation function given its id\n\t *\n\t * @param  {string} id - Name or identifier of the transformation to remove\n\t */\n\tremoveTransformation (id) {\n\t\tdelete this.transformations[id];\n\t}\n\n\t/**\n\t * Get the key that corresponds to a given index in the storage. Not all adapters may provide this functionality\n\t *\n\t * @param  {Number} index - Index to get the key from\n\t * @param  {boolean} [full = false] - Whether to return the full key name including space id or just the key name\n\t * @return {Promise<string>} - Resolves to the key's name\n\t */\n\tkey (index, full = false) {\n\t\treturn this.adapter.key (index, full);\n\t}\n\n\t/**\n\t * Return all keys stored in the space. Not all adapters may provide this functionality\n\t *\n\t * @param {boolean} [full = false] - Whether to return the full key name including space id or just the key name\n\t * @return {Promise<string[]>} - Array of keys\n\t */\n\tkeys (full = false) {\n\t\treturn this.adapter.keys (full);\n\t}\n\n\t/**\n\t * Delete a value from the space given it's key\n\t *\n\t * @param  {string} key - Key of the item to delete\n\t * @return {Promise<key, value>} - Resolves to the key and value of the deleted object\n\t */\n\tremove (key) {\n\t\treturn this.adapter.remove (key).then ((value) => {\n\t\t\t// Run the callback for deletions\n\t\t\tfor (const callback of this.callbacks.delete) {\n\t\t\t\tcallback.call (null, key, value);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Clear the entire space\n\t *\n\t * @return {Promise} - Result of the clear operation\n\t */\n\tclear () {\n\t\treturn this.adapter.clear ();\n\t}\n}","/**\n* ==============================\n* Text\n* ==============================\n*/\n\n/**\n * Provides utility functions for texts\n * @class\n */\nexport class Text {\n\n\t/**\n\t * @static capitalize - Capatalizes every word in a string\n\t *\n\t * @param  {string} text - Text string to capitalize\n\t * @return {string} - Capitalized string\n\t */\n\tstatic capitalize (text) {\n\t\treturn text.replace (/\\w\\S*/g, (txt) => {\n\t\t\treturn txt.charAt (0).toUpperCase () + txt.substr (1).toLowerCase ();\n\t\t});\n\t}\n\n\t/**\n\t * @static suffix - Gets the suffix of a string given a key\n\t *\n\t * @param  {string} key - Key part of the string\n\t * @param  {string} text - Full string to extract the suffix from\n\t * @return {string} - Suffix\n\t */\n\tstatic suffix (key, text) {\n\t\tlet suffix = '';\n\t\tlet position = text.indexOf (key);\n\t\tif (position !== -1) {\n\t\t\tposition += key.length;\n\t\t\tsuffix = text.substr (position, text.length - position);\n\t\t}\n\t\treturn suffix;\n\t}\n\n\n\t/**\n\t * @static selection - Get the currently selected text\n\t *\n\t * @return {string} - Text selection\n\t */\n\tstatic selection () {\n\t\tif (window.getSelection) {\n\t\t\treturn window.getSelection ().toString ();\n\t\t} else if (document.selection && document.selection.type != 'Control') {\n\t\t\treturn document.selection.createRange ().text;\n\t\t}\n\t}\n\n\t/**\n\t * @static prefix - Gets the prefix of a string given a key\n\t *\n\t * @param  {string} key - Key part of the string\n\t * @param  {string} text - Full string to extract the prefix from\n\t * @return {string} - Prefix\n\t */\n\tstatic prefix (key, text) {\n\t\tlet prefix = '';\n\t\tconst position = text.indexOf (key);\n\t\tif (position != -1) {\n\t\t\tprefix = text.substr (0, position);\n\t\t}\n\t\treturn prefix;\n\t}\n\n\t/**\n\t * @static friendly - Transforms a given text into a friendly URL string replacing all special characters\n\t *\n\t * @param  {string} text - The text to build the url from\n\t * @return {string} - Friendly URL\n\t */\n\tstatic friendly (text) {\n\t\tconst regex = [\n\t\t\t/[áàâãªä]/,\n\t\t\t/[ÁÀÂÃÄ]/,\n\t\t\t/[ÍÌÎÏ]/,\n\t\t\t/[íìîï]/,\n\t\t\t/[éèêë]/,\n\t\t\t/[ÉÈÊË]/,\n\t\t\t/[óòôõºö]/,\n\t\t\t/[ÓÒÔÕÖ]/,\n\t\t\t/[úùûü]/,\n\t\t\t/[ÚÙÛÜ]/,\n\t\t\t/ç/,\n\t\t\t/Ç/,\n\t\t\t/ñ/,\n\t\t\t/Ñ/,\n\t\t\t/_/,\n\t\t\t/[’‘‹›<>']/,\n\t\t\t/[“”«»„\"]/,\n\t\t\t/[(){}[\\]]/,\n\t\t\t/[?¿!¡#$%&^*´`~/°|]/,\n\t\t\t/[,.:;]/,\n\t\t\t/ /\n\t\t];\n\n\t\tconst replacements = [\n\t\t\t'a',\n\t\t\t'A',\n\t\t\t'I',\n\t\t\t'i',\n\t\t\t'e',\n\t\t\t'E',\n\t\t\t'o',\n\t\t\t'O',\n\t\t\t'u',\n\t\t\t'U',\n\t\t\t'c',\n\t\t\t'C',\n\t\t\t'n',\n\t\t\t'N',\n\t\t\t'-',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'-'\n\t\t];\n\n\t\tfor (const index in regex) {\n\t\t\ttext = text.replace(new RegExp(regex[index], 'g'), replacements[index]);\n\t\t}\n\n\t\treturn text;\n\t}\n}","/**\n* ==============================\n* Util\n* ==============================\n*/\n\n/**\n * Provides diverse utility functions\n * @class\n */\nexport class Util {\n\n\n\t/**\n\t * @static callAsync - Calls any function using promises to keep a standard\n\t * behavior between async and sync functions.\n\t *\n\t * @param  {funcion} callable - The function to run\n\t * @param  {Object} context - The object `this` will be mapped to\n\t * @param  {any} ...args - List of parameters to pass to the function when called\n\t * @return {Promise} - A promise that resolves to the result of the function\n\t */\n\tstatic callAsync (callable, context, ...args) {\n\t\ttry {\n\t\t\t// Call the provided function using the context and arguments given\n\t\t\tconst result = callable.apply (context, args);\n\n\t\t\t// Check if the function returned a simple value or a Promise\n\t\t\tif (result instanceof Promise) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve (result);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn Promise.reject (e);\n\t\t}\n\t}\n\n\t/**\n\t * @static uuid - Creates a UUID. This UUIDs should not be trusted for uniqueness\n\t *\n\t * @return {string} - Generated UUID\n\t */\n\tstatic uuid () {\n\t\tif (window.crypto) {\n\t\t\treturn ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, (c) =>\n\t\t\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString (16)\n\t\t\t);\n\t\t} else {\n\t\t\tconst generate = () => Math.floor ((1 + Math.random()) * 0x10000).toString (16).substring (1);\n\t\t\treturn generate () + generate () + '-' + generate () + '-' + generate () + '-' +\n\t\t\tgenerate () + '-' + generate () + generate () + generate ();\n\t\t}\n\t}\n}","export * from './src/Debug';\nexport * from './src/DOM';\nexport * from './src/FileSystem';\nexport * from './src/Form';\nexport * from './src/Platform';\nexport * from './src/Preload';\nexport * from './src/Request';\nexport * from './src/Space';\nexport * from './src/Text';\nexport * from './src/Util';","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.9\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos >= curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing all strings\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* -----------------------------------------------\n/* Author : Vincent Garreau  - vincentgarreau.com\n/* MIT license: http://opensource.org/licenses/MIT\n/* Demo / Generator : vincentgarreau.com/particles.js\n/* GitHub : github.com/VincentGarreau/particles.js\n/* How to use? : Check the GitHub README\n/* v2.0.0\n/* ----------------------------------------------- */\n\nvar pJS = function(tag_id, params){\n\n  var canvas_el = document.querySelector('#'+tag_id+' > .particles-js-canvas-el');\n\n  /* particles.js variables with default values */\n  this.pJS = {\n    canvas: {\n      el: canvas_el,\n      w: canvas_el.offsetWidth,\n      h: canvas_el.offsetHeight\n    },\n    particles: {\n      number: {\n        value: 400,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      },\n      color: {\n        value: '#fff'\n      },\n      shape: {\n        type: 'circle',\n        stroke: {\n          width: 0,\n          color: '#ff0000'\n        },\n        polygon: {\n          nb_sides: 5\n        },\n        image: {\n          src: '',\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 1,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 2,\n          opacity_min: 0,\n          sync: false\n        }\n      },\n      size: {\n        value: 20,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 20,\n          size_min: 0,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: true,\n        distance: 100,\n        color: '#fff',\n        opacity: 1,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 2,\n        direction: 'none',\n        random: false,\n        straight: false,\n        out_mode: 'out',\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 3000,\n          rotateY: 3000\n        }\n      },\n      array: []\n    },\n    interactivity: {\n      detect_on: 'canvas',\n      events: {\n        onhover: {\n          enable: true,\n          mode: 'grab'\n        },\n        onclick: {\n          enable: true,\n          mode: 'push'\n        },\n        resize: true\n      },\n      modes: {\n        grab:{\n          distance: 100,\n          line_linked:{\n            opacity: 1\n          }\n        },\n        bubble:{\n          distance: 200,\n          size: 80,\n          duration: 0.4\n        },\n        repulse:{\n          distance: 200,\n          duration: 0.4\n        },\n        push:{\n          particles_nb: 4\n        },\n        remove:{\n          particles_nb: 2\n        }\n      },\n      mouse:{}\n    },\n    retina_detect: false,\n    fn: {\n      interact: {},\n      modes: {},\n      vendors:{}\n    },\n    tmp: {}\n  };\n\n  var pJS = this.pJS;\n\n  /* params settings */\n  if(params){\n    Object.deepExtend(pJS, params);\n  }\n\n  pJS.tmp.obj = {\n    size_value: pJS.particles.size.value,\n    size_anim_speed: pJS.particles.size.anim.speed,\n    move_speed: pJS.particles.move.speed,\n    line_linked_distance: pJS.particles.line_linked.distance,\n    line_linked_width: pJS.particles.line_linked.width,\n    mode_grab_distance: pJS.interactivity.modes.grab.distance,\n    mode_bubble_distance: pJS.interactivity.modes.bubble.distance,\n    mode_bubble_size: pJS.interactivity.modes.bubble.size,\n    mode_repulse_distance: pJS.interactivity.modes.repulse.distance\n  };\n\n\n  pJS.fn.retinaInit = function(){\n\n    if(pJS.retina_detect && window.devicePixelRatio > 1){\n      pJS.canvas.pxratio = window.devicePixelRatio; \n      pJS.tmp.retina = true;\n    } \n    else{\n      pJS.canvas.pxratio = 1;\n      pJS.tmp.retina = false;\n    }\n\n    pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;\n    pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;\n\n    pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio;\n    pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio;\n    pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio;\n    pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio;\n    pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio;\n    pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio;\n    pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio;\n    pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio;\n    pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio;\n\n  };\n\n\n\n  /* ---------- pJS functions - canvas ------------ */\n\n  pJS.fn.canvasInit = function(){\n    pJS.canvas.ctx = pJS.canvas.el.getContext('2d');\n  };\n\n  pJS.fn.canvasSize = function(){\n\n    pJS.canvas.el.width = pJS.canvas.w;\n    pJS.canvas.el.height = pJS.canvas.h;\n\n    if(pJS && pJS.interactivity.events.resize){\n\n      window.addEventListener('resize', function(){\n\n          pJS.canvas.w = pJS.canvas.el.offsetWidth;\n          pJS.canvas.h = pJS.canvas.el.offsetHeight;\n\n          /* resize canvas */\n          if(pJS.tmp.retina){\n            pJS.canvas.w *= pJS.canvas.pxratio;\n            pJS.canvas.h *= pJS.canvas.pxratio;\n          }\n\n          pJS.canvas.el.width = pJS.canvas.w;\n          pJS.canvas.el.height = pJS.canvas.h;\n\n          /* repaint canvas on anim disabled */\n          if(!pJS.particles.move.enable){\n            pJS.fn.particlesEmpty();\n            pJS.fn.particlesCreate();\n            pJS.fn.particlesDraw();\n            pJS.fn.vendors.densityAutoParticles();\n          }\n\n        /* density particles enabled */\n        pJS.fn.vendors.densityAutoParticles();\n\n      });\n\n    }\n\n  };\n\n\n  pJS.fn.canvasPaint = function(){\n    pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  };\n\n  pJS.fn.canvasClear = function(){\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  };\n\n\n  /* --------- pJS functions - particles ----------- */\n\n  pJS.fn.particle = function(color, opacity, position){\n\n    /* size */\n    this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value;\n    if(pJS.particles.size.anim.enable){\n      this.size_status = false;\n      this.vs = pJS.particles.size.anim.speed / 100;\n      if(!pJS.particles.size.anim.sync){\n        this.vs = this.vs * Math.random();\n      }\n    }\n\n    /* position */\n    this.x = position ? position.x : Math.random() * pJS.canvas.w;\n    this.y = position ? position.y : Math.random() * pJS.canvas.h;\n\n    /* check position  - into the canvas */\n    if(this.x > pJS.canvas.w - this.radius*2) this.x = this.x - this.radius;\n    else if(this.x < this.radius*2) this.x = this.x + this.radius;\n    if(this.y > pJS.canvas.h - this.radius*2) this.y = this.y - this.radius;\n    else if(this.y < this.radius*2) this.y = this.y + this.radius;\n\n    /* check position - avoid overlap */\n    if(pJS.particles.move.bounce){\n      pJS.fn.vendors.checkOverlap(this, position);\n    }\n\n    /* color */\n    this.color = {};\n    if(typeof(color.value) == 'object'){\n\n      if(color.value instanceof Array){\n        var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];\n        this.color.rgb = hexToRgb(color_selected);\n      }else{\n        if(color.value.r != undefined && color.value.g != undefined && color.value.b != undefined){\n          this.color.rgb = {\n            r: color.value.r,\n            g: color.value.g,\n            b: color.value.b\n          }\n        }\n        if(color.value.h != undefined && color.value.s != undefined && color.value.l != undefined){\n          this.color.hsl = {\n            h: color.value.h,\n            s: color.value.s,\n            l: color.value.l\n          }\n        }\n      }\n\n    }\n    else if(color.value == 'random'){\n      this.color.rgb = {\n        r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)\n      }\n    }\n    else if(typeof(color.value) == 'string'){\n      this.color = color;\n      this.color.rgb = hexToRgb(this.color.value);\n    }\n\n    /* opacity */\n    this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value;\n    if(pJS.particles.opacity.anim.enable){\n      this.opacity_status = false;\n      this.vo = pJS.particles.opacity.anim.speed / 100;\n      if(!pJS.particles.opacity.anim.sync){\n        this.vo = this.vo * Math.random();\n      }\n    }\n\n    /* animation - velocity for speed */\n    var velbase = {}\n    switch(pJS.particles.move.direction){\n      case 'top':\n        velbase = { x:0, y:-1 };\n      break;\n      case 'top-right':\n        velbase = { x:0.5, y:-0.5 };\n      break;\n      case 'right':\n        velbase = { x:1, y:-0 };\n      break;\n      case 'bottom-right':\n        velbase = { x:0.5, y:0.5 };\n      break;\n      case 'bottom':\n        velbase = { x:0, y:1 };\n      break;\n      case 'bottom-left':\n        velbase = { x:-0.5, y:1 };\n      break;\n      case 'left':\n        velbase = { x:-1, y:0 };\n      break;\n      case 'top-left':\n        velbase = { x:-0.5, y:-0.5 };\n      break;\n      default:\n        velbase = { x:0, y:0 };\n      break;\n    }\n\n    if(pJS.particles.move.straight){\n      this.vx = velbase.x;\n      this.vy = velbase.y;\n      if(pJS.particles.move.random){\n        this.vx = this.vx * (Math.random());\n        this.vy = this.vy * (Math.random());\n      }\n    }else{\n      this.vx = velbase.x + Math.random()-0.5;\n      this.vy = velbase.y + Math.random()-0.5;\n    }\n\n    // var theta = 2.0 * Math.PI * Math.random();\n    // this.vx = Math.cos(theta);\n    // this.vy = Math.sin(theta);\n\n    this.vx_i = this.vx;\n    this.vy_i = this.vy;\n\n    \n\n    /* if shape is image */\n\n    var shape_type = pJS.particles.shape.type;\n    if(typeof(shape_type) == 'object'){\n      if(shape_type instanceof Array){\n        var shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\n        this.shape = shape_selected;\n      }\n    }else{\n      this.shape = shape_type;\n    }\n\n    if(this.shape == 'image'){\n      var sh = pJS.particles.shape;\n      this.img = {\n        src: sh.image.src,\n        ratio: sh.image.width / sh.image.height\n      }\n      if(!this.img.ratio) this.img.ratio = 1;\n      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg != undefined){\n        pJS.fn.vendors.createSvgImg(this);\n        if(pJS.tmp.pushing){\n          this.img.loaded = false;\n        }\n      }\n    }\n\n    \n\n  };\n\n\n  pJS.fn.particle.prototype.draw = function() {\n\n    var p = this;\n\n    if(p.radius_bubble != undefined){\n      var radius = p.radius_bubble; \n    }else{\n      var radius = p.radius;\n    }\n\n    if(p.opacity_bubble != undefined){\n      var opacity = p.opacity_bubble;\n    }else{\n      var opacity = p.opacity;\n    }\n\n    if(p.color.rgb){\n      var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+opacity+')';\n    }else{\n      var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+opacity+')';\n    }\n\n    pJS.canvas.ctx.fillStyle = color_value;\n    pJS.canvas.ctx.beginPath();\n\n    switch(p.shape){\n\n      case 'circle':\n        pJS.canvas.ctx.arc(p.x, p.y, radius, 0, Math.PI * 2, false);\n      break;\n\n      case 'edge':\n        pJS.canvas.ctx.rect(p.x-radius, p.y-radius, radius*2, radius*2);\n      break;\n\n      case 'triangle':\n        pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x-radius, p.y+radius / 1.66, radius*2, 3, 2);\n      break;\n\n      case 'polygon':\n        pJS.fn.vendors.drawShape(\n          pJS.canvas.ctx,\n          p.x - radius / (pJS.particles.shape.polygon.nb_sides/3.5), // startX\n          p.y - radius / (2.66/3.5), // startY\n          radius*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n          1 // sideCountDenominator\n        );\n      break;\n\n      case 'star':\n        pJS.fn.vendors.drawShape(\n          pJS.canvas.ctx,\n          p.x - radius*2 / (pJS.particles.shape.polygon.nb_sides/4), // startX\n          p.y - radius / (2*2.66/3.5), // startY\n          radius*2*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n          2 // sideCountDenominator\n        );\n      break;\n\n      case 'image':\n\n        function draw(){\n          pJS.canvas.ctx.drawImage(\n            img_obj,\n            p.x-radius,\n            p.y-radius,\n            radius*2,\n            radius*2 / p.img.ratio\n          );\n        }\n\n        if(pJS.tmp.img_type == 'svg'){\n          var img_obj = p.img.obj;\n        }else{\n          var img_obj = pJS.tmp.img_obj;\n        }\n\n        if(img_obj){\n          draw();\n        }\n\n      break;\n\n    }\n\n    pJS.canvas.ctx.closePath();\n\n    if(pJS.particles.shape.stroke.width > 0){\n      pJS.canvas.ctx.strokeStyle = pJS.particles.shape.stroke.color;\n      pJS.canvas.ctx.lineWidth = pJS.particles.shape.stroke.width;\n      pJS.canvas.ctx.stroke();\n    }\n    \n    pJS.canvas.ctx.fill();\n    \n  };\n\n\n  pJS.fn.particlesCreate = function(){\n    for(var i = 0; i < pJS.particles.number.value; i++) {\n      pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value));\n    }\n  };\n\n  pJS.fn.particlesUpdate = function(){\n\n    for(var i = 0; i < pJS.particles.array.length; i++){\n\n      /* the particle */\n      var p = pJS.particles.array[i];\n\n      // var d = ( dx = pJS.interactivity.mouse.click_pos_x - p.x ) * dx + ( dy = pJS.interactivity.mouse.click_pos_y - p.y ) * dy;\n      // var f = -BANG_SIZE / d;\n      // if ( d < BANG_SIZE ) {\n      //     var t = Math.atan2( dy, dx );\n      //     p.vx = f * Math.cos(t);\n      //     p.vy = f * Math.sin(t);\n      // }\n\n      /* move the particle */\n      if(pJS.particles.move.enable){\n        var ms = pJS.particles.move.speed/2;\n        p.x += p.vx * ms;\n        p.y += p.vy * ms;\n      }\n\n      /* change opacity status */\n      if(pJS.particles.opacity.anim.enable) {\n        if(p.opacity_status == true) {\n          if(p.opacity >= pJS.particles.opacity.value) p.opacity_status = false;\n          p.opacity += p.vo;\n        }else {\n          if(p.opacity <= pJS.particles.opacity.anim.opacity_min) p.opacity_status = true;\n          p.opacity -= p.vo;\n        }\n        if(p.opacity < 0) p.opacity = 0;\n      }\n\n      /* change size */\n      if(pJS.particles.size.anim.enable){\n        if(p.size_status == true){\n          if(p.radius >= pJS.particles.size.value) p.size_status = false;\n          p.radius += p.vs;\n        }else{\n          if(p.radius <= pJS.particles.size.anim.size_min) p.size_status = true;\n          p.radius -= p.vs;\n        }\n        if(p.radius < 0) p.radius = 0;\n      }\n\n      /* change particle position if it is out of canvas */\n      if(pJS.particles.move.out_mode == 'bounce'){\n        var new_pos = {\n          x_left: p.radius,\n          x_right:  pJS.canvas.w,\n          y_top: p.radius,\n          y_bottom: pJS.canvas.h\n        }\n      }else{\n        var new_pos = {\n          x_left: -p.radius,\n          x_right: pJS.canvas.w + p.radius,\n          y_top: -p.radius,\n          y_bottom: pJS.canvas.h + p.radius\n        }\n      }\n\n      if(p.x - p.radius > pJS.canvas.w){\n        p.x = new_pos.x_left;\n        p.y = Math.random() * pJS.canvas.h;\n      }\n      else if(p.x + p.radius < 0){\n        p.x = new_pos.x_right;\n        p.y = Math.random() * pJS.canvas.h;\n      }\n      if(p.y - p.radius > pJS.canvas.h){\n        p.y = new_pos.y_top;\n        p.x = Math.random() * pJS.canvas.w;\n      }\n      else if(p.y + p.radius < 0){\n        p.y = new_pos.y_bottom;\n        p.x = Math.random() * pJS.canvas.w;\n      }\n\n      /* out of canvas modes */\n      switch(pJS.particles.move.out_mode){\n        case 'bounce':\n          if (p.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n          else if (p.x - p.radius < 0) p.vx = -p.vx;\n          if (p.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n          else if (p.y - p.radius < 0) p.vy = -p.vy;\n        break;\n      }\n\n      /* events */\n      if(isInArray('grab', pJS.interactivity.events.onhover.mode)){\n        pJS.fn.modes.grabParticle(p);\n      }\n\n      if(isInArray('bubble', pJS.interactivity.events.onhover.mode) || isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n        pJS.fn.modes.bubbleParticle(p);\n      }\n\n      if(isInArray('repulse', pJS.interactivity.events.onhover.mode) || isInArray('repulse', pJS.interactivity.events.onclick.mode)){\n        pJS.fn.modes.repulseParticle(p);\n      }\n\n      /* interaction auto between particles */\n      if(pJS.particles.line_linked.enable || pJS.particles.move.attract.enable){\n        for(var j = i + 1; j < pJS.particles.array.length; j++){\n          var p2 = pJS.particles.array[j];\n\n          /* link particles */\n          if(pJS.particles.line_linked.enable){\n            pJS.fn.interact.linkParticles(p,p2);\n          }\n\n          /* attract particles */\n          if(pJS.particles.move.attract.enable){\n            pJS.fn.interact.attractParticles(p,p2);\n          }\n\n          /* bounce particles */\n          if(pJS.particles.move.bounce){\n            pJS.fn.interact.bounceParticles(p,p2);\n          }\n\n        }\n      }\n\n\n    }\n\n  };\n\n  pJS.fn.particlesDraw = function(){\n\n    /* clear canvas */\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n\n    /* update each particles param */\n    pJS.fn.particlesUpdate();\n\n    /* draw each particle */\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      var p = pJS.particles.array[i];\n      p.draw();\n    }\n\n  };\n\n  pJS.fn.particlesEmpty = function(){\n    pJS.particles.array = [];\n  };\n\n  pJS.fn.particlesRefresh = function(){\n\n    /* init all */\n    cancelRequestAnimFrame(pJS.fn.checkAnimFrame);\n    cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n    pJS.tmp.source_svg = undefined;\n    pJS.tmp.img_obj = undefined;\n    pJS.tmp.count_svg = 0;\n    pJS.fn.particlesEmpty();\n    pJS.fn.canvasClear();\n    \n    /* restart */\n    pJS.fn.vendors.start();\n\n  };\n\n\n  /* ---------- pJS functions - particles interaction ------------ */\n\n  pJS.fn.interact.linkParticles = function(p1, p2){\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    /* draw a line between p1 and p2 if the distance between them is under the config distance */\n    if(dist <= pJS.particles.line_linked.distance){\n\n      var opacity_line = pJS.particles.line_linked.opacity - (dist / (1/pJS.particles.line_linked.opacity)) / pJS.particles.line_linked.distance;\n\n      if(opacity_line > 0){        \n        \n        /* style */\n        var color_line = pJS.particles.line_linked.color_rgb_line;\n        pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n        pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n        //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n        \n        /* path */\n        pJS.canvas.ctx.beginPath();\n        pJS.canvas.ctx.moveTo(p1.x, p1.y);\n        pJS.canvas.ctx.lineTo(p2.x, p2.y);\n        pJS.canvas.ctx.stroke();\n        pJS.canvas.ctx.closePath();\n\n      }\n\n    }\n\n  };\n\n\n  pJS.fn.interact.attractParticles  = function(p1, p2){\n\n    /* condensed particles */\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    if(dist <= pJS.particles.line_linked.distance){\n\n      var ax = dx/(pJS.particles.move.attract.rotateX*1000),\n          ay = dy/(pJS.particles.move.attract.rotateY*1000);\n\n      p1.vx -= ax;\n      p1.vy -= ay;\n\n      p2.vx += ax;\n      p2.vy += ay;\n\n    }\n    \n\n  }\n\n\n  pJS.fn.interact.bounceParticles = function(p1, p2){\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy),\n        dist_p = p1.radius+p2.radius;\n\n    if(dist <= dist_p){\n      p1.vx = -p1.vx;\n      p1.vy = -p1.vy;\n\n      p2.vx = -p2.vx;\n      p2.vy = -p2.vy;\n    }\n\n  }\n\n\n  /* ---------- pJS functions - modes events ------------ */\n\n  pJS.fn.modes.pushParticles = function(nb, pos){\n\n    pJS.tmp.pushing = true;\n\n    for(var i = 0; i < nb; i++){\n      pJS.particles.array.push(\n        new pJS.fn.particle(\n          pJS.particles.color,\n          pJS.particles.opacity.value,\n          {\n            'x': pos ? pos.pos_x : Math.random() * pJS.canvas.w,\n            'y': pos ? pos.pos_y : Math.random() * pJS.canvas.h\n          }\n        )\n      )\n      if(i == nb-1){\n        if(!pJS.particles.move.enable){\n          pJS.fn.particlesDraw();\n        }\n        pJS.tmp.pushing = false;\n      }\n    }\n\n  };\n\n\n  pJS.fn.modes.removeParticles = function(nb){\n\n    pJS.particles.array.splice(0, nb);\n    if(!pJS.particles.move.enable){\n      pJS.fn.particlesDraw();\n    }\n\n  };\n\n\n  pJS.fn.modes.bubbleParticle = function(p){\n\n    /* on hover event */\n    if(pJS.interactivity.events.onhover.enable && isInArray('bubble', pJS.interactivity.events.onhover.mode)){\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n          ratio = 1 - dist_mouse / pJS.interactivity.modes.bubble.distance;\n\n      function init(){\n        p.opacity_bubble = p.opacity;\n        p.radius_bubble = p.radius;\n      }\n\n      /* mousemove - check ratio */\n      if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n\n        if(ratio >= 0 && pJS.interactivity.status == 'mousemove'){\n          \n          /* size */\n          if(pJS.interactivity.modes.bubble.size != pJS.particles.size.value){\n\n            if(pJS.interactivity.modes.bubble.size > pJS.particles.size.value){\n              var size = p.radius + (pJS.interactivity.modes.bubble.size*ratio);\n              if(size >= 0){\n                p.radius_bubble = size;\n              }\n            }else{\n              var dif = p.radius - pJS.interactivity.modes.bubble.size,\n                  size = p.radius - (dif*ratio);\n              if(size > 0){\n                p.radius_bubble = size;\n              }else{\n                p.radius_bubble = 0;\n              }\n            }\n\n          }\n\n          /* opacity */\n          if(pJS.interactivity.modes.bubble.opacity != pJS.particles.opacity.value){\n\n            if(pJS.interactivity.modes.bubble.opacity > pJS.particles.opacity.value){\n              var opacity = pJS.interactivity.modes.bubble.opacity*ratio;\n              if(opacity > p.opacity && opacity <= pJS.interactivity.modes.bubble.opacity){\n                p.opacity_bubble = opacity;\n              }\n            }else{\n              var opacity = p.opacity - (pJS.particles.opacity.value-pJS.interactivity.modes.bubble.opacity)*ratio;\n              if(opacity < p.opacity && opacity >= pJS.interactivity.modes.bubble.opacity){\n                p.opacity_bubble = opacity;\n              }\n            }\n\n          }\n\n        }\n\n      }else{\n        init();\n      }\n\n\n      /* mouseleave */\n      if(pJS.interactivity.status == 'mouseleave'){\n        init();\n      }\n    \n    }\n\n    /* on click event */\n    else if(pJS.interactivity.events.onclick.enable && isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n\n\n      if(pJS.tmp.bubble_clicking){\n        var dx_mouse = p.x - pJS.interactivity.mouse.click_pos_x,\n            dy_mouse = p.y - pJS.interactivity.mouse.click_pos_y,\n            dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n            time_spent = (new Date().getTime() - pJS.interactivity.mouse.click_time)/1000;\n\n        if(time_spent > pJS.interactivity.modes.bubble.duration){\n          pJS.tmp.bubble_duration_end = true;\n        }\n\n        if(time_spent > pJS.interactivity.modes.bubble.duration*2){\n          pJS.tmp.bubble_clicking = false;\n          pJS.tmp.bubble_duration_end = false;\n        }\n      }\n\n\n      function process(bubble_param, particles_param, p_obj_bubble, p_obj, id){\n\n        if(bubble_param != particles_param){\n\n          if(!pJS.tmp.bubble_duration_end){\n            if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n              if(p_obj_bubble != undefined) var obj = p_obj_bubble;\n              else var obj = p_obj;\n              if(obj != bubble_param){\n                var value = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration);\n                if(id == 'size') p.radius_bubble = value;\n                if(id == 'opacity') p.opacity_bubble = value;\n              }\n            }else{\n              if(id == 'size') p.radius_bubble = undefined;\n              if(id == 'opacity') p.opacity_bubble = undefined;\n            }\n          }else{\n            if(p_obj_bubble != undefined){\n              var value_tmp = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration),\n                  dif = bubble_param - value_tmp;\n                  value = bubble_param + dif;\n              if(id == 'size') p.radius_bubble = value;\n              if(id == 'opacity') p.opacity_bubble = value;\n            }\n          }\n\n        }\n\n      }\n\n      if(pJS.tmp.bubble_clicking){\n        /* size */\n        process(pJS.interactivity.modes.bubble.size, pJS.particles.size.value, p.radius_bubble, p.radius, 'size');\n        /* opacity */\n        process(pJS.interactivity.modes.bubble.opacity, pJS.particles.opacity.value, p.opacity_bubble, p.opacity, 'opacity');\n      }\n\n    }\n\n  };\n\n\n  pJS.fn.modes.repulseParticle = function(p){\n\n    if(pJS.interactivity.events.onhover.enable && isInArray('repulse', pJS.interactivity.events.onhover.mode) && pJS.interactivity.status == 'mousemove') {\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\n      var normVec = {x: dx_mouse/dist_mouse, y: dy_mouse/dist_mouse},\n          repulseRadius = pJS.interactivity.modes.repulse.distance,\n          velocity = 100,\n          repulseFactor = clamp((1/repulseRadius)*(-1*Math.pow(dist_mouse/repulseRadius,2)+1)*repulseRadius*velocity, 0, 50);\n      \n      var pos = {\n        x: p.x + normVec.x * repulseFactor,\n        y: p.y + normVec.y * repulseFactor\n      }\n\n      if(pJS.particles.move.out_mode == 'bounce'){\n        if(pos.x - p.radius > 0 && pos.x + p.radius < pJS.canvas.w) p.x = pos.x;\n        if(pos.y - p.radius > 0 && pos.y + p.radius < pJS.canvas.h) p.y = pos.y;\n      }else{\n        p.x = pos.x;\n        p.y = pos.y;\n      }\n    \n    }\n\n\n    else if(pJS.interactivity.events.onclick.enable && isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\n\n      if(!pJS.tmp.repulse_finish){\n        pJS.tmp.repulse_count++;\n        if(pJS.tmp.repulse_count == pJS.particles.array.length){\n          pJS.tmp.repulse_finish = true;\n        }\n      }\n\n      if(pJS.tmp.repulse_clicking){\n\n        var repulseRadius = Math.pow(pJS.interactivity.modes.repulse.distance/6, 3);\n\n        var dx = pJS.interactivity.mouse.click_pos_x - p.x,\n            dy = pJS.interactivity.mouse.click_pos_y - p.y,\n            d = dx*dx + dy*dy;\n\n        var force = -repulseRadius / d * 1;\n\n        function process(){\n\n          var f = Math.atan2(dy,dx);\n          p.vx = force * Math.cos(f);\n          p.vy = force * Math.sin(f);\n\n          if(pJS.particles.move.out_mode == 'bounce'){\n            var pos = {\n              x: p.x + p.vx,\n              y: p.y + p.vy\n            }\n            if (pos.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n            else if (pos.x - p.radius < 0) p.vx = -p.vx;\n            if (pos.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n            else if (pos.y - p.radius < 0) p.vy = -p.vy;\n          }\n\n        }\n\n        // default\n        if(d <= repulseRadius){\n          process();\n        }\n\n        // bang - slow motion mode\n        // if(!pJS.tmp.repulse_finish){\n        //   if(d <= repulseRadius){\n        //     process();\n        //   }\n        // }else{\n        //   process();\n        // }\n        \n\n      }else{\n\n        if(pJS.tmp.repulse_clicking == false){\n\n          p.vx = p.vx_i;\n          p.vy = p.vy_i;\n        \n        }\n\n      }\n\n    }\n\n  }\n\n\n  pJS.fn.modes.grabParticle = function(p){\n\n    if(pJS.interactivity.events.onhover.enable && pJS.interactivity.status == 'mousemove'){\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\n      /* draw a line between the cursor and the particle if the distance between them is under the config distance */\n      if(dist_mouse <= pJS.interactivity.modes.grab.distance){\n\n        var opacity_line = pJS.interactivity.modes.grab.line_linked.opacity - (dist_mouse / (1/pJS.interactivity.modes.grab.line_linked.opacity)) / pJS.interactivity.modes.grab.distance;\n\n        if(opacity_line > 0){\n\n          /* style */\n          var color_line = pJS.particles.line_linked.color_rgb_line;\n          pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n          pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n          //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n          \n          /* path */\n          pJS.canvas.ctx.beginPath();\n          pJS.canvas.ctx.moveTo(p.x, p.y);\n          pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y);\n          pJS.canvas.ctx.stroke();\n          pJS.canvas.ctx.closePath();\n\n        }\n\n      }\n\n    }\n\n  };\n\n\n\n  /* ---------- pJS functions - vendors ------------ */\n\n  pJS.fn.vendors.eventsListeners = function(){\n\n    /* events target element */\n    if(pJS.interactivity.detect_on == 'window'){\n      pJS.interactivity.el = window;\n    }else{\n      pJS.interactivity.el = pJS.canvas.el;\n    }\n\n\n    /* detect mouse pos - on hover / click event */\n    if(pJS.interactivity.events.onhover.enable || pJS.interactivity.events.onclick.enable){\n\n      /* el on mousemove */\n      pJS.interactivity.el.addEventListener('mousemove', function(e){\n\n        if(pJS.interactivity.el == window){\n          var pos_x = e.clientX,\n              pos_y = e.clientY;\n        }\n        else{\n          var pos_x = e.offsetX || e.clientX,\n              pos_y = e.offsetY || e.clientY;\n        }\n\n        pJS.interactivity.mouse.pos_x = pos_x;\n        pJS.interactivity.mouse.pos_y = pos_y;\n\n        if(pJS.tmp.retina){\n          pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio;\n          pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio;\n        }\n\n        pJS.interactivity.status = 'mousemove';\n\n      });\n\n      /* el on onmouseleave */\n      pJS.interactivity.el.addEventListener('mouseleave', function(e){\n\n        pJS.interactivity.mouse.pos_x = null;\n        pJS.interactivity.mouse.pos_y = null;\n        pJS.interactivity.status = 'mouseleave';\n\n      });\n\n    }\n\n    /* on click event */\n    if(pJS.interactivity.events.onclick.enable){\n\n      pJS.interactivity.el.addEventListener('click', function(){\n\n        pJS.interactivity.mouse.click_pos_x = pJS.interactivity.mouse.pos_x;\n        pJS.interactivity.mouse.click_pos_y = pJS.interactivity.mouse.pos_y;\n        pJS.interactivity.mouse.click_time = new Date().getTime();\n\n        if(pJS.interactivity.events.onclick.enable){\n\n          switch(pJS.interactivity.events.onclick.mode){\n\n            case 'push':\n              if(pJS.particles.move.enable){\n                pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n              }else{\n                if(pJS.interactivity.modes.push.particles_nb == 1){\n                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n                }\n                else if(pJS.interactivity.modes.push.particles_nb > 1){\n                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb);\n                }\n              }\n            break;\n\n            case 'remove':\n              pJS.fn.modes.removeParticles(pJS.interactivity.modes.remove.particles_nb);\n            break;\n\n            case 'bubble':\n              pJS.tmp.bubble_clicking = true;\n            break;\n\n            case 'repulse':\n              pJS.tmp.repulse_clicking = true;\n              pJS.tmp.repulse_count = 0;\n              pJS.tmp.repulse_finish = false;\n              setTimeout(function(){\n                pJS.tmp.repulse_clicking = false;\n              }, pJS.interactivity.modes.repulse.duration*1000)\n            break;\n\n          }\n\n        }\n\n      });\n        \n    }\n\n\n  };\n\n  pJS.fn.vendors.densityAutoParticles = function(){\n\n    if(pJS.particles.number.density.enable){\n\n      /* calc area */\n      var area = pJS.canvas.el.width * pJS.canvas.el.height / 1000;\n      if(pJS.tmp.retina){\n        area = area/(pJS.canvas.pxratio*2);\n      }\n\n      /* calc number of particles based on density area */\n      var nb_particles = area * pJS.particles.number.value / pJS.particles.number.density.value_area;\n\n      /* add or remove X particles */\n      var missing_particles = pJS.particles.array.length - nb_particles;\n      if(missing_particles < 0) pJS.fn.modes.pushParticles(Math.abs(missing_particles));\n      else pJS.fn.modes.removeParticles(missing_particles);\n\n    }\n\n  };\n\n\n  pJS.fn.vendors.checkOverlap = function(p1, position){\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      var p2 = pJS.particles.array[i];\n\n      var dx = p1.x - p2.x,\n          dy = p1.y - p2.y,\n          dist = Math.sqrt(dx*dx + dy*dy);\n\n      if(dist <= p1.radius + p2.radius){\n        p1.x = position ? position.x : Math.random() * pJS.canvas.w;\n        p1.y = position ? position.y : Math.random() * pJS.canvas.h;\n        pJS.fn.vendors.checkOverlap(p1);\n      }\n    }\n  };\n\n\n  pJS.fn.vendors.createSvgImg = function(p){\n\n    /* set color to svg element */\n    var svgXml = pJS.tmp.source_svg,\n        rgbHex = /#([0-9A-F]{3,6})/gi,\n        coloredSvgXml = svgXml.replace(rgbHex, function (m, r, g, b) {\n          if(p.color.rgb){\n            var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+p.opacity+')';\n          }else{\n            var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+p.opacity+')';\n          }\n          return color_value;\n        });\n\n    /* prepare to create img with colored svg */\n    var svg = new Blob([coloredSvgXml], {type: 'image/svg+xml;charset=utf-8'}),\n        DOMURL = window.URL || window.webkitURL || window,\n        url = DOMURL.createObjectURL(svg);\n\n    /* create particle img obj */\n    var img = new Image();\n    img.addEventListener('load', function(){\n      p.img.obj = img;\n      p.img.loaded = true;\n      DOMURL.revokeObjectURL(url);\n      pJS.tmp.count_svg++;\n    });\n    img.src = url;\n\n  };\n\n\n  pJS.fn.vendors.destroypJS = function(){\n    cancelAnimationFrame(pJS.fn.drawAnimFrame);\n    canvas_el.remove();\n    pJSDom = null;\n  };\n\n\n  pJS.fn.vendors.drawShape = function(c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator){\n\n    // By Programming Thomas - https://programmingthomas.wordpress.com/2013/04/03/n-sided-shapes/\n    var sideCount = sideCountNumerator * sideCountDenominator;\n    var decimalSides = sideCountNumerator / sideCountDenominator;\n    var interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n    var interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180; // convert to radians\n    c.save();\n    c.beginPath();\n    c.translate(startX, startY);\n    c.moveTo(0,0);\n    for (var i = 0; i < sideCount; i++) {\n      c.lineTo(sideLength,0);\n      c.translate(sideLength,0);\n      c.rotate(interiorAngle);\n    }\n    //c.stroke();\n    c.fill();\n    c.restore();\n\n  };\n\n  pJS.fn.vendors.exportImg = function(){\n    window.open(pJS.canvas.el.toDataURL('image/png'), '_blank');\n  };\n\n\n  pJS.fn.vendors.loadImg = function(type){\n\n    pJS.tmp.img_error = undefined;\n\n    if(pJS.particles.shape.image.src != ''){\n\n      if(type == 'svg'){\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', pJS.particles.shape.image.src);\n        xhr.onreadystatechange = function (data) {\n          if(xhr.readyState == 4){\n            if(xhr.status == 200){\n              pJS.tmp.source_svg = data.currentTarget.response;\n              pJS.fn.vendors.checkBeforeDraw();\n            }else{\n              console.log('Error pJS - Image not found');\n              pJS.tmp.img_error = true;\n            }\n          }\n        }\n        xhr.send();\n\n      }else{\n\n        var img = new Image();\n        img.addEventListener('load', function(){\n          pJS.tmp.img_obj = img;\n          pJS.fn.vendors.checkBeforeDraw();\n        });\n        img.src = pJS.particles.shape.image.src;\n\n      }\n\n    }else{\n      console.log('Error pJS - No image.src');\n      pJS.tmp.img_error = true;\n    }\n\n  };\n\n\n  pJS.fn.vendors.draw = function(){\n\n    if(pJS.particles.shape.type == 'image'){\n\n      if(pJS.tmp.img_type == 'svg'){\n\n        if(pJS.tmp.count_svg >= pJS.particles.number.value){\n          pJS.fn.particlesDraw();\n          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }else{\n          //console.log('still loading...');\n          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }\n\n      }else{\n\n        if(pJS.tmp.img_obj != undefined){\n          pJS.fn.particlesDraw();\n          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }else{\n          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }\n\n      }\n\n    }else{\n      pJS.fn.particlesDraw();\n      if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n      else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n    }\n\n  };\n\n\n  pJS.fn.vendors.checkBeforeDraw = function(){\n\n    // if shape is image\n    if(pJS.particles.shape.type == 'image'){\n\n      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg == undefined){\n        pJS.tmp.checkAnimFrame = requestAnimFrame(check);\n      }else{\n        //console.log('images loaded! cancel check');\n        cancelRequestAnimFrame(pJS.tmp.checkAnimFrame);\n        if(!pJS.tmp.img_error){\n          pJS.fn.vendors.init();\n          pJS.fn.vendors.draw();\n        }\n        \n      }\n\n    }else{\n      pJS.fn.vendors.init();\n      pJS.fn.vendors.draw();\n    }\n\n  };\n\n\n  pJS.fn.vendors.init = function(){\n\n    /* init canvas + particles */\n    pJS.fn.retinaInit();\n    pJS.fn.canvasInit();\n    pJS.fn.canvasSize();\n    pJS.fn.canvasPaint();\n    pJS.fn.particlesCreate();\n    pJS.fn.vendors.densityAutoParticles();\n\n    /* particles.line_linked - convert hex colors to rgb */\n    pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color);\n\n  };\n\n\n  pJS.fn.vendors.start = function(){\n\n    if(isInArray('image', pJS.particles.shape.type)){\n      pJS.tmp.img_type = pJS.particles.shape.image.src.substr(pJS.particles.shape.image.src.length - 3);\n      pJS.fn.vendors.loadImg(pJS.tmp.img_type);\n    }else{\n      pJS.fn.vendors.checkBeforeDraw();\n    }\n\n  };\n\n\n\n\n  /* ---------- pJS - start ------------ */\n\n\n  pJS.fn.vendors.eventsListeners();\n\n  pJS.fn.vendors.start();\n  \n\n\n};\n\n/* ---------- global functions - vendors ------------ */\n\nObject.deepExtend = function(destination, source) {\n  for (var property in source) {\n    if (source[property] && source[property].constructor &&\n     source[property].constructor === Object) {\n      destination[property] = destination[property] || {};\n      arguments.callee(destination[property], source[property]);\n    } else {\n      destination[property] = source[property];\n    }\n  }\n  return destination;\n};\n\nwindow.requestAnimFrame = (function(){\n  return  window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame    ||\n    window.oRequestAnimationFrame      ||\n    window.msRequestAnimationFrame     ||\n    function(callback){\n      window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nwindow.cancelRequestAnimFrame = ( function() {\n  return window.cancelAnimationFrame         ||\n    window.webkitCancelRequestAnimationFrame ||\n    window.mozCancelRequestAnimationFrame    ||\n    window.oCancelRequestAnimationFrame      ||\n    window.msCancelRequestAnimationFrame     ||\n    clearTimeout\n} )();\n\nfunction hexToRgb(hex){\n  // By Tim Down - http://stackoverflow.com/a/5624139/3493650\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n     return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n  } : null;\n};\n\nfunction clamp(number, min, max) {\n  return Math.min(Math.max(number, min), max);\n};\n\nfunction isInArray(value, array) {\n  return array.indexOf(value) > -1;\n}\n\n\n/* ---------- particles.js functions - start ------------ */\n\nwindow.pJSDom = [];\n\nwindow.particlesJS = function(tag_id, params){\n\n  //console.log(params);\n\n  /* no string id? so it's object params, and set the id with default id */\n  if(typeof(tag_id) != 'string'){\n    params = tag_id;\n    tag_id = 'particles-js';\n  }\n\n  /* no id? set the id to default id */\n  if(!tag_id){\n    tag_id = 'particles-js';\n  }\n\n  /* pJS elements */\n  var pJS_tag = document.getElementById(tag_id),\n      pJS_canvas_class = 'particles-js-canvas-el',\n      exist_canvas = pJS_tag.getElementsByClassName(pJS_canvas_class);\n\n  /* remove canvas if exists into the pJS target tag */\n  if(exist_canvas.length){\n    while(exist_canvas.length > 0){\n      pJS_tag.removeChild(exist_canvas[0]);\n    }\n  }\n\n  /* create canvas element */\n  var canvas_el = document.createElement('canvas');\n  canvas_el.className = pJS_canvas_class;\n\n  /* set size canvas */\n  canvas_el.style.width = \"100%\";\n  canvas_el.style.height = \"100%\";\n\n  /* append canvas */\n  var canvas = document.getElementById(tag_id).appendChild(canvas_el);\n\n  /* launch particle.js */\n  if(canvas != null){\n    pJSDom.push(new pJS(tag_id, params));\n  }\n\n};\n\nwindow.particlesJS.load = function(tag_id, path_config_json, callback){\n\n  /* load json config */\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', path_config_json);\n  xhr.onreadystatechange = function (data) {\n    if(xhr.readyState == 4){\n      if(xhr.status == 200){\n        var params = JSON.parse(data.currentTarget.response);\n        window.particlesJS(tag_id, params);\n        if(callback) callback();\n      }else{\n        console.log('Error pJS - XMLHttpRequest status: '+xhr.status);\n        console.log('Error pJS - File config not found');\n      }\n    }\n  };\n  xhr.send();\n\n};","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.3\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","import { $_, Text, Util } from '@aegis-framework/artemis';\n/* global Prism */\n\nexport class FancyError {\n\n\tstatic init () {\n\n\t}\n\n\tstatic pop () {\n\t\tif ((window.location.protocol.indexOf ('file') === 0 || window.location.host === 'localhost') && typeof Prism !== 'undefined') {\n\t\t\tif (FancyError.queue.length > 0) {\n\t\t\t\tconst object = FancyError.queue.pop ();\n\n\t\t\t\t$_('body').prepend (`\n\t\t\t\t\t<div class='fancy-error modal modal--active' data-error='${object.id}'>\n\t\t\t\t\t\t<div class='modal__content'>\n\t\t\t\t\t\t\t<h2>${object.title}</h2>\n\t\t\t\t\t\t\t<p>${object.message}</p>\n\t\t\t\t\t\t\t<div class='padded  text--left'>\n\t\t\t\t\t\t\t\t<h3>Details</h3>\n\t\t\t\t\t\t\t\t${FancyError.render (object.props)}\n\t\t\t\t\t\t\t\t<hr class='separator--material'/>\n\t\t\t\t\t\t\t\t<h3>Need More Help?</h3>\n\t\t\t\t\t\t\t\t<div class='error-section'>\n\t\t\t\t\t\t\t\t\t<p>Remember you can always ask for more help if you need it at:</p>\n\t\t\t\t\t\t\t\t\t<p><b>Discord</b>: <a href='https://discord.gg/gWSeDTz' target='_blank'>https://discord.gg/gWSeDTz</a></p>\n\t\t\t\t\t\t\t\t\t<p><b>GitHub</b>: <a href='https://github.com/Monogatari/Monogatari/issues/' target='_blank'>https://github.com/Monogatari/Monogatari/issues/</a></p>\n\t\t\t\t\t\t\t\t\t<p><b>Twitter</b>: <a href='https://twitter.com/monogatari' target='_blank'>https://twitter.com/monogatari</a></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button>Ok</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`);\n\n\t\t\t\t$_(`[data-error=\"${object.id}\"] button`).click (function () {\n\t\t\t\t\t$_(`[data-error=\"${object.id}\"]`).remove ();\n\t\t\t\t\tFancyError.pop ();\n\t\t\t\t});\n\t\t\t\tPrism.highlightAll ();\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic show (title = 'Error', message = 'An error has ocurred! Please check the console so you get more insight.', props = {}) {\n\t\tif (typeof MonogatariDebug === 'object') {\n\t\t\tconst id = Util.uuid ();\n\n\t\t\tconst object = {\n\t\t\t\tid,\n\t\t\t\ttitle,\n\t\t\t\tmessage,\n\t\t\t\tprops\n\t\t\t};\n\n\n\t\t\tif ($_('[data-error]').isVisible ()) {\n\t\t\t\tFancyError.queue.unshift (object);\n\t\t\t} else {\n\t\t\t\t$_('body').prepend (`\n\t\t\t\t\t<div class='fancy-error modal modal--active' data-error='${id}'>\n\t\t\t\t\t\t<div class='modal__content'>\n\t\t\t\t\t\t\t<h2>${title}</h2>\n\t\t\t\t\t\t\t<p>${message}</p>\n\t\t\t\t\t\t\t<div class='padded  text--left'>\n\t\t\t\t\t\t\t\t<h3>Details</h3>\n\t\t\t\t\t\t\t\t${FancyError.render (props)}\n\t\t\t\t\t\t\t\t<hr class='separator--material'/>\n\t\t\t\t\t\t\t\t<h3>Need More Help?</h3>\n\t\t\t\t\t\t\t\t<div class='error-section'>\n\t\t\t\t\t\t\t\t\t<p>Remember you can always ask for more help if you need it at:</p>\n\t\t\t\t\t\t\t\t\t<p><b>Discord</b>: <a href='https://discord.gg/gWSeDTz' target='_blank'>https://discord.gg/gWSeDTz</a></p>\n\t\t\t\t\t\t\t\t\t<p><b>GitHub</b>: <a href='https://github.com/Monogatari/Monogatari/issues/' target='_blank'>https://github.com/Monogatari/Monogatari/issues/</a></p>\n\t\t\t\t\t\t\t\t\t<p><b>Twitter</b>: <a href='https://twitter.com/monogatari' target='_blank'>https://twitter.com/monogatari</a></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button>Ok</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`);\n\n\t\t\t\t$_(`[data-error=\"${id}\"] button`).click (function () {\n\t\t\t\t\t$_(`[data-error=\"${id}\"]`).remove ();\n\t\t\t\t\tFancyError.pop ();\n\t\t\t\t});\n\t\t\t\tPrism.highlightAll ();\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic render (props = {}) {\n\t\tlet html = '<div class=\"error-section\">';\n\t\tfor (const key of Object.keys (props)) {\n\t\t\tif (typeof props[key] === 'string' || typeof props[key] === 'number') {\n\t\t\t\thtml += `<p><b>${key}</b>: ${props[key]}</p>`;\n\t\t\t} else if (props[key] instanceof Array) {\n\t\t\t\thtml += `<p><b>${key}</b>: ${props[key].toString ().replace (/,/g, ', ')}</p>`;\n\t\t\t} else if (props[key] instanceof NodeList) {\n\t\t\t\thtml += `<p><b>${key}</b>:<br><pre>`;\n\t\t\t\tfor (const item of props[key]) {\n\t\t\t\t\thtml += `<code class='language-markup'>${item.outerHTML.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')}</code>`;\n\t\t\t\t}\n\t\t\t\thtml += '</pre></p>';\n\t\t\t}\n\t\t}\n\t\thtml += '</div>';\n\n\t\tfor (const key of Object.keys (props)) {\n\t\t\tif (typeof props[key] === 'object' && !(props[key] instanceof Array) && !(props[key] instanceof NodeList)) {\n\t\t\t\thtml += `<hr class='separator--material'/><h3>${Text.capitalize (key)}</h3><div class='error-section'>`;\n\t\t\t\tfor (const property of Object.keys (props[key])) {\n\t\t\t\t\tif (property.indexOf ('_') === 0) {\n\t\t\t\t\t\thtml += `<p>${props[key][property]}</p>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof props[key][property] === 'string' || typeof props[key][property] === 'number') {\n\t\t\t\t\t\t\thtml += `<p><b>${property}</b>: ${props[key][property]}</p>`;\n\t\t\t\t\t\t} else if (props[key][property] instanceof Array) {\n\t\t\t\t\t\t\thtml += `<p><b>${property}</b>: ${props[key][property].toString ().replace (/,/g, ', ')}</p>`;\n\t\t\t\t\t\t} else if (props[key][property] instanceof NodeList) {\n\t\t\t\t\t\t\thtml += `<p><b>${property}</b>:<br><pre>`;\n\t\t\t\t\t\t\tfor (const item of props[key][property]) {\n\t\t\t\t\t\t\t\thtml += `<code class='language-markup'>${item.outerHTML.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')}</code>`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thtml += '</pre></p>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thtml += '</div>';\n\t\t\t}\n\t\t}\n\t\treturn html;\n\t}\n\n\n}\n\nFancyError.queue = [];","// list of available flags\nmodule.exports =\n{\n  // to prevent (reduce chance of) accidental leaking of the global variables into runtime flags\n  useCustomAdapters: 'deeply:useCustomAdapters:' + Math.random(),\n  useCustomTypeOf: 'deeply:useCustomTypeOf:' + Math.random()\n};\n","// Public API\nmodule.exports = arrayAdapter;\n\n/**\n * Adapter to merge arrays\n *\n * Note: resets target value\n *\n * @param   {array} to - target array to update\n * @param   {array} from - array to clone\n * @param   {function} merge - iterator to merge sub elements\n * @returns {array} - modified target object\n */\nfunction arrayAdapter(to, from, merge)\n{\n  // reset target array\n  to.splice(0);\n\n  // transfer actual values\n  from.reduce(function(target, value, index)\n  {\n    // use `undefined` as always-override value\n    target[index] = merge(undefined, value);\n\n    return target;\n  }, to);\n\n  return to;\n}\n","// Public API\nmodule.exports = dateAdapter;\n\n/**\n * Custom `initialValue` method\n * used when default approach of creating\n * initial value for the target object\n * isn't good enough\n *\n * @returns {object.Date} - new Date object\n */\nmodule.exports.initialValue = function()\n{\n  return new Date();\n};\n\n/**\n * Adapter to merge Date objects\n *\n * @param   {object.Date} to - target object to update\n * @param   {object.Date} from - Date object to clone\n * @returns {object.Date} - modified target object\n */\nfunction dateAdapter(to, from)\n{\n  // transfer actual value\n  to.setTime(from.valueOf());\n\n  return to;\n}\n","// Public API\nmodule.exports = reduceObject;\n\n/**\n * Iterates over own properties of the provided object\n * and copies then over to the target object.\n * While recursively running merge on the elements.\n *\n * @param   {mixed} target - target object to modify\n * @param   {mixed} source - source object to read from\n * @param   {function} merge - iterator to merge sub elements\n * @returns {mixed} - modified target object\n */\nfunction reduceObject(target, source, merge)\n{\n  // clone exposed properties\n  Object.keys(source).reduce(function(acc, key)\n  {\n    acc[key] = merge(acc[key], source[key]);\n\n    return acc;\n  }, target);\n\n  return target;\n}\n","var reduceObject  = require('../lib/reduce_object.js');\n\n// Public API\nmodule.exports = objectAdapter;\n\n/**\n * Adapter to merge regular (user land) objects\n *\n * Note: overrides target value\n * if it's not a regular object\n *\n * @param   {object} to - target object to update\n * @param   {object} from - object to clone\n * @param   {function} merge - iterator to merge sub elements\n * @returns {object} - modified target object\n */\nfunction objectAdapter(to, from, merge)\n{\n  // transfer source values\n  reduceObject(to, from, merge);\n\n  return to;\n}\n","// Public API\nmodule.exports = arraysCombineAdapter;\n\n/**\n * Adapter to merge arrays\n * by combining/merging it's elements\n *\n * @param   {array} to - target array to update\n * @param   {array} from - array to clone\n * @param   {function} merge - iterator to merge sub elements\n * @returns {array} - modified target object\n */\nfunction arraysCombineAdapter(to, from, merge)\n{\n  // transfer actual values\n  from.reduce(function(target, value, index)\n  {\n    // combine elements index to index\n    target[index] = merge(target[index], value);\n\n    return target;\n  }, to);\n\n  return to;\n}\n","// Public API\nmodule.exports = arraysAppendAdapter;\n\n/**\n * Adapter to merge arrays\n * by appending cloned elements\n * of the second array to the first\n *\n * @param   {array} to - target array to update\n * @param   {array} from - array to clone\n * @param   {function} merge - iterator to merge sub elements\n * @returns {array} - modified target object\n */\nfunction arraysAppendAdapter(to, from, merge)\n{\n  // transfer actual values\n  from.reduce(function(target, value)\n  {\n    target.push(merge(undefined, value));\n\n    return target;\n  }, to);\n\n  return to;\n}\n","// Public API\nmodule.exports = arraysAppendUniqueAdapter;\n\n/**\n * Adapter to merge arrays\n * by appending cloned elements\n * of the second array to the first\n * unless they already exist in the target array\n *\n * @param   {array} to - target array to update\n * @param   {array} from - array to clone\n * @param   {function} merge - iterator to merge sub elements\n * @returns {array} - modified target object\n */\nfunction arraysAppendUniqueAdapter(to, from, merge)\n{\n  // transfer actual values\n  from.reduce(function(target, value)\n  {\n    // append only if new element isn't present yet\n    if (target.indexOf(value) == -1)\n    {\n      target.push(merge(undefined, value));\n    }\n\n    return target;\n  }, to);\n\n  return to;\n}\n","// Public API\nmodule.exports = fulcon;\n\n/**\n * Creates wrapper function with the same signature\n *\n * @param   {function} source - function to clone\n * @returns {function} - wrapped function\n */\nfunction fulcon(source)\n{\n  // makes \"clone\" look and smell the same\n  // strip `bound ` prefix from the function name\n  return Function('source', 'return function ' + source.name.replace(/^bound /, '') + '(' + Array(source.length + 1).join('a').split('').join(',') + '){ return source.apply(this, arguments); }')(source);\n}\n","var cloneFunction = require('fulcon')\n  , reduceObject  = require('../lib/reduce_object.js')\n  ;\n\n// Public API\nmodule.exports = functionsCloneAdapter;\n\n/**\n * Clones provided source function and replaces\n * target function with the clone.\n * Also cloning the prototype tree.\n *\n * @param   {function} to - target function to ignore\n * @param   {function} from - function to clone\n * @param   {function} merge - iterator to merge sub elements\n * @returns {function} - cloned source function\n */\nfunction functionsCloneAdapter(to, from, merge)\n{\n  var copy = cloneFunction(from);\n\n  // to fully stand up to Ludicrous name\n  // let's clone prototype chain\n  copy.prototype = merge(undefined, from.prototype);\n\n  // duplicate function's properties\n  reduceObject(copy, from, merge);\n\n  return copy;\n}\n","var cloneFunction = require('fulcon')\n  , reduceObject  = require('../lib/reduce_object.js')\n  ;\n\n// Public API\nmodule.exports = functionsExtendAdapter;\n\n/**\n * Clones provided source function and replaces\n * target function with the clone.\n * While keeping original prototype in the prototype chain.\n *\n * @param   {function} to - target function to ignore\n * @param   {function} from - function to clone\n * @param   {function} merge - iterator to merge sub elements\n * @returns {function} - cloned source function\n */\nfunction functionsExtendAdapter(to, from, merge)\n{\n  var copy = cloneFunction(from);\n\n  // keep from.prototype in the prototype chain\n  copy.prototype = from.prototype;\n\n  // duplicate function's properties\n  reduceObject(copy, from, merge);\n\n  return copy;\n}\n","// collect available adapters\nmodule.exports =\n{\n  'array' : require('./adapters/array.js'),\n  'date'  : require('./adapters/date.js'),\n  'object': require('./adapters/object.js'),\n\n  // extra adapters\n  arraysCombine     : require('./extra/arrays_combine.js'),\n  arraysAppend      : require('./extra/arrays_append.js'),\n  arraysAppendUnique: require('./extra/arrays_append_unique.js'),\n  functionsClone    : require('./extra/functions_clone.js'),\n  functionsExtend   : require('./extra/functions_extend.js')\n};\n","'use strict';\n\n// Public API\nmodule.exports = preciseTypeOf;\n\n/**\n * Detects real type of the objects like 'Array()', `new Number(1)`, `new Boolean(true)`, etc\n *\n * @param   {mixed} obj - object to get type of\n * @param   {object} [options] - object to get type of\n * @returns {string} precise type\n */\nfunction preciseTypeOf(obj, options)\n{\n  var type, stamp = Object.prototype.toString.call(obj);\n\n  options = options || {};\n\n  if (!type && obj === undefined) type = 'undefined';\n  if (!type && obj === null) type = 'null';\n\n  if (!type && obj.constructor && typeof obj.constructor.isBuffer == 'function' && obj.constructor.isBuffer(obj)) type = 'buffer';\n\n  if (!type && typeof window == 'object' && obj === window) type = 'global';\n  if (!type && typeof global == 'object' && obj === global) type = 'global';\n\n  if (!type && typeof obj == 'number' && isNaN(obj)) type = 'nan';\n  if (!type && typeof obj == 'object' && stamp == '[object Number]' && isNaN(obj)) type = 'nan';\n\n  if (!type && typeof obj == 'object' && stamp.substr(-6) == 'Event]') type = 'event';\n  if (!type && stamp.substr(0, 12) == '[object HTML') type = 'html';\n  if (!type && stamp.substr(0, 12) == '[object Node') type = 'html';\n\n  // last resort\n  if (!type) type = stamp.match(/\\[object\\s*([^\\]]+)\\]/)[1].toLowerCase();\n\n  // be even more precise by reporting \"instance of\" names\n  // Note: only check objects that were created by constructors\n  if (type == 'object' && options.pojoOnly && obj.constructor) {\n    // some constructors don't have names\n    type = obj.constructor.name || 'unknown';\n\n    // preserve `object` response for POJOs\n    if (type == 'Object') type = 'object';\n  }\n\n  return type;\n}\n","var preciseTypeOf = require('precise-typeof')\n  , adapters      = require('./adapters.js')\n  , behaviors     = require('./flags.js')\n  ;\n\n// Public API\nmodule.exports = merge;\n\n/**\n * Merges provided values, utilizing available adapters\n * if no adapter found, reference to the same object\n * will be returned, considering it as primitive value\n *\n * @param   {mixed} to - value to merge into\n * @param   {mixed} from - value to merge\n * @returns {mixed} - result of the merge\n */\nfunction merge(to, from)\n{\n  // if no suitable adapters found\n  // just return overriding value\n  var result  = from\n    , typeOf  = getTypeOfAdapter.call(this)\n    , type    = typeOf(from)\n    , adapter = getMergeByTypeAdapter.call(this, type)\n    ;\n\n  // if target object isn't the same type as the source object,\n  // then override with new instance of the same type\n  if (typeOf(to) != type)\n  {\n    to = getInitialValue(type, adapter);\n  }\n\n  // bind merge callback to the current context\n  // so not to loose runtime flags\n  result = adapter.call(this, to, from, merge.bind(this));\n\n  return result;\n}\n\n/**\n * Returns typeof adapter, either default one or custom one if provided\n *\n * @returns {function} - typeof custom adapter or default one\n */\nfunction getTypeOfAdapter()\n{\n  var adapter = preciseTypeOf;\n\n  // only if usage of custom adapters is authorized\n  // to prevent global context leaking in\n  if (this.useCustomTypeOf === behaviors.useCustomTypeOf)\n  {\n    adapter = this['typeof'];\n  }\n\n  return adapter;\n}\n\n/**\n * Returns merge adapter for the requested type\n * either default one or custom one if provided\n *\n * @param   {string} type - hook type to look for\n * @returns {function} - merge adapter or pass-thru function, if not adapter found\n */\nfunction getMergeByTypeAdapter(type)\n{\n  var adapter = adapters[type] || passThru;\n\n  // only if usage of custom adapters is authorized\n  // to prevent global context leaking in\n  if (this.useCustomAdapters === behaviors.useCustomAdapters\n  && typeof this[type] == 'function'\n  )\n  {\n    adapter = this[type];\n  }\n\n  return adapter;\n}\n\n/**\n * Creates initial value for the provided type\n *\n * @param   {string} type - type to create new value of\n * @param   {function} adapter - adapter function with custom `initialValue` method\n * @returns {mixed} - new value of the requested type\n */\nfunction getInitialValue(type, adapter)\n{\n  var value\n    // should be either `window` or `global`\n    , glob       = typeof window == 'object' ? window : global\n    // capitalize the first letter to make object constructor\n    , objectType = type[0].toUpperCase() + type.substr(1)\n    ;\n\n  if (typeof adapter.initialValue == 'function')\n  {\n    value = adapter.initialValue();\n  }\n  else if (objectType in glob)\n  {\n    // create new type object and get it's actual value\n    // e.g. `new String().valueOf() // -> ''`\n    value = new glob[objectType]().valueOf();\n  }\n\n  // set initial value as `undefined` if no initialValue method found\n  return value;\n}\n\n/**\n * Returns provided `from` value\n *\n * @param   {mixed} to - value to ignore\n * @param   {mixed} from - value to pass back\n * @returns {mixed} - passed `from` value\n */\nfunction passThru(to, from)\n{\n  return from;\n}\n","var merge = require('./merge.js');\n\n// Public API\nmodule.exports = mutable;\n\n/**\n * Deeply merges properties of the provided objects, into the first object.\n *\n * @param {...mixed} value - values to merge\n * @returns {mixed} first value with merged in properties from other values\n */\nfunction mutable(/* a[, b[, ...]] */)\n{\n  var args   = Array.prototype.slice.call(arguments)\n    , result = args.shift()\n    ;\n\n  while (args.length)\n  {\n    result = merge.call(this, result, args.shift());\n  }\n\n  return result;\n}\n","var mutable = require('./mutable.js');\n\n// Public API\nmodule.exports = immutable;\n\n/**\n * Creates untangled copy (deep clone) of the provided value,\n * and deeply merges rest of the provided values.\n *\n * @param {...mixed} value - value(s) to merge/clone\n * @returns {mixed} - deep merged copy of all the provided values\n */\nfunction immutable(/* a[, b[, ...]] */)\n{\n  // invoke mutable with new object as first argument\n  var args = Array.prototype.slice.call(arguments, 0);\n  // use `undefined` as always-override value\n  return mutable.apply(this, [undefined].concat(args));\n}\n","var behaviors = require('./flags.js')\n  , adapters  = require('./adapters.js')\n  , mutable   = require('./mutable.js')\n  , immutable = require('./immutable.js')\n  ;\n\n// Public API\n// keep immutable behavior as default\nmodule.exports = immutable;\n// expose both variants\nmodule.exports.mutable   = mutable;\nmodule.exports.immutable = immutable;\n// expose behavior flags\nmodule.exports.behaviors = behaviors;\n// expose available adapters\nmodule.exports.adapters  = adapters;\n","import { $_, Space, SpaceAdapter, Platform, Preload, Util, FileSystem, Text, Debug, DebugLevel } from '@aegis-framework/artemis';\nimport moment from 'moment';\nimport mousetrap from 'mousetrap';\nimport { FancyError } from './FancyError';\nimport merge  from 'deeply';\n\n\n/**\n * Every Monogatari Game is composed mainly of the following items:\n *\n * Actions: The list of capabilities a Monogatari script can run.\n *\n * Components: The list of screens and other HTML elements available in the game.\n *\n * State: The current state of the game, this simple object contains the current\n *        label and step as well as the things being shown or played by every action.\n *\n * History: Every action and even components may keep a history on what statements\n *\t\t\thave been applied. The history is\n *\n * Assets: The list of different assets declared by the developer to use in throughout\n * \t\t   the game.\n *\n * Script: All the labels and statements that make up the story and gameplay.\n *\n * Characters: The list of characters that participate in the script of the game.\n *\n * Monogatari follows a 3-step life cycle:\n *\n * 1. Setup - All needed elements are added to the DOM and all variables get\n * \t\t\t  initialized. This first step is all about preparing all the needed\n * \t\t\t  elements.\n *\n * 2. Bind - Once the game has been setup, its time to bind all the necessary\n *           event listeners or perform more operations on the DOM.\n *\n * 3. Init - Finally, once the game was setup and it performed all the needed\n *           bindings, it may declare or modify variables that needed the HTML to\n *           be setup first or perform any other needed final operations. In this\n * \t\t\t step, all needed elements will now be shown and the game will begin.\n *\n * @class Monogatari\n */\nclass Monogatari {\n\n\n\t/**\n\t * @static onStart - This is the main onStart function, it acts as an event\n\t * listener when the game is started. This function will call its action\n\t * counterparts.\n\t *\n\t * @return {Promise} - The promise is resolved if all action's onStart function\n\t * was resolved and is rejected if any were rejected.\n\t */\n\tstatic onStart () {\n\t\tconst promises = [];\n\n\t\tfor (const component of Monogatari.components ()) {\n\t\t\tpromises.push (component.onStart ());\n\t\t}\n\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tpromises.push (action.onStart ());\n\t\t}\n\t\treturn Promise.all (promises);\n\t}\n\n\t/**\n\t * @static onLoad - This is the main onStart function, it acts as an event\n\t * listener when a game is loaded. This function will call its action\n\t * counterparts so that each action is able to run any operations needed\n\t * when a game is loaded such as restoring their state.\n\t *\n\t * @return {Promise} - The promise is resolved is all action's onLoad function\n\t * was resolved and is rejected if any were rejected.\n\t */\n\tstatic onLoad () {\n\t\tconst promises = [];\n\n\t\tfor (const component of Monogatari.components ()) {\n\t\t\tpromises.push (component.onLoad ());\n\t\t}\n\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tpromises.push (action.onLoad ());\n\t\t}\n\t\treturn Promise.all (promises);\n\t}\n\n\t/**\n\t * @static width - Determines the real width of the Monogatari element, pretty\n\t * useful when dealing with canvas or other things that require specific measurements.\n\t *\n\t * @return {number} - Computed Width of the element\n\t */\n\tstatic width () {\n\t\treturn  parseInt (getComputedStyle($_(Monogatari.selector).get (0)).width.replace ('px', ''));\n\t}\n\n\t/**\n\t * @static height - Determines the real height of the Monogatari element, pretty\n\t * useful when dealing with canvas or other things that require specific measurements.\n\t *\n\t * @return {number} - Computed Width of the element\n\t */\n\tstatic height () {\n\t\treturn getComputedStyle($_(Monogatari.selector).get (0)).height.replace ('px', '');\n\t}\n\n\tstatic debug () {\n\n\t\treturn new Proxy (Debug, {\n\t\t\tapply (target, receiver, args) {\n\t\t\t\tconsole.log (target);\n\t\t\t\tif (typeof MonogatariDebug === 'object') {\n\t\t\t\t\treturn Reflect.apply (target, receiver, args);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @static string - Gets the translation of a string. This is of course limited\n\t * to the translations defined for each language and string using the translation\n\t * function.\n\t *\n\t * @param  {string} key - The key of the string whose translation is needed\n\t * @return {string} - String translation in the current language given the\n\t * user's preferences.\n\t */\n\tstatic string (key) {\n\t\tif (typeof Monogatari._translations[Monogatari.preference ('Language')] !== 'undefined') {\n\t\t\tif (typeof Monogatari._translations[Monogatari.preference ('Language')][key] !== 'undefined') {\n\t\t\t\treturn Monogatari._translations[Monogatari.preference ('Language')][key];\n\t\t\t} else {\n\t\t\t\tFancyError.show (\n\t\t\t\t\t`Translation for string \"${key}\" could not be found`,\n\t\t\t\t\t'Monogatari attempted to find a translation for the current language set in the preferences but there was none.',\n\t\t\t\t\t{\n\t\t\t\t\t\t'String Not Found': key,\n\t\t\t\t\t\t'Language': Monogatari.preference ('Language'),\n\t\t\t\t\t\t'Found in these elements': $_(`[data-string=\"${key}\"]`).collection,\n\t\t\t\t\t\t'You may have meant one of these': Object.keys (Monogatari._translations[Monogatari.preference ('Language')]),\n\t\t\t\t\t\t'Help': {\n\t\t\t\t\t\t\t'_': 'Please check that this string has been correctly defined in your translations. A translation is defined as follows:',\n\t\t\t\t\t\t\t'_1': `\n\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\t\tMonogatari.translation (\"YourLanguage\", {\n\t\t\t\t\t\t\t\t\t\t\"SomeString\": \"Your Translation\"\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t'_2': 'You may also want to check if the [data-string] property of the HTML elements above is correct or if they have a typo.',\n\t\t\t\t\t\t\t'Documentation': '<a href=\"https://monogatari.io/documentation/configuration/internationalization/\" target=\"_blank\">Internationalization</a>'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tFancyError.show (\n\t\t\t\t'Language could not be found',\n\t\t\t\t`Monogatari attempted to translate the UI using the current language set in the preferences but no translations could be found\n\t\t\t\tfor it.`,\n\t\t\t\t{\n\t\t\t\t\t'Problematic Language': Monogatari.preference ('Language'),\n\t\t\t\t\t'You may have meant one of these': Object.keys (Monogatari._translations),\n\t\t\t\t\t'Help': {\n\t\t\t\t\t\t'_': 'Please check if you have defined correctly the translations for this language, translations are defined as follows:',\n\t\t\t\t\t\t'_1': `\n\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\tMonogatari.translation (\"YourLanguage\", {\n\t\t\t\t\t\t\t\t\t\"SomeString\": \"Your Translation\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t`,\n\t\t\t\t\t\t'_2': 'You may also want to check if the value of your language selector is right:',\n\t\t\t\t\t\t'_3': `\n\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t<code class='language-markup'>\n\t\t\t\t\t\t\t\t${$_('[data-action=\"set-language\"]').value ()}\n\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t`,\n\t\t\t\t\t\t'Documentation': '<a href=\"https://monogatari.io/documentation/configuration/internationalization/\" target=\"_blank\">Internationalization</a>'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @static history - Simple function to access, create and modify history\n\t * objects. Each history is a simple array.\n\t *\n\t * @param  {Object|string} [object = null] - Object with which current\n\t * history object will be updated with (i.e. Object.assign) or a string to access\n\t * a specific history. If a string is given and that history does not exists,\n\t * this method will create it for us.\n\t *\n\t * @return {type} - If the parameter passed was a string, this function will\n\t * return the history associated with that name. If no argument was passed,\n\t * it will return the whole history object containing all histories.\n\t */\n\tstatic history (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tif (typeof Monogatari._history[object] === 'undefined') {\n\t\t\t\t\tMonogatari._history[object] = [];\n\t\t\t\t}\n\t\t\t\treturn Monogatari._history[object];\n\t\t\t} else {\n\t\t\t\tMonogatari._history = Object.assign ({}, Monogatari._history, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Monogatari._history;\n\t\t}\n\t}\n\n\t/**\n\t * @static state - Simple function to access, create and state variables.\n\t *\n\t * @param  {Object|string} [object = null] - Object with which current\n\t * state object will be updated with (i.e. Object.assign) or a string to access\n\t * a specific state variable.\n\t *\n\t * @return {type} - If the parameter passed was a string, this function will\n\t * return the variable associated with that name. If no argument was passed,\n\t * it will return the whole state object containing all variables.\n\t */\n\tstatic state (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Monogatari._state[object];\n\t\t\t} else {\n\t\t\t\tMonogatari._state = merge (Monogatari._state, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Monogatari._state;\n\t\t}\n\t}\n\n\t/**\n\t * @static registerAction - Register an Action to the actions list. All actions\n\t * should be registered before calling the init () method so their Mounting\n\t * cycle is done correctly.\n\t *\n\t * @param  {Action} action - Action to register. Remember each action must\n\t * have an unique ID.\n\t */\n\tstatic registerAction (action) {\n\t\tMonogatari._actions.push (action);\n\t}\n\n\t/**\n\t * @static unregisterAction - Removes an action from the actions list. Any\n\t * action you want to remove should be removed before calling the init ()\n\t * method so that their Mounting cycle is not executed.\n\t *\n\t * @param  {string} action - ID of the Action to unregister. Remember each action must\n\t * have an unique ID.\n\t */\n\tstatic unregisterAction (action) {\n\t\tMonogatari._actions = Monogatari._actions.filter ((a) => !(a instanceof action));\n\t}\n\n\t/**\n\t * @static actions - Returns the list of registered Actions.\n\t *\n\t * @return {Action[]} - List of registered Actions\n\t */\n\tstatic actions () {\n\t\treturn Monogatari._actions;\n\t}\n\n\t/**\n\t * @static action - Access to an specific action class\n\t *\n\t * @param  {string} id - ID of the action you want to access to.\n\t * @return {Action} - Returns the action that matches the given ID\n\t */\n\tstatic action (id) {\n\t\treturn Monogatari._actions.find ((a) => a.id === id);\n\t}\n\n\t/**\n\t * @static registerComponent - Register a Component to the components list.\n\t * All components should be registered before calling the init () method so\n\t * their Mounting cycle is done correctly.\n\t *\n\t * @param  {Component} component - Component to register. Remember each\n\t * component must have an unique ID.\n\t */\n\tstatic registerComponent (component) {\n\t\tMonogatari._components.push (component);\n\t}\n\n\t/**\n\t * @static unregisterComponent - Removes a component from the components list.\n\t * Any component you want to remove should be removed before calling the\n\t * init () method so that their Mounting cycle is not executed.\n\t *\n\t * @param  {string} component - ID of the Component to unregister. Remember\n\t * each component must have an unique ID.\n\t */\n\tstatic unregisterComponent (component) {\n\t\tMonogatari._components = Monogatari._actions.filter ((c) => !(c instanceof component));\n\t}\n\n\t/**\n\t * @static components - Returns the list of registered Components.\n\t *\n\t * @return {Component[]} - List of registered Components\n\t */\n\tstatic components () {\n\t\treturn Monogatari._components;\n\t}\n\n\t/**\n\t * @static component - Access to an specific component class\n\t *\n\t * @param  {string} id - ID of the component you want to access to.\n\t * @return {Component} - Returns the component that matches the given ID\n\t */\n\tstatic component (id) {\n\t\treturn Monogatari._components.find ((a) => a._id.toLowerCase () === id.toLowerCase ());\n\t}\n\n\t/**\n\t * @static assets - Simple function to modify and access the assets object,\n\t * all declared assets such as audio, videos and images should be registered\n\t * in these objects.\n\t *\n\t * @param  {string} [type = null] - The type of asset you are referring to\n\t * @param  {Object} [object = null] - The key/value object to assign to that asset type\n\t * @return {Object} - If this function is called with no arguments, the whole\n\t * assets object will be returned.\n\t */\n\tstatic assets (type = null, object = null) {\n\t\tif (type !== null && object !== null) {\n\t\t\tif (typeof Monogatari._assets[type] !== 'undefined') {\n\t\t\t\tMonogatari._assets[type] = Object.assign ({}, Monogatari._assets[type], object);\n\t\t\t} else {\n\t\t\t\tMonogatari._assets[type] = object;\n\t\t\t}\n\t\t} else if (type !== null) {\n\t\t\tif (typeof type === 'string') {\n\t\t\t\treturn Monogatari._assets[type];\n\t\t\t} else if (typeof type === 'object') {\n\t\t\t\tMonogatari._assets = Object.assign ({}, Monogatari._assets, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Monogatari._assets;\n\t\t}\n\t}\n\n\tstatic asset (type, name, value = null) {\n\t\tif (typeof Monogatari._assets[type] !== 'undefined') {\n\t\t\tif (value !== null) {\n\t\t\t\tMonogatari._assets[type][name] = value;\n\t\t\t} else {\n\t\t\t\treturn Monogatari._assets[type][name];\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error (`Tried to interact with a non-existing asset type ${type}.`);\n\t\t}\n\t}\n\n\tstatic characters (object = null) {\n\t\tif (object !== null) {\n\t\t\t// const identifiers = Object.keys (object);\n\t\t\t// for (const id of identifiers) {\n\t\t\t// \tMonogatari.character (id, object[id]);\n\t\t\t// }\n\t\t\tMonogatari._characters = merge (Monogatari._characters, object);\n\t\t} else {\n\t\t\treturn Monogatari._characters;\n\t\t}\n\t}\n\n\tstatic character (id, object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof Monogatari._characters[id] !== 'undefined') {\n\t\t\t\tMonogatari._characters[id] = merge (Monogatari._characters[id], object);\n\t\t\t} else {\n\t\t\t\tMonogatari._characters[id] = object;\n\t\t\t}\n\t\t} else {\n\t\t\tconst character = Monogatari._characters[id];\n\n\t\t\t// Translate the old character properties into the new ones\n\t\t\tif (typeof character !== 'undefined') {\n\t\t\t\tif (typeof character.Images === 'object') {\n\t\t\t\t\tcharacter.sprites = merge ({}, character.Images);\n\t\t\t\t\tdelete character.Images;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.Directory === 'string') {\n\t\t\t\t\tcharacter.directory = character.Directory;\n\t\t\t\t\tdelete character.Directory;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.Color === 'string') {\n\t\t\t\t\tcharacter.color = character.Color;\n\t\t\t\t\tdelete character.Color;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.Name === 'string') {\n\t\t\t\t\tcharacter.name = character.Name;\n\t\t\t\t\tdelete character.Nme;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.Face === 'string') {\n\t\t\t\t\tcharacter.default_expression = character.Face;\n\t\t\t\t\tdelete character.Face;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.Side === 'object') {\n\t\t\t\t\tcharacter.expressions = character.Side;\n\t\t\t\t\tdelete character.Side;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.TypeAnimation === 'object') {\n\t\t\t\t\tcharacter.type_animation = character.TypeAnimation;\n\t\t\t\t\tdelete character.TypeAnimation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn character;\n\t\t}\n\t}\n\n\tstatic translations (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Monogatari._translations[object];\n\t\t\t} else {\n\t\t\t\tMonogatari._translations = Object.assign ({}, Monogatari._translations, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Monogatari._translations;\n\t\t}\n\t}\n\n\tstatic translation (language, strings) {\n\t\tif (typeof Monogatari._translations[language] !== 'undefined') {\n\t\t\tMonogatari._translations[language] = Object.assign ({}, Monogatari._translations[language], strings);\n\t\t} else {\n\t\t\tMonogatari._translations[language] = strings;\n\t\t}\n\t}\n\n\tstatic setting (key, value = null) {\n\t\tif (value !== null) {\n\t\t\tMonogatari._settings[key] = value;\n\t\t} else {\n\t\t\tif (typeof Monogatari._settings[key] !== 'undefined') {\n\t\t\t\treturn Monogatari._settings[key];\n\t\t\t} else {\n\t\t\t\tconsole.error (`Tried to access non existent setting with name '${key}'.`);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic settings (object = null) {\n\t\tif (object !== null) {\n\t\t\tMonogatari._settings = merge (Monogatari._settings, object);\n\t\t} else {\n\t\t\treturn Monogatari._settings;\n\t\t}\n\t}\n\n\tstatic preference (key, value = null) {\n\t\tif (value !== null) {\n\t\t\tMonogatari._preferences[key] = value;\n\t\t\tMonogatari.Storage.update ('Settings', Monogatari._preferences);\n\t\t} else {\n\t\t\tif (typeof Monogatari._preferences[key] !== 'undefined') {\n\t\t\t\treturn Monogatari._preferences[key];\n\t\t\t} else {\n\t\t\t\tconsole.error (`Tried to access non existent preference with name '${key}'.`);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic preferences (object = null) {\n\t\tif (object !== null) {\n\t\t\tMonogatari._preferences = merge (Monogatari._preferences, object);\n\t\t\tif (Monogatari.Storage.configuration ().name === '') {\n\t\t\t\tMonogatari.setupStorage ();\n\t\t\t}\n\t\t\tMonogatari.Storage.update ('Settings', Monogatari._preferences);\n\t\t} else {\n\t\t\treturn Monogatari._preferences;\n\t\t}\n\t}\n\n\tstatic status (object = null) {\n\t\tif (object !== null) {\n\t\t\tMonogatari._status = Object.assign ({}, Monogatari._status, object);\n\t\t} else {\n\t\t\treturn Monogatari._status;\n\t\t}\n\t}\n\n\tstatic storage (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Monogatari._storage[object];\n\t\t\t} else {\n\t\t\t\tMonogatari._storage = merge (Monogatari._storage, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Monogatari._storage;\n\t\t}\n\t}\n\n\tstatic script (object = null) {\n\n\t\tif (typeof object === 'object' && object !== null) {\n\t\t\tMonogatari._script = Object.assign ({}, Monogatari._script, object);\n\t\t} else {\n\t\t\tlet script = Monogatari._script;\n\n\t\t\tif (Monogatari.setting ('MultiLanguage') === true) {\n\t\t\t\tif (!Object.keys (script).includes (Monogatari.preference ('Language'))) {\n\t\t\t\t\t// First check if the label exists in the current script\n\t\t\t\t\tFancyError.show (\n\t\t\t\t\t\t`Script Language \"${Monogatari.preference ('Language')}\" Was Not Found`,\n\t\t\t\t\t\t'Monogatari attempted to retrieve the script for this language but it does not exists',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'Language Not Found': Monogatari.preference ('Language'),\n\t\t\t\t\t\t\t'MultiLanguage Setting': 'The Multilanguage Setting is set to '+ Monogatari.setting ('MultiLanguage'),\n\t\t\t\t\t\t\t'You may have meant one of these': Object.keys (script),\n\t\t\t\t\t\t\t'Help': {\n\t\t\t\t\t\t\t\t'_': 'If your game is not a multilanguage game, change the setting on your options.js file',\n\t\t\t\t\t\t\t\t'_1': `\n\t\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\t\t\t\"MultiLanguage\": false,\n\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t\t'_2': 'If your game is a multilanguage game, please check that the language label is correctly written on your script. Remember a multilanguage script looks like this:',\n\t\t\t\t\t\t\t\t'_3': `\n\t\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\t\t\tMonogatari.script ({\n\t\t\t\t\t\t\t\t\t\t\t'English': {\n\t\t\t\t\t\t\t\t\t\t\t\t'Start': [\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Hi, welcome to your first Visual Novel with Monogatari.'\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t'Español': {\n\t\t\t\t\t\t\t\t\t\t\t\t'Start': [\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Hola, bienvenido a tu primer Novela Visual con Monogatari.'\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t\t'Documentation': '<a href=\"https://monogatari.io/documentation/configuration/internationalization/\" target=\"_blank\">Internationalization</a>',\n\t\t\t\t\t\t\t\t'_4': `If ${Monogatari.preference ('Language')} should not be the default language, you can change that preference on your options.js file.`,\n\t\t\t\t\t\t\t\t'_5': `\n\t\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\t\t\t'Language': 'English',\n\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t\t`,\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tscript = script[Monogatari.preference ('Language')];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tscript = script[object];\n\t\t\t}\n\n\t\t\treturn script;\n\t\t}\n\t}\n\n\tstatic label (key = null, language = null, value = null) {\n\t\tif (typeof language === 'string' && value !== null) {\n\t\t\tif (typeof Monogatari._script[language] !== 'object') {\n\t\t\t\tMonogatari._script[language] = {};\n\t\t\t}\n\t\t\tMonogatari._script[language][key] = value;\n\t\t} else if (typeof language === 'object' && language !== null && value === null) {\n\t\t\tif (typeof Monogatari._script[key] !== 'object') {\n\t\t\t\tMonogatari._script[key] = [];\n\t\t\t}\n\t\t\tMonogatari._script[key] = language;\n\t\t} else if (typeof language === 'string' && value === null) {\n\t\t\treturn Monogatari._script[language][key];\n\t\t} else if (key !== null) {\n\t\t\treturn Monogatari.script (key);\n\t\t} else {\n\t\t\treturn Monogatari.script (Monogatari.state ('label'));\n\t\t}\n\t}\n\n\tstatic fn (name, { apply = () => true, revert = () => true }) {\n\t\tif (typeof apply !== 'function' && typeof revert !== 'function') {\n\t\t\treturn Monogatari._functions [name];\n\t\t} else {\n\t\t\tMonogatari._functions [name] = {\n\t\t\t\tapply,\n\t\t\t\trevert\n\t\t\t};\n\t\t}\n\t}\n\n\tstatic globals (object = null) {\n\t\tif (object !== null) {\n\t\t\tMonogatari._globals = merge (Monogatari._globals, object);\n\t\t} else {\n\t\t\treturn Monogatari._globals;\n\t\t}\n\t}\n\n\tstatic global (key, value) {\n\t\tif (typeof value !== 'undefined') {\n\t\t\tMonogatari._globals[key] = value;\n\t\t} else {\n\t\t\treturn Monogatari._globals[key];\n\t\t}\n\t}\n\n\tstatic template (key, value) {\n\t\tif (typeof value !== 'undefined') {\n\t\t\tMonogatari._templates[key] = value;\n\t\t} else {\n\t\t\treturn Monogatari._templates[key];\n\t\t}\n\t}\n\n\tstatic mediaPlayers (key, object = false) {\n\t\tif (typeof key === 'string') {\n\t\t\tif (object) {\n\t\t\t\treturn Monogatari._mediaPlayers[key];\n\t\t\t} else {\n\t\t\t\treturn Object.values (Monogatari._mediaPlayers[key]);\n\t\t\t}\n\t\t}\n\t\treturn Monogatari._mediaPlayers;\n\t}\n\n\tstatic mediaPlayer (type, key, value) {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn Monogatari.mediaPlayers (type, true)[key];\n\t\t} else {\n\t\t\tvalue.dataset.type = type;\n\t\t\tvalue.dataset.key = key;\n\t\t\tMonogatari._mediaPlayers[type][key] = value;\n\t\t\treturn Monogatari._mediaPlayers[type][key];\n\t\t}\n\t}\n\n\tstatic removeMediaPlayer (type, key) {\n\t\tif (typeof key === 'undefined') {\n\t\t\tfor (const mediaKey of Object.keys (Monogatari.mediaPlayers (type, true))) {\n\t\t\t\tMonogatari._mediaPlayers[type][mediaKey].pause ();\n\t\t\t\tMonogatari._mediaPlayers[type][mediaKey].setAttribute ('src', '');\n\t\t\t\tMonogatari._mediaPlayers[type][mediaKey].currentTime = 0;\n\t\t\t\tdelete Monogatari._mediaPlayers[type][mediaKey];\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof Monogatari._mediaPlayers[type][key] !== 'undefined') {\n\t\t\t\tMonogatari._mediaPlayers[type][key].pause ();\n\t\t\t\tMonogatari._mediaPlayers[type][key].setAttribute ('src', '');\n\t\t\t\tMonogatari._mediaPlayers[type][key].currentTime = 0;\n\t\t\t\tdelete Monogatari._mediaPlayers[type][key];\n\t\t\t}\n\n\t\t}\n\t}\n\n\tstatic temp (key, value) {\n\t\tif (typeof value !== 'undefined') {\n\t\t\tMonogatari._temp[key] = value;\n\t\t} else {\n\t\t\tconst value = Monogatari._temp[key];\n\t\t\tdelete Monogatari._temp[key];\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t/**\n\t * Localize every element with a data-string property using the translations\n\t * available. If no translation is found for the current language, the current\n\t * text of the element will be kept.\n\t */\n\tstatic localize () {\n\n\t\t$_(`${Monogatari.selector} [data-string]`).each ((element) => {\n\t\t\tconst string_translation = Monogatari.string ($_(element).data ('string'));\n\n\t\t\t// Check if the translation actually exists and is not empty before\n\t\t\t// replacing the text.\n\t\t\tif (typeof string_translation !== 'undefined' && string_translation !== '') {\n\t\t\t\t$_(element).text (string_translation);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Preload game assets\n\t */\n\tstatic preload () {\n\t\tconst promises = [];\n\t\tlet assetCount = 0;\n\n\t\t// Check if asset preloading is enabled. Preloading will not be done in\n\t\t// electron or cordova since the assets are expected to be available\n\t\t// locally.\n\t\tif (Monogatari.setting ('Preload') && !Platform.electron () && !Platform.cordova () && location.protocol.indexOf ('file') < 0) {\n\n\t\t\t// Show loading screen\n\t\t\t$_('[data-screen=\"loading\"]').show ();\n\n\t\t\tfor (const category of Object.keys (Monogatari.assets ())) {\n\t\t\t\tfor (const asset of Object.values (Monogatari.assets (category))) {\n\t\t\t\t\tconst directory = `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath')[category]}`;\n\t\t\t\t\tif (FileSystem.isImage (asset)) {\n\n\t\t\t\t\t\tpromises.push (Preload.image (`${directory}/${asset}`).finally (() => {\n\t\t\t\t\t\t\t$_('[data-ui=\"load-progress\"]').value (parseInt($_('[data-ui=\"load-progress\"]').value ()) + 1);\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromises.push (Preload.file (`${directory}/${asset}`).finally (() => {\n\t\t\t\t\t\t\t$_('[data-ui=\"load-progress\"]').value (parseInt($_('[data-ui=\"load-progress\"]').value ()) + 1);\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tassetCount += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const character in Monogatari.characters ()) {\n\t\t\t\tlet directory = '';\n\n\t\t\t\t// Check if the character has a directory defined where its images\n\t\t\t\t// are located\n\t\t\t\tif (typeof character.directory !== 'undefined') {\n\t\t\t\t\tdirectory = character.directory + '/';\n\t\t\t\t}\n\t\t\t\tdirectory = `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').characters}/${directory}`;\n\n\t\t\t\tif (typeof character.sprites !== 'undefined') {\n\t\t\t\t\tfor (const image of Object.values (character.sprites)) {\n\t\t\t\t\t\tpromises.push (Preload.image (`${directory}${image}`).finally (() => {\n\t\t\t\t\t\t\t$_('[data-ui=\"load-progress\"]').value (parseInt($_('[data-ui=\"load-progress\"]').value ()) + 1);\n\t\t\t\t\t\t}));\n\t\t\t\t\t}character.\n\t\t\t\t\tassetCount += 1;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.expressions !== 'undefined') {\n\t\t\t\t\tfor (const image of Object.values (character.expressions)) {\n\t\t\t\t\t\tpromises.push (Preload.image (`${directory}${image}`).finally (() => {\n\t\t\t\t\t\t\t$_('[data-ui=\"load-progress\"]').value (parseInt($_('[data-ui=\"load-progress\"]').value ()) + 1);\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tassetCount += 1;\n\t\t\t\t}\n\n\t\t\t\tif (typeof character.default_expression !== 'undefined') {\n\t\t\t\t\tpromises.push (Preload.image (`${directory}${character.default_expression}`).finally (() => {\n\t\t\t\t\t\t$_('[data-ui=\"load-progress\"]').value (parseInt($_('[data-ui=\"load-progress\"]').value ()) + 1);\n\t\t\t\t\t}));\n\t\t\t\t\tassetCount += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$_('[data-ui=\"load-progress\"]').attribute ('max', assetCount);\n\t\t\treturn Promise.all (promises);\n\t\t} else {\n\t\t\treturn Promise.resolve ();\n\t\t}\n\t}\n\n\t/**\n\t * @static translate - This method will try to translate parts of a string\n\t * using the translation strings available. Any string containing a format\n\t * like this one: \"_(SomeKey)\" will get that replaced with the translated\n\t * string of that key.\n\t *\n\t * @param {string} statement - String to translate.\n\t *\n\t * @returns {string} - The translated string\n\t */\n\tstatic translate (statement) {\n\t\t// Find all elements in the string that match the \"_(key)\" format\n\t\tconst matches = statement.match (/_\\(\\S+\\)/g);\n\n\t\t// Check if any matches were found, if not then no translation is needed\n\t\tif (matches !== null) {\n\t\t\t// Go through all the found matches so we can get the string it maps to\n\t\t\tfor (const match of matches) {\n\t\t\t\t// Remove the _() from the key\n\t\t\t\tconst path = match.replace ('_(', '').replace (')', '').split ('.');\n\n\t\t\t\t// Retrieve the string from the translations using the given key\n\t\t\t\tlet data = Monogatari.translations (Monogatari.preference ('Language'))[path[0]];\n\n\t\t\t\tfor (let j = 1; j < path.length; j++) {\n\t\t\t\t\tdata = data[path[j]];\n\t\t\t\t}\n\t\t\t\tstatement = statement.replace (match, data);\n\t\t\t}\n\t\t}\n\t\treturn statement;\n\t}\n\n\tstatic replaceVariables (statement) {\n\t\tstatement = Monogatari.translate (statement);\n\t\tconst matches = statement.match (/{{\\S+?}}/g);\n\t\tif (matches !== null) {\n\t\t\tfor (const match of matches) {\n\t\t\t\tconst path = match.replace ('{{', '').replace ('}}', '').split ('.');\n\n\t\t\t\tlet data = Monogatari.storage (path[0]);\n\n\t\t\t\tfor (let j = 1; j < path.length; j++) {\n\t\t\t\t\tdata = data[path[j]];\n\t\t\t\t}\n\t\t\t\tstatement = statement.replace (match, data);\n\t\t\t}\n\n\t\t\treturn Monogatari.replaceVariables (statement);\n\t\t}\n\t\treturn statement;\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\tstatic addSlot (i, data) {\n\n\t\t// Check if the slot has an older format\n\t\tif (typeof data.Engine !== 'undefined') {\n\t\t\tdata.name = data.Name;\n\t\t\tdata.date = data.Date;\n\t\t\tdata.image = data.Engine.Scene;\n\t\t}\n\n\t\tconst slot = `${Monogatari.setting ('SaveLabel')}_${i}`;\n\t\tconst image  = Monogatari.asset ('scenes', data.image);\n\n\n\t\tconst name = data.name ? data.name : data.date;\n\n\t\t$_('[data-screen=\"load\"] [data-ui=\"slots\"] [data-string=\"NoSavedGames\"]').remove ();\n\t\t$_('[data-screen=\"save\"] [data-ui=\"slots\"] [data-string=\"NoSavedGames\"]').remove ();\n\n\t\t$_('[data-screen=\"load\"] [data-ui=\"saveSlots\"] [data-ui=\"slots\"]').append (Monogatari.component ('slot').render (slot, name, image, data));\n\t\t$_('[data-screen=\"save\"] [data-ui=\"slots\"]').append (Monogatari.component ('slot').render (slot, name, image, data));\n\t}\n\n\tstatic addAutoSlot (i, data) {\n\t\t// Check if the slot has an older format\n\t\tif (typeof data.Engine !== 'undefined') {\n\t\t\tdata.name = data.Name;\n\t\t\tdata.date = data.Date;\n\t\t\tdata.image = data.Engine.Scene;\n\t\t}\n\n\t\tconst slot = `${Monogatari.setting ('AutoSaveLabel')}_${i}`;\n\t\tconst image  = Monogatari.asset ('scenes', data.image);\n\n\n\t\tconst name = data.name ? data.name : data.date;\n\n\t\t$_('[data-screen=\"load\"] [data-ui=\"slots\"] [data-string=\"NoAutoSavedGames\"]').remove ();\n\t\t$_('[data-screen=\"load\"] [data-ui=\"autoSaveSlots\"] [data-ui=\"slots\"]').append (Monogatari.component ('slot').render (slot, name, image, data));\n\t}\n\n\t// Gets the highest number currently available as a slot id (Save_{?})\n\tstatic getMaxSlotId (prefix = 'SaveLabel') {\n\t\treturn Monogatari.Storage.keys ().then ((keys) => {\n\t\t\tlet max = 1;\n\t\t\tfor (const saveKey of keys) {\n\t\t\t\tif (saveKey.indexOf (Monogatari.setting (prefix)) === 0) {\n\t\t\t\t\tconst number = parseInt(saveKey.split (Monogatari.setting (prefix) + '_')[1]);\n\t\t\t\t\tif (number > max) {\n\t\t\t\t\t\tmax = number;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max;\n\t\t});\n\t}\n\n\tstatic saveTo (prefix = 'SaveLabel', id = null, name = null) {\n\t\t// Check if the player is actually playing\n\t\tif (Monogatari.global ('playing')) {\n\t\t\tconst date = moment ().format ();\n\n\t\t\tif (name === null || name.trim () === '') {\n\t\t\t\tname = date;\n\t\t\t}\n\n\t\t\t// We have to get the last ID available for the slots\n\t\t\treturn Monogatari.getMaxSlotId (prefix).then ((max) => {\n\n\t\t\t\t// Make it the next one to the max\n\t\t\t\tif (id === null) {\n\t\t\t\t\tid = max + 1;\n\t\t\t\t}\n\n\t\t\t\treturn Monogatari.Storage.set (`${Monogatari.setting (prefix)}_${id}`, {\n\t\t\t\t\tname,\n\t\t\t\t\tdate,\n\t\t\t\t\timage: Monogatari.state ('scene').split (' ')[2],\n\t\t\t\t\tgame: Monogatari.object ()\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @static loadFromSlot - Load a slot from the storage. This will recover the\n\t * state of the game from what was saved in it.\n\t *\n\t * @param {string} slot - The key with which the slot was saved on the storage\n\t */\n\tstatic loadFromSlot (slot) {\n\t\tdocument.body.style.cursor = 'wait';\n\t\tMonogatari.global ('playing', true);\n\n\t\tMonogatari.resetGame ().then (() => {\n\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide();\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).show();\n\n\t\t\tMonogatari.Storage.get (slot).then ((data) => {\n\t\t\t\t// Check if an older save format was used so we can transform\n\t\t\t\t// that information into the new format\n\t\t\t\tif (typeof data.Engine !== 'undefined') {\n\n\t\t\t\t\t// Set the game state\n\t\t\t\t\tMonogatari.state ({\n\t\t\t\t\t\tstep: data.Engine.Step,\n\t\t\t\t\t\tlabel: data.Engine.Label,\n\t\t\t\t\t\tscene: `show scene ${data.Engine.Scene}`,\n\t\t\t\t\t});\n\n\t\t\t\t\t// Retrieve if a song was playing so we can set it to the state\n\t\t\t\t\tif (data.Engine.Song !== '' && typeof data.Engine.Song !== 'undefined') {\n\t\t\t\t\t\tMonogatari.state ({\n\t\t\t\t\t\t\tmusic: [data.Engine.Song],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Retrieve if a sound was playing so we can set it to the state\n\t\t\t\t\tif (data.Engine.Sound !== '' && typeof data.Engine.Sound !== 'undefined') {\n\t\t\t\t\t\tMonogatari.state ({\n\t\t\t\t\t\t\tsound: [data.Engine.Sound],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Retrieve if particles were shown so we can set it to the state\n\t\t\t\t\tif (data.Engine.Particles !== '' && typeof data.Engine.Particles !== 'undefined') {\n\t\t\t\t\t\tMonogatari.state ({\n\t\t\t\t\t\t\tparticles: `show particles ${data.Engine.Particles}`\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if there are images to be shown\n\t\t\t\t\tif (data.Show !== '' && typeof data.Show !== 'undefined') {\n\t\t\t\t\t\tconst show = data.Show.split (',');\n\n\t\t\t\t\t\t// For every image saved, add their element to the game\n\t\t\t\t\t\tfor (const element of show) {\n\t\t\t\t\t\t\tif (element.trim () !== '') {\n\t\t\t\t\t\t\t\tconst div = document.createElement ('div');\n\t\t\t\t\t\t\t\tdiv.innerHTML =  element;\n\t\t\t\t\t\t\t\tconst item = $_(div.firstChild);\n\t\t\t\t\t\t\t\tif (element.indexOf ('data-character') > -1) {\n\t\t\t\t\t\t\t\t\tMonogatari.state ('characters').push (`show character ${item.data ('character')} ${item.data ('sprite')} ${item.get (0).className}`);\n\t\t\t\t\t\t\t\t} else if (element.indexOf ('data-image') > -1) {\n\t\t\t\t\t\t\t\t\tMonogatari.state ('characters').push (`show image ${item.data ('image')} ${item.get (0).className}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set all the history variables with the ones from the old\n\t\t\t\t\t// format\n\t\t\t\t\tMonogatari.history ({\n\t\t\t\t\t\tmusic: data.Engine.MusicHistory,\n\t\t\t\t\t\tsound: data.Engine.SoundHistory,\n\t\t\t\t\t\timage: data.Engine.ImageHistory,\n\t\t\t\t\t\tcharacter: data.Engine.CharacterHistory,\n\t\t\t\t\t\tscene: data.Engine.SceneHistory.map ((scene) => {\n\t\t\t\t\t\t\treturn `show scene ${scene}`;\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tsceneElements: data.Engine.SceneElements,\n\t\t\t\t\t\tparticle: data.Engine.ParticlesHistory.map ((particles) => {\n\t\t\t\t\t\t\treturn `show particles ${particles}`;\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t\tMonogatari.storage (data.Storage);\n\n\t\t\t\t} else {\n\t\t\t\t\t// If the new format is being used, things are a lot more simple\n\t\t\t\t\tconst { state, history, storage } = data.game;\n\t\t\t\t\tMonogatari.state (state);\n\t\t\t\t\tMonogatari.history (history);\n\t\t\t\t\tMonogatari.storage (storage);\n\t\t\t\t}\n\n\t\t\t\t// Run the onLoad event of all the actions\n\t\t\t\tconst promises = [];\n\t\t\t\tfor (const action of Monogatari.actions ()) {\n\t\t\t\t\tpromises.push (action.onLoad ());\n\t\t\t\t}\n\n\t\t\t\tPromise.all (promises).then (() => {\n\t\t\t\t\t// Finally show the game and start playing\n\t\t\t\t\t$_('[data-screen=\"game\"]').show ();\n\t\t\t\t\tMonogatari.run (Monogatari.label ()[Monogatari.state ('step')]);\n\t\t\t\t\tdocument.body.style.cursor = 'auto';\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @static assertAsync - This function will run any function asynchronously\n\t * regardless of if the function to be run is async or not.\n\t *\n\t * @param {function} callable - The function to run\n\t * @param {Object} [self=null] - The reference to `this` in the function\n\t * @param {any[]} [args=null] - The arguments with which to call the function\n\t * @returns {Promise} - Resolves if the function returned true and rejects if\n\t * the function returned false.\n\t */\n\tstatic assertAsync (callable, self = null, args = null) {\n\t\tMonogatari.global ('block', true);\n\t\treturn new Promise (function (resolve, reject) {\n\t\t\tconst result = callable.apply(self, args);\n\t\t\t// Check if the function returned a simple boolean\n\t\t\t// if the return value is true, the game will continue\n\t\t\tif (typeof result === 'boolean') {\n\t\t\t\tif (result) {\n\t\t\t\t\tresolve ();\n\t\t\t\t} else {\n\t\t\t\t\treject ();\n\t\t\t\t}\n\t\t\t} else if (typeof result === 'object') {\n\t\t\t\t// Check if the result was a promise\n\t\t\t\tif (typeof result.then != 'undefined') {\n\n\t\t\t\t\tresult.then(function (value) {\n\t\t\t\t\t\tif (typeof value === 'boolean') {\n\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\tresolve ();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treject ();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolve ();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @static canProceed - Check if the game can proceed\n\t *\n\t * @returns {Promise} - Resolves if the game can proceed or reject if it\n\t * can't proceed right now.\n\t */\n\tstatic canProceed () {\n\t\tconst promises = [];\n\n\t\tMonogatari.debug ().groupCollapsed ('canProceed Check');\n\t\t// Check action by action if they will allow the game to proceed\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tpromises.push (action.canProceed ().then (() => {\n\t\t\t\tMonogatari.debug ().debug (`OK ${action.id}`);\n\t\t\t}).catch ((e) => {\n\t\t\t\tMonogatari.debug ().debug (`FAIL ${action.id}\\nReason: ${e}`);\n\t\t\t\treturn Promise.reject (e);\n\t\t\t}));\n\t\t}\n\n\t\t// Check if the game is visible, if it's not, then it probably is not\n\t\t// playing or is looking at some menu and thus the game should not\n\t\t// proceed. The game will not proceed if it's blocked or if the distraction\n\t\t// free mode is enabled.\n\t\tif ($_('[data-screen=\"game\"]').isVisible ()\n\t\t\t&& !$_('[data-component=\"modal\"]').isVisible ()\n\t\t\t&& !Monogatari.global ('distraction-free')\n\t\t\t&& !Monogatari.global ('block')) {\n\t\t\tpromises.push (Promise.resolve ());\n\t\t} else {\n\t\t\tpromises.push (Promise.reject ());\n\t\t}\n\t\treturn Promise.all (promises).finally (() => {\n\t\t\tMonogatari.debug ().groupEnd ();\n\t\t});\n\t}\n\n\t/**\n\t * @static canRevert - Check if the game can revert\n\t *\n\t * @returns {Promise} - Resolves if the game can be reverted or reject if it\n\t * can't be reverted right now.\n\t */\n\tstatic canRevert () {\n\t\tconst promises = [];\n\n\t\tMonogatari.debug ().groupCollapsed ('canRevert Check');\n\t\t// Check action by action if they will allow the game to revert\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tpromises.push (action.canRevert ().then (() => {\n\t\t\t\tMonogatari.debug ().debug (`OK ${action.id}`);\n\t\t\t}).catch ((e) => {\n\t\t\t\tMonogatari.debug ().debug (`FAIL ${action.id}\\nReason: ${e}`);\n\t\t\t\treturn Promise.reject (e);\n\t\t\t}));\n\t\t}\n\n\t\t// Check if the game is visible, if it's not, then it probably is not\n\t\t// playing or is looking at some menu and thus the game should not\n\t\t// revert. The game will not revert if it's blocked or if the distraction\n\t\t// free mode is enabled.\n\t\tif ($_('[data-screen=\"game\"]').isVisible ()\n\t\t\t&& !Monogatari.global ('distraction-free')\n\t\t\t&& !Monogatari.global ('block')) {\n\t\t\tpromises.push (Promise.resolve ());\n\t\t} else {\n\t\t\tpromises.push (Promise.reject ());\n\t\t}\n\t\treturn Promise.all (promises).finally (() => {\n\t\t\tMonogatari.debug ().groupEnd ();\n\t\t});\n\t}\n\n\t/**\n\t * @static playAmbient - Play the main menu music using the key defined in the\n\t * 'MainScreenMusic' property of the game settings.\n\t */\n\tstatic playAmbient () {\n\t\t// Check if a menu music was defined\n\t\tif (Monogatari.setting ('MainScreenMusic') !== '') {\n\n\t\t\t// Make the ambient player loop\n\t\t\tMonogatari.ambientPlayer.setAttribute ('loop', '');\n\n\t\t\t// Check if the music was defined in the music assets object\n\t\t\tif (typeof Monogatari.asset ('music', Monogatari.setting ('MainScreenMusic')) !== 'undefined') {\n\n\t\t\t\t// Get the full path to the asset and set the src to the ambient player\n\t\t\t\tMonogatari.ambientPlayer.setAttribute('src', `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').music}/${Monogatari.asset ('music', Monogatari.setting ('MainScreenMusic'))}`);\n\n\t\t\t\t// Play the music but catch any errors. Error catching is necessary\n\t\t\t\t// since some browsers like chrome, have added some protections to\n\t\t\t\t// avoid media from being autoplayed. Because of these protections,\n\t\t\t\t// the user needs to interact with the page first before the media\n\t\t\t\t// is able to play.\n\t\t\t\tMonogatari.ambientPlayer.play ().catch (() => {\n\n\t\t\t\t\t// Create a broadcast message\n\t\t\t\t\tconst element = `\n\t\t\t\t\t\t<div data-ui=\"broadcast\">\n\t\t\t\t\t\t\t<p data-string=\"AllowPlayback\">${Monogatari.string ('AllowPlayback')}.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\n\t\t\t\t\t// Add it to the main menu and game screens\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen='main']`).prepend (element);\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).prepend (element);\n\n\t\t\t\t\t// Try to play the media again once the element has been clicked\n\t\t\t\t\t// and remove it.\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"broadcast\"]`).click (() => {\n\t\t\t\t\t\tthis.playAmbient ();\n\t\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"broadcast\"]`).remove ();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tFancyError.show (\n\t\t\t\t\t`The music \"${Monogatari.setting ('MainScreenMusic')}\" is not defined.`,\n\t\t\t\t\t'Monogatari attempted to find a definition of a music asset but there was none.',\n\t\t\t\t\t{\n\t\t\t\t\t\t'Music Not Found': Monogatari.setting ('MainScreenMusic'),\n\t\t\t\t\t\t'You may have meant one of these': Object.keys (Monogatari.assets ('music')),\n\t\t\t\t\t\t'Help': {\n\t\t\t\t\t\t\t'_': 'Please check that you have correctly defined this music asset and wrote its name correctly in the `MainScreenMusic` variable',\n\t\t\t\t\t\t\t'_1': `\n\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\t\t'MainScreenMusic': 'TheKeyToYourMusicAsset'\n\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Stop the main menu's music\n\tstatic stopAmbient () {\n\t\tif (!Monogatari.ambientPlayer.paused) {\n\t\t\tMonogatari.ambientPlayer.pause ();\n\t\t}\n\t}\n\n\tstatic resetGame () {\n\n\t\t$_('[data-component=\"modal\"]').removeClass ('modal--active');\n\n\t\t// Stop autoplay\n\t\tMonogatari.autoPlay (false);\n\n\t\t// Reset Storage\n\t\tMonogatari.storage (JSON.parse(Monogatari.global ('storageStructure')));\n\n\t\t// Reset Conditions\n\t\tMonogatari.state ({\n\t\t\tstep: 0,\n\t\t\tlabel: Monogatari.setting ('Label')\n\t\t});\n\n\t\tMonogatari.global ('block', false);\n\n\t\t// Reset History\n\t\tfor (const history of Object.keys (Monogatari._history)) {\n\t\t\tMonogatari._history[history] = [];\n\t\t}\n\n\t\t// Run the reset method of all the actions so each of them can reset\n\t\t// their own elements correctly\n\t\tconst promises = [];\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tpromises.push (action.reset ());\n\t\t}\n\n\t\tfor (const component of Monogatari.components ()) {\n\t\t\tpromises.push (component.reset ());\n\t\t}\n\n\t\treturn Promise.all (promises);\n\t}\n\n\tstatic next () {\n\t\t// Advance 1 step\n\t\tMonogatari.state ({\n\t\t\tstep: Monogatari.state ('step') + 1\n\t\t});\n\n\t\t// Clear the Stack using a Time Out instead of calling the function\n\t\t// directly, preventing an Overflow\n\t\tsetTimeout (Monogatari.run, 0, Monogatari.label ()[Monogatari.state ('step')]);\n\t}\n\n\tstatic previous () {\n\t\tMonogatari.revert ().catch (() => {\n\t\t\t// The game could not be reverted, either because an\n\t\t\t// action prevented it or because there are no statements\n\t\t\t// left to revert to.\n\t\t});\n\n\t}\n\n\t// Start game automatically without going trough the main menu\n\tstatic showMainScreen () {\n\t\tif (!Monogatari.setting ('ShowMainScreen')) {\n\t\t\tMonogatari.stopAmbient ();\n\t\t\tMonogatari.global ('playing', true);\n\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide ();\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).show ();\n\t\t\tMonogatari.run (Monogatari.label ()[Monogatari.state ('step')]);\n\t\t} else {\n\t\t\t// Play the main menu song\n\t\t\tMonogatari.playAmbient ();\n\t\t\t$_('[data-screen=\"main\"]').show ();\n\t\t}\n\t}\n\n\tstatic showSplashScreen () {\n\t\tconst labelName = Monogatari.setting ('SplashScreenLabel');\n\t\tif (typeof labelName === 'string' && labelName !== '') {\n\t\t\tconst label = Monogatari.label (labelName);\n\t\t\tif (typeof label !== 'undefined') {\n\t\t\t\tMonogatari.state ({\n\t\t\t\t\tlabel: labelName\n\t\t\t\t});\n\n\t\t\t\t$_('[data-ui=\"quick-menu\"]').hide ();\n\t\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide ();\n\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).show ();\n\t\t\t\tMonogatari.run (Monogatari.label ()[Monogatari.state ('step')]);\n\t\t\t} else {\n\t\t\t\tMonogatari.showMainScreen ();\n\t\t\t}\n\t\t} else {\n\t\t\tMonogatari.showMainScreen ();\n\t\t}\n\t}\n\n\tstatic keyboardShortcut (shortcut, callback) {\n\t\tmousetrap.bind (shortcut, (event) => {\n\t\t\tif (event.target.tagName.toLowerCase () != 'input') {\n\t\t\t\tevent.preventDefault ();\n\t\t\t\tcallback.call (null, event);\n\t\t\t}\n\t\t});\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//\n\n\t/**\n\t * @static autoPlay - Enable or disable the autoplay feature which allows the\n\t * game to play itself (of sorts), it will go through the dialogs alone but\n\t * will wait when user interaction is needed.\n\t *\n\t * @param {boolean} enable - Wether the auto play feature will be enabled (true)\n\t * or disabled (false);\n\t */\n\tstatic autoPlay (enable) {\n\t\tif (enable === true) {\n\t\t\t// The interval for autoplay speed is measured in minutes\n\t\t\tconst interval = Monogatari.preference ('AutoPlaySpeed') * 1000;\n\t\t\tlet expected = Date.now () + interval;\n\n\t\t\tMonogatari.global ('_AutoPlayTimer', () => {\n\t\t\t\tconst now = Date.now () - expected; // the drift (positive for overshooting)\n\t\t\t\tif (now > interval) {\n\t\t\t\t\t// something really bad happened. Maybe the browser (tab) was inactive?\n\t\t\t\t\t// possibly special handling to avoid futile \"catch up\" run\n\t\t\t\t}\n\t\t\t\tMonogatari.canProceed ().then (() => {\n\t\t\t\t\tMonogatari.next ();\n\t\t\t\t\texpected += interval;\n\t\t\t\t\tsetTimeout (Monogatari.global ('_AutoPlayTimer'), Math.max (0, interval - now)); // take into account drift\n\t\t\t\t}).catch (() => {\n\t\t\t\t\t// An action waiting for user interaction or something else\n\t\t\t\t\t// is blocking the game.\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetTimeout (Monogatari.global ('_AutoPlayTimer'), interval);\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"auto-play\"] [data-string]`).text (Monogatari.string ('Stop'));\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"auto-play\"] [data-icon]`).replaceWith ('<span class=\"fas fa-stop-circle\"></span>');\n\t\t} else {\n\t\t\tclearTimeout (Monogatari.global ('_AutoPlayTimer'));\n\t\t\tMonogatari.global ('_AutoPlayTimer', null);\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"auto-play\"] [data-string]`).text (Monogatari.string ('AutoPlay'));\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"auto-play\"] [data-icon]`).replaceWith ('<span class=\"fas fa-play-circle\"></span>');\n\t\t}\n\t}\n\n\t/**\n\t * @static distractionFree - Enable or disable the distraction free mode\n\t * where the dialog box is hidden so that the player can look at the characters\n\t * and background with no other elements on the way. A 'transparent' class\n\t * is added to the quick menu when this mode is enabled.\n\t */\n\tstatic distractionFree () {\n\t\tif (Monogatari.global ('playing')) {\n\t\t\t// Check if the distraction free is currently enabled\n\t\t\tif (Monogatari.global ('distraction-free') === true) {\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"distraction-free\"] [data-string]`).text (Monogatari.string ('Hide'));\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"distraction-free\"] [data-icon]`).replaceWith ('<span class=\"fas fa-eye\" data-action=\"distraction-free\"></span>');\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"]`).removeClass ('transparent');\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).show ();\n\t\t\t\tMonogatari.global ('distraction-free', false);\n\t\t\t} else {\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"distraction-free\"] [data-string]`).text (Monogatari.string ('Show'));\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"distraction-free\"] [data-icon]`).replaceWith ('<span class=\"fas fa-eye-slash\" data-action=\"distraction-free\"></span>');\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"]`).addClass ('transparent');\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).hide();\n\t\t\t\tMonogatari.global ('distraction-free', true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @static object - Get all the relevant information of the game state\n\t *\n\t * @returns {Object} - An object containing the current histories, state and\n\t * storage variables.\n\t * @returns {Object} history - The full history object\n\t * @returns {Object} state - The full state object\n\t * @returns {Object} storage- The full storage object\n\t */\n\tstatic object () {\n\t\treturn {\n\t\t\thistory: Monogatari.history (),\n\t\t\tstate: Monogatari.state (),\n\t\t\tstorage: Monogatari.storage ()\n\t\t};\n\t}\n\n\t/**\n\t * @static revert - This is the function that allows to go back in the game\n\t * by reverting the statements played.\n\t *\n\t * @returns {Promise} - Whether the game was able to go back or not\n\t */\n\tstatic revert (statement = null, shouldAdvance = true) {\n\n\t\tMonogatari.debug ().groupCollapsed ('Revert Cycle');\n\n\t\t// Check if we have steps behind us to revert to. If there aren't, then\n\t\t// we can't revert since we are already at the first statement.\n\t\tlet actionToRevert = null;\n\n\t\tif (statement !== null) {\n\t\t\tactionToRevert = statement;\n\t\t} else if (Monogatari.state ('step') >= 1) {\n\t\t\tactionToRevert = Monogatari.label ()[Monogatari.state ('step') - 1];\n\t\t} else {\n\t\t\tconst jump = Monogatari.history ('jump').reverse ().find (o => {\n\t\t\t\treturn o.destination.label === Monogatari.state ('label') && o.destination.step === 0;\n\t\t\t});\n\n\t\t\tif (typeof jump !== 'undefined') {\n\t\t\t\tMonogatari.state ({\n\t\t\t\t\tlabel: jump.source.label,\n\t\t\t\t\tstep: jump.source.step\n\t\t\t\t});\n\t\t\t\tactionToRevert = Monogatari.label ()[Monogatari.state ('step')];\n\t\t\t}\n\t\t}\n\n\t\tMonogatari.debug ().debug ('Reverting Action', actionToRevert);\n\n\t\tif (actionToRevert !== null) {\n\n\t\t\t// Iterate over all the registered actions to find one that matches with\n\t\t\t// the statement to revert.\n\t\t\tfor (const action of Monogatari.actions ()) {\n\t\t\t\tlet actionStatement = actionToRevert;\n\t\t\t\tlet matches = false;\n\n\t\t\t\t// Use the correct matching function (matchString or matchObject)\n\t\t\t\t// depending on the type of the current statement. If the statement\n\t\t\t\t// is a pure js function, it won't be reverted since we don't\n\t\t\t\t// know what to do to revert it.\n\t\t\t\tif (typeof actionStatement === 'string') {\n\t\t\t\t\t// Split the statement into an array using the space separations\n\t\t\t\t\tactionStatement = actionStatement.split (' ');\n\n\t\t\t\t\t// Check if it matches using the matchString method\n\t\t\t\t\tmatches = action.matchString (actionStatement);\n\t\t\t\t} else if (typeof actionStatement === 'object') {\n\t\t\t\t\t// Check if it matches using the matchObject method\n\t\t\t\t\tmatches = action.matchObject (actionStatement);\n\t\t\t\t}\n\n\t\t\t\t// Check if the statement matched any of the registered actions\n\t\t\t\tif (matches === true) {\n\t\t\t\t\t// Create an instance of the action and initialize it with the\n\t\t\t\t\t// current statement\n\t\t\t\t\tconst act = new action (actionStatement);\n\n\t\t\t\t\t// The original statement is set just in case the action needs\n\t\t\t\t\t// access to it\n\t\t\t\t\tact._setStatement (actionStatement);\n\n\t\t\t\t\t// The current cycle is also set just in case the action needs to\n\t\t\t\t\t// know what cycle it's currently being performed.\n\t\t\t\t\tact._setCycle ('Revert');\n\n\t\t\t\t\t// Monogatari is set as the context of the action so that it can\n\t\t\t\t\t// access all its functionalities\n\t\t\t\t\tact.setContext (Monogatari);\n\n\t\t\t\t\t// Run the willRevert method of the action first. This method\n\t\t\t\t\t// is usually used to tell whether an action can be reverted\n\t\t\t\t\t// or not.\n\t\t\t\t\treturn act.willRevert ().then (() => {\n\t\t\t\t\t\tMonogatari.debug ().debug ('Action Will Revert');\n\t\t\t\t\t\t// If it can be reverted, then run the revert method\n\t\t\t\t\t\treturn act.revert ().then (() => {\n\t\t\t\t\t\t\tMonogatari.debug ().debug ('Action Reverting');\n\t\t\t\t\t\t\t// If the reversion was successful, run the didRevert\n\t\t\t\t\t\t\t// function. The action will return a boolean (shouldContinue)\n\t\t\t\t\t\t\t// specifying if the game should go ahead and revert\n\t\t\t\t\t\t\t// the previous statement as well or if it should\n\t\t\t\t\t\t\t// wait instead\n\t\t\t\t\t\t\treturn act.didRevert ().then (({ advance, step }) => {\n\t\t\t\t\t\t\t\tMonogatari.debug ().debug ('Action Did Revert');\n\t\t\t\t\t\t\t\t// Since we reverted correctly, the step should\n\t\t\t\t\t\t\t\t// go back.\n\t\t\t\t\t\t\t\tif (step === true) {\n\t\t\t\t\t\t\t\t\tMonogatari.state ({\n\t\t\t\t\t\t\t\t\t\tstep: Monogatari.state ('step') - 1\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Revert the previous statement if the action\n\t\t\t\t\t\t\t\t// told us to.\n\t\t\t\t\t\t\t\tif (advance === true && shouldAdvance === true) {\n\t\t\t\t\t\t\t\t\t// Clear the Stack using a Time Out instead\n\t\t\t\t\t\t\t\t\t// of calling the function directly, preventing\n\t\t\t\t\t\t\t\t\t// an Overflow\n\t\t\t\t\t\t\t\t\tsetTimeout (Monogatari.revert, 0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tMonogatari.debug ().trace ();\n\t\t\t\t\t\t\t\tMonogatari.debug ().groupEnd ();\n\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch ((e) => {\n\t\t\t\t\t\tif (typeof e === 'object' || typeof e === 'string') {\n\t\t\t\t\t\t\tconsole.error (e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Clear the Stack using a Time Out instead of calling\n\t\t\t\t\t\t// the function directly, preventing an Overflow\n\t\t\t\t\t\tsetTimeout (Monogatari.run, 0, Monogatari.label ()[Monogatari.state ('step')]);\n\n\t\t\t\t\t\tMonogatari.debug ().trace ();\n\t\t\t\t\t\tMonogatari.debug ().groupEnd ();\n\n\t\t\t\t\t\treturn Promise.resolve ();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Clear the Stack using a Time Out instead of calling\n\t\t\t// the function directly, preventing an Overflow\n\t\t\tsetTimeout (Monogatari.run, 0, Monogatari.label ()[Monogatari.state ('step')]);\n\t\t\tMonogatari.debug ().trace ();\n\t\t\tMonogatari.debug ().groupEnd ();\n\n\t\t\treturn Promise.resolve ();\n\t\t}\n\t\tMonogatari.debug ().trace ();\n\t\tMonogatari.debug ().groupEnd ();\n\t\treturn Promise.reject ();\n\t}\n\n\t/**\n\t * @static run - Run a specified statement.\n\t *\n\t * @param {string|Object|function} statement - The Monogatari statement to run\n\t * @param {boolean} advance - Whether the game should advance or wait for user\n\t * interaction. This parameter is mainly used to prevent the game from advancing\n\t * when loading the game or performing some actions and we don't want them to\n\t * affect the game flow.\n\t *\n\t * @returns {Promise} - Resolves if the statement was run correctly or rejects\n\t * if it couldn't be run correctly.\n\t */\n\tstatic run (statement, shouldAdvance = true) {\n\t\tMonogatari.debug ().groupCollapsed ('Run Cycle');\n\n\t\t// Don't allow null as a valid statement\n\t\tif (statement === null) {\n\t\t\treturn Promise.reject ();\n\t\t}\n\n\t\tMonogatari.debug ().debug ('Running Action', statement);\n\n\t\t// Iterate over all the registered actions to find one that matches with\n\t\t// the statement to run.\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tlet actionStatement = statement;\n\t\t\tlet matches = false;\n\n\t\t\t// Use the correct matching function (matchString or matchObject)\n\t\t\t// depending on the type of the current statement. If the statement\n\t\t\t// is a function, it will simply be run.\n\t\t\tif (typeof statement === 'string') {\n\t\t\t\t// Split the statement into an array using the space separations\n\t\t\t\tactionStatement = Monogatari.replaceVariables (statement).split (' ');\n\n\t\t\t\t// Check if it matches using the matchString method\n\t\t\t\tmatches = action.matchString (actionStatement);\n\t\t\t} else if (typeof statement === 'object') {\n\t\t\t\t// Check if it matches using the matchObject method\n\t\t\t\tmatches = action.matchObject (statement);\n\t\t\t} else if (typeof actionStatement === 'function') {\n\t\t\t\t// Block the game while the function is being run\n\t\t\t\tMonogatari.global ('block', true);\n\n\t\t\t\t// Run the function asynchronously and after it has run, unblock\n\t\t\t\t// the game so it can continue.\n\t\t\t\treturn Util.callAsync (actionStatement, Monogatari).finally (() => {\n\t\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\t\tif (shouldAdvance) {\n\t\t\t\t\t\treturn Monogatari.next ();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Check if the statement matched any of the registered actions\n\t\t\tif (matches === true) {\n\t\t\t\t// Create an instance of the action and initialize it with the\n\t\t\t\t// current statement\n\t\t\t\tconst act = new action (actionStatement);\n\n\t\t\t\t// The original statement is set just in case the action needs\n\t\t\t\t// access to it\n\t\t\t\tact._setStatement (statement);\n\n\t\t\t\t// The current cycle is also set just in case the action needs to\n\t\t\t\t// know what cycle it's currently being performed.\n\t\t\t\tact._setCycle ('Application');\n\n\t\t\t\t// Monogatari is set as the context of the action so that it can\n\t\t\t\t// access all its functionalities\n\t\t\t\tact.setContext (Monogatari);\n\n\t\t\t\t// Run the willApply method of the action first\n\t\t\t\treturn act.willApply ().then (() => {\n\t\t\t\t\tMonogatari.debug ().debug ('Action Will Apply');\n\n\t\t\t\t\t// Run the apply method\n\t\t\t\t\treturn act.apply (shouldAdvance).then (() => {\n\t\t\t\t\t\tMonogatari.debug ().debug ('Action Applying');\n\n\t\t\t\t\t\t// If everything has been run correctly, then run the\n\t\t\t\t\t\t// didApply method. The action will return a boolean\n\t\t\t\t\t\t// (shouldContinue) specifying if the game should run the\n\t\t\t\t\t\t// next statement right away or if it should wait instead\n\t\t\t\t\t\treturn act.didApply ().then (({ advance }) => {\n\t\t\t\t\t\t\tMonogatari.debug ().debug ('Action Did Apply');\n\t\t\t\t\t\t\tif (advance === true && shouldAdvance === true) {\n\t\t\t\t\t\t\t\tMonogatari.debug ().debug ('Next action will be run right away');\n\t\t\t\t\t\t\t\tMonogatari.next ();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tMonogatari.debug ().trace ();\n\t\t\t\t\t\t\tMonogatari.debug ().groupEnd ();\n\t\t\t\t\t\t}).catch ((e) => {\n\t\t\t\t\t\t\tMonogatari.debug ().debug (`Did Apply Failed.\\nReason: ${e}`);\n\t\t\t\t\t\t\treturn Promise.reject (e);\n\t\t\t\t\t\t});;\n\t\t\t\t\t}).catch ((e) => {\n\t\t\t\t\t\tMonogatari.debug ().debug (`Application Failed.\\nReason: ${e}`);\n\t\t\t\t\t\treturn Promise.reject (e);\n\t\t\t\t\t});\n\t\t\t\t}).catch (() => {\n\t\t\t\t\tMonogatari.debug ().trace ();\n\t\t\t\t\tMonogatari.debug ().groupEnd ();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tMonogatari.debug ().trace ();\n\t\tMonogatari.debug ().groupEnd ();\n\t}\n\n\tstatic setup (selector) {\n\t\t// Set the initial settings if they don't exist or load them from the\n\t\t// Storage if they do.\n\t\tMonogatari.Storage.get ('Settings').then ((local_settings) => {\n\t\t\tMonogatari._preferences = merge (Monogatari._preferences, local_settings);\n\t\t}).catch (() => {\n\t\t\tMonogatari.Storage.set ('Settings', Monogatari._preferences);\n\t\t});\n\n\t\t// Register service worker. The service worker will save all requests into\n\t\t// the cache so the game loads more quickly and we can play offline. The\n\t\t// service worker will only be used if it was allowed by the settings and\n\t\t// if we are not running in a local platform such as electron or cordova\n\t\t// where the assets are expected to be available locally and thus don't\n\t\t// require being cached.\n\t\tif (Monogatari.setting ('ServiceWorkers')) {\n\t\t\tif (!Platform.electron () && !Platform.cordova () && Platform.serviceWorkers ()) {\n\t\t\t\t// TODO: There's a place in hell for this quick fix, the splitting\n\t\t\t\t// of the sw file is just preventing parcel from trying to bundle it\n\t\t\t\t// when building the core libraries.\n\t\t\t\tnavigator.serviceWorker.register ('./../service-worker' + '.js').then ((registration) => {\n\n\t\t\t\t\t// Check if an update to the service worker was found\n\t\t\t\t\tregistration.onupdatefound = () => {\n\t\t\t\t\t\tconst worker = registration.installing;\n\t\t\t\t\t\tworker.onstatechange = () => {\n\t\t\t\t\t\t\t// Once the updated service worker has been installed,\n\t\t\t\t\t\t\t// show a notice to the players so that they reload the\n\t\t\t\t\t\t\t// page and get the latest content.\n\t\t\t\t\t\t\tif (worker.state === 'installed') {\n\t\t\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t\t\tconst element = `\n\t\t\t\t\t\t\t\t\t\t<div data-ui=\"broadcast\">\n\t\t\t\t\t\t\t\t\t\t\t<p data-string=\"NewContent\">${Monogatari.string ('NewContent')}.</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t\t\t\t$_(`${selector} [data-screen='main']`).prepend (element);\n\t\t\t\t\t\t\t\t\t$_(`${selector} [data-screen=\"game\"]`).prepend (element);\n\t\t\t\t\t\t\t\t\t$_(`${selector} [data-ui=\"broadcast\"]`).click (() => {\n\t\t\t\t\t\t\t\t\t\t$_(`${selector} [data-ui=\"broadcast\"]`).remove ();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.warn ('Service Workers are not available in this browser or have been disabled in the engine configuration. Service Workers are available only when serving your files through a server, once you upload your game this warning will go away. You can also try using a simple server like this one for development: https://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb/');\n\t\t\t}\n\t\t}\n\n\t\t// Save the structure of the storage variable. The structure is saved as\n\t\t// a string so that we have a reference to how the storage was originally\n\t\t// and we can reset the storage when the game ends.\n\t\tMonogatari.global ('storageStructure', JSON.stringify(Monogatari.storage ()));\n\n\t\t// The open-screen action does exactly what it says, it takes the\n\t\t// data-screen property of the object it's in and then opens that\n\t\t// menu, meaning it hides everything else and shows that one.\n\t\tMonogatari.registerListener ('open-screen', {\n\t\t\tcallback: (element) => {\n\t\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide();\n\n\t\t\t\tif (element.data ('open') == 'save') {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"save\"] [data-input=\"slotName\"]`).value (moment ().format ('MMMM Do YYYY, h:mm:ss a'));\n\t\t\t\t}\n\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"${element.data('open')}\"]`).show ();\n\t\t\t}\n\t\t});\n\n\t\t// The start action starts the game so it shows the game screen\n\t\t// and the game starts\n\t\tMonogatari.registerListener ('start', {\n\t\t\tcallback: () => {\n\t\t\t\tMonogatari.stopAmbient();\n\t\t\t\tMonogatari.global ('playing', true);\n\n\t\t\t\tMonogatari.onStart ().then (() => {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide ();\n\t\t\t\t\t$_('[data-ui=\"quick-menu\"]').show ();\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).show ();\n\n\t\t\t\t\t// Check if the initial label exists\n\t\t\t\t\tif (Monogatari.label ()) {\n\t\t\t\t\t\tMonogatari.run (Monogatari.label ()[Monogatari.state ('step')]);\n\t\t\t\t\t} else {\n\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// The close action removes the active class from the element it\n\t\t// points to.\n\t\tMonogatari.registerListener ('close', {\n\t\t\tcallback: (element) => {\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"${element.data('close')}\"]`).removeClass('modal--active');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tMonogatari.registerListener ('dismiss-notice', {\n\t\t\tcallback: () => {\n\t\t\t\t$_(`${Monogatari.selector} [data-notice]`).removeClass('modal--active');\n\t\t\t}\n\t\t});\n\n\t\tMonogatari.registerListener ('distraction-free', {\n\t\t\tkeys: 'h',\n\t\t\tcallback: () => {\n\t\t\t\tMonogatari.distractionFree ();\n\t\t\t}\n\t\t});\n\n\t\tMonogatari.registerListener ('skip', {\n\t\t\tkeys: 's',\n\t\t\tcallback: () => {\n\t\t\t\tif (Monogatari.global ('playing')) {\n\t\t\t\t\tif (Monogatari.global ('skip') !== null) {\n\t\t\t\t\t\tMonogatari.skip (false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tMonogatari.skip (true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Add listener to the auto-play buttons, activating or deactivating the\n\t\t// auto-play feature\n\t\tMonogatari.registerListener ('auto-play', {\n\t\t\tcallback: () => {\n\t\t\t\tMonogatari.autoPlay (Monogatari.global ('_AutoPlayTimer') === null);\n\t\t\t}\n\t\t});\n\n\t\tconst promises = [];\n\n\t\tfor (const component of Monogatari.components ()) {\n\t\t\tpromises.push (component.setup (selector));\n\t\t}\n\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tpromises.push (action.setup (selector));\n\t\t}\n\t\treturn Promise.all (promises);\n\t}\n\t/**\n\t * @static skip - Enable or disable the skip mode which is similar to auto\n\t * play but simply skips fast through the game.\n\t *\n\t * @param {boolean} enable - Wether it should be enabled (true) or disabled (false)\n\t */\n\tstatic skip (enable) {\n\t\tif (enable === true) {\n\t\t\t// Check if Skip was enabled on the settings, if it has a value greater\n\t\t\t// than 0, it represents the speed with which the game will skip through\n\t\t\t// statements. If it's lesser or equal to 0 then it's disabled.\n\t\t\tif (Monogatari.setting ('Skip') > 0) {\n\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"skip\"] [data-icon]`).replaceWith ('<span class=\"far fa-play-circle\"></span>');\n\n\t\t\t\t// Start the timeout with the time specified on the settings. We\n\t\t\t\t// save it on a global variable so that we can disable later.\n\t\t\t\tMonogatari.global ('skip', setTimeout (() => {\n\t\t\t\t\tMonogatari.canProceed ().then (() => {\n\t\t\t\t\t\tMonogatari.next ();\n\t\t\t\t\t}).catch (() => {\n\t\t\t\t\t\t// An action waiting for user interaction or something else\n\t\t\t\t\t\t// is blocking the game.\n\t\t\t\t\t});\n\n\t\t\t\t\t// Start all over again\n\t\t\t\t\tMonogatari.skip (true);\n\t\t\t\t}, Monogatari.setting ('Skip')));\n\t\t\t}\n\t\t} else {\n\t\t\tclearTimeout (Monogatari.global ('skip'));\n\t\t\tMonogatari.global ('skip', null);\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"quick-menu\"] [data-action=\"skip\"] [data-icon]`).replaceWith ('<span class=\"fas fa-fast-forward\"></span>');\n\t\t}\n\t}\n\n\tstatic registerListener (name, listener, replace = false) {\n\t\tlistener.name = name;\n\t\tif (replace === true) {\n\t\t\tconst index = Monogatari._listeners.findIndex (listener => listener.name === name);\n\n\t\t\tif (index > -1) {\n\t\t\t\tMonogatari._listeners[index] = listener;\n\t\t\t} else {\n\t\t\t\tMonogatari._listeners.push (listener);\n\t\t\t}\n\t\t} else {\n\t\t\tMonogatari._listeners.push (listener);\n\t\t}\n\t}\n\n\tstatic runListener (name, element, event) {\n\t\tconst promises = [];\n\n\t\t// Check if the click event happened on a path of an icon.\n\t\t// This fixes a bug with font-awesome icons being clicked but the\n\t\t// click being registered at an inner path instead of the svg element\n\t\t// that holds the data information\n\t\tif (element.matches ('path')) {\n\t\t\telement = element.closest ('[data-action]');\n\n\t\t\tif (element.length > 0) {\n\t\t\t\tname = element.data ('action');\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of Monogatari._listeners) {\n\t\t\tif (listener.name === name) {\n\t\t\t\tpromises.push (Monogatari.assertAsync (listener.callback , Monogatari, [element, event]).finally (() => {\n\t\t\t\t\t// Unblock the game so the player can continue\n\t\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\t}));\n\t\t\t\tMonogatari.debug ().debug ('Running Listener', name);\n\t\t\t}\n\t\t}\n\n\t\tPromise.all (promises).catch (() => {\n\t\t\tevent.stopImmediatePropagation ();\n\t\t\tevent.stopPropagation ();\n\t\t\tevent.preventDefault ();\n\t\t\tMonogatari.debug ().debug ('Listener Event Propagation Stopped');\n\t\t});\n\t}\n\n\t/**\n\t * Every event listener should be binded in this function.\n\t */\n\tstatic bind (selector) {\n\n\t\t// Add the orientation checker in case that a specific orientation was\n\t\t// defined.\n\t\tif (Monogatari.setting ('Orientation') !== 'any' && Platform.mobile ()) {\n\n\t\t\t// Set the event listener for device orientation so we can display a message\n\t\t\twindow.addEventListener ('orientationchange', () => {\n\n\t\t\t\t// Display or remove the device orientation notice depending on the\n\t\t\t\t// current device orientation\n\t\t\t\tif (Platform.orientation () !== Monogatari.setting ('Orientation')) {\n\t\t\t\t\t$_(`${selector} [data-notice=\"orientation\"]`).addClass ('modal--active');\n\t\t\t\t} else {\n\t\t\t\t\t$_(`${selector} [data-notice=\"orientation\"]`).removeClass ('modal--active');\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\t// Add event listener for back buttons. If the player is playing, the back\n\t\t// button will return to the game, if its not playing, then it'll return\n\t\t// to the main menu.\n\t\t$_(`${selector}`).on ('click', '[data-screen] [data-action=\"back\"]:not([data-screen=\"game\"]), [data-screen] [data-action=\"back\"]:not([data-screen=\"game\"]) *', (event) => {\n\n\t\t\tif (!$_(`${selector} [data-screen=\"game\"]`).isVisible ()) {\n\t\t\t\tMonogatari.debug ().debug ('Registered Back Listener on Non-Game Screen');\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t\t$_(`${selector} [data-screen]`).hide ();\n\t\t\t\tif (Monogatari.global ('playing')) {\n\t\t\t\t\t$_(`${selector} [data-screen=\"game\"]`).show ();\n\t\t\t\t} else {\n\t\t\t\t\t$_(`${selector} [data-screen=\"main\"]`).show ();\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t\t// Add listeners for the data-action properties\n\t\t$_(`${selector}`).on ('click', '[data-action], [data-action] *', function (event) {\n\t\t\tlet element = $_(this);\n\n\t\t\tif (element.matches ('path')) {\n\t\t\t\telement = element.closest ('[data-action]');\n\t\t\t}\n\n\t\t\tconst action = element.data ('action');\n\n\t\t\tMonogatari.runListener (action, element, event);\n\t\t});\n\n\t\tfor (const listener of Monogatari._listeners) {\n\t\t\tconst { keys, callback } = listener;\n\t\t\tif (typeof keys !== 'undefined') {\n\t\t\t\tMonogatari.keyboardShortcut (keys, callback);\n\t\t\t}\n\t\t}\n\n\t\tMonogatari.keyboardShortcut (['right', 'space'], () => {\n\t\t\tMonogatari.canProceed ().then (() => {\n\t\t\t\tMonogatari.next ();\n\t\t\t}).catch (() => {\n\t\t\t\t// An action waiting for user interaction or something else\n\t\t\t\t// is blocking the game.\n\t\t\t});\n\t\t});\n\n\t\tMonogatari.keyboardShortcut ('esc', () => {\n\t\t\tif ($_(`${selector} [data-screen=\"game\"]`).isVisible () && Monogatari.global ('playing')) {\n\t\t\t\t$_(`${selector} [data-screen=\"game\"]`).hide ();\n\t\t\t\t$_(`${selector} [data-screen=\"settings\"]`).show();\n\t\t\t} else if ($_(`${selector} [data-screen=\"settings\"]`).isVisible () && Monogatari.global ('playing')) {\n\t\t\t\t$_(`${selector} [data-screen=\"settings\"]`).hide ();\n\t\t\t\t$_(`${selector} [data-screen=\"game\"]`).show ();\n\t\t\t}\n\t\t});\n\n\t\tMonogatari.keyboardShortcut ('shift+s', () => {\n\t\t\tif (Monogatari.global ('playing')) {\n\t\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide();\n\n\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"save\"] [data-input=\"slotName\"]`).value (moment ().format ('MMMM Do YYYY, h:mm:ss a'));\n\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"save\"]`).show();\n\t\t\t}\n\t\t});\n\n\t\tMonogatari.keyboardShortcut ('shift+l', () => {\n\t\t\tif (Monogatari.global ('playing')) {\n\t\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide();\n\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"load\"]`).show();\n\t\t\t}\n\t\t});\n\n\t\tMonogatari.keyboardShortcut ('shift+q', () => {\n\t\t\tif (Monogatari.global ('playing')) {\n\t\t\t\t$_(`${Monogatari.selector} [data-notice=\"exit\"]`).addClass ('modal--active');\n\t\t\t}\n\t\t});\n\n\t\tconst promises = [];\n\n\t\tfor (const component of Monogatari.components ()) {\n\t\t\tpromises.push (component.bind (selector));\n\t\t}\n\n\t\tfor (const action of Monogatari.actions ()) {\n\t\t\tpromises.push (action.bind (selector));\n\t\t}\n\t\treturn Promise.all (promises);\n\t}\n\n\tstatic upgrade (oldVersion, newVersion, callbacks) {\n\t\tMonogatari._upgrade[`${oldVersion}::${newVersion}`] = callbacks;\n\t}\n\n\tstatic setupStorage () {\n\t\t// Check if an Adapter has been set or else, the global local storage\n\t\t// object will be used\n\t\tif (Monogatari.setting ('Storage').Adapter.trim () !== '') {\n\t\t\tlet adapter;\n\n\t\t\tswitch (Monogatari.setting ('Storage').Adapter) {\n\t\t\t\tcase 'LocalStorage':\n\t\t\t\t\tadapter = SpaceAdapter.LocalStorage;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SessionStorage':\n\t\t\t\t\tadapter = SpaceAdapter.SessionStorage;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'IndexedDB':\n\t\t\t\t\tadapter = SpaceAdapter.IndexedDB;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RemoteStorage':\n\t\t\t\t\tadapter = SpaceAdapter.RemoteStorage;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tadapter = SpaceAdapter.LocalStorage;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tMonogatari.Storage = new Space (adapter, {\n\t\t\t\tname: Text.friendly (Monogatari.setting ('Name')),\n\t\t\t\tversion: Monogatari.setting ('Version'),\n\t\t\t\tstore:  Monogatari.setting ('Storage').Store,\n\t\t\t\tendpoint: Monogatari.setting ('Storage').Endpoint,\n\t\t\t\tprops: {\n\t\t\t\t\tkeyPath: 'id'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Setup all the upgrade functions\n\t\tfor (const upgrade of Object.keys (Monogatari._upgrade)) {\n\t\t\tconst [oldVersion, newVersion] = upgrade.split ('::');\n\t\t\tconst callback = Monogatari._upgrade[upgrade].storage;\n\n\t\t\tMonogatari.Storage.upgrade (oldVersion, newVersion, callback);\n\t\t}\n\t}\n\n\tstatic init (selector = '#monogatari') {\n\n\t\tif (Monogatari.Storage.configuration ().name === '') {\n\t\t\tMonogatari.setupStorage ();\n\t\t}\n\n\t\tMonogatari.selector = selector;\n\t\tFancyError.init ();\n\n\t\tMonogatari.setup (selector).then (() => {\n\t\t\tMonogatari.bind (selector).then (() => {\n\n\t\t\t\t// Set the initial language translations\n\t\t\t\tMonogatari.localize ();\n\n\t\t\t\t// Set the label in which the game will start\n\t\t\t\tMonogatari.state ({\n\t\t\t\t\tlabel: Monogatari.setting ('Label')\n\t\t\t\t});\n\n\t\t\t\t// Check if the orientation is correct, if it's not, show the warning\n\t\t\t\t// message so the player will rotate its device.\n\t\t\t\tif (Monogatari.setting ('Orientation') !== 'any') {\n\t\t\t\t\tif (Platform.mobile () && Platform.orientation () !== Monogatari.setting ('Orientation')) {\n\t\t\t\t\t\t$_(`${selector} [data-notice=\"orientation\"]`).addClass ('modal--active');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t// Set all the dynamic backgrounds of the data-background property\n\t\t\t\t$_(`${selector} [data-background]`).each ((element) => {\n\t\t\t\t\tconst background = $_(element).data ('background');\n\t\t\t\t\tif (background.indexOf ('.') > -1) {\n\t\t\t\t\t\t$_(element).style ('background', `url('${background}') center / cover no-repeat`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$_(element).style ('background', background);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Preload all the game assets\n\t\t\t\tMonogatari.preload ().then(() => {\n\t\t\t\t\t$_(`${selector} [data-screen=\"loading\"]`).fadeOut (400, () => {\n\t\t\t\t\t\t$_(`${selector} [data-screen=\"loading\"]`).hide ();\n\t\t\t\t\t});\n\t\t\t\t}).catch ((e) => {\n\t\t\t\t\tconsole.error (e);\n\t\t\t\t}).finally (() => {\n\t\t\t\t\tif (Monogatari.label ()) {\n\t\t\t\t\t\tMonogatari.showSplashScreen ();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!(Monogatari.setting ('Skip') > 0)) {\n\t\t\t\t\tMonogatari.component ('quick_menu').remove ('Skip');\n\t\t\t\t}\n\n\t\t\t\tfor (const component of Monogatari.components ()) {\n\t\t\t\t\tcomponent.init (selector);\n\t\t\t\t}\n\n\t\t\t\tfor (const action of Monogatari.actions ()) {\n\t\t\t\t\taction.init (selector);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nMonogatari._actions = [];\nMonogatari._components = [];\nMonogatari._translations = {};\nMonogatari._script = {};\nMonogatari._characters = {};\nMonogatari._storage = {};\n\nMonogatari.Storage = new Space ();\n\nMonogatari._mediaPlayers = {\n\tmusic: {},\n\tsound: {},\n\tvoice: {},\n\tvideo: {}\n};\n\nMonogatari._state = {\n\tstep: 0,\n\tlabel: 'Start'\n};\n\nMonogatari._history = {\n\timage: [],\n\tcharacter: [],\n\tscene: [],\n\tlabel: []\n};\n\nMonogatari._globals = {\n\n};\n\nMonogatari._functions = {\n\n};\n\nMonogatari._status = {\n\tblock: false,\n\tplaying: false,\n\tfinishedTyping: true\n};\n\nMonogatari._assets = {\n\tmusic: {},\n\tvoice: {},\n\tsound: {},\n\tvideo: {},\n\timages: {},\n\tscenes: {}\n};\n\n// These are the default settings and they are overwritten by the user's settings\n// New elements here will no conflict with the user's settings and allows a better\n// update experience\nMonogatari._settings = {\n\n\t// The name of your game, this will be used to store all the data so once\n\t// you've released a game using one name, it shouldn't change. Please use the\n\t// Version Setting to indicate a new release of your game!\n\t'Name': 'My Visual Novel',\n\n\t// The version of your game in semantic versioning (https://semver.org/).\n\t'Version': '0.1.0',\n\n\t// Initial Label *\n\t'Label': 'Start',\n\n\t// Number of AutoSave Slots\n\t'Slots': 10,\n\n\t// Change to true for a MultiLanguage GameScreen.\n\t'MultiLanguage': false,\n\n\t// Music for the Main Menu.\n\t'MainScreenMusic': '',\n\n\t// Prefix for the Save Slots in Local Storage.\n\t'SaveLabel': 'Save',\n\t'AutoSaveLabel': 'AutoSave',\n\n\t// Turn main menu on/off; Default: true *\n\t'ShowMainScreen': true,\n\n\t// Turn image preloading on/off, Default: true\n\t'Preload': true,\n\n\t// Time interval between autosaves (In Minutes). Default: 0 (Off)\n\t'AutoSave': 0,\n\n\t// Enable service workers; Default: true *\n\t'ServiceWorkers': true,\n\n\t// The Aspect Ratio your background images are on. This has no effect on\n\t// web deployed novels.\n\t'AspectRatio': '16:9',\n\n\t// Enables or disables the typing text animation for the whole game.\n\t'TypeAnimation': true,\n\n\t// Enables or disables the typing text animation in NVL dialogs for the\n\t// whole game.\n\t'NVLTypeAnimation': true,\n\n\t// Enables or disables the typing animation for the narrator.\n\t// If the previous property was set to false, the narrator won't shown\n\t// the animation even if this is set to true.\n\t'NarratorTypeAnimation': true,\n\n\t// Enables or disables the typing animation for the special centered\n\t// character. If the TypeAnimation property was set to false, the centered\n\t// character won't shown the animation even if this is set to true.\n\t'CenteredTypeAnimation': true,\n\n\t// Force some orientation on mobile devices. If this setting is set either\n\t// to portrait or landscape, a warning message will be displayed so the\n\t// player rotates its device.\n\t// Possible values: any, portrait or landscape.\n\t'Orientation': 'any',\n\n\t// Allow players to skip through the game. Similar to the auto play feature,\n\t// skipping will allow players to go through the game really fast.\n\t// If this value is set to 0, no skipping will be allowed but if it's set\n\t// to a higher number, skipping will be allowed and that value will be taken\n\t// as the speed in milliseconds with which the game will skip through the script\n\t'Skip': 0,\n\n\t// Define the directories where the assets are located. The root directory is\n\t// the holder for the other asset specific directories, this directories are\n\t// used when retrieving the files on the game.\n\t'AssetsPath': {\n\t\t'root': 'assets',\n\t\t'characters': 'characters',\n\t\t'icons': 'icons',\n\t\t'images': 'images',\n\t\t'music': 'music',\n\t\t'scenes': 'scenes',\n\t\t'sound': 'sound',\n\t\t'ui': 'ui',\n\t\t'video': 'video',\n\t\t'voice': 'voice'\n\t},\n\n\t// Name of the Splash Screen Label. If a name is given and a label with that\n\t// name exists on the game's script, it will be used to show a splash screen\n\t// right after the loading screen.\n\t'SplashScreenLabel': '_SplashScreen',\n\n\t// Define what storage engine should be used to save the game data. *\n\t// Adapters Available:\n\t// - LocalStorage: This one is used by default\n\t// - SessionStorage: Same as LocalStorage but will be cleared when the page\n\t// \t\t\t\t\t is closed.\n\t// - IndexedDB: The information is saved using the IndexedDB web API\n\t// - RemoteStorage: The information will be sent and retrieved from a given\n\t//\t\t\t\t\tURL Endpoint providing a REST API.\n\t'Storage': {\n\t\t'Adapter': 'LocalStorage',\n\t\t'Store': 'GameData',\n\t\t'Endpoint': ''\n\t}\n};\n\nMonogatari._preferences = {\n\n\t// Initial Language for Multilanguage Games or for the Default GUI Language.\n\t'Language': 'English',\n\n\t// Initial Volumes from 0.0 to 1.\n\t'Volume': {\n\t\t'Music': 1,\n\t\t'Voice': 1,\n\t\t'Sound': 1\n\t},\n\n\t// Initial resolution used for Electron, it must match the settings inside\n\t// the electron.js file. This has no effect on web deployed novels.\n\t'Resolution': '800x600',\n\n\t// Speed at which dialog text will appear\n\t'TextSpeed': 20,\n\n\t// Speed at which the Auto Play feature will show the next statement\n\t// It is measured in seconds and starts counting after the text is\n\t// completely displayed.\n\t'AutoPlaySpeed': 5\n};\n\nMonogatari.globals ({\n\tautoPlay: null,\n\t'distraction-free': false,\n\tdeleteSlot: null,\n\toverwriteSlot: null,\n\tblock: false,\n\tplaying: false,\n\tcurrentAutoSaveSlot: 1,\n\t_AutoPlayTimer: null,\n\tskip: null,\n\t_log: []\n});\n\nMonogatari._listeners = [];\n\nMonogatari._templates = {};\n\nMonogatari._upgrade = {};\n\nMonogatari._temp = {};\n\nMonogatari.Storage = new Space ();\n\nMonogatari.version = '2.0.0';\n\nexport { Monogatari };","/**\n * ============================================================\n * Deutsch\n * ============================================================\n *\n * Translators:\n *\n * increpare <analytic@gmail.com>\n * KazutoSensei\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('Deutsch', {\n\t'AdvanceHelp': 'Um dich durch das Spiel zu navigieren, drücke die Leertaste oder klicke',\n\t'AllowPlayback': 'Click here to allow audio playback',\n\t'Audio': 'Audio',\n\t'AutoPlay': 'Auto',\n\t'AutoPlayButton': 'Enable auto play',\n\t'AutoPlaySpeed': 'AutoPlay-Geschwindigkeit',\n\n\t'Back': 'Zurück',\n\t'BackButton': 'Zurück',\n\n\t'Cancel': 'Abbrechen',\n\t'Close': 'Schließen',\n\t'Confirm': 'Möchtest Du das Spiel verlassen?',\n\t'Credits': 'Credits',\n\n\t'Delete': 'Löschen',\n\t'DialogLogButton': 'Show the dialog log',\n\n\t'FullScreen': 'Vollbildmodus',\n\n\t'Gallery': 'Gallery',\n\n\t'Help': 'Hilfe',\n\t'Hide': 'Verbergen',\n\t'HideButton': 'Text verbergen',\n\n\t'iOSAudioWarning': 'Audioeinstellungen werden unter iOS nicht unterstützt',\n\n\t'KeyboardShortcuts': 'Keyboard Shortcuts',\n\n\t'Language': 'Sprache',\n\t'Load': 'Laden',\n\t'LoadAutoSaveSlots': 'Automatisch gespeicherte Spiele',\n\t'LoadButton': 'Öffne den Ladebildschirm',\n\t'Loading': 'Lädt',\n\t'LoadingMessage': 'Bitte warte, während die Assets geladen werden',\n\t'LoadSlots': 'Gespeicherte Spiele',\n\t'LocalStorageWarning': 'Lokaler Speicher ist in diesem Browser nicht verfügbar',\n\t'Log': 'Log',\n\n\t'Music': 'Musik-Lautstärke',\n\n\t'NewContent': 'There is new content available, reload the page to get the latest version',\n\t'NoSavedGames': 'Keine gespeicherten Spiele',\n\t'NoAutoSavedGames': 'Keine automatisch gespeicherten Spiele',\n\t'NoDialogsAvailable': 'No dialogs available. Dialogs will appear here as they show up',\n\n\t'OrientationWarning': 'Um das Spiel zu spielen, Bitte drehen sie Ihr Gerät',\n\t'Overwrite': 'Überschreiben',\n\n\t'QuickButtons': 'Schnellmenü Schaltflächen',\n\t'QuickMenu': 'Quick Menu',\n\t'Quit': 'Verlassen',\n\t'QuitButton': 'Spiel verlassen',\n\n\t'Resolution': 'Auflösung',\n\n\t'Save': 'Speichern',\n\t'SaveButton': 'Öffne den Speicherbildschirm',\n\t'SaveInSlot': 'In Slot speichern',\n\t'Settings': 'Optionen',\n\t'SettingsButton': 'Öffne die Optionen',\n\t'Show': 'Einblenden',\n\t'Skip': 'Skip',\n\t'SkipButton': 'Enter skip mode',\n\t'SlotDeletion': 'Bist Du sicher, dass Du diesen Slot löschen möchtest?',\n\t'SlotOverwrite': 'Bist Du sicher, dass Du diesen Slot überschreiben möchtest?',\n\t'Sound': 'Sound-Lautstärke',\n\t'Start': 'Start',\n\t'Stop': 'Stop',\n\n\t'TextSpeed': 'Textgeschwindigkeit',\n\n\t'Voice': 'Stimmen-Lautstärke',\n\n\t'Windowed': 'Fenstermodus'\n});","/**\n * ============================================================\n * English\n * ============================================================\n *\n * Translators:\n *\n * Hyuchia <diego@hyuchia.com>\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('English', {\n\t'AdvanceHelp': 'To advance through the game, left-click or tap anywhere on the game screen or press the space key',\n\t'AllowPlayback': 'Click here to allow audio playback',\n\t'Audio': 'Audio',\n\t'AutoPlay': 'Auto',\n\t'AutoPlayButton': 'Enable auto play',\n\t'AutoPlaySpeed': 'Autoplay Speed',\n\n\t'Back': 'Back',\n\t'BackButton': 'Go back',\n\n\t'Cancel': 'Cancel',\n\t'Close': 'Close',\n\t'Confirm': 'Do you want to quit?',\n\t'Credits': 'Credits',\n\n\t'Delete': 'Delete',\n\t'DialogLogButton': 'Show the dialog log',\n\n\t'FullScreen': 'Full Screen',\n\n\t'Gallery': 'Gallery',\n\n\t'Help': 'Help',\n\t'Hide': 'Hide',\n\t'HideButton': 'Hide the text box',\n\n\t'iOSAudioWarning': 'Audio settings are not supported on iOS',\n\n\t'KeyboardShortcuts': 'Keyboard Shortcuts',\n\n\t'Language': 'Language',\n\t'Load': 'Load',\n\t'LoadAutoSaveSlots': 'Auto Saved Games',\n\t'LoadButton': 'Open the Load Screen',\n\t'Loading': 'Loading',\n\t'LoadingMessage': 'Wait while the assets are loaded',\n\t'LoadSlots': 'Saved Games',\n\t'LocalStorageWarning': 'Local Storage is not available in this browser',\n\t'Log': 'Log',\n\n\t'Music': 'Music Volume',\n\n\t'NewContent': 'There is new content available, reload the page to get the latest version',\n\t'NoSavedGames': 'No saved games',\n\t'NoAutoSavedGames': 'No automatically saved games',\n\t'NoDialogsAvailable': 'No dialogs available. Dialogs will appear here as they show up',\n\n\t'OrientationWarning': 'Please rotate your device to play',\n\t'Overwrite': 'Overwrite',\n\n\t'QuickButtons': 'Quick Menu Buttons',\n\t'QuickMenu': 'Quick Menu',\n\t'Quit': 'Quit',\n\t'QuitButton': 'Quit Game',\n\n\t'Resolution': 'Resolution',\n\n\t'Save': 'Save',\n\t'SaveButton': 'Open the Save Screen',\n\t'SaveInSlot': 'Save in slot',\n\t'Settings': 'Settings',\n\t'SettingsButton': 'Open the Settings Screen',\n\t'Show': 'Show',\n\t'Skip': 'Skip',\n\t'SkipButton': 'Enter skip mode',\n\t'SlotDeletion': 'Are you sure you want to delete this slot?',\n\t'SlotOverwrite': 'Are you sure you want to overwrite this slot?',\n\t'Sound': 'Sound Volume',\n\t'Start': 'Start',\n\t'Stop': 'Stop',\n\n\t'TextSpeed': 'Text Speed',\n\n\t'Voice': 'Voice Volume',\n\n\t'Windowed': 'Windowed'\n});","/**\n * ============================================================\n * Español\n * ============================================================\n *\n * Translators:\n *\n * Hyuchia <diego@hyuchia.com>\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('Español', {\n\t'AdvanceHelp': 'Para avanzar en el juego, presiona espacio o haz click',\n\t'AllowPlayback': 'Click here to allow audio playback',\n\t'Audio': 'Audio',\n\t'AutoPlay': 'Auto',\n\t'AutoPlayButton': 'Activar juego automático',\n\t'AutoPlaySpeed': 'Velocidad de Juego Automático',\n\n\t'Back': 'Atrás',\n\t'BackButton': 'Atrás',\n\n\t'Cancel': 'Cancelar',\n\t'Close': 'Cerrar',\n\t'Confirm': '¿Deseas salir?',\n\t'Credits': 'Créditos',\n\n\t'Delete': 'Eliminar',\n\t'DialogLogButton': 'Mostrar el historial de dialogos',\n\n\t'FullScreen': 'Pantalla Completa',\n\n\t'Gallery': 'Galería',\n\n\t'Help': 'Ayuda',\n\t'Hide': 'Ocultar',\n\t'HideButton': 'Esconder el Texto',\n\n\t'iOSAudioWarning': 'Las configuraciones de Audio no están disponibles en iOS',\n\n\t'KeyboardShortcuts': 'Atajos de Teclado',\n\n\t'Language': 'Lenguaje',\n\t'Load': 'Cargar',\n\t'LoadAutoSaveSlots': 'Juegos Guardados Automaticamente',\n\t'LoadButton': 'Abrir la Pantalla de Cargar',\n\t'Loading': 'Cargando',\n\t'LoadingMessage': 'Espere mientras se cargan los archivos',\n\t'LoadSlots': 'Juegos Guardados',\n\t'LocalStorageWarning': 'El Almacenaje Local no está disponible en este navegador',\n\t'Log': 'Historial',\n\n\t'Music': 'Volumen de la Música',\n\n\t'NewContent': 'Un nuevo contenido está disponible, recarga la página para obtener la versión más nueva',\n\t'NoSavedGames': 'No hay juegos guardados',\n\t'NoAutoSavedGames': 'No hay juegos guardados automaticamente',\n\t'NoDialogsAvailable': 'No hay dialogos disponibles. Los dialogos aparecerán aqui una vez que ocurran en el juego',\n\n\t'OrientationWarning': 'Por favor rota tu dispositivo para jugar',\n\t'Overwrite': 'Sobreescribir',\n\n\t'QuickButtons': 'Botones del Menú Rápido',\n\t'QuickMenu': 'Menú Rápido',\n\t'Quit': 'Salir',\n\t'QuitButton': 'Salir del Juego',\n\n\t'Resolution': 'Resolución',\n\n\t'Save': 'Guardar',\n\t'SaveButton': 'Abrir la Pantalla de Guardar',\n\t'SaveInSlot': 'Guardar en ranura',\n\t'Settings': 'Configuración',\n\t'SettingsButton': 'Abrir la Pantalla de Configuración',\n\t'Show': 'Mostrar',\n\t'Skip': 'Saltar',\n\t'SkipButton': 'Entrar al modo de salto',\n\t'SlotDeletion': '¿Está seguro de querer eliminar este juego?',\n\t'SlotOverwrite': '¿Está seguro de querer Sobreescribir este juego?',\n\t'Sound': 'Volumen de los Sonidos',\n\t'Start': 'Comenzar',\n\t'Stop': 'Detener',\n\n\t'TextSpeed': 'Velocidad del Texto',\n\n\t'Voice': 'Volumen de la Voz',\n\n\t'Windowed': 'Ventana'\n});","/**\n * ============================================================\n * Français\n * ============================================================\n *\n * Translators:\n *\n * BakaKiller\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('Français', {\n\t'AdvanceHelp': 'Pour avancer dans le jeu, appuyez sur la touche espace ou cliquez',\n\t'AllowPlayback': 'Click here to allow audio playback',\n\t'Audio': 'Audio',\n\t'AutoPlay': 'Auto',\n\t'AutoPlayButton': 'Enable auto play',\n\t'AutoPlaySpeed': 'Vitesse de lecture automatique',\n\n\t'Back': 'Retour',\n\t'BackButton': 'Retour',\n\n\t'Cancel': 'Annuler',\n\t'Close': 'Fermer',\n\t'Confirm': 'Voulez-vous vraiment quitter?',\n\t'Credits': 'Credits',\n\n\t'Delete': 'Delete',\n\t'DialogLogButton': 'Show the dialog log',\n\n\t'FullScreen': 'Plein Écran',\n\n\t'Gallery': 'Gallery',\n\n\t'Help': 'Aide',\n\t'Hide': 'Cacher',\n\t'HideButton': 'Cacher le Texte',\n\n\t'iOSAudioWarning': 'Les paramètres audio ne sont pas pris en charge par iOS',\n\n\t'KeyboardShortcuts': 'Keyboard Shortcuts',\n\n\t'Language': 'Langue',\n\t'Load': 'Charger',\n\t'LoadAutoSaveSlots': 'Parties Enregistrées Automatiquement',\n\t'LoadButton': 'Ouvrir l’écran de Chargement',\n\t'Loading': 'Chargement',\n\t'LoadingMessage': 'Veuillez patienter pendant que les fichiers sont chargés',\n\t'LoadSlots': 'Parties Sauvegardées',\n\t'LocalStorageWarning': 'Le stockage local n’est pas disponible sur ce navigateur',\n\t'Log': 'Log',\n\n\t'Music': 'Volume de la Musique',\n\n\t'NewContent': 'There is new content available, reload the page to get the latest version',\n\t'NoSavedGames': 'Pas de parties sauvegardées',\n\t'NoAutoSavedGames': 'Aucune partie enregistrée automatiquement',\n\t'NoDialogsAvailable': 'No dialogs available. Dialogs will appear here as they show up',\n\n\t'OrientationWarning': 'Please rotate your device to play',\n\t'Overwrite': 'Écraser',\n\n\t'QuickButtons': 'Boutons du Menu Rapide',\n\t'QuickMenu': 'Quick Menu',\n\t'Quit': 'Quitter',\n\t'QuitButton': 'Quitter le Jeu',\n\n\t'Resolution': 'Résolution',\n\n\t'Save': 'Sauvegarder',\n\t'SaveButton': 'Ouvrir l’écran de Sauvegarde',\n\t'SaveInSlot': 'Enregistrer à l’emplacement',\n\t'Settings': 'Préférences',\n\t'SettingsButton': 'Ouvrir l’écran des Préférences',\n\t'Show': 'Monter',\n\t'Skip': 'Skip',\n\t'SkipButton': 'Enter skip mode',\n\t'SlotDeletion': 'Êtes-vous sûr de vouloir supprimer cet emplacement ?',\n\t'SlotOverwrite': 'Êtes vous sûr de vouloir remplacer cet emplacement ?',\n\t'Sound': 'Volume des Sons',\n\t'Start': 'Démarrer',\n\t'Stop': 'Arrêter',\n\n\t'TextSpeed': 'Vitesse du Texte',\n\n\t'Voice': 'Volume de la Voix',\n\n\t'Windowed': 'Fenêtré'\n});","/**\n * ============================================================\n * Nederlands\n * ============================================================\n *\n * Translators:\n *\n * Natsukeep\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('Nederlands', {\n\t'AdvanceHelp': 'Gebruik de spatiebalk of linker muisknop om te spelen',\n\t'AllowPlayback': 'Click here to allow audio playback',\n\t'Audio': 'Audio',\n\t'AutoPlay': 'Auto',\n\t'AutoPlayButton': 'Enable auto play',\n\t'AutoPlaySpeed': 'Autoplay snelheid',\n\n\t'Back': 'Terug',\n\t'BackButton': 'Terug',\n\n\t'Cancel': 'Stop',\n\t'Close': 'Sluit',\n\t'Confirm': 'Ben je zeker dat je wilt stoppen?',\n\t'Credits': 'Credits',\n\n\t'Delete': 'Delete',\n\t'DialogLogButton': 'Show the dialog log',\n\n\t'FullScreen': 'Volledig scherm',\n\n\t'Gallery': 'Gallery',\n\n\t'Help': 'Help',\n\t'Hide': 'Verberg',\n\t'HideButton': 'Verberg tekst',\n\n\t'KeyboardShortcuts': 'Keyboard Shortcuts',\n\n\t'iOSAudioWarning': 'Audio instellingen worden niet ondersteund door iOS',\n\n\t'Language': 'Taal',\n\t'Load': 'Laad',\n\t'LoadAutoSaveSlots': 'Automatisch opgeslagen spellen',\n\t'LoadButton': 'Open het laadscherm',\n\t'Loading': 'Laden',\n\t'LoadingMessage': 'Wacht tot de onderdelen zijn geladen',\n\t'LoadSlots': 'Opgeslagen spellen',\n\t'LocalStorageWarning': 'Locale Opslag is niet mogelijk in deze Browser',\n\t'Log': 'Log',\n\n\t'Music': 'Muziek Volume',\n\n\t'NewContent': 'There is new content available, reload the page to get the latest version',\n\t'NoSavedGames': 'Geen opgeslagen spellen',\n\t'NoAutoSavedGames': 'Geen automatsch opgeslagen spellen',\n\t'NoDialogsAvailable': 'No dialogs available. Dialogs will appear here as they show up',\n\n\t'OrientationWarning': 'Please rotate your device to play',\n\t'Overwrite': 'Overschrijven',\n\n\t'QuickButtons': 'Snelmenu knoppen',\n\t'QuickMenu': 'Quick Menu',\n\t'Quit': 'sluit',\n\t'QuitButton': 'Sluit spel',\n\n\t'Resolution': 'Resolutie',\n\n\t'Save': 'Opslaan',\n\t'SaveButton': 'Open de Save Screen',\n\t'SaveInSlot': 'Sla op in slot',\n\t'Settings': 'Instellingen',\n\t'SettingsButton': 'Open de instellingen',\n\t'Show': 'Tonen',\n\t'Skip': 'Skip',\n\t'SkipButton': 'Enter skip mode',\n\t'SlotDeletion': 'Weet u zeker dat u dit slot verwijderen?',\n\t'SlotOverwrite': 'Weet u zeker dat u dit slot overschrijven?',\n\t'Sound': 'Geluids volume',\n\t'Start': 'Start',\n\t'Stop': 'Stop',\n\n\t'TextSpeed': 'Tekst snelheid',\n\n\t'Voice': 'Stem Volume',\n\n\t'Windowed': 'Window modus'\n});","/**\n * ============================================================\n * Português\n * ============================================================\n *\n * Translators:\n *\n * fsvieira <sv.filipe@gmail.com>\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('Português', {\n\t'AdvanceHelp': 'Pode avançar no jogo usando o botão esquerdo do rato, tocar em qualquer sitío do ecrã de jogo ou carregar na barra de espaço.',\n\t'AllowPlayback': 'Clique aqui para permitir a reprodução de áudio',\n\t'Audio': 'Áudio',\n\t'AutoPlay': 'Auto',\n\t'AutoPlayButton': 'Ativar reprodução automática',\n\t'AutoPlaySpeed': 'Velocidade de reprodução automática',\n\n\t'Back': 'Voltar',\n\t'BackButton': 'Voltar',\n\n\t'Cancel': 'Cancelar',\n\t'Close': 'Fechar',\n\t'Confirm': 'Deseja sair?',\n\t'Credits': 'Créditos',\n\n\t'Delete': 'Apagar',\n\t'DialogLogButton': 'Mostrar registos de diálogo',\n\n\t'FullScreen': 'Ecrã Inteiro',\n\n\t'Gallery': 'Galeria',\n\n\t'Help': 'Ajuda',\n\t'Hide': 'Esconder',\n\t'HideButton': 'Esconder caixa de texto',\n\n\t'iOSAudioWarning': 'As configurações de áudio não são suportadas no iOS',\n\n\t'KeyboardShortcuts': 'Atalhos de Teclado',\n\n\t'Language': 'Língua',\n\t'Load': 'Carregar',\n\t'LoadAutoSaveSlots': 'Jogos Salvos Automaticamente',\n\t'LoadButton': 'Abrir Ecrã de Carregamento',\n\t'Loading': 'A Carregar',\n\t'LoadingMessage': 'Aguarde enquanto os recursos são carregados',\n\t'LoadSlots': 'Jogos Salvos',\n\t'LocalStorageWarning': 'O armazenamento local não está disponível neste navegador',\n\t'Log': 'Registo',\n\n\t'Music': 'Volume de Música',\n\n\t'NewContent': 'Há novo conteúdo disponível, recarregue a página para obter a versão mais recente',\n\t'NoSavedGames': 'Nenhum jogo salvo',\n\t'NoAutoSavedGames': 'Nenhum jogo salvo automaticamente',\n\t'NoDialogsAvailable': 'Não há diálogos disponíveis. Os diálogos aparecerão aqui quando ocorrerem no jogo',\n\n\t'OrientationWarning': 'Por favor rode o seu dispositivo para jogar',\n\t'Overwrite': 'Substituir',\n\n\t'QuickButtons': 'Botões de acesso rápido',\n\t'QuickMenu': 'Menu de acesso rápido',\n\t'Quit': 'Sair',\n\t'QuitButton': 'Sair do Jogo',\n\n\t'Resolution': 'Resolução',\n\n\t'Save': 'Salvar',\n\t'SaveButton': 'Abrir ecrã de salvar.',\n\t'SaveInSlot': 'Salvar em ranhura',\n\t'Settings': 'Configurações',\n\t'SettingsButton': 'Abrir o Ecrã de Configurações',\n\t'Show': 'Mostrar',\n\t'Skip': 'Ignorar',\n\t'SkipButton': 'Entrar em modo de ignorar',\n\t'SlotDeletion': 'Tem a certeza de que deseja eliminar este jogo?',\n\t'SlotOverwrite': 'Tem a certeza de que deseja substituir este jogo?',\n\t'Sound': 'Volume de Som',\n\t'Start': 'Início',\n\t'Stop': 'Parar',\n\n\t'TextSpeed': 'Velocidade de Texto',\n\n\t'Voice': 'Volume de Voz',\n\n\t'Windowed': 'Em Janela'\n});","/**\n * ============================================================\n * 日本語\n * ============================================================\n *\n * Translators:\n *\n *\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('日本語', {\n\t'AdvanceHelp': 'ゲームを進めるためには、スペースキーを押すかクリックします',\n\t'AllowPlayback': 'Click here to allow audio playback',\n\t'Audio': 'オーディオ',\n\t'AutoPlay': '自動',\n\t'AutoPlayButton': 'Enable auto play',\n\t'AutoPlaySpeed': '自動再生速度',\n\n\t'Back': '巻き戻し',\n\t'BackButton': '巻き戻し',\n\n\t'Cancel': 'キャンセル',\n\t'Close': '閉めて',\n\t'Confirm': '終了しますか？',\n\t'Credits': 'Credits',\n\n\t'Delete': 'Delete',\n\t'DialogLogButton': 'Show the dialog log',\n\n\t'FullScreen': '全画面表示',\n\n\t'Gallery': 'Gallery',\n\n\t'Help': 'ヘルプ',\n\t'Hide': '「非表示」',\n\t'HideButton': 'テキストを隠します',\n\n\t'iOSAudioWarning': 'iOSではオーディオ設定がサポートされていません',\n\n\t'KeyboardShortcuts': 'Keyboard Shortcuts',\n\n\t'Language': '言語',\n\t'Load': 'ロード',\n\t'LoadAutoSaveSlots': '自動的に保存されたゲーム',\n\t'LoadButton': 'ロード画面を開きます',\n\t'Loading': '読み込み中',\n\t'LoadingMessage': 'ファイルがロードされるのを待ちます',\n\t'LoadSlots': '保存されたゲーム',\n\t'LocalStorageWarning': 'このブラウザではローカルストレージは使用できません',\n\t'Log': 'Log',\n\n\t'Music': '音楽の音量',\n\n\t'NewContent': 'There is new content available, reload the page to get the latest version',\n\t'NoSavedGames': '保存されたゲームはありません',\n\t'NoAutoSavedGames': '自動的に保存されたゲームはありません',\n\t'NoDialogsAvailable': 'No dialogs available. Dialogs will appear here as they show up',\n\n\t'OrientationWarning': 'Please rotate your device to play',\n\t'Overwrite': '上書き',\n\n\t'QuickButtons': 'クイックメニューボタン',\n\t'QuickMenu': 'Quick Menu',\n\t'Quit': '終了する',\n\t'QuitButton': 'ゲームを終了します',\n\n\t'Resolution': '解像度',\n\n\t'Save': 'セーブ',\n\t'SaveButton': '保存画面を開きます',\n\t'SaveInSlot': 'スロットにセーブする',\n\t'Settings': '環境設定',\n\t'SettingsButton': '設定画面を開きます',\n\t'Show': 'ショー',\n\t'Skip': 'Skip',\n\t'SkipButton': 'Enter skip mode',\n\t'SlotDeletion': '本当にこのスロットを削除しますか？',\n\t'SlotOverwrite': '本当にこのスロットを上書きしますか？',\n\t'Sound': '効果音の音量',\n\t'Start': 'スタート',\n\t'Stop': '停止',\n\n\t'TextSpeed': 'テキストスピード',\n\n\t'Voice': 'ボイスの音量',\n\n\t'Windowed': '窓'\n});","/**\n * ============================================================\n * Russian\n * ============================================================\n *\n * Translators:\n *\n * Sergey Kuznetsov <https://github.com/Amaimersion>\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation('Русский', {\n\t'AdvanceHelp': 'Чтобы играть, нажимайте на пробел или на левую кнопку мыши.',\n\t'AllowPlayback': 'Click here to allow audio playback',\n\t'Audio': 'Звук',\n\t'AutoPlay': 'Авто',\n\t'AutoPlayButton': 'Enable auto play',\n\t'AutoPlaySpeed': 'Скорость авточтения',\n\n\t'Back': 'Назад',\n\t'BackButton': 'Вернуться назад',\n\n\t'Cancel': 'Отмена',\n\t'Close': 'Закрыть',\n\t'Confirm': 'Вы действительно хотите выйти?',\n\t'Credits': 'Credits',\n\n\t'Delete': 'Удалить',\n\t'DialogLogButton': 'Show the dialog log',\n\n\t'FullScreen': 'Полный экран',\n\n\t'Gallery': 'Gallery',\n\n\t'Help': 'Помощь',\n\t'Hide': 'Скрыть',\n\t'HideButton': 'Скрыть текст',\n\n\t'iOSAudioWarning': 'Настройки звука не поддерживаются на iOS.',\n\n\t'KeyboardShortcuts': 'Keyboard Shortcuts',\n\n\t'Language': 'Язык',\n\t'Load': 'Загрузить',\n\t'LoadAutoSaveSlots': 'Автосохранённые игры',\n\t'LoadButton': 'Открыть меню загрузки',\n\t'Loading': 'Загрузка',\n\t'LoadingMessage': 'Подождите, пожалуйста, игровые файлы загружаются',\n\t'LoadSlots': 'Сохранённые игры',\n\t'LocalStorageWarning': 'Локальное хранилище не доступно в этом браузере.',\n\t'Log': 'Log',\n\n\t'Music': 'Громкость музыки',\n\n\t'NewContent': 'There is new content available, reload the page to get the latest version',\n\t'NoSavedGames': 'Нет сохранённых игр.',\n\t'NoAutoSavedGames': 'Нет автосохранённых игр.',\n\t'NoDialogsAvailable': 'No dialogs available. Dialogs will appear here as they show up',\n\n\t'OrientationWarning': 'Чтобы играть, пожалуйста, поверните Ваше устройство',\n\t'Overwrite': 'Перезаписать',\n\n\t'QuickButtons': 'Кнопки быстрого меню',\n\t'QuickMenu': 'Quick Menu',\n\t'Quit': 'Выйти',\n\t'QuitButton': 'Выйти из игры',\n\n\t'Resolution': 'Разрешение',\n\n\t'Save': 'Сохранить',\n\t'SaveButton': 'Открыть меню сохранения',\n\t'SaveInSlot': 'Сохранить в слот',\n\t'Settings': 'Настройки',\n\t'SettingsButton': 'Открыть меню настроек',\n\t'Show': 'Показать',\n\t'Skip': 'Skip',\n\t'SkipButton': 'Enter skip mode',\n\t'SlotDeletion': 'Вы действительно хотите удалить этот слот?',\n\t'SlotOverwrite': 'Вы действительно хотите перезаписать этот слот?',\n\t'Sound': 'Громкость звука',\n\t'Start': 'Начать игру',\n\t'Stop': 'Стоп',\n\n\t'TextSpeed': 'Скорость текста',\n\n\t'Voice': 'Громкость голоса',\n\n\t'Windowed': 'Оконный режим',\n});","/**\n * ============================================================\n * 简体中文 (Simplified Chinese)\n * ============================================================\n *\n * Translators:\n *\n * RuolinZheng08\n */\n\nimport { Monogatari } from './../monogatari';\n\nMonogatari.translation ('简体中文', {\n\t'AdvanceHelp': '按下空格键或点击屏幕以继续',\n\t'AllowPlayback': '点击这里以启用语音回放',\n\t'Audio': '音效',\n\t'AutoPlay': '自动',\n\t'AutoPlayButton': 'Enable auto play',\n\t'AutoPlaySpeed': '自动播放速度',\n\n\t'Back': '后退',\n\t'BackButton': '后退',\n\n\t'Cancel': '取消',\n\t'Close': '关闭',\n\t'Confirm': '确定要退出吗？',\n\t'Credits': 'Credits',\n\n\t'Delete': '删除',\n\t'DialogLogButton': 'Show the dialog log',\n\n\t'FullScreen': '全屏显示',\n\n\t'Gallery': 'Gallery',\n\n\t'Help': '帮助',\n\t'Hide': '隐藏',\n\t'HideButton': '隐藏文字',\n\n\t'iOSAudioWarning': 'iOS暂不支持音效设定',\n\n\t'KeyboardShortcuts': 'Keyboard Shortcuts',\n\n\t'Language': '语言',\n\t'Load': '读取',\n\t'LoadAutoSaveSlots': '自动存储的游戏进度',\n\t'LoadButton': '显示读取界面',\n\t'Loading': '加载中',\n\t'LoadingMessage': '等待素材加载中',\n\t'LoadSlots': '存储的游戏进度',\n\t'LocalStorageWarning': '该浏览器暂不支持本地存储功能',\n\t'Log': 'Log',\n\n\t'Music': '音乐音量',\n\n\t'NoSavedGames': '没有存储的游戏进度',\n\t'NoAutoSavedGames': '没有自动存储的游戏进度',\n\t'NewContent': '有新的内容可供使用，重新加载页面以获取最新版本',\n\t'NoDialogsAvailable': 'No dialogs available. Dialogs will appear here as they show up',\n\n\t'OrientationWarning': '请将设备旋转以体验游戏内容',\n\t'Overwrite': '覆盖',\n\n\t'QuickButtons': '快捷菜单按钮',\n\t'QuickMenu': 'Quick Menu',\n\t'Quit': '退出',\n\t'QuitButton': '退出游戏',\n\n\t'Resolution': '分辨率',\n\n\t'Save': '存档',\n\t'SaveButton': '显示存档界面',\n\t'SaveInSlot': '写入存档槽位',\n\t'Settings': '环境设定',\n\t'SettingsButton': '显示环境设定界面',\n\t'Show': '显示',\n\t'Skip': 'Skip',\n\t'SkipButton': 'Enter skip mode',\n\t'SlotDeletion': '确定要删除这个存档槽位吗？',\n\t'SlotOverwrite': '确定要覆盖这个存档槽位吗？',\n\t'Sound': '音效音量',\n\t'Start': '开始',\n\t'Stop': '停止',\n\n\t'TextSpeed': '文字显示速度',\n\n\t'Voice': '语音音量',\n\n\t'Windowed': '窗口'\n});\n","export * from './Deutsch';\nexport * from './English';\nexport * from './Español';\nexport * from './Français';\nexport * from './Nederlands';\nexport * from './Português';\nexport * from './日本語';\nexport * from './Russian';\nexport * from './简体中文';","/**\n * A component represents an object or content in the game such as screens, menus\n * and all other visual or structural elements.\n *\n * The life cycle of an component follows the Mounting cycle for actions.\n *\n * The mounting cycle has 3 steps:\n *\n * 1. Setup - Here the action needs to set up everything it will need for working\n *            generally, in this section a component will generally add its HTML\n *            content to the global Monogatari object and will set up any needed\n *            configuration or state variables.\n *\n * 2. Bind - Once the component has been setup, its time to bind all the necessary\n *           event listeners or perfom more operations on the DOM once all elements\n *           have been setup. Components will generally bind all the listeners needed\n *           for their inner elements to work correctly.\n *\n * 3. Init - Finally, once the component was setup and it performed all the needed\n *           bindings, it may start performing its operations and perform all\n *          further needed operations.\n *\n * @class Component\n */\nclass Component extends HTMLElement {\n\n\t/**\n\t * @static configuration - A simple function providing access to the configuration\n\t * object of the function. If the component has a configuration object it must\n\t * also include this method.\n\t *\n\t * @param  {Object|string} [object = null] - Object with which current\n\t * configuration will be updated with (i.e. Object.assign) or a string to access\n\t * a property.\n\t *\n\t * @return {any} - If the parameter sent was a string, the function will\n\t * return the value of the property whose name matches the parameter. If no\n\t * parameter was sent, then the function will return the whole configuration\n\t * object.\n\t */\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn this._configuration[object];\n\t\t\t} else {\n\t\t\t\tthis._configuration = Object.assign ({}, this._configuration, object);\n\t\t\t\tthis.onConfigurationUpdate ().then (() => {\n\t\t\t\t\tthis.onUpdate ();\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._configuration;\n\t\t}\n\t}\n\n\t/**\n\t * @static state - A simple function providing access to the state\n\t * object of the function. If the component has a state object it must\n\t * also include this method.\n\t *\n\t * @param  {Object|string} [object = null] - Object with which current\n\t * state will be updated with (i.e. Object.assign) or a string to access\n\t * a specific variable.\n\t *\n\t * @return {any} - If the parameter sent was a string, the function will\n\t * return the value of the property whose name matches the parameter. If no\n\t * parameter was sent, then the function will return the whole state object.\n\t */\n\tstatic state (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn this._state[object];\n\t\t\t} else {\n\t\t\t\tthis._state = Object.assign ({}, this._state, object);\n\t\t\t\tthis.onStateUpdate ().then (() => {\n\t\t\t\t\tthis.onUpdate ();\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state;\n\t\t}\n\t}\n\n\n\t/**\n\t * @static html - A simple function providing access to the basic HTML\n\t * structure of the component.\n\t *\n\t * @param {function|string} html - A string or function that renders the\n\t * component into a valid HTML structure.\n\t * @param {*} params - Any additional params that should be used when calling\n\t * the rendering function\n\t *\n\t * @returns {void|string} - Void or the HTML structure in a string\n\t */\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\t/**\n\t * @static onStart - This function acts as an event listener for when the game\n\t * starts. If the component needs to do any particular activities when the game\n\t * starts, then this function should be implemented and it will be automatically\n\t * called once the player starts the game.\n\t *\n\t * @return {Promise}\n\t */\n\tstatic onStart () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onLoad - This function acts as an event listener for when a game\n\t * is loaded. If the component needs to perform any particular actions such as\n\t * restoring some state (i.e. showing images, playing media, etc.) when a game\n\t * is loaded, this function must be implemented and it will be automatically\n\t * called when a game is loaded.\n\t *\n\t * @return {Promise}  description\n\t */\n\tstatic onLoad () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onUpdate - Every time either the configuration object or state object\n\t * is changed through their respective methods, this function will be called\n\t * after the specific onUpdate listener for each object is performed.\n\t *\n\t * @return {Promise} - Result of the onUpdate operation.\n\t */\n\tstatic onUpdate () {\n\t\tthis.render ();\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onConfigurationUpdate - Every time the configuration object is\n\t * changed through the configuration () method, this function will be called.\n\t * Ideal for components that need to update their UI or other things when their\n\t * configuration is changed.\n\t *\n\t * @return {Promise} - Result of the onConfigurationUpdate operation.\n\t */\n\tstatic onConfigurationUpdate () {\n\t\tthis.render ();\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onStateUpdate - Every time the state object is changed through the\n\t * state () method, this function will be called. Ideal for components that\n\t * need to update their UI or perform other operations when their state changes.\n\t *\n\t * @return {Promise} - Result of the onStateUpdate operation.\n\t */\n\tstatic onStateUpdate () {\n\t\tthis.render ();\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onSave - This function acts as an event listener for when a game\n\t * is saved. If the component needs to perform any particular actions when that\n\t * happens, this function must be implemented and it will be automatically\n\t * called when a game is saved.\n\t *\n\t * @param {Object} slot - The slot object that has just been saved.\n\t * @param {string} slot.key - The key used to save the slot in the local storage\n\t * @param {Object} slot.value - The actual value saved\n\t *\n\t * @return {Promise}  description\n\t */\n\tstatic onSave () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static reset - When a game ends using the 'end' statement or before a game\n\t * is loaded, Monogatari will perform a reset on all its components. If the component\n\t * needs to reset a state or any other variables/elements to an initial state\n\t * once a game is over or a new one is loaded, the logic for it must be implemented\n\t * here and the function will be automatically called when needed.\n\t *\n\t * @return {Promise} - Result of the reset operation\n\t */\n\tstatic reset () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static setup - The setup is the first step of the Mounting cycle, all\n\t * operations required for the component's setup should be implemented here.\n\t *\n\t * @param  {string} selector - The CSS selector with which Monogatari has been\n\t *                             initialized\n\t * @return {Promise} - Result of the setup operation\n\t */\n\tstatic setup () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static bind - The binding is the second step of the Mounting cycle, all\n\t * operations related to event bindings or other sort of binding with the\n\t * HTML content generated in the setup phase should be implemented here.\n\t *\n\t * @param  {string} selector - The CSS selector with which Monogatari has been\n\t *                             initialized\n\t * @return {Promise} - Result of the binding operation\n\t */\n\tstatic bind () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static init - The initialization is the last step of the Mounting cycle,\n\t * all final operations should be implemented here.\n\t *\n\t * @param  {string} selector - The CSS selector with which Monogatari has been\n\t *                             initialized\n\t * @return {Promise} - Result of the initialization operation\n\t */\n\tstatic init () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static render - Elements requireing dynamic rendering, should be updated\n\t * in this method. The way they modify the HTML contents is entirely up to the\n\t * component's implementation.\n\t *\n\t * @return {Promise} - Result of the render operation\n\t */\n\tstatic render () {\n\t\treturn Promise.resolve ();\n\t}\n}\n\n/**\n * Each component can define its initial HTML structure, which should be used on\n * the setup or rendering functions of the cycle, adding to the DOM.\n*/\nComponent.html = '';\n\n/**\n * If needed, every component should declare its configuration as follows. This\n * configuration object should be used to store component-specific settings as well\n * as other objects/assets used by the component. If any specific object needs\n * recurrent access such as the declarations in the script.js file, provinding\n * a static function for that specific object could be great.\n */\nComponent._configuration = {};\n\n/**\n * If needed, every component should declare its state as follows. This\n * state object should be used to store state variables used by the component.\n * If any specific variable recurrent access or modifications, provinding\n * a static function for that specific variable could be great.\n */\nComponent._state = {};\n\n/**\n * All components must have an unique ID, with this ID the developers will be\n * able to access the component classes, remove components or register new ones.\n */\nComponent._id = '';\n\nexport { Component };","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass CreditsScreen extends Component {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn this._configuration[object];\n\t\t\t} else {\n\t\t\t\tthis._configuration = Object.assign ({}, this._configuration, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._configuration;\n\t\t}\n\t}\n\n\tstatic credits (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn this._configuration.credits[object];\n\t\t\t} else {\n\t\t\t\tthis._configuration.credits = Object.assign ({}, this._configuration.credits, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._configuration.credits;\n\t\t}\n\t}\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).append (this.html ());\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic init (selector) {\n\t\tif (Object.keys (this.credits ()).length > 0) {\n\t\t\t$_(selector).append (this.html ());\n\t\t\t$_(`${selector} [data-screen=\"main\"] [data-ui=\"inner-menu\"]`).append ('<button data-action=\"open-screen\" data-open=\"credits\" data-string=\"Credits\">Credits</button>');\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"credits\"] [data-ui=\"credits\"]`).html (this.render ());\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic render () {\n\t\tconst items = Object.keys (this.credits ()).map ((section) => {\n\t\t\treturn Monogatari.component ('credits_screen::item').render (section, this.credits (section));\n\t\t});\n\n\t\t$_(`${Monogatari.selector} [data-screen=\"credits\"] [data-ui=\"credits\"]`).html (items);\n\t}\n}\n\nCreditsScreen._state = {};\nCreditsScreen._id = 'credits_screen';\n\nCreditsScreen._html = `\n\t<section data-screen=\"credits\" data-component=\"credits_screen\">\n\t\t<button class=\"fas fa-arrow-left top left\" data-action=\"back\"></button>\n\t\t<h2 data-string=\"Credits\">Credits</h2>\n\t\t<div class=\"text--center padded\" data-ui=\"credits\"></div>\n\t</section>\n`;\n\nCreditsScreen._configuration = {\n\tcredits: {}\n};\n\nMonogatari.registerComponent (CreditsScreen);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\n\nclass CreditsScreenItem extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic render (section, content) {\n\t\treturn this.html (null, section, content);\n\t}\n}\n\nCreditsScreenItem._id = 'credits_screen::item';\n\nCreditsScreenItem._html = (section, content) => {\n\tlet html = `<h3>${section}</h3><div>`;\n\n\tif (typeof content === 'string') {\n\t\treturn `\n\t\t\t<p class='row row--spaced'>\n\t\t\t\t<span class=\"row__column row__column--phone--12\">${content}</span>\n\t\t\t</p>`;\n\t}\n\n\tfor (const key of Object.keys (content)) {\n\t\tif (key.indexOf ('_') === 0) {\n\t\t\thtml += `<p class='row row--spaced'>\n\t\t\t\t\t\t<span class=\"row__column row__column--phone--12\">${content[key]}</span>\n\t\t\t\t\t</p>`;\n\t\t} else {\n\t\t\thtml += `<p class='row row--spaced'>\n\t\t\t\t\t\t<b class=\"row__column row__column--phone--6\">${key}</b>\n\t\t\t\t\t\t<span class=\"row__column row__column--phone--6\">${content[key]}</span>\n\t\t\t\t\t</p>`;\n\t\t}\n\n\t}\n\thtml += '</div>';\n\treturn html;\n};\n\nMonogatari.registerComponent (CreditsScreenItem);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass DialogLog extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup () {\n\t\tMonogatari.component ('quick_menu').addAfter ('Hide', {\n\t\t\tstring: 'Log',\n\t\t\ticon: 'far fa-comments',\n\t\t\tdata: {\n\t\t\t\taction: 'dialog-log'\n\t\t\t}\n\t\t});\n\n\t\t$_(`${Monogatari.selector}`).append (this.html ());\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-content=\"log\"]`).html ('<div class=\"text--center padded\" data-string=\"NoDialogsAvailable\">No dialogs available. Dialogs will appear here as they show up.</div>');\n\t}\n\n\tstatic bind () {\n\t\tMonogatari.registerListener ('dialog-log', {\n\t\t\tcallback: () => {\n\t\t\t\tif ($_('[data-ui=\"dialog-log\"]').isVisible ()) {\n\t\t\t\t\t$_('[data-ui=\"dialog-log\"]').removeClass ('modal--active');\n\t\t\t\t} else {\n\t\t\t\t\t$_('[data-ui=\"dialog-log\"]').addClass ('modal--active');\n\n\t\t\t\t\t// Make the log scroll to the last dialog available\n\t\t\t\t\tconst element = $_(`${Monogatari.selector} [data-content=\"log\"]`).get (0);\n\t\t\t\t\telement.scrollTop = element.scrollHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic write ({ id, character, dialog }) {\n\t\t$_('[data-string=\"NoDialogsAvailable\"]').remove ();\n\n\t\tif (id !== 'narrator' && id !== 'centered') {\n\t\t\tconst { name, color } = character;\n\t\t\tconsole.log (id, character, dialog, `${Monogatari.selector} [data-content=\"log\"]`);\n\t\t\t$_(`${Monogatari.selector} [data-content=\"log\"]`).append (`\n\t\t\t\t<div data-spoke=\"${id}\" class=\"named\">\n\t\t\t\t\t<span style=\"color:${color};\">${Monogatari.replaceVariables (name)} </span>\n\t\t\t\t\t<p>${dialog}</p>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t} else {\n\t\t\t$_(`${Monogatari.selector} [data-content=\"log\"]`).append (`<div data-spoke=\"${id}\" class=\"unnamed\"><p>${dialog}</p></div>`);\n\t\t}\n\t}\n\n\tstatic pop () {\n\t\tconst last = $_(`${Monogatari.selector} [data-content=\"log\"] [data-spoke]`).last ();\n\t\tif (typeof last !== 'undefined') {\n\t\t\tlast.remove ();\n\t\t}\n\t}\n}\n\nDialogLog._id = 'dialog_log';\n\nDialogLog._html = `\n\t<div data-component=\"dialog_log\" data-ui=\"dialog-log\" class=\"modal\">\n\t\t<div class=\"modal__content\">\n\t\t\t<div data-content=\"log\">\n\t\t\t\t<div class=\"text--center padded\" data-string=\"NoDialogsAvailable\">No dialogs available. Dialogs will appear here as they show up.</div>\n\t\t\t</div>\n\t\t\t<button data-action=\"dialog-log\">Close</button>\n\t\t</div>\n\t</div>\n`;\n\nMonogatari.registerComponent (DialogLog);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass GameScreen extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).append (GameScreen.html ());\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic resize () {\n\t\t// TODO: get ratio from options,\n\t\tconst h = Math.floor (window.innerWidth * (9/16));\n\t\tlet widthCss = '100%';\n\t\tlet heightCss = '100%';\n\t\tlet marginTopCss = 0;\n\n\t\tif (h <= window.innerHeight) {\n\t\t\tconst marginTop = Math.floor ((window.innerHeight - h)/2);\n\t\t\tmarginTopCss = marginTop + 'px';\n\t\t\theightCss = h + 'px';\n\n\t\t}\n\t\telse {\n\t\t\tconst w = Math.floor (window.innerHeight * (16/9));\n\t\t\twidthCss = w + 'px';\n\t\t}\n\n\t\t$_('#game_visuals').style ({\n\t\t\twidth: widthCss,\n\t\t\theight: heightCss,\n\t\t\tmarginTop: marginTopCss,\n\t\t\tmarginLeft: 'auto',\n\t\t\tmarginRight: 'auto',\n\t\t\tbackgroundSize: 'contain',\n\t\t\tposition: 'relative'\n\t\t});\n\t}\n\n\tstatic bind (selector) {\n\t\t$_(`${selector}`).on ('click', '[data-screen=\"game\"] *:not([data-choice])', function () {\n\t\t\tMonogatari.debug ().debug ('Next Statement Listener');\n\t\t\tMonogatari.canProceed ().then (() => {\n\t\t\t\tMonogatari.next ();\n\t\t\t}).catch (() => {\n\t\t\t\t// An action waiting for user interaction or something else\n\t\t\t\t// is blocking the game.\n\t\t\t});\n\t\t});\n\n\t\tGameScreen.resize();\n\t\t$_(window).on('resize', GameScreen.resize);\n\n\t\tMonogatari.registerListener ('back', {\n\t\t\tkeys: 'left',\n\t\t\tcallback: () => {\n\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\tMonogatari.canRevert ().then (() => {\n\t\t\t\t\tMonogatari.previous ();\n\t\t\t\t}).catch ((e) => {\n\t\t\t\t\t// An action waiting for user interaction or something else\n\t\t\t\t\t// is blocking the game.\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.resolve ();\n\t}\n\n}\n\nGameScreen._configuration = {};\nGameScreen._state = {};\nGameScreen._id = 'game_screen';\n\nGameScreen._html = `\n\t<section data-component=\"game_screen\" data-screen=\"game\" id=\"game\" class=\"unselectable\">\n\t\t<div id='game_visuals'>\n\t\t\t<div id=\"particles-js\" data-ui=\"particles\"></div>\n\t\t\t<div id=\"background\" data-ui=\"background\"></div>\n\t\t\t<div id='components'></div>\n\t\t</div>\n\t\t<div data-component=\"text_box\" data-ui=\"text\">\n\t\t\t<img data-ui=\"face\" alt=\"\" data-content=\"character_expresion\">\n\t\t\t<span data-ui=\"who\" data-content=\"character_name\"></span>\n\t\t\t<p data-ui=\"say\" data_content=\"dialog\"></p>\n\t\t</div>\n\t\t<div data-ui=\"quick-menu\" data-component=\"quick-menu\" class=\"text--right\"></div>\n\t</section>\n`;\n\nMonogatari.registerComponent (GameScreen);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass HelpScreen extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).append (HelpScreen.html ());\n\t\treturn Promise.resolve ();\n\t}\n}\n\nHelpScreen._configuration = {};\nHelpScreen._state = {};\nHelpScreen._id = 'help_screen';\n\nHelpScreen._html = `\n\t<section data-component=\"help_screen\" data-screen=\"help\">\n\t\t<button class=\"fas fa-arrow-left top left\" data-action=\"back\"></button>\n\t\t<h2 data-string=\"Help\">Help</h2>\n\t\t<div class=\"row row--spaced\" data-content=\"help\">\n\t\t\t<p data-string=\"AdvanceHelp\" class=\"row__column--12\">To advance through the game, left-click or tap anywhere on the game screen or press the space key</p>\n\t\t\t<div class=\"row__column--12 row__column--tablet--6 text--left row row--spaced\">\n\t\t\t\t<div class=\"row__column--12\">\n\t\t\t\t\t<h3 data-string=\"QuickMenu\">Quick Menu</h3>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2 row\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"fas fa-arrow-left\" data-content=\"icon\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"BackButton\">Go back</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"fas fa-eye\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"HideButton\">Hide the text box</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"far fa-comments\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"DialogLogButton\">Show the dialog log</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"fas fa-play-circle\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"AutoPlayButton\">Enable auto play</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"fas fa-fast-forward\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"SkipButton\">Enter skip mode</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"fas fa-save\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"SaveButton\">Open the Save Screen</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"fas fa-undo\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"LoadButton\">Open the Load Screen</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t<span class=\"fas fa-cog\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"SettingsButton\">Open the Settings Screen</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span class=\"fas fa-times-circle\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"QuitButton\">Quit Game</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row__column--12 row__column--tablet--6 text--left row row--spaced\">\n\t\t\t\t<div class=\"row__column--12\">\n\t\t\t\t\t<h3 data-string=\"KeyboardShortcuts\">Keyboard Shortcuts</h3>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2 row\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\"><span class=\"fas fa-arrow-left\" data-content=\"icon\"></span></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"BackButton\">Go Back</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\">H</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"HideButton\">Hide the text box</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\">A</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"AutoPlayButton\">Enable auto play</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\">S</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"SkipButton\">Enter skip mode</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\">⇧ S</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"SaveButton\">Open the Save Screen</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\">⇧ L</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"LoadButton\">Open the Load Screen</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\">ESC</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"SettingsButton\">Open the Settings Screen.</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row__column--12 row\">\n\t\t\t\t\t<div class=\"row__column--2\" data-content=\"symbols\">\n\t\t\t\t\t\t<span data-content=\"shortcut\">⇧ Q</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row__column--10\" data-content=\"instruction\">\n\t\t\t\t\t\t<span data-string=\"QuitButton\">Quit Game</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n`;\n\nMonogatari.registerComponent (HelpScreen);","/*\n * ==============================\n * Gallery\n * ==============================\n * Author: Diego Islas Ocampo <diego@hyuchia.com>\n * Monogatari Version: 1.4.1\n * Component Version: 0.1.0\n * License: MIT\n * ==============================\n * A simple self-contained gallery for your visual novel!\n * To use it simply add this file to your `js` directory and then, load it in\n * your index.html file by adding this line just before the `main.js` one:\n * <script src='js/gallery.js'></script>\n *\n * And that's it! Just with that line, you'll be able to\n */\n\nimport { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class ImageGallery extends Component {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn ImageGallery._configuration[object];\n\t\t\t} else {\n\t\t\t\tImageGallery._configuration = Object.assign ({}, ImageGallery._configuration, object);\n\t\t\t\tImageGallery.onUpdate ();\n\t\t\t}\n\t\t} else {\n\t\t\treturn ImageGallery._configuration;\n\t\t}\n\t}\n\n\tstatic state (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn ImageGallery._state[object];\n\t\t\t} else {\n\t\t\t\tImageGallery._state = Object.assign ({}, ImageGallery._state, object);\n\t\t\t\tImageGallery.onUpdate ();\n\t\t\t}\n\t\t} else {\n\t\t\treturn ImageGallery._state;\n\t\t}\n\t}\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\t// We'll set up all needed variables in here\n\tstatic setup (selector) {\n\n\t\t// Let's add the gallery component itself to the HTML body, notice we are\n\t\t// keeping the data attributes to keep consistency between Monogatari\n\t\t// prebuilt components or menus\n\t\t$_(selector).append (this.html ());\n\n\t\t// Let's add a button to the main menu, we'll use this button to open\n\t\t// the gallery.\n\t\t$_(`${selector} [data-screen=\"main\"] [data-ui=\"inner-menu\"]`).append ('<button data-action=\"open-screen\" data-open=\"gallery\" data-string=\"Gallery\">Gallery</button>');\n\t\treturn Promise.resolve ();\n\t}\n\n\t// We'll modify the state of the gallery through this function, which will\n\t// also save things up to the storage.\n\tstatic onStateUpdate () {\n\t\tMonogatari.Storage.set ('gallery', ImageGallery.state ());\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic bind (selector) {\n\t\t// You may notice we also added a 'back' button in the gallery HTML so\n\t\t// that players can return to the main menu, let's add a lister for that\n\t\t// to happen.\n\t\t$_(`${selector} [data-screen=\"gallery\"] [data-action=\"back\"]`).click (() => {\n\t\t\t// Hide gallery\n\t\t\t$_(`${selector} [data-screen=\"gallery\"]`).hide ();\n\n\t\t\t// Show main menu\n\t\t\t$_(`${selector} [data-screen=\"main\"]`).show ();\n\t\t});\n\n\t\t// Now that we added the button, let's add a listener for it so that when\n\t\t// players click it, the gallery gets opened.\n\t\t$_(`${selector} [data-open=\"gallery\"]`).click (() => {\n\t\t\t// Hide all the other screens\n\t\t\t$_(`${selector} [data-screen]`).hide ();\n\n\t\t\t// Use the render function to render properly all the images in the gallery\n\t\t\t$_(`${selector} [data-screen=\"gallery\"] [data-ui=\"gallery\"]`).html (this.render ());\n\n\t\t\t// Now that the images have been added in the render, we can finally\n\t\t\t// show it\n\t\t\t$_(`${selector} [data-screen=\"gallery\"]`).show ();\n\t\t});\n\n\t\t// Now lets make it so that when a player clicks on one of the Images\n\t\t// of the gallery, the image gets shown. For that purpose, we'll use\n\t\t// create a function showImage (). You may notice we are not using a simple\n\t\t// $_().click function, instead we are using the 'on' function, this is\n\t\t// due to the images being generated automatically, we can't simply\n\t\t// attach the listerner to them so we attach it to their parent (the\n\t\t// gallery) and then check if the click was actually on an image.\n\t\t$_(`${selector} [data-ui=\"gallery\"]`).on ('click', (element) => {\n\t\t\tif (element.target.matches ('[data-image]')) {\n\t\t\t\tImageGallery.showImage (element.target.dataset.image);\n\t\t\t}\n\t\t});\n\n\t\t// This listener will make it so that any click on the image viewer\n\t\t// closes it\n\t\t$_(`${selector} [data-ui=\"image-viewer\"]`).click (() => {\n\t\t\t$_(`${selector} [data-screen=\"gallery\"] [data-ui=\"image-viewer\"]`).removeClass ('active');\n\t\t\t$_(`${selector} [data-screen=\"gallery\"] [data-ui=\"image-viewer\"] figure`).style ('background-image', '');\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic init (selector) {\n\t\t// Let's check if the storage has the list of unlocked images, if it\n\t\t// doesn't exist then let's create an empty one.\n\t\tif (Object.keys (ImageGallery.configuration ('images')).length > 0) {\n\t\t\tMonogatari.Storage.get ('gallery').then ((data) => {\n\t\t\t\tImageGallery.state ({\n\t\t\t\t\tunlocked: data\n\t\t\t\t});\n\t\t\t}).catch (() => {\n\n\t\t\t});\n\t\t} else {\n\t\t\t// Hide Gallery if there are no images defined.\n\t\t\t$_(`${selector} [data-screen=\"gallery\"]`).remove ();\n\t\t\t$_(`${selector} [data-open=\"gallery\"]`).remove ();\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\t// A simple function to show an image, this will activate the image viewer\n\t// and set the image as a background for it.\n\tstatic showImage (image) {\n\t\t$_(`${Monogatari.selector} [data-screen=\"gallery\"] [data-ui=\"image-viewer\"] figure`).style ('background-image', `url('./img/gallery/${this.images[image]}')`);\n\t\t$_(`${Monogatari.selector} [data-screen=\"gallery\"] [data-ui=\"image-viewer\"]`).addClass ('active');\n\t}\n\n\t// The render image will build all the image elements we need in the gallery\n\tstatic render () {\n\t\t// Clear the gallery images so we can rebuild them every time the gallery\n\t\t// gets opened\n\t\t$_(`${Monogatari.selector} [data-screen=\"gallery\"] [data-ui=\"gallery\"]`).html ('');\n\t\t// Create an image element for evert image declared in the constructor\n\t\treturn Object.keys (ImageGallery.state ('unlocked')).map ((image) => {\n\t\t\t// Check if the image has been unlocked or not, if it hasn't then a\n\t\t\t// lock will be shown instead of the image.\n\t\t\tif (ImageGallery.state ('unlocked').includes (image)) {\n\t\t\t\treturn `<figure class='md-depth-2 col xs6 s6 m4 l3 xl3' data-image='${image}' style='background-image: url('./img/gallery/${this.images[image]}')'></figure>`;\n\t\t\t} else {\n\t\t\t\treturn '<figure class=\"md-depth-2 column column--col xs6 s6 m4 l3 xl3\"><span class=\"fa fa-lock\"></span></figure>';\n\t\t\t}\n\t\t}).join ('');\n\t}\n\n\tstatic images (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn ImageGallery._configuration.images[object];\n\t\t\t} else {\n\t\t\t\tImageGallery._configuration.images = Object.assign ({}, ImageGallery._configuration.images, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn ImageGallery._configuration.images;\n\t\t}\n\t}\n}\n\nImageGallery._id = 'gallery_screen';\nImageGallery._configuration = {\n\tdirectory: 'gallery',\n\timages: {}\n};\n\nImageGallery._state = {\n\tunlocked: []\n};\n\nImageGallery._html = `\n\t<section data-component=\"gallery_screen\" data-screen=\"gallery\">\n\t\t<div class='modal' data-ui=\"image-viewer\">\n\t\t\t<figure></figure>\n\t\t</div>\n\t\t<button class='fas fa-arrow-left top left' data-action='back'></button>\n\t\t<h2 data-string='Gallery'>Gallery</h2>\n\t\t<div class='row row--spaced text--center' data-ui=\"gallery\"></div>\n\t</section>\n`;\n\nMonogatari.registerComponent (ImageGallery);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\n\nclass ImageGalleryItem extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic render (image) {\n\t\treturn this.html (null, image);\n\t}\n}\n\nImageGalleryItem._id = 'gallery_screen::item';\n\nImageGalleryItem._html = image => {\n\t// Check if the image has been unlocked or not, if it hasn't then a\n\t// lock will be shown instead of the image.\n\tif (Monogatari.component ('gallery_screen').state ('unlocked').includes (image)) {\n\t\treturn `<figure data-component=\"gallery_screen::item\" class='md-depth-2 col xs6 s6 m4 l3 xl3' data-image='${image}' style='background-image: url('./img/gallery/${Monogatari.component ('gallery_screen').images (image)}')'></figure>`;\n\t} else {\n\t\treturn '<figure data-component=\"gallery_screen::item\" class=\"md-depth-2 column column--col xs6 s6 m4 l3 xl3\"><span class=\"fa fa-lock\"></span></figure>';\n\t}\n};\n\nMonogatari.registerComponent (ImageGalleryItem);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass LoadScreen extends Component {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn LoadScreen._configuration[object];\n\t\t\t} else {\n\t\t\t\tLoadScreen._configuration = Object.assign ({}, LoadScreen._configuration, object);\n\t\t\t\tLoadScreen.onUpdate ();\n\t\t\t}\n\t\t} else {\n\t\t\treturn LoadScreen._configuration;\n\t\t}\n\t}\n\n\tstatic state (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn LoadScreen._state[object];\n\t\t\t} else {\n\t\t\t\tLoadScreen._state = Object.assign ({}, LoadScreen._state, object);\n\t\t\t\tLoadScreen.onUpdate ();\n\t\t\t}\n\t\t} else {\n\t\t\treturn LoadScreen._state;\n\t\t}\n\t}\n\n\t/**\n\t * @static onStart - This function acts as an event listener for when the game\n\t * starts.\n\t *\n\t * @return {Promise}\n\t */\n\tstatic onStart () {\n\t\tif (Monogatari.setting ('AutoSave') != 0 && typeof Monogatari.setting ('AutoSave') === 'number') {\n\t\t\tMonogatari.debug ().debug ('Automatic save is enabled, setting up timeout');\n\t\t\tMonogatari.global ('_AutoSaveInterval', setInterval(function () {\n\t\t\t\tMonogatari.debug ().groupCollapsed ('Automatic Save');\n\t\t\t\tconst id = Monogatari.global ('currentAutoSaveSlot');\n\n\t\t\t\tMonogatari.debug ().debug ('Saving data to slot', id);\n\n\t\t\t\tMonogatari.saveTo ('AutoSaveLabel', id).then (({ key, value }) => {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen='load'] [data-ui='saveSlots'] [data-ui='slots'] [data-slot='${key}'] small`).text (value.name);\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen='save'] [data-ui='slots'] [data-save='${key}'] small`).text (value.name);\n\t\t\t\t\tLoadScreen.setAutoSlots ();\n\t\t\t\t});\n\n\t\t\t\tif (Monogatari.global ('currentAutoSaveSlot') === Monogatari.setting ('Slots')) {\n\t\t\t\t\tMonogatari.global ('currentAutoSaveSlot', 1);\n\t\t\t\t} else {\n\t\t\t\t\tMonogatari.global ('currentAutoSaveSlot', Monogatari.global ('currentAutoSaveSlot') + 1);\n\t\t\t\t}\n\n\t\t\t\tMonogatari.debug ().groupEnd ('Automatic Save');\n\n\t\t\t}, Monogatari.setting ('AutoSave') * 60000));\n\t\t} else {\n\t\t\tMonogatari.debug ().debug ('Automatic save is disabled. Section will be hidden from Load Screen');\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"load\"] [data-ui=\"autoSaveSlots\"]`).hide ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\tclearInterval (Monogatari.global ('_AutoSaveInterval'));\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic setup (selector) {\n\t\tMonogatari.global ('_AutoSaveInterval', null);\n\t\t$_(selector).append (LoadScreen.html ());\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setAutoSlots () {\n\t\tconst element = $_(`${Monogatari.selector} [data-screen=\"load\"] [data-ui=\"autoSaveSlots\"] [data-ui=\"slots\"]`);\n\n\t\telement.html ('');\n\n\t\tMonogatari.Storage.keys ().then ((keys) => {\n\t\t\tconst savedData = keys.filter ((key) => {\n\t\t\t\treturn key.indexOf (Monogatari.setting ('AutoSaveLabel')) === 0;\n\t\t\t}).sort ((a, b) => {\n\t\t\t\tconst aNumber = parseInt (a.split (Monogatari.setting ('AutoSaveLabel'))[1]);\n\t\t\t\tconst bNumber = parseInt (b.split (Monogatari.setting ('AutoSaveLabel'))[1]);\n\n\t\t\t\tif (aNumber > bNumber) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (aNumber < bNumber) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (let i = 0; i < savedData.length; i++) {\n\t\t\t\tconst label = savedData[i];\n\t\t\t\tif (label.indexOf (Monogatari.setting ('AutoSaveLabel')) === 0) {\n\t\t\t\t\tMonogatari.Storage.get (savedData[i]).then ((slot) => {\n\t\t\t\t\t\tconst id = label.split (Monogatari.setting ('AutoSaveLabel'))[1];\n\t\t\t\t\t\tif (slot !== null && slot !== '') {\n\t\t\t\t\t\t\tMonogatari.addAutoSlot (id.split ('_').pop (), slot);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if there are no Auto Saved games.\n\t\t\tif (element.html ().trim () === '') {\n\t\t\t\telement.html (`<p data-string=\"NoAutoSavedGames\">${Monogatari.string ('NoAutoSavedGames')}</p>`);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic setSlots () {\n\t\t$_(`${Monogatari.selector} [data-screen=\"load\"] [data-ui=\"saveSlots\"] [data-ui=\"slots\"]`).html ('');\n\t\t$_(`${Monogatari.selector} [data-screen=\"save\"] [data-ui=\"slots\"]`).html ('');\n\n\t\treturn Monogatari.Storage.keys ().then ((keys) => {\n\t\t\tconst savedData = keys.filter ((key) => {\n\t\t\t\treturn key.indexOf (Monogatari.setting ('SaveLabel')) === 0;\n\t\t\t}).sort ((a, b) => {\n\t\t\t\tconst aNumber = parseInt (a.split (Monogatari.setting ('SaveLabel'))[1]);\n\t\t\t\tconst bNumber = parseInt (b.split (Monogatari.setting ('SaveLabel'))[1]);\n\n\t\t\t\tif (aNumber > bNumber) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (aNumber < bNumber) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst promises = [];\n\t\t\tfor (let i = 0; i < savedData.length; i++) {\n\t\t\t\tconst label = savedData[i];\n\t\t\t\tpromises.push(Monogatari.Storage.get (label).then ((slot) => {\n\t\t\t\t\tconst id = label.split (Monogatari.setting ('SaveLabel'))[1];\n\t\t\t\t\tif (slot !== null && slot !== '') {\n\t\t\t\t\t\tMonogatari.addSlot (id.split ('_').pop (), slot);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\treturn Promise.all (promises).then (() => {\n\n\t\t\t\t// Check if there are no Saved games.\n\t\t\t\tif ($_(`${Monogatari.selector} [data-screen=\"load\"] [data-ui=\"saveSlots\"] [data-ui=\"slots\"]`).html ().trim() === '') {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"save\"] [data-ui=\"slots\"]`).html (`<p data-string=\"NoSavedGames\">${Monogatari.string ('NoSavedGames')}</p>`);\n\t\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"load\"] [data-ui=\"slots\"]`).html (`<p data-string=\"NoSavedGames\">${Monogatari.string ('NoSavedGames')}</p>`);\n\t\t\t\t}\n\t\t\t\tLoadScreen.setAutoSlots ();\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic bind (selector) {\n\t\t$_(`${selector} [data-screen=\"load\"]`).on ('click', '[data-delete], [data-delete] *', function (event) {\n\t\t\tevent.stopImmediatePropagation ();\n\t\t\tevent.stopPropagation ();\n\t\t\tevent.preventDefault ();\n\n\t\t\tlet element = $_(this);\n\t\t\tif (element.matches ('path')) {\n\t\t\t\telement = element.closest ('[data-delete]');\n\t\t\t}\n\n\t\t\tMonogatari.global ('deleteSlot', element.data ('delete'));\n\t\t\tMonogatari.Storage.get (Monogatari.global ('deleteSlot')).then ((data) => {\n\t\t\t\tif (typeof data.name !== 'undefined') {\n\t\t\t\t\t$_(`${selector} [data-notice=\"slot-deletion\"] small`).text (data.name);\n\t\t\t\t} else {\n\t\t\t\t\t$_(`${selector} [data-notice=\"slot-deletion\"] small`).text (data.date);\n\t\t\t\t}\n\n\t\t\t\t$_(`${selector} [data-notice=\"slot-deletion\"]`).addClass ('modal--active');\n\t\t\t});\n\t\t});\n\n\t\t// Load a saved game slot when it is pressed\n\t\t$_(`${selector} [data-screen=\"load\"]`).on ('click', '[data-slot], [data-slot] *:not([data-delete])', function () {\n\t\t\tMonogatari.loadFromSlot ($_(this).closest ('[data-slot]').data('slot'));\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic init (selector) {\n\n\t\t// Disable the load and save slots in case Local Storage is not supported.\n\t\tif (!window.localStorage) {\n\t\t\t$_(`${selector} [data-screen=\"load\"] [data-ui=\"slots\"]`).html (`<p>${Monogatari.string ('LocalStorageWarning')}</p>`);\n\t\t} else {\n\t\t\tLoadScreen.setSlots ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic render () {\n\t\treturn Promise.resolve ();\n\t}\n}\n\nLoadScreen._configuration = {};\nLoadScreen._state = {};\nLoadScreen._id = 'load_screen';\n\nLoadScreen._html = `\n\t<section data-component=\"load_screen\" data-screen=\"load\">\n\t\t<button class=\"fas fa-arrow-left top left\" data-action=\"back\"></button>\n\t\t<h2 data-string=\"Load\">Load</h2>\n\t\t<div data-ui=\"saveSlots\">\n\t\t\t<h3 data-string=\"LoadSlots\">Saved Games</h3>\n\t\t\t<div data-ui=\"slots\" class=\"row row--spaced padded\"></div>\n\t\t</div>\n\t\t<div data-ui=\"autoSaveSlots\">\n\t\t\t<h3 data-string=\"LoadAutoSaveSlots\">Auto Saved Games</h3>\n\t\t\t<div data-ui=\"slots\" class=\"row row--spaced padded\"></div>\n\t\t</div>\n\t</section>\n`;\nMonogatari.registerComponent (LoadScreen);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass LoadingScreen extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).append (LoadingScreen.html ());\n\t\treturn Promise.resolve ();\n\t}\n}\n\nLoadingScreen._configuration = {};\nLoadingScreen._state = {};\nLoadingScreen._id = 'loading_screen';\n\nLoadingScreen._html = `\n\t<section data-component=\"loading_screen\" data-screen=\"loading\">\n\t\t<div class=\"middle\">\n\t\t\t<h2 data-string=\"Loading\">Loading</h2>\n\t\t\t<progress data-ui=\"load-progress\" value=\"0\" max=\"100\"></progress>\n\t\t\t<small data-string=\"LoadingMessage\">Wait while the assets are loaded.</small>\n\t\t</div>\n\t</section>\n`;\n\nMonogatari.registerComponent (LoadingScreen);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass MainScreen extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).append (this.html ());\n\t\treturn Promise.resolve ();\n\t}\n}\n\nMainScreen._id = 'main_screen';\n\nMainScreen._html = `\n\t<section data-component=\"main_screen\" data-screen=\"main\">\n\t\t<audio type=\"audio/mpeg\" data-component=\"ambient\"></audio>\n\n\t\t<div class=\"vertical vertical--right text--right bottom animated bounceIn\" data-ui=\"inner-menu\">\n\t\t\t<button data-action=\"start\" data-string=\"Start\">Start</button>\n\t\t\t<button data-action=\"open-screen\" data-open=\"load\" data-string=\"Load\">Load</button>\n\t\t\t<button data-action=\"open-screen\" data-open=\"settings\" data-string=\"Settings\">Settings</button>\n\t\t\t<button data-action=\"open-screen\" data-open=\"help\" data-string=\"Help\">Help</button>\n\t\t</div>\n\t</section>\n`;\n\nMonogatari.registerComponent (MainScreen);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\n\nclass Message extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic render (title, subtitle, body) {\n\t\treturn this.html (null, title, subtitle, body);\n\t}\n}\n\nMessage._configuration = {};\nMessage._state = {};\nMessage._id = 'message';\n\nMessage._html = (title, subtitle, body) => `\n\t<div data-component=\"message\" data-ui=\"messages\" class=\"modal  modal--active\">\n\t\t<div class=\"modal__content\">\n\t\t\t<div data-ui=\"message-content\" >\n\t\t\t\t<h3 data-content=\"title\">${title}</h3>\n\t\t\t\t<p data-content=\"subtitle\">${subtitle}</p>\n\t\t\t\t<p data-content=\"body\">${body}</p>\n\t\t\t</div>\n\t\t\t<div class=\"horizontal horizontal--center\" data-ui=\"inner-menu\">\n\t\t\t\t<button data-action=\"close\" data-close=\"messages\" data-string=\"Close\">Close</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n`;\n\nMonogatari.registerComponent (Message);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass OrientationWarning extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).prepend (OrientationWarning.html ());\n\t\treturn Promise.resolve ();\n\t}\n}\n\nOrientationWarning._configuration = {};\nOrientationWarning._state = {};\nOrientationWarning._id = 'orientation_warning';\n\nOrientationWarning._html = `\n\t<div data-component=\"orientation_warning\" data-notice=\"orientation\" class=\"modal\">\n\t\t<div class=\"modal__content\">\n\t\t\t<p data-string=\"OrientationWarning\">Please rotate your device to play.</p>\n\t\t</div>\n\t</div>\n`;\n\nMonogatari.registerComponent (OrientationWarning);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass SaveScreen extends Component {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn SaveScreen._configuration[object];\n\t\t\t} else {\n\t\t\t\tSaveScreen._configuration = Object.assign ({}, SaveScreen._configuration, object);\n\t\t\t\tSaveScreen.onUpdate ();\n\t\t\t}\n\t\t} else {\n\t\t\treturn SaveScreen._configuration;\n\t\t}\n\t}\n\n\tstatic state (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn SaveScreen._state[object];\n\t\t\t} else {\n\t\t\t\tSaveScreen._state = Object.assign ({}, SaveScreen._state, object);\n\t\t\t\tSaveScreen.onUpdate ();\n\t\t\t}\n\t\t} else {\n\t\t\treturn SaveScreen._state;\n\t\t}\n\t}\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).append (SaveScreen.html ());\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic bind (selector) {\n\t\t$_(`${selector} [data-screen=\"save\"]`).on ('click', '[data-delete], [data-delete] *', function (event) {\n\t\t\tevent.stopImmediatePropagation ();\n\t\t\tevent.stopPropagation ();\n\t\t\tevent.preventDefault ();\n\n\t\t\tlet element = $_(this);\n\t\t\tif (element.matches ('path')) {\n\t\t\t\telement = element.closest ('[data-delete]');\n\t\t\t}\n\n\t\t\tMonogatari.global ('deleteSlot', element.data ('delete'));\n\t\t\tMonogatari.Storage.get (Monogatari.global ('deleteSlot')).then ((data) => {\n\t\t\t\tif (typeof data.name !== 'undefined') {\n\t\t\t\t\t$_(`${selector} [data-notice=\"slot-deletion\"] small`).text (data.name);\n\t\t\t\t} else {\n\t\t\t\t\t$_(`${selector} [data-notice=\"slot-deletion\"] small`).text (data.date);\n\t\t\t\t}\n\n\t\t\t\t$_(`${selector} [data-notice=\"slot-deletion\"]`).addClass ('modal--active');\n\t\t\t});\n\t\t});\n\n\t\t$_(`${selector} [data-action=\"save\"], ${selector} [data-action=\"save\"] *`).click(function () {\n\t\t\tconst slotName = $_(`${selector} [data-screen=\"save\"] [data-input=\"slotName\"]`).value ().trim ();\n\t\t\tif (slotName !== '') {\n\t\t\t\tMonogatari.saveTo ('SaveLabel', null, slotName).then (({ key, value }) => {\n\t\t\t\t\tMonogatari.addSlot (key.split ('_').pop (), value);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$_(`${selector} [data-action=\"overwrite-slot\"], ${selector} [data-action=\"overwrite-slot\"] *`).click(function () {\n\t\t\tconst customName = $_(`${selector} [data-notice=\"slot-overwrite\"] input`).value ().trim ();\n\t\t\tif (customName !== '') {\n\t\t\t\tMonogatari.saveTo ('SaveLabel', Monogatari.global ('overwriteSlot'), customName).then (({ key, value }) => {\n\t\t\t\t\t$_(`${selector} [data-screen='load'] [data-ui='saveSlots'] [data-ui='slots'] [data-slot='${key}'] small`).text (value.name);\n\t\t\t\t\t$_(`${selector} [data-screen='save'] [data-ui='slots'] [data-slot='${key}'] small`).text (value.name);\n\t\t\t\t});\n\t\t\t\tMonogatari.global ('overwriteSlot', null);\n\t\t\t\t$_(`${selector} [data-notice=\"slot-overwrite\"]`).removeClass ('modal--active');\n\t\t\t}\n\t\t});\n\n\t\t$_(`${selector} [data-action=\"delete-slot\"], ${selector} [data-action=\"delete-slot\"] *`).click(function () {\n\t\t\tMonogatari.Storage.remove (Monogatari.global ('deleteSlot'));\n\t\t\t$_(`${selector} [data-slot=\"${Monogatari.global ('deleteSlot')}\"], ${selector} [data-save=\"${Monogatari.global ('deleteSlot')}\"]`).remove ();\n\t\t\tMonogatari.global ('deleteSlot', null);\n\t\t\t$_(`${selector} [data-notice=\"slot-deletion\"]`).removeClass ('modal--active');\n\t\t});\n\n\t\t// Save to slot when a slot is pressed.\n\t\t$_(`${selector} [data-screen=\"save\"]`).on ('click', '[data-slot], [data-slot] *:not([data-delete])', function () {\n\t\t\tMonogatari.global ('overwriteSlot', $_(this).parent ().data ('slot').split ('_').pop ());\n\t\t\tMonogatari.Storage.get (Monogatari.setting ('SaveLabel') + '_' + Monogatari.global ('overwriteSlot')).then ((data) => {\n\t\t\t\tif (typeof data.name !== 'undefined') {\n\t\t\t\t\t$_(`${selector} [data-notice=\"slot-overwrite\"] input`).value (data.name);\n\t\t\t\t} else {\n\t\t\t\t\t$_(`${selector} [data-notice=\"slot-overwrite\"] input`).value (data.date);\n\t\t\t\t}\n\t\t\t\t$_(`${selector} [data-notice=\"slot-overwrite\"]`).addClass ('modal--active');\n\t\t\t});\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic init (selector) {\n\t\t// Disable the load and save slots in case Local Storage is not supported.\n\t\tif (!window.localStorage) {\n\t\t\t$_(`${selector} [data-screen=\"save\"] [data-ui=\"slots\"]`).html (`<p>${Monogatari.string ('LocalStorageWarning')}</p>`);\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic render () {\n\t\t$_(`${Monogatari.selector} [data-screen=\"save\"] [data-ui=\"slots\"]`).html ('');\n\t\treturn Promise.resolve ();\n\t}\n}\n\nSaveScreen._configuration = {};\nSaveScreen._state = {};\nSaveScreen._id = 'save_screen';\n\nSaveScreen._html = `\n\t<section data-component=\"save_screen\" data-screen=\"save\">\n\t\t<button class=\"fas fa-arrow-left top left\" data-action=\"back\"></button>\n\t\t<div class=\"horizontal horizontal--center\">\n\t\t\t<input type=\"text\" placeholder=\"Save Slot Name\" data-input=\"slotName\" required>\n\t\t\t<button data-string=\"Save\" data-action=\"save\">Save</button>\n\t\t</div>\n\t\t<div data-ui=\"slots\" class=\"row row--spaced padded\"></div>\n\t</section>\n`;\n\nMonogatari.registerComponent (SaveScreen);","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var fs = require('fs')\nvar path = require('path')\n\nvar pathFile = path.join(__dirname, 'path.txt')\n\nfunction getElectronPath () {\n  if (fs.existsSync(pathFile)) {\n    var executablePath = fs.readFileSync(pathFile, 'utf-8')\n    if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n      return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath)\n    }\n    return path.join(__dirname, 'dist', executablePath)\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again')\n  }\n}\n\nmodule.exports = getElectronPath()\n","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_, Platform } from '@aegis-framework/artemis';\n\n/* global require */\n\nclass SettingsScreen extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\n\t\t$_(selector).append (SettingsScreen.html ());\n\t\tif (Monogatari.setting ('MultiLanguage') === true) {\n\t\t\t$_(`${selector} [data-settings=\"language\"] div`).html ('');\n\t\t\t$_(`${selector} [data-settings=\"language\"] div`).html (`\n\t\t\t\t<select data-action=\"set-language\">\n\t\t\t\t\t${Object.keys (Monogatari._script).map ((language) => `<option value=\"${language}\">${language}</option>`)}\n\t\t\t\t</select>\n\t\t\t\t<span class=\"fas fa-sort\" data-select=\"set-language\"></span>\n\t\t\t`);\n\t\t\t$_(`${selector} [data-action=\"set-language\"]`).value (Monogatari.preference ('Language'));\n\t\t} else {\n\t\t\t$_(`${selector} [data-settings=\"language\"]`).hide ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic bind (selector) {\n\t\t// Fix for select labels\n\t\t$_(`${selector} [data-select]`).click (function () {\n\t\t\tconst e = document.createEvent ('MouseEvents');\n\t\t\te.initMouseEvent ('mousedown');\n\t\t\t$_(`${selector} [data-action='${$_(this).data ('select')}']`).get (0). dispatchEvent (e);\n\t\t});\n\n\t\t// Bind Language select so that every time a language is selected, the\n\t\t// ui and game get correctly localized.\n\t\t$_(`${selector} [data-action=\"set-language\"]`).change (function () {\n\t\t\tMonogatari.preference ('Language', $_(this).value ());\n\t\t\tMonogatari.localize ();\n\t\t});\n\n\t\t$_(`${selector} [data-action=\"set-auto-play-speed\"]`).on ('change mouseover', function () {\n\t\t\tconst value = Monogatari.setting ('maxAutoPlaySpeed') - parseInt($_(this).value());\n\t\t\tMonogatari.preference ('AutoPlaySpeed', value);\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic init (selector) {\n\t\t// Disable audio settings in iOS since they are not supported\n\t\tif (Platform.mobile ('iOS')) {\n\t\t\t// iOS handles the volume using the system volume, therefore there is now way to\n\t\t\t// handle each of the sound sources individually and as such, this is disabled.\n\t\t\t$_(`${selector} [data-settings=\"audio\"]`).html (`<p>${Monogatari.string ('iOSAudioWarning')}</p>`);\n\t\t}\n\n\t\tMonogatari.setting ('maxAutoPlaySpeed', parseInt ($_(`${selector} [data-action=\"set-auto-play-speed\"]`).property ('max')));\n\t\tdocument.querySelector(`${selector} [data-action=\"set-auto-play-speed\"]`).value = Monogatari.preference ('AutoPlaySpeed');\n\n\t\t// Set the electron quit handler.\n\t\tif (Platform.electron ()) {\n\t\t\tSettingsScreen.electron (selector);\n\t\t} else {\n\t\t\t$_(`${selector} [data-platform=\"electron\"]`).hide ();\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic render () {\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic electron (selector) {\n\t\tconst remote = require ('electron').remote;\n\t\tconst win = remote.getCurrentWindow ();\n\n\t\t$_(`${selector} [data-action=\"set-resolution\"]`).value (Monogatari.preference ('Resolution'));\n\n\t\twindow.addEventListener ('beforeunload', (event) => {\n\t\t\tevent.preventDefault ();\n\t\t\t$_(`${selector} [data-notice=\"exit\"]`).addClass ('modal--active');\n\t\t});\n\n\t\tif (!win.isResizable ()) {\n\t\t\tconst aspectRatio = Monogatari.setting ('AspectRatio').split (':');\n\t\t\tconst aspectRatioWidth = parseInt (aspectRatio[0]);\n\t\t\tconst aspectRatioHeight = parseInt (aspectRatio[1]);\n\t\t\twin.setResizable (true);\n\t\t\tconst minSize = win.getMinimumSize ();\n\t\t\tconst {width, height} = remote.screen.getPrimaryDisplay ().workAreaSize;\n\t\t\twin.setResizable (false);\n\n\t\t\tfor (let i = 0; i < 488; i+=8) {\n\t\t\t\tconst calculatedWidth = aspectRatioWidth * i;\n\t\t\t\tconst calculatedHeight = aspectRatioHeight * i;\n\n\t\t\t\tif (calculatedWidth >= minSize[0] && calculatedHeight >= minSize[1] && calculatedWidth <= width && calculatedHeight <= height) {\n\t\t\t\t\t$_(`${selector} [data-action=\"set-resolution\"]`).append(`<option value=\"${calculatedWidth}x${calculatedHeight}\">${Monogatari.string ('Windowed')} ${calculatedWidth}x${calculatedHeight}</option>`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$_(`${selector} [data-action=\"set-resolution\"]`).append(`<option value=\"fullscreen\">${Monogatari.string ('FullScreen')}</option>`);\n\n\t\t\tSettingsScreen.changeWindowResolution (Monogatari.preference ('Resolution'));\n\t\t\t$_(`${selector} [data-action=\"set-resolution\"]`).change(function () {\n\t\t\t\tconst size = $_(this).value ();\n\t\t\t\tSettingsScreen.changeWindowResolution (size);\n\t\t\t});\n\t\t} else {\n\t\t\t$_(`${selector} [data-settings=\"resolution\"]`).hide ();\n\t\t}\n\t}\n\n\tstatic changeWindowResolution (resolution) {\n\t\tconst remote = require ('electron').remote;\n\t\tconst win = remote.getCurrentWindow ();\n\t\tconst {width, height} = remote.screen.getPrimaryDisplay ().workAreaSize;\n\t\tif (resolution) {\n\t\t\twin.setResizable (true);\n\n\t\t\tif (resolution == 'fullscreen' && !win.isFullScreen () && win.isFullScreenable ()) {\n\t\t\t\twin.setFullScreen(true);\n\t\t\t\tMonogatari.preference ('Resolution', resolution);\n\t\t\t} else if (resolution.indexOf ('x') > -1) {\n\t\t\t\twin.setFullScreen (false);\n\t\t\t\tconst size = resolution.split ('x');\n\t\t\t\tconst chosenWidth = parseInt (size[0]);\n\t\t\t\tconst chosenHeight = parseInt (size[1]);\n\n\t\t\t\tif (chosenWidth <= width && chosenHeight <= height) {\n\t\t\t\t\twin.setSize(chosenWidth, chosenHeight, true);\n\t\t\t\t\tMonogatari.preference ('Resolution', resolution);\n\t\t\t\t}\n\t\t\t}\n\t\t\twin.setResizable (false);\n\t\t}\n\t}\n}\n\nSettingsScreen._configuration = {};\nSettingsScreen._state = {};\nSettingsScreen._id = 'settings_screen';\n\nSettingsScreen._html = `\n\t<section data-component=\"settings_screen\" data-screen=\"settings\" class=\"text--center\">\n\t\t<button class=\"fas fa-arrow-left top left\" data-action=\"back\"></button>\n\t\t<h2 data-string=\"Settings\">Settings</h2>\n\t\t<div class=\"row row--spaced padded text---center\">\n\t\t\t<div class=\"row__column row__column--12 row__column--phone--12 row__column--phablet--12 row__column--tablet--6 row__column--desktop--6 row__column--desktop-large--6 row__column--retina--6\">\n\t\t\t\t<div data-settings=\"audio\" class=\"vertical vertical--center text--center\">\n\t\t\t\t\t<h3 data-string=\"Audio\">Audio</h3>\n\t\t\t\t\t<span data-string=\"Music\">Music Volume:</span>\n\t\t\t\t\t<input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.1\" data-action=\"set-volume\" data-target=\"music\">\n\t\t\t\t\t<span data-string=\"Sound\">Sound Volume:</span>\n\t\t\t\t\t<input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.1\" data-action=\"set-volume\" data-target=\"sound\">\n\t\t\t\t\t<span data-string=\"Voice\">Voice Volume:</span>\n\t\t\t\t\t<input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.1\" data-action=\"set-volume\" data-target=\"voice\">\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"row__column row__column--12 row__column--phone--12 row__column--phablet--12 row__column--tablet--6 row__column--desktop--6 row__column--desktop-large--6 row__column--retina--6\">\n\n\t\t\t\t<div data-settings=\"text-speed\">\n\t\t\t\t\t<h3 data-string=\"TextSpeed\">Text Speed</h3>\n\t\t\t\t\t<input type=\"range\" min=\"1\" max=\"50\" step=\"1\" data-action=\"set-text-speed\">\n\t\t\t\t</div>\n\n\t\t\t\t<div data-settings=\"auto-play-speed\">\n\t\t\t\t\t<h3 data-string=\"AutoPlaySpeed\">Auto Play Speed</h3>\n\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"60\" step=\"1\" data-action=\"set-auto-play-speed\">\n\t\t\t\t</div>\n\n\t\t\t\t<div data-settings=\"language\">\n\t\t\t\t\t<h3 data-string=\"Language\">Language</h3>\n\t\t\t\t\t<div class=\"horizontal horizontal--center\"></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div data-settings=\"resolution\" data-platform=\"electron\">\n\t\t\t\t\t<h3 data-string=\"Resolution\">Resolution</h3>\n\t\t\t\t\t<div class=\"horizontal\">\n\t\t\t\t\t\t<select data-action=\"set-resolution\"></select>\n\t\t\t\t\t\t<span class=\"fas fa-sort\" data-select=\"set-resolution\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n`;\n\nMonogatari.registerComponent (SettingsScreen);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass QuickMenu extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup () {\n\t\tQuickMenu.render ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic add ({ string, icon, data, ...rest }) {\n\t\tQuickMenu._configuration.buttons.push ({\n\t\t\tstring,\n\t\t\ticon,\n\t\t\tdata,\n\t\t\t...rest\n\t\t});\n\t\tQuickMenu.render ();\n\t}\n\n\tstatic addAfter (after, { string, icon, data, ...rest }) {\n\t\tlet index = null;\n\t\tfor (let i = 0; i < QuickMenu._configuration.buttons.length; i++) {\n\t\t\tconst button = QuickMenu._configuration.buttons[i];\n\t\t\tif (button.string === after) {\n\t\t\t\tindex = i + 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (index !== null) {\n\t\t\tQuickMenu._configuration.buttons.splice (index, 0, {\n\t\t\t\tstring,\n\t\t\t\ticon,\n\t\t\t\tdata,\n\t\t\t\t...rest\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic addBefore (before, { string, icon, data, ...rest }) {\n\t\tlet index = null;\n\t\tfor (let i = 0; i < QuickMenu._configuration.buttons.length; i++) {\n\t\t\tconst button = QuickMenu._configuration.buttons[i];\n\t\t\tif (button.string === before) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (index !== null) {\n\t\t\tQuickMenu._configuration.buttons.splice (index, 0, {\n\t\t\t\tstring,\n\t\t\t\ticon,\n\t\t\t\tdata,\n\t\t\t\t...rest\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic remove (string) {\n\t\tQuickMenu._configuration.buttons = QuickMenu._configuration.buttons.filter ((button) => button.string !== string);\n\t\tQuickMenu.render ();\n\t}\n\n\tstatic buttons () {\n\n\t}\n\n\tstatic button (string) {\n\t\treturn QuickMenu._configuration.buttons.find ((button) => button.string === string);\n\t}\n\n\tstatic render () {\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"] [data-component=\"quick-menu\"]`).html ('');\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"] [data-component=\"quick-menu\"]`).html (QuickMenu._configuration.buttons.map ((button) => {\n\t\t\tconst data = Object.keys (button.data).map ((key) => `data-${key}=\"${button.data[key]}\"`).join (' ');\n\n\t\t\treturn `<button ${data}>\n\t\t\t\t\t\t<span class=\"${button.icon}\" ${data}></span>\n\t\t\t\t\t\t<span data-string=\"${button.string}\" ${data}>${Monogatari.string (button.string)}</span>\n\t\t\t\t\t</button>`;\n\t\t}).join (' '));\n\t}\n}\n\nQuickMenu._configuration = {\n\tbuttons: [\n\t\t{\n\t\t\tstring: 'Back',\n\t\t\ticon: 'fas fa-arrow-left',\n\t\t\tdata: {\n\t\t\t\taction: 'back'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tstring: 'Hide',\n\t\t\ticon: 'fas fa-eye',\n\t\t\tdata: {\n\t\t\t\taction: 'distraction-free'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tstring: 'AutoPlay',\n\t\t\ticon: 'fas fa-play-circle',\n\t\t\tdata: {\n\t\t\t\taction: 'auto-play'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tstring: 'Skip',\n\t\t\ticon: 'fas fa-fast-forward',\n\t\t\tdata: {\n\t\t\t\taction: 'skip'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tstring: 'Save',\n\t\t\ticon: 'fas fa-save',\n\t\t\tdata: {\n\t\t\t\taction: 'open-screen',\n\t\t\t\topen: 'save'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tstring: 'Load',\n\t\t\ticon: 'fas fa-undo',\n\t\t\tdata: {\n\t\t\t\taction: 'open-screen',\n\t\t\t\topen: 'load'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tstring: 'Settings',\n\t\t\ticon: 'fas fa-cog',\n\t\t\tdata: {\n\t\t\t\taction: 'open-screen',\n\t\t\t\topen: 'settings'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tstring: 'Quit',\n\t\t\ticon: 'fas fa-times-circle',\n\t\t\tdata: {\n\t\t\t\taction: 'end'\n\t\t\t}\n\t\t}\n\t]\n};\nQuickMenu._state = {};\nQuickMenu._id = 'quick_menu';\n\nQuickMenu._html = '';\n\nMonogatari.registerComponent (QuickMenu);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass QuitWarning extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).prepend (QuitWarning.html ());\n\t\treturn Promise.resolve ();\n\t}\n}\n\nQuitWarning._id = 'quit_warning';\n\nQuitWarning._html = `\n\t<div data-component=\"quit_warning\" data-notice=\"exit\" class=\"modal\">\n\t\t<div class=\"modal__content\">\n\t\t\t<p data-string=\"Confirm\">Do you want to quit</p>\n\t\t\t<div>\n\t\t\t\t<button data-action=\"quit\" data-string=\"Quit\">Quit</button>\n\t\t\t\t<button data-action=\"dismiss-notice\" data-string=\"Cancel\">Cancel</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n`;\n\nMonogatari.registerComponent (QuitWarning);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { Text } from '@aegis-framework/artemis';\nimport moment from 'moment';\n\nclass Slot extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic render (slot, name, image, data) {\n\t\treturn this.html (null, slot, name, image, data);\n\t}\n}\n\nSlot._id = 'slot';\n\nSlot._html = (slot, name, image, data) => {\n\tlet background = '';\n\n\tif (image) {\n\t\tbackground = `url(${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').scenes}/${image})`;\n\t} else if (data.game.state.scene) {\n\t\tbackground = data.game.state.scene;\n\n\t\tif (background.indexOf (' with ') > -1) {\n\t\t\tbackground = Text.suffix ('show scene', Text.prefix (' with ', background));\n\t\t}\n\t}\n\n\treturn `\n\t\t<figure data-component=\"slot\" data-slot='${slot}' class='row__column row_column--6 row__column--tablet--4 row__column--desktop--3 row__column--desktop-large--2 animated flipInX'>\n\t\t\t<button class='fas fa-times' data-delete='${slot}'></button>\n\t\t\t<small class='badge'>${name}</small>\n\t\t\t<div data-content=\"background\" style=\"${image ? 'background-image' : 'background'}: ${background}\"></div>\n\t\t\t<figcaption>${moment (data.date).format ('MMMM Do YYYY, h:mm:ss a')}</figcaption>\n\t\t</figure>\n\t`;\n};\n\nMonogatari.registerComponent (Slot);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass SlotDeletionWarning extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).prepend (SlotDeletionWarning.html ());\n\t\treturn Promise.resolve ();\n\t}\n}\n\nSlotDeletionWarning._id = 'slot_deletion_warning';\n\nSlotDeletionWarning._html = `\n\t<div data-component=\"slot_deletion_warning\" data-notice=\"slot-deletion\" class=\"modal\">\n\t\t<div class=\"modal__content\">\n\t\t\t<p data-string=\"SlotDeletion\">Are you sure you want to delete this slot?</p>\n\t\t\t<p><small></small></p>\n\t\t\t<div>\n\t\t\t\t<button data-action=\"delete-slot\" data-string=\"Delete\">Delete</button>\n\t\t\t\t<button data-action=\"dismiss-notice\" data-string=\"Cancel\">Cancel</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n`;\n\nMonogatari.registerComponent (SlotDeletionWarning);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nclass SlotOverwriteWarning extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic setup (selector) {\n\t\t$_(selector).prepend (SlotOverwriteWarning.html ());\n\t\treturn Promise.resolve ();\n\t}\n}\n\nSlotOverwriteWarning._id = 'slot_overwrite_warning';\n\nSlotOverwriteWarning._html = `\n\t<div data-notice=\"slot-overwrite\" class=\"modal\">\n\t\t<div class=\"modal__content\">\n\t\t\t<p data-string=\"SlotOverwrite\"\">Are you sure you want to overwrite this slot?</p>\n\t\t\t<input type=\"text\" name=\"name\" class=\"margin\" required>\n\t\t\t<div>\n\t\t\t\t<button data-action=\"overwrite-slot\" data-string=\"Overwrite\">Overwrite</button>\n\t\t\t\t<button data-action=\"dismiss-notice\" data-string=\"Cancel\">Cancel</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n`;\n\nMonogatari.registerComponent (SlotOverwriteWarning);","import { Component } from '../Component';\nimport { Monogatari } from '../monogatari';\n\nclass TextInput extends Component {\n\n\tstatic html (html = null, ...params) {\n\t\tif (html !== null && typeof params === 'undefined') {\n\t\t\tthis._html = html;\n\t\t} else {\n\t\t\t// Check if additional parameters have been sent to a rendering function\n\t\t\tif (typeof params !== 'undefined' && typeof this._html === 'function') {\n\t\t\t\tif (html === null) {\n\t\t\t\t\treturn this._html.call (this, ...params);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._html.call (html, ...params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if no parameters were set but the HTML is still a function to be called\n\t\t\tif (typeof params === 'undefined' && html === null && typeof this._html === 'function') {\n\t\t\t\treturn this._html.call (this);\n\t\t\t}\n\n\t\t\t// If this is reached, the HTML was just a string\n\t\t\treturn this._html;\n\t\t}\n\t}\n\n\tstatic render (message) {\n\t\treturn this.html (null, message);\n\t}\n}\n\nTextInput._configuration = {};\nTextInput._state = {};\nTextInput._id = 'text_input';\n\nTextInput._html = message => `\n\t<div data-component=\"text_input\" data-ui=\"input\" class=\"modal modal--active\">\n\t\t<form  class=\"modal__content\">\n\t\t\t<p data-ui=\"input-message\" >${message}</p>\n\t\t\t<input type=\"text\">\n\t\t\t<small data-ui=\"warning\" class=\"block\"></small>\n\t\t\t<div>\n\t\t\t\t<button type='submit'>Ok</button>\n\t\t\t</div>\n\t\t<form>\n\t</div>\n`;\n\nMonogatari.registerComponent (TextInput);","export * from './CreditsScreen';\nexport * from './CreditsScreenItem';\nexport * from './DialogLog';\nexport * from './GameScreen';\nexport * from './HelpScreen';\nexport * from './ImageGallery';\nexport * from './ImageGalleryItem';\nexport * from './LoadScreen';\nexport * from './LoadingScreen';\nexport * from './MainScreen';\nexport * from './Message';\nexport * from './OrientationWarning';\nexport * from './SaveScreen';\nexport * from './SettingsScreen';\nexport * from './QuickMenu';\nexport * from './QuitWarning';\nexport * from './Slot';\nexport * from './SlotDeletionWarning';\nexport * from './SlotOverwriteWarning';\nexport * from './TextInput';","\n/**\n * An action describes the functionality for a Monogatari statement, when Monogatari\n * reads a part of the script (a statement), it will look for an action that matches\n * the statement and run it.\n *\n * The life cycle of an action is divided in three parts: Mounting, Application\n * and Reverting.\n *\n * The mounting cycle has 3 steps:\n *\n * 1. Setup - Here the action needs to set up everything it will need for working\n *            generally, in this section an action will register the variables it\n *            needs such as object histories and state variables or even add the\n *            HTML contents to the document.\n *\n * 2. Bind - Once the action has been setup, its time to bind all the necessary\n *           event listeners or perfom more operations on the DOM once all elements\n *           have been setup.\n *\n * 3. Init - Finally, once the action was setup and it performed all the needed\n *           bindings, it may declare or modify variables that needed the HTML to\n *           be setup first or perform any other needed final operations.\n *\n * As noted, the Mounting cycle is mostly about getting everything setup for a\n * correct operation of the action. Thr Application and Reverting cycles are used\n * for the actual workings of an action in a game.\n *\n * Before executing an action Monogatari will check if the current statement matches\n * with the action, therefore the Action must implement a matching function. If\n * the statement to match should be a String, the action must implement the\n * matchString () method, if it should be an Object, the action must implement\n * the matchObject () method. Both should return a boolean on whether the action\n * matches the given statement or not.\n *\n *\n * The Application cycle refers to the cycle of an Action when it is run because of\n * a statement in the script.\n *\n * The Application Cycle has 3 steps as well:\n *\n * 1. Will Apply - Executed when the action will be applied, if any operations\n *                 need to be done before its application, this is the place.\n *\n * 2. Apply - The application itself, this is where all the logic regarding the\n *            action must be applied. Of course every action will implement its\n *            own logic depending on what it has to do.\n *\n * 3. Did Apply - Executed after the action was applied, this function is great\n *                for cleanup operations or any other thing that needs to be done\n *                after the action was applied.\n *\n * While the Application clycle is all about executing the action, the Revert\n * cycle is the opposite and it reverts the things the Application cycle does.\n * Reverting is used when the player goes back in the game and has equivalent\n * steps to the Application Cycle:\n *\n * 1. Will Revert - Executed when the action will be reverted, if any operations\n *                 need to be done before its revertion such as checking for history\n *                 elements or any other check, this is the place.\n *\n * 2. Revert - The reversion of the action, its common that the actions revert to\n *             previous states or revert other changes done by the application of\n *             an action. Every action will implement its own logic depending on\n *             what it has to do.\n *\n * 3. Did Revert - Executed after the action was reverted, this function is great\n *                for cleanup operations or any other thing that needs to be done\n *                after the action was reverted.\n *\n * @class Action\n */\nclass Action {\n\n\t/**\n\t * @static configuration - A simple function providing access to the configuration\n\t * object of the function. If the action has a configuration object it must\n\t * also include this method.\n\t *\n\t * @param  {Object|string} [object = null] - Object with which current\n\t * configuration will be updated with (i.e. Object.assign) or a string to access\n\t * a property.\n\t *\n\t * @return {any} - If the parameter sent was a string, the function will\n\t * return the value of the property whose name matches the parameter. If no\n\t * parameter was sent, then the function will return the whole configuration\n\t * object.\n\t */\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Action._configuration[object];\n\t\t\t} else {\n\t\t\t\tAction._configuration = Object.assign ({}, Action._configuration, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Action._configuration;\n\t\t}\n\t}\n\n\t/**\n\t * @static canProceed - Either when the user clicks in the game to proceed or\n\t * the autoPlay feature is ready to go on, Monogatari will first check with\n\t * all actions if it's ok to proceed. Every action should implement its own\n\t * logic for it according to its requirements.\n\t *\n\t * @return {Promise} - Resolved if proceeding is alright or rejected if its not\n\t */\n\tstatic canProceed () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static canRevert - Similarly to the canProceed () function, this one takes\n\t * action when the player tries to go back in the game.Monogatari will first\n\t * check with all actions if it's ok to go back. Every action should implement\n\t * its own logic for it according to its requirements.\n\t *\n\t * @return {Promise} - Resolved if going back is alright or rejected if its not\n\t */\n\tstatic canRevert () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onStart - This function acts as an event listener for when the game\n\t * starts. If the action needs to do any particular activities when the game\n\t * starts, then this function should be implemented and it will be automatically\n\t * called once the player starts the game.\n\t *\n\t * @return {Promise}\n\t */\n\tstatic onStart () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onLoad - This function acts as an event listener for when a game\n\t * is loaded. If the action needs to perform any particular actions such as\n\t * restoring some state (i.e. showing images, playing media, etc.) when a game\n\t * is loaded, this function must be implemented and it will be automatically\n\t * called when a game is loaded.\n\t *\n\t * @return {Promise}  description\n\t */\n\tstatic onLoad () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static onSave - This function acts as an event listener for when a game\n\t * is saved. If the action needs to perform any particular actions when that\n\t * happens, this function must be implemented and it will be automatically\n\t * called when a game is saved.\n\t *\n\t * @param {Object} slot - The slot object that has just been saved.\n\t * @param {string} slot.key - The key used to save the slot in the local storage\n\t * @param {Object} slot.value - The actual value saved\n\t *\n\t * @return {Promise}  description\n\t */\n\tstatic onSave () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static reset - When a game ends using the 'end' statement or before a game\n\t * is loaded, Monogatari will perform a reset on all its actions. If the action\n\t * needs to reset a state or any other variables/elements to an initial state\n\t * once a game is over or a new one is loaded, the logic for it must be implemented\n\t * here and the function will be automatically called when needed.\n\t *\n\t * @return {Promise} - Result of the reset operation\n\t */\n\tstatic reset () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static setup - The setup is the first step of the Mounting cycle, all\n\t * operations required for the action's setup should be implemented here.\n\t *\n\t * @param  {string} selector - The CSS selector with which Monogatari has been\n\t *                             initialized\n\t * @return {Promise} - Result of the setup operation\n\t */\n\tstatic setup (selector) {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static bind - The binding is the second step of the Mounting cycle, all\n\t * operations related to event bindings or other sort of binding with the\n\t * HTML content generated in the setup phase should be implemented here.\n\t *\n\t * @param  {string} selector - The CSS selector with which Monogatari has been\n\t *                             initialized\n\t * @return {Promise} - Result of the binding operation\n\t */\n\tstatic bind (selector) {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static init - The initialization is the last step of the Mounting cycle,\n\t * all final operations should be implemented here.\n\t *\n\t * @param  {string} selector - The CSS selector with which Monogatari has been\n\t *                             initialized\n\t * @return {Promise} - Result of the initialization operation\n\t */\n\tstatic init (selector) {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static match - Currently this function is saved up for future uses.\n\t *\n\t * @param {any} - Statement to match\n\t *\n\t * @return {type} - Whether the action matches the statement or not\n\t */\n\tstatic match (statement) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @static matchString - When Monogatari goes through a string statement, it\n\t * will use this function to find which action it corresponds to.\n\t *\n\t * @param  {string[]} statement - The statement to match, splitted into an array by spaces\n\t * @return {boolean} - Whether the action matches the statement or not\n\t */\n\tstatic matchString (statement) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @static matchObject - Similarly to its string counterpart, this function\n\t * is used when Monogatari goes through an Object (generally JSON) statement\n\t * to find which action the statement corresponds to.\n\t *\n\t * @param  {Object} statement - The statement to match,\n\t * @return {boolean} - Whether the action matches the statement or not\n\t */\n\tstatic matchObject (statement) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * constuctor - Once the action has been matched through one of the match\n\t * functions, an instance of the action is created with the statement  it\n\t * matched as argument. As in the match functions, the string statements will\n\t * actually be received as arrays of words splitted by spaces.\n\t *\n\t * @param  {string[]|Object} statement - The statement it matched\n\t */\n\tconstuctor (statement) {\n\n\t}\n\n\t/**\n\t * setContext - This is a built in function in every action, the context of\n\t * the action will always be the Monogatari class. This is mainly used for\n\t * cases where the action can't import or reference directly the Monogatari\n\t * class so it can simply use this.context instead.\n\t *\n\t * @param  {Monogatari} context - The Monogatari Class\n\t */\n\tsetContext (context) {\n\t\tthis.context = context;\n\t}\n\n\t/**\n\t * _setStatement - Since the original statement used to match an action tends\n\t * to be transformed by monogatari (i.e. by splitting it or other things),\n\t * this action built-in function is automatically used by Monogatari to\n\t * set the original statement to the action once it has been instantiated.\n\t * Because of this function, you can always refere to the original statement\n\t * in the Application and Reverting cycles with this._statement;\n\t *\n\t * @param  {string|Object|function} statement - The statement with which the action was run\n\t */\n\t_setStatement (statement) {\n\t\tthis._statement = statement;\n\t}\n\n\t/**\n\t * _setCycle - This simple method is used to set what cycle the action is\n\t * currently performing. This is useful to know on those actions that may\n\t * use the apply or revert methods on any situation but that have slight\n\t * differences on the logic.\n\t *\n\t * @param  {string} cycle - 'Application' if the action is running the application\n\t * cycle or 'Revert' if it's running the revert cycle.\n\t */\n\t_setCycle (cycle) {\n\t\tthis._cycle = cycle;\n\t}\n\n\t/**\n\t * willApply - Method called before the application of an action\n\t *\n\t * @return {Promise} - Result of the willApply operation, if this function\n\t * returns a rejected promise, the cycle will be interrupted and the action\n\t * will not be applied.\n\t */\n\twillApply () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * apply - Method for the actual application of an action, this is where\n\t * the core operations of an action must be done.\n\t *\n\t * @return {Promise} - Result of the application operation\n\t */\n\tapply () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * didApply - If the cycle has reached this far, it means the action has\n\t * correctly gone through the willApply and apply functions. Now that it has\n\t * been applied, we can perform any cleanup operations.\n\t *\n\t * @return {Promise<boolean>} - Result of the didApply operation. When resolved,\n\t * it should resolve to a boolean value, true if the game should go to the\n\t * next statement right away, false if it should wait for user's interaction.\n\t */\n\tdidApply () {\n\t\treturn Promise.resolve ({\n\t\t\tadvance: false\n\t\t});\n\t}\n\n\t/**\n\t * interrupt - Currently saved for future purposes, the interrupt function\n\t * would be used to interrupt a function when its still doing something, like\n\t * when the typing animation of dialogs is interrupted if you click again.\n\t *\n\t * @return {Promsie} - Result of the interruption\n\t */\n\tinterrupt () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * willRevert - Method called before an action is reverted\n\t *\n\t * @return {Promise} - Result of the willRevert operation, if this function\n\t * returns a rejected promise, the cycle will be interrupted and the action\n\t * will not be reverted.\n\t */\n\twillRevert () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * revert - Method called for the actual reversion of an action, this is where\n\t * the core operations needed to revert an action must be done.\n\t *\n\t * @return {Promise} - Result of the reversion operation\n\t */\n\trevert () {\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * didApply - If the cycle has reached this far, it means the action has\n\t * correctly gone through the willRevert and revert functions. Now that it has\n\t * been reverted, we can perform any cleanup operations.\n\t *\n\t * @return {Promise<boolean>} - Result of the didRevert operation. When resolved,\n\t * it should resolve to a boolean value, true if the game should go to the\n\t * previous statement right away, false if it should wait for user's interaction.\n\t */\n\tdidRevert () {\n\t\treturn Promise.resolve ({\n\t\t\tadvance: false,\n\t\t\tstep: true\n\t\t});\n\t}\n}\n\n/**\n * If needed, every action should declare its configuration as follows. This\n * configuration object should be used to store action-specific settings as well\n * as other objects/assets used by the action. If any specific object needs\n * recurrent access such as the declarations in the script.js file, provinding\n * a static function for that specific object could be great.\n */\nAction._configuration = {};\n\n/**\n * All actions must have an ID, with this ID the developers will be able to\n * access the action classes, remove actions or register new ones. They must also\n * be unique.\n */\nAction.id = 'Action';\n\nexport { Action };","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_, Util } from '@aegis-framework/artemis';\n\nexport class Canvas extends Action {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Canvas._configuration[object];\n\t\t\t} else {\n\t\t\t\tCanvas._configuration = Object.assign ({}, Canvas._configuration, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Canvas._configuration;\n\t\t}\n\t}\n\n\tstatic onLoad () {\n\t\tif (Monogatari.state ('canvas').length > 0) {\n\t\t\tfor (const canvas of Monogatari.state ('canvas')) {\n\t\t\t\tMonogatari.run (canvas, false);\n\t\t\t\t// TODO: Find a way to prevent the histories from filling up on loading\n\t\t\t\t// So there's no need for this pop.\n\t\t\t\tMonogatari.history ('canvas').pop ();\n\t\t\t\tMonogatari.state ('canvas').pop ();\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic setup () {\n\t\tMonogatari.history ('canvas');\n\t\tMonogatari.state ({\n\t\t\tcanvas: []\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\tconst promises = [];\n\n\t\t// Go through each canvas element being shown so it can be properly\n\t\t// stopped and then removed.\n\t\t$_(`${Monogatari.selector} [data-canvas]`).each ((element) => {\n\t\t\tconst name = $_(element).data ('canvas');\n\t\t\tpromises.push (Util.callAsync (Canvas.objects (name).stop, Monogatari).then (() => {\n\t\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).remove ();\n\t\t\t}));\n\t\t});\n\t\tMonogatari.history ({\n\t\t\tcanvas: []\n\t\t});\n\t\tMonogatari.state ({\n\t\t\tcanvas: []\n\t\t});\n\t\treturn Promise.all (promises);\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'canvas';\n\t}\n\n\tstatic objects (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Canvas._configuration.objects[object];\n\t\t\t} else {\n\t\t\t\tCanvas._configuration.objects = Object.assign ({}, Canvas._configuration.objects, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Canvas._configuration.objects;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an instance of a Canvas Action\n\t *\n\t * @param {string[]} parameters - List of parameters received from the script statement.\n\t * @param {string} parameters.action - In this case, action will always be 'canvas'\n\t * @param {string} [parameters.mode='displayable'] - Mode in which the canvas element will be shown (displayable, background, full-screen, immersive)\n\t * @param {string} parameters.mode\n\t */\n\tconstructor ([ show, type, mode = 'displayable', name, separator, ...classes ]) {\n\t\tsuper ();\n\t\tthis.mode = mode;\n\t\tthis.name = name;\n\n\t\tthis.object = Canvas.objects (name);\n\n\t\tif (typeof classes !== 'undefined') {\n\t\t\tthis.classes = classes;\n\t\t} else {\n\t\t\tthis.classes = [];\n\t\t}\n\t}\n\n\tshow (mode) {\n\t\t// TODO: Find a way to remove the resize listeners once the canvas is stopped\n\t\tif (mode === 'background') {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).append (`\n\t\t\t\t<canvas data-canvas=\"${this.name}\" class='${mode} ${this.classes.join (' ')}'></canvas>\n\t\t\t`);\n\n\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).get (0).width = Monogatari.width ();\n\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).get (0).height = Monogatari.height ();\n\t\t\twindow.addEventListener ('resize', () => {\n\t\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"].background`).each ((canvas) => {\n\t\t\t\t\tcanvas.width = Monogatari.width ();\n\t\t\t\t\tcanvas.height = Monogatari.height ();\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Util.callAsync (this.object.start, Monogatari, $_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`), `[data-canvas=\"${this.name}\"]`);\n\t\t} else if (mode === 'immersive') {\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).prepend (`\n\t\t\t\t<canvas data-canvas=\"${this.name}\" class='${mode} ${this.classes.join (' ')}'></canvas>\n\t\t\t`);\n\n\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).get (0).width = Monogatari.width ();\n\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).get (0).height = Monogatari.height ();\n\t\t\twindow.addEventListener ('resize', () => {\n\t\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"].background`).each ((canvas) => {\n\t\t\t\t\tcanvas.width = Monogatari.width ();\n\t\t\t\t\tcanvas.height = Monogatari.height ();\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Util.callAsync (this.object.start, Monogatari, $_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`), `[data-canvas=\"${this.name}\"]`);\n\t\t} else if (mode === 'displayable') {\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append (`\n\t\t\t\t<canvas data-canvas=\"${this.name}\" class='${mode} ${this.classes.join (' ')}'></canvas>\n\t\t\t`);\n\t\t\treturn Util.callAsync (this.object.start, Monogatari, $_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`), `[data-canvas=\"${this.name}\"]`);\n\t\t} else if (mode === 'character') {\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append (`\n\t\t\t\t<canvas data-canvas=\"${this.name}\" class='${mode} ${this.classes.join (' ')}' data-character='${this.name}'></canvas>\n\t\t\t`);\n\t\t\treturn Util.callAsync (this.object.start, Monogatari, $_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`), `[data-canvas=\"${this.name}\"]`);\n\t\t}\n\t}\n\n\twillApply () {\n\t\tif (typeof this.object !== 'undefined') {\n\t\t\treturn Promise.resolve ();\n\t\t}\n\t\treturn Promise.reject ();\n\t}\n\n\tapply () {\n\t\treturn this.show (this.mode);\n\t}\n\n\tdidApply () {\n\t\tMonogatari.history ('canvas').push (this._statement);\n\t\tMonogatari.state ('canvas').push (this._statement);\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\treturn Util.callAsync (this.object.stop, Monogatari).then (() => {\n\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).remove ();\n\t\t});\n\t}\n\n\tdidRevert () {\n\t\tfor (let i = Monogatari.state ('canvas').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.state ('canvas')[i];\n\t\t\tconst [show, canvas, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.state ('canvas').splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = Monogatari.history ('canvas').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.history ('canvas')[i];\n\t\t\tconst [show, canvas, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.history ('canvas').splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nCanvas.id = 'Canvas';\nCanvas._configuration = {\n\tobjects: {\n\n\t}\n};\n\nMonogatari.registerAction (Canvas);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\nimport Typed from 'typed.js';\n\nexport class Centered extends Action {\n\n\tstatic canProceed () {\n\t\tif (!Monogatari.global ('finishedTyping') && Monogatari.global ('textObject') !== null) {\n\t\t\tconst str = Monogatari.global ('textObject').strings [0];\n\t\t\tconst target = $_(Monogatari.global ('textObject').el);\n\t\t\tconst parent = target.parent ();\n\n\t\t\tif (typeof parent !== 'undefined') {\n\t\t\t\tconst element = parent.data ('ui');\n\t\t\t\tif (element == 'centered') {\n\t\t\t\t\tMonogatari.global ('textObject').destroy ();\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"centered\"] div`).html (str);\n\t\t\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t\t\t\treturn Promise.reject ('TypeWriter effect has not finished. Skipping it.');\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Monogatari.global ('finishedTyping') && $_(`${Monogatari.selector} [data-ui=\"centered\"]`).isVisible ()) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"centered\"]`).remove ();\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).show ();\n\t\t}\n\t\treturn Promise.resolve (Monogatari.global ('finishedTyping'));\n\t}\n\n\tstatic canRevert () {\n\t\tif ($_(`${Monogatari.selector} [data-ui=\"centered\"]`).isVisible ()) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"centered\"]`).remove ();\n\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t\tMonogatari.global ('textObject').destroy ();\n\t\t\tMonogatari.global ('_CurrentChoice', null);\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).show ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'centered';\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"centered\"]`).remove ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic hide () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"centered\"]`).remove ();\n\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).show ();\n\t}\n\n\tconstructor ([ action, ...dialog ]) {\n\t\tsuper ();\n\t\tthis.dialog = Monogatari.replaceVariables (dialog.join (' '));\n\t\tthis.animate = Monogatari.setting ('TypeAnimation') && Monogatari.setting ('CenteredTypeAnimation');\n\t}\n\n\tapply () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).hide ();\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append ('<div class=\"middle align-center\" data-ui=\"centered\"><div></div></div>');\n\t\tif (this.animate) {\n\t\t\tMonogatari.global ('typedConfiguration').strings = [this.dialog];\n\t\t\tMonogatari.global ('textObject', new Typed (`${Monogatari.selector} [data-ui=\"centered\"] div`, Monogatari.global ('typedConfiguration')));\n\t\t} else {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"centered\"] div`).html (this.dialog);\n\t\t}\n\n\t\tconst dialogLog = Monogatari.component ('dialog_log');\n\t\tif (typeof dialogLog !== 'undefined') {\n\t\t\tif (this._cycle === 'Application') {\n\t\t\t\tdialogLog.write ({\n\t\t\t\t\tid: 'centered',\n\t\t\t\t\tcharacter: null,\n\t\t\t\t\tdialog: this.dialog\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdialogLog.pop ('centered');\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\trevert () {\n\t\tthis.apply ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: false, step: true });\n\t}\n}\n\nCentered.id = 'Centered';\n\nMonogatari.registerAction (Centered);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_, Util } from '@aegis-framework/artemis';\n\nexport class Choice extends Action {\n\n\tstatic setup () {\n\t\tMonogatari.global ('_CurrentChoice', null);\n\t\tMonogatari.history ('choice');\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic canProceed () {\n\t\t// If a choice is currently being displayed, the player should not be able\n\t\t// to advance until one is chosen.\n\t\tif ($_(`${Monogatari.selector} [data-ui=\"choices\"]`).isVisible ()) {\n\t\t\treturn Promise.reject ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic canRevert () {\n\t\t// If a choice is visible right now, we can simply remove it and let the\n\t\t// game revert to the previous statement.\n\t\tif ($_(`${Monogatari.selector} [data-ui=\"choices\"]`).isVisible ()) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"choices\"]`).remove ();\n\t\t\tMonogatari.global ('_CurrentChoice', null);\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic bind (selector) {\n\t\t// Bind the click event on data-do elements. This property is used for\n\t\t// every choice button.\n\t\t$_(`${selector}`).on('click', '[data-choice]', function (event) {\n\t\t\tevent.stopImmediatePropagation ();\n\t\t\tevent.stopPropagation ();\n\t\t\tevent.preventDefault ();\n\n\t\t\t// Check that the data property was not created with\n\t\t\t// a null property\n\t\t\tif ($_(this).data('do') != 'null') {\n\n\t\t\t\t// Remove all the choices\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"choices\"]`).remove ();\n\n\t\t\t\t// Remove the reference to the current choice object\n\t\t\t\tif (Monogatari.global ('_CurrentChoice') !== null) {\n\t\t\t\t\tif (typeof Monogatari.global ('_CurrentChoice')[$_(this).data ('choice')] !== 'undefined') {\n\t\t\t\t\t\tif (typeof Monogatari.global ('_CurrentChoice')[$_(this).data ('choice')].onChosen === 'function') {\n\t\t\t\t\t\t\tUtil.callAsync (Monogatari.global ('_CurrentChoice')[$_(this).data ('choice')].onChosen, Monogatari).then (() => {\n\t\t\t\t\t\t\t\tMonogatari.run (Monogatari.global ('_CurrentChoice')[$_(this).data ('choice')].Do, false);\n\t\t\t\t\t\t\t\tMonogatari.global ('_CurrentChoice', null);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMonogatari.run (Monogatari.global ('_CurrentChoice')[$_(this).data ('choice')].Do, false);\n\t\t\t\t\t\t\tMonogatari.global ('_CurrentChoice', null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tMonogatari.history ('choice').push ($_(this).data ('choice'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tMonogatari.run ($_(this).data ('do'), false);\n\t\t\t\t\t\tMonogatari.global ('_CurrentChoice', null);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tMonogatari.run ($_(this).data ('do'), false);\n\t\t\t\t\tMonogatari.global ('_CurrentChoice', null);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"choices\"]`).remove ();\n\t\tMonogatari.global ('_CurrentChoice', null);\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchObject (statement) {\n\t\treturn typeof statement.Choice !== 'undefined';\n\t}\n\n\tconstructor (statement) {\n\t\tsuper ();\n\t\tthis.statement = statement.Choice;\n\t}\n\n\twillApply () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"choices\"]`).html ('');\n\t\treturn Promise.resolve ();\n\t}\n\n\tapply () {\n\n\t\t// Save a reference to the choice object globally. Since the choice buttons\n\t\t// are set a data-do property to know what the choice should do, it is\n\t\t// limited to a string and thus object or function actions would not be\n\t\t// able to be used in choices.\n\t\tMonogatari.global ('_CurrentChoice', this.statement);\n\n\t\tconst element = $_(document.createElement ('div'));\n\t\telement.addClass ('text--center');\n\t\telement.data ('ui', 'choices');\n\n\t\tconst promises = [];\n\n\t\t// Go over all the objects defined in the choice object which should be\n\t\t// call the options to chose from or the string to show as dialog\n\t\tfor (const i in this.statement) {\n\t\t\tconst choice = this.statement[i];\n\n\t\t\t// Check if the current option has a condition to be shown\n\t\t\tif (typeof choice.Condition !== 'undefined' && choice.Condition !== '') {\n\n\t\t\t\tpromises.push (\n\t\t\t\t\tnew Promise ((resolve) => {\n\t\t\t\t\t\t// First check if the condition is met before we add the button\n\t\t\t\t\t\tMonogatari.assertAsync (this.statement[i].Condition, Monogatari).then (() => {\n\t\t\t\t\t\t\tif (typeof choice.Class !== 'undefined') {\n\t\t\t\t\t\t\t\telement.append (`<button data-do=\"${choice.Do}\" class=\"${choice.Class}\" data-choice=\"${i}\">${choice.Text}</button>`);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\telement.append (`<button data-do=\"${choice.Do}\" data-choice=\"${i}\">${choice.Text}</button>`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).catch (() => {\n\t\t\t\t\t\t\t// The condition wasn't met\n\t\t\t\t\t\t}).finally (() => {\n\t\t\t\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\t\t\t\tresolve ();\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Check if the option is an object (a option to choose from) or\n\t\t\t\t// if it's text (dialog to be shown)\n\t\t\t\tif (typeof choice == 'object') {\n\t\t\t\t\tif (typeof choice.Class != 'undefined') {\n\t\t\t\t\t\telement.append (`<button data-do=\"${choice.Do}\" class=\"${choice.Class}\" data-choice=\"${i}\">${choice.Text}</button>`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.append (`<button data-do=\"${choice.Do}\" data-choice=\"${i}\">${choice.Text}</button>`);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof choice == 'string') {\n\t\t\t\t\tpromises.push (Monogatari.run (choice, false));\n\t\t\t\t}\n\t\t\t}\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"choices\"]`).show ('flex');\n\t\t}\n\n\t\treturn Promise.all (promises).then (() => {\n\t\t\tif ($_(`${Monogatari.selector} [data-screen=\"game\"] [data-ui=\"text\"]`).hasClass ('nvl')) {\n\t\t\t\telement.addClass ('horizontal');\n\t\t\t\t$_(`${Monogatari.selector}  [data-screen=\"game\"] [data-ui=\"text\"]`).append (element.get (0));\n\t\t\t} else {\n\t\t\t\telement.addClass ('vertical');\n\t\t\t\telement.addClass ('middle');\n\t\t\t\t$_(`${Monogatari.selector}  [data-screen=\"game\"]`).append (element.get (0));\n\t\t\t}\n\t\t});\n\t}\n\n\t// Revert is disabled for choices since we still don't have a way to know what\n\t// a choice did\n\twillRevert () {\n\t\tif (Monogatari.history ('choice').length > 0) {\n\t\t\tconst choice = Monogatari.history ('choice')[Monogatari.history ('choice').length - 1];\n\t\t\tif (this.statement[choice] !== 'undefined') {\n\n\t\t\t\t// Check if the choice had an onChosen function with it's matching\n\t\t\t\t// onRevert functionality, or if no onChosen function was provided\n\t\t\t\t// which are the only cases where it can be reverted.\n\t\t\t\tconst functionReversible = (typeof this.statement[choice].onRevert === 'function' && typeof this.statement[choice].onChosen === 'function') || typeof this.statement[choice].onChosen !== 'function';\n\n\t\t\t\tif (functionReversible) {\n\t\t\t\t\treturn Promise.resolve ();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Promise.reject ();\n\t}\n\n\trevert () {\n\t\tconst choice = Monogatari.history ('choice')[Monogatari.history ('choice').length - 1];\n\t\treturn Monogatari.revert (this.statement[choice].Do, false).then (() => {\n\t\t\tif (typeof this.statement[choice].onRevert === 'function') {\n\t\t\t\treturn Util.callAsync (this.statement[choice].onRevert, Monogatari).then (() => {\n\t\t\t\t\treturn this.apply ();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.apply ();\n\t\t});\n\t}\n\n\tdidRevert () {\n\t\tMonogatari.history ('choice').pop ();\n\t\treturn Promise.resolve ({ advance: false, step: false });\n\t}\n}\n\nChoice.id = 'Choice';\n\nMonogatari.registerAction (Choice);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\n\nexport class Clear extends Action {\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'clear';\n\t}\n\n\tconstructor ([ action ]) {\n\t\tsuper ();\n\t}\n\n\tapply () {\n\t\tMonogatari.action ('Dialog').reset ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\twillRevert () {\n\t\treturn Promise.reject ();\n\t}\n}\n\nClear.id = 'Clear';\n\nMonogatari.registerAction (Clear);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { Util } from '@aegis-framework/artemis';\n\nexport class Conditional extends Action {\n\n\tstatic setup (selector) {\n\t\tMonogatari.history ('conditional');\n\t}\n\n\tstatic matchObject (statement) {\n\t\treturn typeof statement.Conditional !== 'undefined';\n\t}\n\n\tconstructor (statement) {\n\t\tsuper ();\n\t\tthis.statement = statement.Conditional;\n\t}\n\n\tapply () {\n\t\treturn new Promise ((resolve) => {\n\n\t\t\t// Call the condition function. Since the function might use a\n\t\t\t// Promise.reject () to return as false, we also define a catch\n\t\t\t// block to run the False branch of the condition.\n\t\t\tUtil.callAsync (this.statement.Condition, Monogatari).then ((returnValue) => {\n\n\t\t\t\tMonogatari.global ('block', false);\n\n\t\t\t\t// Check if the function returned true so we run the True branch\n\t\t\t\t// of the conditional. If false is returned, we run the False\n\t\t\t\t// branch of the conditional and if a string is returned, we use\n\t\t\t\t// it as a key so we run the branch that has that key\n\t\t\t\tif (returnValue === true) {\n\t\t\t\t\tMonogatari.run (this.statement.True, false);\n\t\t\t\t\tMonogatari.history ('conditional').push ('True');\n\t\t\t\t} else if (typeof returnValue === 'string') {\n\t\t\t\t\tMonogatari.run (this.statement[returnValue], false);\n\t\t\t\t\tMonogatari.history ('conditional').push (returnValue);\n\t\t\t\t} else {\n\t\t\t\t\tMonogatari.run (this.statement.False, false);\n\t\t\t\t\tMonogatari.history ('conditional').push ('False');\n\t\t\t\t}\n\t\t\t}).catch (() => {\n\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\tMonogatari.run (this.statement.False, false);\n\t\t\t\tMonogatari.history ('conditional').push ('False');\n\t\t\t}).finally (() => {\n\t\t\t\tresolve ();\n\t\t\t});\n\t\t});\n\t}\n\n\twillRevert () {\n\t\tif (Monogatari.history ('conditional').length > 0) {\n\t\t\tconst conditional = Monogatari.history ('conditional')[Monogatari.history ('conditional').length - 1];\n\t\t\tif (this.statement[conditional] !== 'undefined') {\n\t\t\t\treturn Promise.resolve ();\n\t\t\t}\n\t\t}\n\t\treturn Promise.reject ();\n\t}\n\n\trevert () {\n\t\tconst conditional = Monogatari.history ('conditional')[Monogatari.history ('conditional').length - 1];\n\t\treturn Monogatari.revert (this.statement[conditional], false);\n\t}\n\n\tdidRevert () {\n\t\tMonogatari.history ('conditional').pop ();\n\t\treturn Promise.resolve ({ advance: false, step: false });\n\t}\n}\n\nConditional.id = 'Conditional';\n\nMonogatari.registerAction (Conditional);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class End extends Action {\n\n\tstatic bind (selector) {\n\n\t\tMonogatari.registerListener ('end', {\n\t\t\tcallback: () => {\n\t\t\t\t$_(`${selector} [data-notice=\"exit\"]`).addClass ('modal--active');\n\t\t\t}\n\t\t});\n\n\t\tMonogatari.registerListener ('quit', {\n\t\t\tcallback: () => {\n\t\t\t\t$_(`${selector} [data-notice=\"exit\"]`).removeClass ('modal--active');\n\t\t\t\tMonogatari.run ('end');\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'end';\n\t}\n\n\tconstructor ([ action ]) {\n\t\tsuper ();\n\t}\n\n\twillApply () {\n\t\t$_(`${Monogatari.selector} [data-screen]`).hide ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tapply () {\n\t\tMonogatari.global ('playing', false);\n\t\tMonogatari.resetGame ();\n\t\tMonogatari.showMainScreen ();\n\t\treturn Promise.resolve ();\n\t}\n\n\twillRevert () {\n\t\treturn Promise.reject ();\n\t}\n}\n\nEnd.id = 'End';\n\nMonogatari.registerAction (End);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { Util } from '@aegis-framework/artemis';\nimport { FancyError } from '../FancyError';\n\nexport class ReversibleFunction extends Action {\n\n\tstatic matchObject ({ Function: fn }) {\n\t\treturn typeof fn !== 'undefined';\n\t}\n\n\tconstructor ({ Function: fn }) {\n\t\tsuper ();\n\t\tthis.statement = fn;\n\t\tthis.shouldContinue = true;\n\t}\n\n\tapply () {\n\t\t// The function will be run asynchronously (No matter if its code isn't)\n\t\t// if the function returns false, the next statement will not be run\n\t\t// automatically and the game will wait for user interaction or some other\n\t\t// code inside the function to keep going. Any other returnValue will\n\t\t// allow the game to keep going right away.\n\t\treturn Util.callAsync (this.statement.Apply, Monogatari).then ((returnValue) => {\n\t\t\tMonogatari.global ('block', false);\n\t\t\tif (returnValue === false) {\n\t\t\t\tthis.shouldContinue = false;\n\t\t\t}\n\t\t}).catch ((e) => {\n\t\t\tFancyError.show (\n\t\t\t\t'An error occurred while trying to apply a Reversible Function.',\n\t\t\t\t'Monogatari attempted to run the `Apply` method of a Reversible Function but an error occurred.',\n\t\t\t\t{\n\t\t\t\t\t'Error Mesage': e.message,\n\t\t\t\t\t'File Name': e.fileName,\n\t\t\t\t\t'Line Number': e.lineNumber,\n\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t'Help': {\n\t\t\t\t\t\t'_': 'Check the code for your function, there may be additional information in the console.',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tdidApply () {\n\t\treturn Promise.resolve (this.shouldContinue);\n\t}\n\n\trevert () {\n\t\t// The function will be run asynchronously (No matter if its code isn't)\n\t\t// if the function returns false, the previous statement will not be run\n\t\t// automatically and the game will wait for user interaction or some other\n\t\t// code inside the function to keep going. Any other returnValue will\n\t\t// allow the game to keep going right away.\n\t\treturn Util.callAsync (this.statement.Reverse, Monogatari).then ((returnValue) => {\n\t\t\tMonogatari.global ('block', false);\n\t\t\tif (returnValue === false) {\n\t\t\t\tthis.shouldContinue = false;\n\t\t\t}\n\t\t}).catch ((e) => {\n\t\t\tFancyError.show (\n\t\t\t\t'An error occurred while trying to revert a Reversible Function.',\n\t\t\t\t'Monogatari attempted to run the `Revert` method of a Reversible Function but an error occurred.',\n\t\t\t\t{\n\t\t\t\t\t'Error Mesage': e.message,\n\t\t\t\t\t'File Name': e.fileName,\n\t\t\t\t\t'Line Number': e.lineNumber,\n\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t'Help': {\n\t\t\t\t\t\t'_': 'Check the code for your function, there may be additional information in the console.',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: this.shouldContinue, step: true });\n\t}\n}\n\nReversibleFunction.id = 'Function';\n\nMonogatari.registerAction (ReversibleFunction);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_, Util } from '@aegis-framework/artemis';\n\nexport class HideCanvas extends Action {\n\n\n\tstatic matchString ([ hide, type ]) {\n\t\treturn hide === 'hide' && type === 'canvas';\n\t}\n\n\tconstructor ([ hide, type, name, separator, ...classes ]) {\n\t\tsuper ();\n\t\tthis.name = name;\n\t\tthis.object = Monogatari.action ('Canvas').objects (name);\n\t\tif (typeof classes !== 'undefined') {\n\t\t\tthis.classes = classes;\n\t\t} else {\n\t\t\tthis.classes = [];\n\t\t}\n\t}\n\n\tapply () {\n\t\treturn Util.callAsync (this.object.stop, Monogatari).then (() => {\n\t\t\tif (this.classes.length > 0) {\n\t\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).addClass ('animated');\n\t\t\t\tfor (const newClass of this.classes) {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).addClass (newClass);\n\t\t\t\t}\n\n\t\t\t\t// Remove item after a while to prevent it from showing randomly\n\t\t\t\t// when coming from a menu to the game because of its animation\n\t\t\t\tsetTimeout (() => {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).remove ();\n\t\t\t\t}, 10000);\n\t\t\t} else {\n\t\t\t\t$_(`${Monogatari.selector} [data-canvas=\"${this.name}\"]`).remove ();\n\t\t\t}\n\t\t});\n\t}\n\n\tdidApply () {\n\t\tfor (let i = Monogatari.state ('canvas').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.state ('canvas')[i];\n\t\t\tconst [show, type, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.state ('canvas').splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\tfor (let i = Monogatari.history ('canvas').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.history ('canvas')[i];\n\t\t\tconst [show, canvas, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.history ('canvas').splice (i, 1);\n\t\t\t\treturn Monogatari.run (last, false);\n\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nHideCanvas.id = 'Hide::Canvas';\n\nMonogatari.registerAction (HideCanvas);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class HideCharacter extends Action {\n\n\tstatic matchString ([ hide, type ]) {\n\t\treturn hide === 'hide' && type === 'character';\n\t}\n\n\tconstructor ([ hide, type, asset, ...classes ]) {\n\t\tsuper ();\n\t\tthis.asset = asset;\n\n\t\tif (typeof Monogatari.character (this.asset) !== 'undefined') {\n\t\t\tthis.element = $_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`);\n\t\t} else {\n\t\t\t// TODO: Add FancyError for when the character does not exist\n\t\t}\n\n\t\tif (typeof classes !== 'undefined') {\n\t\t\tthis.classes = classes;\n\t\t} else {\n\t\t\tthis.classes = [];\n\t\t}\n\t\tthis.classes = this.classes.filter ((c) => (c !== 'at' && c !== 'with'));\n\t}\n\n\tapply () {\n\t\tthis.element.removeClass ();\n\t\tthis.element.addClass ('animated');\n\n\t\tconst durationPosition = this.classes.indexOf ('duration');\n\n\t\tif (durationPosition > -1) {\n\t\t\tthis.element.style ('animation-duration', this.classes[durationPosition + 1]);\n\t\t} else {\n\t\t\tthis.element.style ('animation-duration', '');\n\t\t}\n\n\t\tif (this.classes.length > 0) {\n\t\t\tfor (const newClass of this.classes) {\n\t\t\t\tthis.element.addClass (newClass);\n\t\t\t}\n\t\t\tthis.element.data ('visibility', 'invisible');\n\t\t} else {\n\t\t\tthis.element.remove ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tconst show = Monogatari.state ('characters').filter ((item) => {\n\t\t\tconst [ show, type, asset, ] = item.split (' ');\n\t\t\treturn asset !== this.asset;\n\t\t});\n\n\t\tMonogatari.state ({ characters: show });\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\twillRevert () {\n\t\tif (Monogatari.history ('character').length <= 0) {\n\t\t\treturn Promise.reject ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\trevert () {\n\t\tMonogatari.run (Monogatari.history ('character').pop (), false);\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nHideCharacter.id = 'Hide::Character';\n\nMonogatari.registerAction (HideCharacter);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class HideImage extends Action {\n\n\tstatic matchString ([ hide, type ]) {\n\t\treturn hide === 'hide' && type === 'image';\n\t}\n\n\tconstructor ([ hide, type, asset, ...classes ]) {\n\t\tsuper ();\n\t\tthis.asset = asset;\n\n\t\tthis.element = $_(`${Monogatari.selector} [data-image=\"${this.asset}\"]`);\n\n\t\tif (typeof classes !== 'undefined') {\n\t\t\tthis.classes = classes;\n\t\t} else {\n\t\t\tthis.classes = [];\n\t\t}\n\t\tthis.classes = this.classes.filter ((c) => (c !== 'at' && c !== 'with'));\n\t}\n\n\tapply () {\n\t\tthis.element.removeClass ();\n\t\tthis.element.addClass ('animated');\n\t\tconst durationPosition = this.classes.indexOf ('duration');\n\n\t\tif (durationPosition > -1) {\n\t\t\tthis.element.style ('animation-duration', this.classes[durationPosition + 1]);\n\t\t} else {\n\t\t\tthis.element.style ('animation-duration', '');\n\t\t}\n\n\t\tif (this.classes.length > 0) {\n\t\t\tfor (const newClass of this.classes) {\n\t\t\t\tthis.element.addClass (newClass);\n\t\t\t}\n\t\t\tthis.element.data ('visibility', 'invisible');\n\t\t} else {\n\t\t\tthis.element.remove ();\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tconst show = Monogatari.state ('images').filter ((item) => {\n\t\t\tconst [ show, type, asset, ] = item.split (' ');\n\t\t\treturn asset !== this.asset;\n\t\t});\n\n\t\tMonogatari.state ({ images: show });\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\twillRevert () {\n\t\tif (Monogatari.history ('image').length <= 0) {\n\t\t\treturn Promise.reject ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\trevert () {\n\t\tMonogatari.run (Monogatari.history ('image').pop (), false);\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nHideImage.id = 'Hide::Image';\n\nMonogatari.registerAction (HideImage);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\n/* global pJSDom */\n\nexport class HideParticles extends Action {\n\n\tstatic matchString ([ hide, type ]) {\n\t\treturn hide === 'hide' && type === 'particles';\n\t}\n\n\tconstructor ([ hide, type ]) {\n\t\tsuper ();\n\t}\n\n\tapply () {\n\t\tMonogatari.action ('Particles').stop ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\tif (Monogatari.history ('particle').length > 0) {\n\t\t\tconst last = Monogatari.history ('particle').pop ();\n\t\t\treturn Monogatari.run (last, false);\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nHideParticles.id = 'Hide::Particles';\n\nMonogatari.registerAction (HideParticles);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class HideVideo extends Action {\n\n\n\tstatic matchString ([ hide, type ]) {\n\t\treturn hide === 'hide' && type === 'video';\n\t}\n\n\tconstructor ([ hide, type, name, separator, ...classes ]) {\n\t\tsuper ();\n\t\tthis.name = name;\n\t\tif (typeof classes !== 'undefined') {\n\t\t\tthis.classes = classes;\n\t\t} else {\n\t\t\tthis.classes = [];\n\t\t}\n\t}\n\n\tapply () {\n\n\t\tif (this.classes.length > 0) {\n\t\t\t$_(`${Monogatari.selector} [data-video=\"${this.name}\"]`).addClass ('animated');\n\t\t\tfor (const newClass of this.classes) {\n\t\t\t\t$_(`${Monogatari.selector} [data-video=\"${this.name}\"]`).addClass (newClass);\n\t\t\t}\n\n\t\t\t// Remove item after a while to prevent it from showing randomly\n\t\t\t// when coming from a menu to the game because of its animation\n\t\t\tsetTimeout (() => {\n\t\t\t\t$_(`${Monogatari.selector} [data-video=\"${this.name}\"]`).remove ();\n\t\t\t}, 10000);\n\t\t} else {\n\t\t\t$_(`${Monogatari.selector} [data-video=\"${this.name}\"]`).remove ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tfor (let i = Monogatari.state ('videos').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.state ('videos')[i];\n\t\t\tconst [show, video, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.state ('videos').splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\tfor (let i = Monogatari.history ('video').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.history ('video')[i];\n\t\t\tconst [show, video, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.history ('video').splice (i, 1);\n\t\t\t\treturn Monogatari.run (last, false);\n\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nHideVideo.id = 'Hide::Video';\n\nMonogatari.registerAction (HideVideo);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_, Util } from '@aegis-framework/artemis';\n\nexport class InputModal extends Action {\n\n\tstatic matchObject ({ Input }) {\n\t\treturn typeof Input !== 'undefined';\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).remove ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic canProceed () {\n\t\tif ($_(`${Monogatari.selector} [data-ui=\"input\"]`).isVisible ()) {\n\t\t\treturn Promise.reject ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic canRevert () {\n\t\t// If the player is trying to go back when the input form is being shown\n\t\t// we simply remove it, reset it and remove the listener it had.\n\t\tif ($_(`${Monogatari.selector} [data-ui=\"input\"]`).isVisible ()) {\n\n\t\t\t// Remove the listener\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).get (0).removeEventListener ('submit', Monogatari.global ('_inputListener'));\n\n\t\t\t// Remove it\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).remove ();\n\n\t\t\t// Unblock the game\n\t\t\tMonogatari.global ('block', false);\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tconstructor ({ Input }) {\n\t\tsuper ();\n\t\tthis.statement = Input;\n\t}\n\n\n\tapply () {\n\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append (Monogatari.component ('text_input').render (this.statement.Text));\n\n\t\t// When the input modal is being shown, the game should be blocked so\n\t\t// the player won't continue until an input is correctly received.\n\t\tMonogatari.global ('block', true);\n\n\t\t// Define a global listener so that we can later remove it\n\t\tMonogatari.global ('_inputListener', (event) => {\n\n\t\t\tevent.stopPropagation ();\n\t\t\tevent.preventDefault ();\n\n\t\t\t// Retrieve the value submited\n\t\t\tconst inputValue = $_(`${Monogatari.selector} [data-ui=\"input\"] input`).value ();\n\n\t\t\t// Run the validation function asynchronously. If it returns false,\n\t\t\t// it means the input is invalid and we have to show the warning message.\n\t\t\tMonogatari.assertAsync (this.statement.Validation, Monogatari, [inputValue]).then (() => {\n\n\t\t\t\t// Once validation was done, we run the Save function where usually,\n\t\t\t\t// the input received will be saved on the storage or used for other\n\t\t\t\t// actions.\n\t\t\t\tMonogatari.assertAsync (this.statement.Save, Monogatari, [inputValue]).then (() => {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).get (0).removeEventListener ('submit', Monogatari.global ('_inputListener'));\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).remove ();\n\t\t\t\t\tMonogatari.next ();\n\t\t\t\t}).catch (() => {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).get (0).removeEventListener ('submit', Monogatari.global ('_inputListener'));\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).remove ();\n\t\t\t\t}).finally (() => {\n\t\t\t\t\t// Unblock the game so the player can continue\n\t\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\t});\n\t\t\t}).catch (() => {\n\t\t\t\t// Show the warning message since the input was invalid\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"input\"] [data-ui=\"warning\"]`).text (this.statement.Warning);\n\t\t\t\tMonogatari.global ('block', false);\n\t\t\t});\n\t\t});\n\n\t\t// Add the listener to the input form\n\t\t$_(`${Monogatari.selector} [data-ui=\"input\"]`).submit (Monogatari.global ('_inputListener'));\n\n\t\treturn Promise.resolve ();\n\t}\n\n\twillRevert () {\n\t\tif (typeof this.statement.Revert === 'function') {\n\t\t\treturn Promise.resolve ();\n\t\t}\n\t\treturn Promise.reject ();\n\t}\n\n\trevert () {\n\t\treturn Util.callAsync (this.statement.Revert, Monogatari).then (() => {\n\t\t\treturn this.apply ();\n\t\t});\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: false, step: true });\n\t}\n}\n\nInputModal.id = 'Input';\n\nMonogatari.registerAction (InputModal);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\nimport { FancyError } from '../FancyError';\n\nexport class Jump extends Action {\n\n\tstatic setup () {\n\t\tMonogatari.history ('label');\n\t\tMonogatari.history ('jump');\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic bind (selector) {\n\t\tMonogatari.registerListener ('jump', {\n\t\t\tcallback: (element) => {\n\t\t\t\tMonogatari.run (`jump ${element.data('jump')}`, false);\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'jump';\n\t}\n\n\tconstructor ([ action, label ]) {\n\t\tsuper ();\n\t\tthis.label = label;\n\t}\n\n\twillApply () {\n\t\tif (typeof Monogatari.script (this.label) !== 'undefined') {\n\t\t\tMonogatari.stopAmbient ();\n\t\t\t$_(`${Monogatari.selector} [data-screen]`).hide ();\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).show ();\n\t\t\treturn Promise.resolve ();\n\t\t} else {\n\t\t\tFancyError.show (\n\t\t\t\t`The label \"${this.label}\" does not exist`,\n\t\t\t\t`Monogatari attempted to jump to the label named \"${this.label}\" but it wasn't found on the script.`,\n\t\t\t\t{\n\t\t\t\t\t'Missing Label': this.label,\n\t\t\t\t\t'You may have meant one of these': Object.keys (Monogatari.script ()),\n\t\t\t\t\t'Statement': `<code class='language=javascript'>\"${this._statement}\"</code>`,\n\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t'Help': {\n\t\t\t\t\t\t'_': 'Check if the label in your jump statement is correct and that you have also defined it correctly.'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn Promise.reject ();\n\t}\n\n\tapply () {\n\t\tMonogatari.history ('jump').push ({\n\t\t\tsource: {\n\t\t\t\tlabel: Monogatari.state ('label'),\n\t\t\t\tstep: Monogatari.state ('step')\n\t\t\t},\n\t\t\tdestination: {\n\t\t\t\tlabel: this.label,\n\t\t\t\tstep: 0\n\t\t\t}\n\t\t});\n\t\tMonogatari.state ({\n\t\t\tstep: 0,\n\t\t\tlabel: this.label\n\t\t});\n\n\t\tif (!$_(`${Monogatari.selector} [data-ui=\"text\"]`).hasClass ('nvl')) {\n\t\t\tMonogatari.action ('Dialog').reset ();\n\t\t}\n\n\t\tMonogatari.run (Monogatari.label ()[Monogatari.state ('step')]);\n\t\tMonogatari.history ('label').push (this.label);\n\n\t\treturn Promise.resolve ();\n\t}\n\n\t// Jump is right now not reversible due to complications with the logic for it\n\twillRevert () {\n\t\tif (Monogatari.history ('jump').length > 0) {\n\t\t\treturn Promise.resolve ();\n\t\t}\n\t\treturn Promise.reject ('No elements in history available.');\n\t}\n\n\trevert () {\n\t\tconst last = Monogatari.history ('jump')[Monogatari.history ('jump').length - 1];\n\t\tif (typeof last !== 'undefined') {\n\t\t\tMonogatari.state ({\n\t\t\t\tstep: last.source.step,\n\t\t\t\tlabel: last.source.label\n\t\t\t});\n\t\t\treturn Promise.resolve ();\n\t\t}\n\t\treturn Promise.reject ('No elements in history available.');\n\t}\n\n\tdidRevert () {\n\t\tMonogatari.history ('jump').pop ();\n\t\tMonogatari.history ('label').pop ();\n\t\treturn Promise.resolve ({ advance: true, step: false });\n\t}\n}\n\nJump.id = 'Jump';\n\nMonogatari.registerAction (Jump);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\nimport { FancyError } from '../FancyError';\n\n\nexport class Message extends Action {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Message._configuration[object];\n\t\t\t} else {\n\t\t\t\tMessage._configuration = Object.assign ({}, Message._configuration, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Message._configuration;\n\t\t}\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"messages\"]`).remove ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic canProceed () {\n\t\tif ($_(`${Monogatari.selector} [data-ui=\"messages\"]`).isVisible ()) {\n\t\t\treturn Promise.reject ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic canRevert () {\n\t\tif ($_(`${Monogatari.selector} [data-ui=\"messages\"]`).isVisible ()) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"messages\"]`).remove ();\n\t\t\tMonogatari.global ('block', false);\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'message';\n\t}\n\n\tstatic messages (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Message._configuration.messages[object];\n\t\t\t} else {\n\t\t\t\tMessage._configuration.messages = Object.assign ({}, Message._configuration.messages, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Message._configuration.messages;\n\t\t}\n\t}\n\n\tconstructor ([ show, type, message, ...classes ]) {\n\t\tsuper ();\n\t\tthis.id = message;\n\t\tthis.message = Message.messages (message);\n\t\tthis.classes = classes;\n\t}\n\n\twillApply () {\n\t\tif (typeof this.message !== 'undefined') {\n\t\t\t// Check if the old format is being use and translate it to the new one\n\t\t\tif (this.message.Title && this.message.Subtitle && this.message.Message) {\n\t\t\t\tthis.message.title = this.message.Title;\n\t\t\t\tthis.message.subtitle = this.message.Subtitle;\n\t\t\t\tthis.message.body = this.message.Message;\n\t\t\t}\n\t\t\treturn Promise.resolve ();\n\t\t} else {\n\t\t\tFancyError.show (\n\t\t\t\t`The message \"${this.id}\" was not found`,\n\t\t\t\t`Monogatari attempted to retrieve a message named \"${this.id}\" but it didn't exist in the messages object.`,\n\t\t\t\t{\n\t\t\t\t\t'Message': this.id,\n\t\t\t\t\t'You may have meant': Object.keys (Message.messages ()),\n\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t'Help': {\n\t\t\t\t\t\t'_': 'Check the message name is correct and that you have defined it previously. A Message is defined as follows:',\n\t\t\t\t\t\t'_1':`\n\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\t\tMonogatari.action ('Message').mesages ({\n\t\t\t\t\t\t\t\t\t\t'Welcome': {\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Welcome!',\n\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'This is the Monogatari VN Engine',\n\t\t\t\t\t\t\t\t\t\t\tbody: 'This is where the magic gets done!'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t`,\n\t\t\t\t\t\t'_2': 'Notice the message defined uses a name or an id, in this case it was set to \"Welcome\" and to show it, you must use that exact name:',\n\t\t\t\t\t\t'_3':`\n\t\t\t\t\t\t\t<pre><code class='language-javascript'>\"show message Welcome\"</code></pre>\n\t\t\t\t\t\t`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn Promise.reject ();\n\t}\n\n\tapply () {\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append (Monogatari.component ('message').render (this.message.title, this.message.subtitle, this.message.body));\n\n\t\t$_(`${Monogatari.selector} [data-ui=\"messages\"]`).addClass ('animated');\n\n\t\tfor (const newClass of this.classes) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"messages\"]`).addClass (newClass);\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\trevert () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"messages\"]`).remove ();\n\t\treturn this.apply ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: false, step: true });\n\t}\n}\n\nMessage.id = 'Message';\nMessage._configuration = {\n\tmessages: {}\n};\n\nMonogatari.registerAction (Message);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\n\nexport class Next extends Action {\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'next';\n\t}\n\n\tconstructor ([ action ]) {\n\t\tsuper ();\n\t}\n\n\tapply () {\n\t\tMonogatari.next ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nNext.id = 'Next';\n\nMonogatari.registerAction (Next);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { FancyError } from '../FancyError';\n\nexport class Notify extends Action {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Notify._configuration[object];\n\t\t\t} else {\n\t\t\t\tNotify._configuration = Object.assign ({}, Notify._configuration, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Notify._configuration;\n\t\t}\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'notification';\n\t}\n\n\tstatic notifications (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Notify._configuration.notifications[object];\n\t\t\t} else {\n\t\t\t\tNotify._configuration.notifications = Object.assign ({}, Notify._configuration.notifications, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Notify._configuration.notifications;\n\t\t}\n\t}\n\n\tconstructor ([ show, type, name, time ]) {\n\t\tsuper ();\n\n\t\t// First check if HTML5 notifications are available\n\t\tif ('Notification' in window) {\n\n\t\t\t// Finally check if the given notification exists in the object\n\t\t\tif (typeof Notify.notifications (name) !== 'undefined') {\n\t\t\t\tthis.notification = Notify.notifications (name);\n\n\t\t\t\tif (typeof time !== 'undefined') {\n\t\t\t\t\tif (!isNaN (time)) {\n\t\t\t\t\t\tthis.time = parseInt (time);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tFancyError.show (\n\t\t\t\t\t\t\t'The specified time was not an integer',\n\t\t\t\t\t\t\t'Monogatari attempted to transform the given time into an integer value but failed.',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'Specified time': time,\n\t\t\t\t\t\t\t\t'Statement': `<code class='language=javascript'>\"${this._statement}\"</code>`,\n\t\t\t\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t\t\t\t'Help': {\n\t\t\t\t\t\t\t\t\t'_': 'Check if the value you provided is actually an integer (whole number). Remember the value used must be given in milliseconds and must not be mixed with characters other than numbers.',\n\t\t\t\t\t\t\t\t\t'_1': 'For example, the following statement would make a notification go away after 5 seconds:',\n\t\t\t\t\t\t\t\t\t'_3':`\n\t\t\t\t\t\t\t\t\t\t<pre><code class='language-javascript'>\"show notification Welcome 5000\"</code></pre>\n\t\t\t\t\t\t\t\t\t`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tFancyError.show (\n\t\t\t\t\t`The notification \"${name}\" was not found`,\n\t\t\t\t\t`Monogatari attempted to retrieve a notification named \"${name}\" but it didn't exist in the notifications object.`,\n\t\t\t\t\t{\n\t\t\t\t\t\t'Notification': name,\n\t\t\t\t\t\t'You may have meant': Object.keys (Notify.notifications ()),\n\t\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t\t'Help': {\n\t\t\t\t\t\t\t'_': 'Check the notification\\'s name is correct and that you have defined it previously. A Notification is defined as follows:',\n\t\t\t\t\t\t\t'_1':`\n\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t<code class='language-javascript'>\n\t\t\t\t\t\t\t\t\t\tMonogatari.action ('Notify').notifications ({\n\t\t\t\t\t\t\t\t\t\t\t'Welcome': {\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Welcome!',\n\t\t\t\t\t\t\t\t\t\t\t\tbody: 'This is the Monogatari VN Engine',\n\t\t\t\t\t\t\t\t\t\t\t\ticon: ''\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t'_2': 'Notice the notification defined uses a name or an id, in this case it was set to \"Welcome\" and to show it, you must use that exact name:',\n\t\t\t\t\t\t\t'_3':`\n\t\t\t\t\t\t\t\t<pre><code class='language-javascript'>\"show notification Welcome\"</code></pre>\n\t\t\t\t\t\t\t`\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn ('Notifications are not supported in this platform.');\n\t\t}\n\t}\n\n\twillApply () {\n\t\tif (typeof this.notification !== 'undefined') {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\t// Let's check whether notification permissions have already been granted\n\t\t\t\tif (Notification.permission === 'granted') {\n\t\t\t\t\tresolve ();\n\t\t\t\t} else if (Notification.permission !== 'denied') {\n\t\t\t\t\tNotification.requestPermission((permission) => {\n\t\t\t\t\t\t// If the user accepts, let's create a notification\n\t\t\t\t\t\tif (permission === 'granted') {\n\t\t\t\t\t\t\tresolve ();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn ('User denied notifications permission, none will be shown.');\n\t\t\t\t\t\t\tresolve ();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treject ();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tapply () {\n\t\tconst notification = new Notification (this.notification.title, this.notification);\n\n\t\tif (typeof this.time !== 'undefined') {\n\t\t\tsetTimeout(() => {\n\t\t\t\tnotification.close ();\n\t\t\t}, this.time);\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\t// Advance the game instead of waiting for another click\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nNotify.id = 'Notification';\nNotify._configuration = {\n\tnotifications: {}\n};\n\nMonogatari.registerAction (Notify);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\n/* global particlesJS, pJSDom */\n\nexport class Particles extends Action {\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Particles._configuration[object];\n\t\t\t} else {\n\t\t\t\tParticles._configuration = Object.assign ({}, Particles._configuration, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Particles._configuration;\n\t\t}\n\t}\n\n\tstatic stop () {\n\t\ttry {\n\t\t\tif (typeof pJSDom === 'object') {\n\t\t\t\tif (pJSDom.length > 0) {\n\t\t\t\t\tfor (let i = 0; i < pJSDom.length; i++) {\n\t\t\t\t\t\tif (typeof pJSDom[i].pJS !== 'undefined') {\n\t\t\t\t\t\t\t// Cancel all the animation frame requests to prevent\n\t\t\t\t\t\t\t// memory from being used even then the element\n\t\t\t\t\t\t\t// has been destroyed.\n\t\t\t\t\t\t\tcancelAnimationFrame (pJSDom[i].pJS.fn.drawAnimFrame);\n\t\t\t\t\t\t\tpJSDom.shift ();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error ('An error ocurred while trying to stop particle system.');\n\t\t}\n\n\t\tMonogatari.state ({\n\t\t\tparticles: ''\n\t\t});\n\t\t$_(`${Monogatari.selector} #particles-js`).html ('');\n\t}\n\n\n\tstatic setup () {\n\t\tMonogatari.history ('particle');\n\t\tMonogatari.state ({\n\t\t\tparticles: ''\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\tMonogatari.state ({\n\t\t\tparticles: ''\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic onLoad () {\n\t\tconst { particles } = Monogatari.state ();\n\t\tif (particles !== '') {\n\t\t\tMonogatari.run (particles, false);\n\t\t\t// TODO: Find a way to prevent the histories from filling up on loading\n\t\t\t// So there's no need for this pop.\n\t\t\tMonogatari.history ('particle').pop ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'particles';\n\t}\n\n\tstatic particles (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Particles._configuration.particles[object];\n\t\t\t} else {\n\t\t\t\tParticles._configuration.particles = Object.assign ({}, Particles._configuration.particles, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Particles._configuration.particles;\n\t\t}\n\t}\n\n\tconstructor ([ show, type, name ]) {\n\t\tsuper ();\n\t\tif (typeof Particles.particles (name) !== 'undefined') {\n\t\t\tthis.particles = Particles.particles (name);\n\t\t\tthis.name = name;\n\t\t} else {\n\t\t\tconsole.error (`The Particles ${name} could not be shown because it doesn't exist in the particles object.`);\n\t\t}\n\t}\n\n\twillApply () {\n\t\tif (typeof this.particles !== 'undefined') {\n\t\t\treturn Promise.resolve ();\n\t\t} else {\n\t\t\treturn Promise.reject ();\n\t\t}\n\t}\n\n\tapply () {\n\t\tparticlesJS (this.particles);\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tMonogatari.history ('particle').push (this._statement);\n\t\tMonogatari.state ({\n\t\t\tparticles: this._statement\n\t\t});\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\tParticles.stop ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\tMonogatari.history ('particle').pop ();\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nParticles.id = 'Particles';\nParticles._configuration = {\n\tparticles: {}\n};\n\nMonogatari.registerAction (Particles);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\n\nexport class Pause extends Action {\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'pause';\n\t}\n\n\tconstructor ([ action, type, media ]) {\n\t\tsuper ();\n\n\t\tthis.type = type;\n\t\tthis.media = media;\n\n\t\tif (typeof media === 'undefined') {\n\t\t\tthis.player = Monogatari.mediaPlayers (type, true);\n\t\t} else {\n\t\t\tthis.player = Monogatari.mediaPlayer (type, media);\n\t\t}\n\t}\n\n\tapply () {\n\t\tif (this.player instanceof Array) {\n\t\t\tfor (const player of this.player) {\n\t\t\t\tplayer.pause ();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.player.pause ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\tif (this.player instanceof Array) {\n\t\t\tconst promises = [];\n\t\t\tfor (const player of this.player) {\n\t\t\t\tpromises.push (player.play ());\n\t\t\t}\n\t\t\treturn Promise.all (promises);\n\t\t} else {\n\t\t\treturn this.player.play ();\n\t\t}\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nPause.id = 'Pause';\n\nMonogatari.registerAction (Pause);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_, Text } from '@aegis-framework/artemis';\n\nexport class Play extends Action {\n\n\tstatic canProceed () {\n\t\tif ($_(`${Monogatari.selector} [data-component=\"video\"]`).isVisible ()) {\n\t\t\treturn Promise.reject ();\n\t\t}\n\n\t\tPlay.shutUp ();\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic canRevert () {\n\t\tif ($_(`${Monogatari.selector} [data-component=\"video\"]`).isVisible ()) {\n\t\t\tPlay.stopVideo ();\n\t\t}\n\n\t\tPlay.shutUp ();\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic setup () {\n\t\tMonogatari.history ('music');\n\t\tMonogatari.history ('sound');\n\t\tMonogatari.history ('voice');\n\t\tMonogatari.state ({\n\t\t\tmusic: [],\n\t\t\tsound: [],\n\t\t\tvoice: []\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic init (selector) {\n\n\t\tconst mediaPlayers = Object.keys (Monogatari.mediaPlayers ());\n\t\t// Set the volume of all the media components on the settings screen\n\t\tfor (const mediaType of mediaPlayers) {\n\t\t\tconst element = document.querySelector (`${selector} [data-target=\"${mediaType}\"]`);\n\t\t\tif (element !== null) {\n\t\t\t\telement.value = Monogatari.preference ('Volume')[Text.capitalize (mediaType)];\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic bind (selector) {\n\t\tMonogatari.ambientPlayer = document.querySelector (`${selector} [data-component=\"ambient\"]`);\n\t\tMonogatari.videoPlayer = document.querySelector (`${selector} [data-ui=\"player\"]`);\n\n\t\t// Volume bars listeners\n\t\t$_(`${selector} [data-action=\"set-volume\"]`).on ('change mouseover', function () {\n\t\t\tconst target = $_(this).data('target');\n\t\t\tconst value = $_(this).value();\n\t\t\tconst players = Monogatari.mediaPlayers (target);\n\n\t\t\tfor (const player of players) {\n\t\t\t\tplayer.volume = value;\n\t\t\t}\n\n\t\t\tMonogatari.preference ('Volume')[Text.capitalize (target)] = value;\n\n\t\t\tMonogatari.Storage.set ('Settings', Monogatari.preferences ());\n\t\t});\n\n\t\t$_(`${selector} [data-action=\"close-video\"]`).click (() => {\n\t\t\tPlay.stopVideo ();\n\t\t});\n\n\t\tMonogatari.state ({\n\t\t\tmusic: [],\n\t\t\tsound: [],\n\t\t\tvoice: [],\n\t\t});\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic onLoad () {\n\t\tconst mediaPlayers = Object.keys (Monogatari.mediaPlayers ());\n\n\t\tfor (const mediaType of mediaPlayers) {\n\t\t\tconst state =  Monogatari.state (mediaType);\n\n\t\t\tif (typeof state !== 'undefined') {\n\t\t\t\tif (state.length > 0) {\n\t\t\t\t\tfor (const statement of state) {\n\t\t\t\t\t\tMonogatari.run (statement, false);\n\t\t\t\t\t\t// TODO: Find a way to prevent the histories from filling up on loading\n\t\t\t\t\t\t// So there's no need for this pop.\n\t\t\t\t\t\tMonogatari.history (mediaType).pop ();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\tPlay.stopVideo ();\n\n\t\tconst players = Monogatari.mediaPlayers ();\n\n\t\t// Stop and remove all the media players\n\t\tfor (const playerType of Object.keys (players)) {\n\t\t\tMonogatari.removeMediaPlayer (playerType);\n\t\t}\n\n\t\t$_(`${Monogatari.selector} [data-component=\"video\"]`).removeClass ('modal--active');\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'play';\n\t}\n\n\tstatic stopVideo () {\n\t\tMonogatari.removeMediaPlayer ('video');\n\t\t$_(`${Monogatari.selector} [data-component=\"video\"]`).removeClass ('active');\n\t}\n\n\t// Stop the voice player\n\tstatic shutUp () {\n\t\tconst players = Monogatari.mediaPlayers ('voice', true);\n\t\tfor (const media of Object.keys (players)) {\n\t\t\tMonogatari.removeMediaPlayer ('voice', media);\n\t\t}\n\t}\n\n\t/**\n\t * Prepare the needed values to run the fade function on the given player\n\t *\n\t * @param {string} fadeTime - The time it will take the audio to reach it's maximum audio\n\t * @param {Audio} player - The Audio object to modify\n\t *\n\t * @return {Promise} - This promise will resolve once the fadeIn has ended\n\t */\n\tstatic fadeIn (fadeTime, player) {\n\t\tconst time = parseFloat (fadeTime.match (/\\d*(\\.\\d*)?/));\n\t\tconst increments = time / 0.1;\n\t\tconst maxVolume = player.volume * 100;\n\n\t\tconst volume = (maxVolume / increments) / maxVolume;\n\n\t\tconst interval = (1000 * time) / increments;\n\n\t\tconst expected = Date.now () + interval;\n\n\t\tplayer.volume = 0;\n\n\t\tplayer.dataset.fade = 'in';\n\t\tplayer.dataset.maxVolume = maxVolume;\n\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\tsetTimeout (() => {\n\t\t\t\tPlay.fade (player, volume, interval, expected, resolve);\n\t\t\t}, interval);\n\t\t});\n\t}\n\n\t/**\n\t * Fade the player's audio on small iterations until it reaches the maximum value for it\n\t *\n\t * @param {Audio} player The Audio player to which the audio will fadeIn\n\t * @param {number} volume The amount to increase the volume on each iteration\n\t * @param {number} interval The time in milliseconds between each iteration\n\t * @param {Date} expected The expected time the next iteration will happen\n\t * @param {function} resolve The resolve function of the promise returned by the fadeIn function\n\t *\n\t * @return {void}\n\t */\n\tstatic fade (player, volume, interval, expected, resolve) {\n\t\tconst now = Date.now () - expected; // the drift (positive for overshooting)\n\n\t\tif (now > interval) {\n\t\t\t// something really bad happened. Maybe the browser (tab) was inactive?\n\t\t\t// possibly special handling to avoid futile \"catch up\" run\n\t\t}\n\n\t\tif (player.volume !== 1 && player.dataset.fade === 'in') {\n\t\t\tif (player.volume + volume > 1) {\n\t\t\t\tplayer.volume = 1;\n\t\t\t\tdelete this.player.dataset.fade;\n\t\t\t\tresolve ();\n\t\t\t} else {\n\t\t\t\tplayer.volume += volume;\n\t\t\t\texpected += interval;\n\t\t\t\tsetTimeout (() => {\n\t\t\t\t\tPlay.fade (player, volume, interval, expected, resolve);\n\t\t\t\t}, Math.max (0, interval - now)); // take into account drift\n\t\t\t}\n\t\t}\n\t}\n\n\tconstructor ([ action, type, media, ...props ]) {\n\t\tsuper ();\n\t\tthis.type = type;\n\t\tthis.mediaKey = media;\n\t\tthis.props = props;\n\n\t\t// Check if a media was defined or just a `play music` was stated\n\t\tif (typeof media !== 'undefined' && media !== 'with') {\n\t\t\tif (typeof Monogatari.asset (type, media) !== 'undefined') {\n\t\t\t\tthis.media = Monogatari.asset (type, media);\n\t\t\t} else {\n\t\t\t\tthis.media = media;\n\t\t\t}\n\n\t\t\tif (this.type != 'video') {\n\t\t\t\tlet player = Monogatari.mediaPlayer (this.type, this.mediaKey);\n\t\t\t\tif (typeof player === 'undefined') {\n\t\t\t\t\tplayer = new Audio ();\n\t\t\t\t\tplayer.volume = Monogatari.preference ('Volume')[Text.capitalize (this.type)];\n\t\t\t\t\tthis.player = Monogatari.mediaPlayer (this.type, this.mediaKey, player);\n\t\t\t\t} else {\n\t\t\t\t\tthis.player = player;\n\t\t\t\t}\n\t\t\t} else if (this.type == 'video') {\n\t\t\t\tthis.player = Monogatari.mediaPlayer (this.type, this.mediaKey, Monogatari.videoPlayer);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.player = Monogatari.mediaPlayer (this.type);\n\t\t}\n\t}\n\n\twillApply () {\n\t\tif (this.player instanceof Audio) {\n\t\t\tthis.player.loop = false;\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tapply () {\n\t\t// Check if the audio should have a fade time\n\t\tconst fadePosition = this.props.indexOf ('fade');\n\n\t\tif (this.player instanceof Audio) {\n\t\t\t// Make the audio loop if it was provided as a prop\n\t\t\tif (this.props.indexOf ('loop') > -1) {\n\t\t\t\tthis.player.loop = true;\n\t\t\t}\n\n\t\t\tthis.player.src = `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting('AssetsPath')[this.type]}/${this.media}`;\n\n\t\t\tMonogatari.history (this.type).push (this._statement);\n\n\t\t\tconst state = {};\n\t\t\tstate[this.type] = [...Monogatari.state (this.type), this._statement];\n\t\t\tMonogatari.state (state);\n\n\t\t\tthis.player.onended = () => {\n\t\t\t\tconst endState = {};\n\t\t\t\tendState[this.type] = Monogatari.state (this.type).filter ((s) => s !== this._statement);\n\t\t\t\tMonogatari.state (endState);\n\t\t\t\tMonogatari.removeMediaPlayer (this.type, this.mediaKey);\n\t\t\t};\n\n\t\t\tif (fadePosition > -1) {\n\t\t\t\tPlay.fadeIn (this.props[fadePosition + 1], this.player);\n\t\t\t}\n\n\t\t\treturn this.player.play ();\n\t\t} else if (this.player instanceof HTMLVideoElement) {\n\t\t\tthis.player.src = `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting('AssetsPath')[this.type]}/${this.media}`;\n\t\t\t$_(`${Monogatari.selector} [data-component=\"video\"]`).addClass ('active');\n\n\t\t\treturn this.player.play ();\n\t\t} else if (this.player instanceof Array) {\n\t\t\tconst promises = [];\n\t\t\tfor (const player of this.player) {\n\t\t\t\tif (player.paused && !player.ended) {\n\t\t\t\t\tif (fadePosition > -1) {\n\t\t\t\t\t\tPlay.fadeIn (this.props[fadePosition + 1], player);\n\t\t\t\t\t}\n\t\t\t\t\tpromises.push (player.play ());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Promise.all (promises);\n\t\t}\n\n\t}\n\n\tdidApply () {\n\t\tif (this.type !== 'video') {\n\t\t\treturn Promise.resolve ({ advance: true });\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\trevert () {\n\t\tif (typeof this.mediaKey !== 'undefined') {\n\t\t\tMonogatari.removeMediaPlayer (this.type, this.mediaKey);\n\n\t\t\tMonogatari.history (this.type).pop ();\n\n\t\t\tconst state = {};\n\t\t\tstate[this.type] = Monogatari.state (this.type).filter ((m) => m !== this._statement);\n\t\t\tMonogatari.state (state);\n\t\t} else {\n\t\t\tfor (const player of this.player) {\n\t\t\t\tif (!player.paused && !player.ended) {\n\t\t\t\t\tplayer.pause ();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nPlay.id = 'Play';\n\nMonogatari.registerAction (Play);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_, Text } from '@aegis-framework/artemis';\n\nexport class Scene extends Action {\n\n\tstatic setup () {\n\t\tMonogatari.history ('scene');\n\t\tMonogatari.history ('sceneElements');\n\t\tMonogatari.state ({\n\t\t\tscene: ''\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic onLoad () {\n\t\tconst { scene } = Monogatari.state ();\n\t\tif (scene !== '') {\n\t\t\tMonogatari.run (scene, false);\n\t\t\t// TODO: Find a way to prevent the histories from filling up on loading\n\t\t\t// So there's no need for this pop.\n\t\t\tMonogatari.history ('scene').pop ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('background-image', 'initial');\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('background-color', 'initial');\n\t\tMonogatari.state ({\n\t\t\tscene: ''\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'scene';\n\t}\n\n\tconstructor ([ show, type, scene, ...classes ]) {\n\t\tsuper ();\n\t\tthis.scene = scene;\n\t\tthis.property = 'background-image';\n\t\tif (typeof Monogatari.asset ('scenes', scene) !== 'undefined') {\n\t\t\tthis.value = `url(${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').scenes}/${Monogatari.asset ('scenes', scene)})`;\n\t\t} else {\n\t\t\tconst rest = [scene, ...classes].join (' ');\n\t\t\tif (classes.indexOf ('with') > -1) {\n\t\t\t\tthis.value = Text.prefix ('with', rest);\n\t\t\t} else {\n\t\t\t\tthis.value = rest;\n\t\t\t}\n\n\t\t\tconst isColorProperty = ['#', 'rgb', 'hsl'].findIndex ((color) => {\n\t\t\t\treturn this.value.indexOf (color) === 0;\n\t\t\t}) > -1;\n\n\t\t\tconst isNamed = this.value.indexOf (' ') > -1 ? false : new RegExp('\\w+').test (this.value);\n\n\t\t\tif (isColorProperty === true || isNamed === true) {\n\t\t\t\tthis.property = 'background-color';\n\t\t\t}\n\t\t}\n\n\t\tif (typeof classes !== 'undefined') {\n\t\t\tthis.classes = ['animated', ...classes];\n\t\t} else {\n\t\t\tthis.classes = [];\n\t\t}\n\t}\n\n\twillApply () {\n\t\tconst scene_elements = [];\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"] img:not([data-ui=\"face\"]):not([data-visibility=\"invisible\"])`).each ((element) => {\n\t\t\tscene_elements.push (element.outerHTML);\n\t\t});\n\n\t\tMonogatari.history ('sceneElements').push (scene_elements);\n\n\t\t$_(`${Monogatari.selector} [data-character]`).remove ();\n\t\t$_(`${Monogatari.selector} [data-image]`).remove ();\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).removeClass ();\n\t\tvoid $_(`${Monogatari.selector} [data-ui=\"background\"]`).get (0).offsetWidth;\n\t\treturn Promise.resolve ();\n\t}\n\n\tapply () {\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('background-image', 'initial');\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('background-color', 'initial');\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('animation-duration', '');\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style (this.property, this.value);\n\n\t\tconst durationPosition = this.classes.indexOf ('duration');\n\n\t\tif (durationPosition > -1) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('animation-duration', this.classes[durationPosition + 1]);\n\t\t}\n\n\t\tfor (const newClass of this.classes) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).addClass (newClass);\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tMonogatari.state ({\n\t\t\tscene: this._statement\n\t\t});\n\t\tMonogatari.history ('scene').push (this._statement);\n\n\t\tMonogatari.action ('Dialog').reset ();\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\twillRevert () {\n\t\t$_(`${Monogatari.selector} [data-character]`).remove ();\n\t\t$_(`${Monogatari.selector} [data-image]`).remove ();\n\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).removeClass ();\n\t\treturn Promise.resolve ();\n\t}\n\n\trevert () {\n\t\tMonogatari.history ('scene').pop ();\n\n\t\tif (Monogatari.history ('scene').length > 0) {\n\t\t\tconst last = Monogatari.history ('scene')[Monogatari.history ('scene').length - 1];\n\t\t\tthis.constructor (last.split (' '));\n\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('background-image', 'initial');\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style ('background-color', 'initial');\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).style (this.property, this.value);\n\n\t\t\tfor (const newClass of this.classes) {\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).addClass (newClass);\n\t\t\t}\n\n\t\t\tMonogatari.state ({\n\t\t\t\tscene: last\n\t\t\t});\n\n\t\t\tif (Monogatari.history ('sceneElements').length > 0) {\n\t\t\t\tconst scene_elements = Monogatari.history  ('sceneElements').pop ();\n\n\t\t\t\tif (typeof scene_elements === 'object') {\n\t\t\t\t\tfor (const element of scene_elements) {\n\t\t\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append (element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tMonogatari.action ('Dialog').reset ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nScene.id = 'Scene';\n\nMonogatari.registerAction (Scene);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class ShowCharacter extends Action {\n\n\tstatic setup () {\n\t\t// The character history saves what characters have been displayed\n\t\tMonogatari.history ('character');\n\n\t\t// The characters state variable holds what characters are being shown\n\t\t// right now\n\t\tMonogatari.state ({\n\t\t\tcharacters: []\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"] [data-character]`).remove ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic onLoad () {\n\t\tconst { characters } = Monogatari.state ();\n\n\t\tfor (const item of characters) {\n\t\t\tMonogatari.run (item, false);\n\t\t\t// TODO: Find a way to prevent the histories from filling up on loading\n\t\t\t// So there's no need for this pop.\n\t\t\tMonogatari.history ('character').pop ();\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'character';\n\t}\n\n\tconstructor ([ show, type, asset, sprite, ...classes ]) {\n\t\tsuper ();\n\t\tthis.asset = asset;\n\n\t\tif (typeof Monogatari.character (asset) !== 'undefined') {\n\t\t\t// show [character] [expression] at [position] with [animation] [infinite]\n\t\t\tthis.sprite = sprite;\n\n\t\t\tthis.character = Monogatari.character (asset);\n\t\t\tthis.image = this.character.sprites[this.sprite];\n\n\t\t\tif (typeof classes !== 'undefined') {\n\t\t\t\tthis.classes = ['animated', ...classes.filter ((item) => item !== 'at' && item !== 'with')];\n\t\t\t} else {\n\t\t\t\tthis.classes = [];\n\t\t\t}\n\n\t\t} else {\n\t\t\t// TODO: Add Fancy Error when the specified character does not exist\n\t\t}\n\t}\n\n\tapply () {\n\n\t\t// show [character] [expression] at [position] with [animation] [infinite]\n\t\t//   0      1             2       3     4        5       6         7\n\n\t\t// show [character] [expression] with [animation] [infinite]\n\t\t//   0      1             2       3       4         5\n\n\t\t// show [character] [expression]\n\t\t//   0      1             2\n\n\n\t\tlet directory = this.character.directory;\n\n\t\tif (typeof directory == 'undefined') {\n\t\t\tdirectory = '';\n\t\t} else {\n\t\t\tdirectory += '/';\n\t\t}\n\n\t\tif ($_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).isVisible ()) {\n\t\t\t$_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).attribute ('src', `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').characters}/${directory}${this.image}`);\n\t\t\tfor (const newClass of this.classes) {\n\t\t\t\t$_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).addClass (newClass);\n\t\t\t}\n\n\t\t\tconst durationPosition = this.classes.indexOf ('duration');\n\n\t\t\tif (durationPosition > -1) {\n\t\t\t\t$_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).style ('animation-duration', this.classes[durationPosition + 1]);\n\t\t\t} else {\n\t\t\t\t$_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).style ('animation-duration', '');\n\t\t\t}\n\t\t\t$_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).data ('sprite', this.sprite);\n\n\t\t} else {\n\t\t\tconst image = document.createElement ('img');\n\t\t\t$_(image).attribute ('src', `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').characters}/${directory}${this.image}`);\n\t\t\t$_(image).addClass ('animated');\n\t\t\t$_(image).data ('character', this.asset);\n\t\t\t$_(image).data ('sprite', this.sprite);\n\n\t\t\tfor (const className of this.classes) {\n\t\t\t\t$_(image).addClass (className);\n\t\t\t}\n\n\t\t\tconst durationPosition = this.classes.indexOf ('duration');\n\n\t\t\tif (durationPosition > -1) {\n\t\t\t\t$_(image).style ('animation-duration', this.classes[durationPosition + 1]);\n\t\t\t}\n\t\t\t$_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).remove ();\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"] #game_visuals`).append (image);\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tMonogatari.history ('character').push (this._statement);\n\t\tMonogatari.state ({\n\t\t\tcharacters: [\n\t\t\t\t...Monogatari.state ('characters').filter ((item) => {\n\t\t\t\t\tif (item !== null && typeof item !== 'undefined') {\n\t\t\t\t\t\tconst [show, character, asset, sprite] = item.split (' ');\n\t\t\t\t\t\treturn asset !== this.asset;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}),\n\t\t\t\tthis._statement\n\t\t\t]\n\t\t});\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\t$_(`${Monogatari.selector} [data-character=\"${this.asset}\"]`).remove ();\n\n\t\tfor (let i = Monogatari.history ('character').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.history ('character')[i];\n\t\t\tconst [show, character, asset, name] = last.split (' ');\n\t\t\tif (asset === this.asset) {\n\t\t\t\tMonogatari.history ('character').splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = Monogatari.history ('character').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.history ('character')[i];\n\t\t\tconst [show, character, asset, name] = last.split (' ');\n\n\t\t\tif (asset === this.asset) {\n\t\t\t\tthis.constructor (last.split (' '));\n\t\t\t\tthis.apply ();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nShowCharacter.id = 'Show::Character';\n\nMonogatari.registerAction (ShowCharacter);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class ShowImage extends Action {\n\n\tstatic setup () {\n\t\tMonogatari.history ('image');\n\t\tMonogatari.state ({\n\t\t\timages: []\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"] [data-image]`).remove ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic onLoad () {\n\t\tconst { images } = Monogatari.state ();\n\n\t\tfor (const item of images) {\n\t\t\tMonogatari.run (item, false);\n\t\t\t// TODO: Find a way to prevent the histories from filling up on loading\n\t\t\t// So there's no need for this pop.\n\t\t\tMonogatari.history ('image').pop ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'image';\n\t}\n\n\tconstructor ([ show, type, asset, ...props ]) {\n\t\tsuper ();\n\t\tthis.asset = asset;\n\n\t\tthis.classes = (' ' + props.join (' ')).replace(' at ', ' ').replace (' with ', ' ').trim ().split (' ');\n\n\t\tif (typeof Monogatari.asset ('images', asset) !== 'undefined') {\n\t\t\tthis.image = Monogatari.asset ('images', asset);\n\t\t} else {\n\t\t\tthis.image = asset;\n\t\t}\n\t\tthis.sprite = this.image;\n\t}\n\n\tapply () {\n\n\t\tconst image = document.createElement ('img');\n\t\t$_(image).attribute ('src', `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').images}/${this.image}`);\n\t\t$_(image).addClass ('animated');\n\t\t$_(image).data ('image', this.asset);\n\t\t$_(image).data ('sprite', this.sprite);\n\n\t\tfor (const className of this.classes) {\n\t\t\t$_(image).addClass (className);\n\t\t}\n\n\t\tconst durationPosition = this.classes.indexOf ('duration');\n\n\t\tif (durationPosition > -1) {\n\t\t\t$_(image).style ('animation-duration', this.classes[durationPosition + 1]);\n\t\t}\n\n\t\t$_(`${Monogatari.selector} [data-screen=\"game\"] #game_visuals`).append (image.outerHTML);\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tMonogatari.history ('image').push (this._statement);\n\t\tMonogatari.state ({\n\t\t\timages: [this._statement, ...Monogatari.state ('images')]\n\t\t});\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\tif (this.classes.length > 0) {\n\t\t\tfor (const newClass of this.classes) {\n\t\t\t\t$_(`${Monogatari.selector} [data-image=\"${this.asset}\"]`).addClass(newClass);\n\t\t\t}\n\n\t\t} else {\n\t\t\t$_(`${Monogatari.selector} [data-image=\"${this.asset}\"]`).remove ();\n\t\t}\n\t\tMonogatari.history ('image').pop ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nShowImage.id = 'Show::Image';\n\nMonogatari.registerAction (ShowImage);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\n\nexport class Stop extends Action {\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'stop';\n\t}\n\n\t/**\n\t * Prepare the needed values to run the fade function on the given player\n\t *\n\t * @param {string} fadeTime - The time it will take the audio to reach 0\n\t * @param {Audio} player - The Audio object to modify\n\t *\n\t * @return {Promise} - This promise will resolve once the fadeOut has ended\n\t */\n\tstatic fadeOut (fadeTime, player) {\n\t\tconst time = parseFloat (fadeTime.match (/\\d*(\\.\\d*)?/));\n\t\tconst increments = time / 0.1;\n\t\tconst maxVolume = parseFloat (player.dataset.maxVolume);\n\n\t\tconst volume = (maxVolume / increments) / maxVolume;\n\n\t\tconst interval = (1000 * time) / increments;\n\n\t\tconst expected = Date.now () + interval;\n\n\t\tplayer.dataset.fade = 'out';\n\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\tsetTimeout (() => {\n\t\t\t\tStop.fade (player, volume, interval, expected, resolve);\n\t\t\t}, interval);\n\t\t});\n\t}\n\n\t/**\n\t * Fade the player's audio on small iterations until it reaches 0\n\t *\n\t * @param {Audio} player The Audio player to which the audio will fadeOut\n\t * @param {number} volume The amount to decrease the volume on each iteration\n\t * @param {number} interval The time in milliseconds between each iteration\n\t * @param {Date} expected The expected time the next iteration will happen\n\t * @param {function} resolve The resolve function of the promise returned by the fadeOut function\n\t *\n\t * @return {void}\n\t */\n\tstatic fade (player, volume, interval, expected, resolve) {\n\t\tconst now = Date.now () - expected; // the drift (positive for overshooting)\n\n\t\tif (now > interval) {\n\t\t\t// something really bad happened. Maybe the browser (tab) was inactive?\n\t\t\t// possibly special handling to avoid futile \"catch up\" run\n\t\t}\n\n\t\tif (player.volume !== 0 && player.dataset.fade === 'out') {\n\t\t\tif (player.volume - volume < 0) {\n\t\t\t\tresolve ();\n\t\t\t} else {\n\t\t\t\tplayer.volume -= volume;\n\t\t\t\texpected += interval;\n\t\t\t\tsetTimeout (() => {\n\t\t\t\t\tStop.fade (player, volume, interval, expected, resolve);\n\t\t\t\t}, Math.max (0, interval - now)); // take into account drift\n\t\t\t}\n\t\t}\n\t}\n\n\tconstructor ([ action, type, media, ...props ]) {\n\t\tsuper ();\n\n\t\tthis.type = type;\n\t\tthis.media = media;\n\t\tthis.props = props;\n\n\t\tif (typeof media === 'undefined' && media !== 'with') {\n\t\t\tthis.player = Monogatari.mediaPlayers (type, true);\n\t\t} else {\n\t\t\tthis.player = Monogatari.mediaPlayer (type, media);\n\t\t}\n\t}\n\n\twillApply () {\n\t\tif (typeof this.player === 'object' && !(this.player instanceof Audio)) {\n\t\t\tfor (const player of Object.values (this.player)) {\n\t\t\t\tplayer.loop = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.player.loop = false;\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tapply () {\n\t\t// Check if the audio should have a fade time\n\t\tconst fadePosition = this.props.indexOf ('fade');\n\n\t\tif (typeof this.player === 'object' && !(this.player instanceof Audio)) {\n\t\t\tif (fadePosition > -1) {\n\t\t\t\tfor (const player of this.player) {\n\t\t\t\t\tStop.fadeOut (this.props[fadePosition + 1], this.player).then (() => {\n\t\t\t\t\t\tMonogatari.removeMediaPlayer (this.type, player.dataset.key);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tMonogatari.removeMediaPlayer (this.type);\n\t\t\t}\n\t\t} else {\n\n\t\t\tif (fadePosition > -1) {\n\t\t\t\tStop.fadeOut (this.props[fadePosition + 1], this.player).then (() => {\n\t\t\t\t\tMonogatari.removeMediaPlayer (this.type, this.media);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tMonogatari.removeMediaPlayer (this.type, this.mediaKey);\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tconst state = {};\n\n\t\tif (typeof this.media !== 'undefined') {\n\t\t\tstate[this.type] = Monogatari.state (this.type).filter ((m) => m.indexOf (`play ${this.type} ${this.media}`) <= -1);\n\t\t} else {\n\t\t\tMonogatari.history (this.type).push (Monogatari.state (this.type));\n\t\t\tstate[this.type] = [];\n\t\t}\n\n\t\tMonogatari.state (state);\n\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\tif (typeof this.media !== 'undefined') {\n\t\t\tconst last = Monogatari.history (this.type).reverse ().find ((m) => m.indexOf (`play ${this.type} ${this.media}`) > -1);\n\n\t\t\tconst promise = Monogatari.run (last, false).then (() => {\n\t\t\t\tMonogatari.history (this.type).pop ();\n\t\t\t});\n\n\t\t\treturn promise;\n\n\t\t} else {\n\t\t\tconst statements = Monogatari.history (this.type).pop ();\n\n\t\t\tconst promises = [];\n\t\t\tfor (const statement of statements) {\n\t\t\t\tpromises.push (Monogatari.run (statement, false).then (() => {\n\t\t\t\t\tMonogatari.history (this.type).pop ();\n\t\t\t\t\treturn Promise.resolve ();\n\t\t\t\t}));\n\t\t\t}\n\t\t\treturn Promise.all (promises);\n\t\t}\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nStop.id = 'Stop';\n\nMonogatari.registerAction (Stop);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { FancyError } from '../FancyError';\n\nexport class Vibrate extends Action {\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'vibrate';\n\t}\n\n\tconstructor ([ action, ...time ]) {\n\t\tsuper ();\n\n\t\t// First check if vibration is available available\n\t\tif (navigator) {\n\t\t\tif (navigator.vibrate) {\n\t\t\t\t// Since time can be a pattern made of different lengths, we have\n\t\t\t\t// to use an array\n\t\t\t\tthis.time = [];\n\t\t\t\tfor (const i in time) {\n\t\t\t\t\t// Check if all times are valid integers\n\t\t\t\t\tif (!isNaN (time[i])) {\n\t\t\t\t\t\tthis.time[i] = parseInt (time[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tFancyError.show (\n\t\t\t\t\t\t\t'The specified time was not an integer',\n\t\t\t\t\t\t\t'Monogatari attempted to transform the given time into an integer value but failed.',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'Specified time': time[i],\n\t\t\t\t\t\t\t\t'Statement': `<code class='language=javascript'>\"${this._statement}\"</code>`,\n\t\t\t\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t\t\t\t'Help': {\n\t\t\t\t\t\t\t\t\t'_': 'Check if the value you provided is actually an integer (whole number). Remember the value used must be given in milliseconds and must not be mixed with characters other than numbers.',\n\t\t\t\t\t\t\t\t\t'_1': 'For example, the following statement would make the device vibrate for 5 seconds:',\n\t\t\t\t\t\t\t\t\t'_3':`\n\t\t\t\t\t\t\t\t\t\t<pre><code class='language-javascript'>\"vibrate 5000\"</code></pre>\n\t\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t\t\t'_4': 'If you wanted to make the device vibrate on a pattern, this is a correct syntax:',\n\t\t\t\t\t\t\t\t\t'_5':`\n\t\t\t\t\t\t\t\t\t\t<pre><code class='language-javascript'>\"vibrate 5000 100 4000 200 3000\"</code></pre>\n\t\t\t\t\t\t\t\t\t`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn ('Vibration is not supported in this platform.');\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn ('Vibration is not supported in this platform.');\n\t\t}\n\t}\n\n\twillApply () {\n\t\tif (typeof this.time !== 'undefined') {\n\t\t\treturn Promise.resolve ();\n\t\t}\n\t\treturn Promise.reject ();\n\t}\n\n\tapply () {\n\t\tnavigator.vibrate (0);\n\t\tnavigator.vibrate (this.time);\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nVibrate.id = 'Vibrate';\nMonogatari.registerAction (Vibrate);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class Video extends Action {\n\n\tstatic canProceed () {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\t$_('[data-video]').each ((element) => {\n\t\t\t\tif (element.hasAttribute ('controls') === true && element.ended !== true) {\n\t\t\t\t\treject ();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tresolve ();\n\t\t});\n\t}\n\n\tstatic configuration (object = null) {\n\t\tif (object !== null) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\treturn Video._configuration[object];\n\t\t\t} else {\n\t\t\t\tVideo._configuration = Object.assign ({}, Video._configuration, object);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Video._configuration;\n\t\t}\n\t}\n\n\tstatic onLoad () {\n\t\tif (Monogatari.state ('videos').length > 0) {\n\t\t\tfor (const video of Monogatari.state ('videos')) {\n\t\t\t\tMonogatari.run (video, false);\n\t\t\t\t// TODO: Find a way to prevent the histories from filling up on loading\n\t\t\t\t// So there's no need for this pop.\n\t\t\t\tMonogatari.history ('video').pop ();\n\t\t\t\tMonogatari.state ('videos').pop ();\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic setup () {\n\t\tMonogatari.history ('video');\n\t\tMonogatari.state ({\n\t\t\tvideos: []\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\t$_(`${Monogatari.selector} [data-video]`).remove ();\n\t\tMonogatari.history ({\n\t\t\tvideo: []\n\t\t});\n\t\tMonogatari.state ({\n\t\t\tvideos: []\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString ([ show, type ]) {\n\t\treturn show === 'show' && type === 'video';\n\t}\n\n\t/**\n\t * Creates an instance of a Video Action\n\t *\n\t * @param {string[]} parameters - List of parameters received from the script statement.\n\t * @param {string} parameters.action - In this case, action will always be 'video'\n\t * @param {string} [parameters.mode='modal'] - Mode in which the video element will be shown (modal, background, immersive, full-screen)\n\t * @param {string} parameters.name\n\t * @param {string} parameters.props\n\t */\n\tconstructor ([ show, type, mode = 'modal', name, ...props]) {\n\t\tsuper ();\n\t\tthis.mode = mode;\n\t\tthis.name = name;\n\t\tthis.props = props;\n\n\t\tif (typeof Monogatari.asset ('video', name) !== 'undefined') {\n\t\t\tthis.src = Monogatari.asset ('video', name);\n\t\t}\n\t}\n\n\tapply () {\n\t\t// TODO: Find a way to remove the resize listeners once the video is stopped\n\t\tconst element = document.createElement ('video');\n\n\t\t$_(element).data ('video', this.name);\n\t\t$_(element).addClass (this.mode);\n\n\t\t$_(element).attribute ('src', `${Monogatari.setting ('AssetsPath').root}/${Monogatari.setting ('AssetsPath').video}/${this.src}`);\n\n\t\tif (this.props.indexOf ('close') > -1) {\n\t\t\telement.onended = () => {\n\t\t\t\t$_(`${Monogatari.selector} [data-video=\"${this.name}\"]`).remove ();\n\t\t\t\tif (this.mode === 'immersive') {\n\t\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (this.props.indexOf ('loop') > -1) {\n\t\t\t$_(element).attribute ('loop', '');\n\t\t}\n\n\t\tif (this.props.indexOf ('controls') > -1) {\n\t\t\t$_(element).attribute ('controls', '');\n\t\t}\n\n\t\tif (this.mode === 'background') {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"background\"]`).append (element);\n\t\t} else if (this.mode === 'immersive') {\n\t\t\tMonogatari.global ('block', true);\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).prepend (element);\n\t\t} else if (this.mode === 'fullscreen') {\n\t\t\tif (element.requestFullscreen) {\n\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append (element);\n\t\t\t\telement.requestFullscreen ();\n\t\t\t} else {\n\t\t\t\tMonogatari.global ('block', true);\n\t\t\t\t$_(element).toggleClass ('full-screen immersive');\n\t\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).prepend (element);\n\t\t\t}\n\t\t} else {\n\t\t\t$_(`${Monogatari.selector} [data-screen=\"game\"]`).append (element);\n\t\t}\n\n\t\telement.play ();\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidApply () {\n\t\tMonogatari.state ('videos').push (this._statement);\n\t\tMonogatari.history ('video').push (this._statement);\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\trevert () {\n\t\t$_(`${Monogatari.selector} [data-video=\"${this.name}\"]`).remove ();\n\t\treturn Promise.resolve ();\n\t}\n\n\tdidRevert () {\n\t\tfor (let i = Monogatari.state ('videos').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.state ('videos')[i];\n\t\t\tconst [show, video, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.state ('videos').splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = Monogatari.history ('video').length - 1; i >= 0; i--) {\n\t\t\tconst last = Monogatari.history ('video')[i];\n\t\t\tconst [show, video, mode, name] = last.split (' ');\n\t\t\tif (name === this.name) {\n\t\t\t\tMonogatari.history ('video').splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nVideo.id = 'Video';\nVideo._configuration = {\n\tobjects: {\n\n\t}\n};\n\nMonogatari.registerAction (Video);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport { FancyError } from '../FancyError';\n\nexport class Wait extends Action {\n\n\tstatic matchString ([ action ]) {\n\t\treturn action === 'wait';\n\t}\n\n\tconstructor ([ action, time ]) {\n\t\tsuper ();\n\t\t// Check if the provided time is a valid integer\n\t\tif (!isNaN (time)) {\n\t\t\tthis.time = parseInt (time);\n\t\t} else {\n\t\t\tFancyError.show (\n\t\t\t\t'The specified time was not an integer',\n\t\t\t\t'Monogatari attempted to transform the given time into an integer value but failed.',\n\t\t\t\t{\n\t\t\t\t\t'Specified time': time,\n\t\t\t\t\t'Statement': `<code class='language=javascript'>\"${this._statement}\"</code>`,\n\t\t\t\t\t'Label': Monogatari.state ('label'),\n\t\t\t\t\t'Step': Monogatari.state ('step'),\n\t\t\t\t\t'Help': {\n\t\t\t\t\t\t'_': 'Check if the value you provided is actually an integer (whole number). Remember the value used must be given in milliseconds and must not be mixed with characters other than numbers.',\n\t\t\t\t\t\t'_1': 'For example, the following statement would make the game wait for 5 seconds:',\n\t\t\t\t\t\t'_3':`\n\t\t\t\t\t\t\t<pre><code class='language-javascript'>\"wait 5000\"</code></pre>\n\t\t\t\t\t\t`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tapply () {\n\t\treturn new Promise ((resolve) => {\n\t\t\t// Block the game so the player can't advance\n\t\t\tMonogatari.global ('block', true);\n\n\t\t\t// Set the timeout for the specified time\n\t\t\tsetTimeout (() => {\n\t\t\t\t// Unlock the game when the timeout ends.\n\t\t\t\tMonogatari.global ('block', false);\n\t\t\t\tresolve ();\n\t\t\t}, this.time);\n\t\t});\n\t}\n\n\tdidApply () {\n\t\treturn Promise.resolve ({ advance: true });\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: true, step: true });\n\t}\n}\n\nWait.id = 'Wait';\n\nMonogatari.registerAction (Wait);","import { Action } from '../Action';\nimport { Monogatari } from '../monogatari';\nimport Typed from 'typed.js';\nimport { $_ } from '@aegis-framework/artemis';\n\nexport class Dialog extends Action {\n\n\tstatic canProceed () {\n\n\t\t// Check if the type animation has finished and the Typed object still exists\n\t\tif (!Monogatari.global ('finishedTyping') && Monogatari.global ('textObject') !== null) {\n\t\t\t// Get the string it was typing\n\t\t\tconst str = Monogatari.global ('textObject').strings [0];\n\n\t\t\t// Get the element it was typing to\n\t\t\tconst element = $_(Monogatari.global ('textObject').el).data ('ui');\n\n\t\t\tif (element !== 'centered' && !$_('[data-ui=\"text\"]').hasClass ('nvl')) {\n\t\t\t\tMonogatari.global ('textObject').destroy ();\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).html (str);\n\t\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t\t\treturn Promise.reject ('TypeWriter effect has not finished. Skipping it.');\n\t\t\t} else if (element !== 'centered' && $_('[data-ui=\"text\"]').hasClass ('nvl')) {\n\t\t\t\tconst last = $_('[data-ui=\"say\"] [data-spoke] p').last ().get (0);\n\t\t\t\tMonogatari.global ('textObject').destroy ();\n\t\t\t\t$_(last).html (str);\n\t\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t\t\treturn Promise.reject ('TypeWriter effect has not finished. Skipping it.');\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve (Monogatari.global ('finishedTyping'));\n\t}\n\n\tstatic canRevert () {\n\t\tconst dialogLog = Monogatari.component ('dialog_log');\n\n\t\tif (typeof dialogLog !== 'undefined') {\n\t\t\tdialogLog.pop ();\n\t\t}\n\t\treturn Promise.resolve ();\n\t}\n\n\t/**\n\t * @static checkUnread - This function is used to add the unread class to the\n\t * text box if new contents (dialogs) were added to it causing it to overflow\n\t * but are not visible on screen right now so the player knows there is more\n\t * and scrolls the element.\n\t */\n\tstatic checkUnread () {\n\t\tconst height = $_(`${Monogatari.selector} [data-ui=\"text\"]`).get (0).clientHeight;\n\t\tconst scrollHeight = $_(`${Monogatari.selector} [data-ui=\"text\"]`).get (0).scrollHeight;\n\t\tif (height < scrollHeight) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).addClass ('unread');\n\t\t} else {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).removeClass ('unread');\n\t\t}\n\t}\n\n\tstatic setup () {\n\t\tMonogatari.globals ({\n\t\t\ttextObject: null,\n\t\t\tfinishedTyping: true,\n\t\t\ttypedConfiguration: {\n\t\t\t\tstrings: [],\n\t\t\t\ttypeSpeed: Monogatari.preference ('TextSpeed'),\n\t\t\t\tfadeOut: true,\n\t\t\t\tloop: false,\n\t\t\t\tshowCursor: false,\n\t\t\t\tcontentType: 'html',\n\t\t\t\tpreStringTyped: () => {\n\t\t\t\t\tMonogatari.global ('finishedTyping', false);\n\t\t\t\t},\n\t\t\t\tonStringTyped: () => {\n\t\t\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t\t\t},\n\t\t\t\tonDestroy () {\n\t\t\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// The NVL mode has its own history so that when going back, all dialogs\n\t\t// that were shown on screen can be shown again instead of just showing\n\t\t// the last one.\n\t\tMonogatari.history ('nvl');\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic bind (selector) {\n\t\t// Add listener for the text speed setting\n\t\t$_(`${selector} [data-action=\"set-text-speed\"]`).on ('change mouseover', function () {\n\t\t\tconst value =  Monogatari.setting ('maxTextSpeed') - parseInt($_(this).value());\n\t\t\tMonogatari.global ('typedConfiguration').typeSpeed = value;\n\t\t\tMonogatari.preference ('TextSpeed', value);\n\t\t});\n\n\t\t// Detect scroll on the text element to remove the unread class used when\n\t\t// there's text not being shown in NVL mode.\n\t\t$_(`${selector} [data-ui=\"text\"]`).on ('scroll', () => {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).removeClass ('unread');\n\t\t});\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic init (selector) {\n\t\t// Remove the Text Speed setting if the type animation was disabled\n\t\tif (Monogatari.setting ('TypeAnimation') === false) {\n\t\t\t$_(`${selector} [data-settings=\"text-speed\"]`).hide ();\n\t\t}\n\n\t\tMonogatari.setting ('maxTextSpeed', parseInt ($_(`${selector} [data-action=\"set-text-speed\"]`).property ('max')));\n\n\n\t\tdocument.querySelector('[data-action=\"set-text-speed\"]').value = Monogatari.preference ('TextSpeed');\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic reset () {\n\t\tif (Monogatari.global ('textObject') !== null) {\n\t\t\tMonogatari.global ('textObject').destroy ();\n\t\t}\n\n\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).removeClass ('nvl');\n\n\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).data ('speaking', '');\n\n\t\t$_(`${Monogatari.selector} [data-ui=\"who\"]`).style ('color', '');\n\n\t\t$_(`${Monogatari.selector} [data-ui=\"who\"]`).html ('');\n\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).html ('');\n\t\treturn Promise.resolve ();\n\t}\n\n\tstatic matchString () {\n\t\treturn true;\n\t}\n\n\tconstructor ([ character, ...dialog ]) {\n\t\tsuper ();\n\n\t\tconst [ id, expression ] = character.split (':');\n\n\t\tif (typeof Monogatari.character (id) !== 'undefined') {\n\t\t\tthis.character = Monogatari.character (id);\n\t\t\tthis.id = id;\n\t\t\tthis.dialog = dialog.join (' ');\n\n\t\t\tif (typeof this.character.nvl !== 'undefined') {\n\t\t\t\tthis.nvl = this.character.nvl;\n\t\t\t} else {\n\t\t\t\tthis.nvl = false;\n\t\t\t}\n\n\t\t\tif (typeof expression !== 'undefined') {\n\t\t\t\tif (typeof this.character.expressions !== 'undefined') {\n\t\t\t\t\tif (typeof this.character.directory !== 'undefined') {\n\t\t\t\t\t\tthis.image = `${this.character.directory}/${this.character.expressions[expression]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.image = this.character.expressions[expression];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (typeof this.character.default_expression !== 'undefined') {\n\t\t\t\tif (typeof this.character.directory !== 'undefined') {\n\t\t\t\t\tthis.image = `${this.character.directory}/${this.character.default_expression}`;\n\t\t\t\t} else {\n\t\t\t\t\tthis.image = this.character.default_expression;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.id = 'narrator';\n\t\t\tif (id === 'nvl') {\n\t\t\t\tthis.nvl = true;\n\t\t\t\tthis.dialog = dialog.join (' ');\n\t\t\t} else {\n\t\t\t\tthis.dialog = [ character, ...dialog ].join (' ');\n\t\t\t\tthis.nvl = false;\n\t\t\t}\n\t\t}\n\t}\n\n\twillApply () {\n\t\t$_(`${Monogatari.selector} [data-character]`).removeClass ('focus');\n\t\t$_(`${Monogatari.selector} [data-ui=\"face\"]`).hide ();\n\t\tdocument.querySelector ('[data-ui=\"who\"]').innerHTML = '';\n\t\treturn Promise.resolve ();\n\t}\n\n\tdisplayNvlDialog (dialog, character, animation) {\n\t\tif (!$_(`${Monogatari.selector} [data-ui=\"text\"]`).hasClass ('nvl')) {\n\t\t\tDialog.reset ();\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).addClass ('nvl');\n\t\t}\n\n\t\t// Remove contents from the dialog area.\n\t\tconst previous = $_(`${Monogatari.selector} [data-ui=\"text\"]`).data ('speaking');\n\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).data ('speaking', character);\n\n\t\t// Check if the typing animation flag is set to true in order to show it\n\t\tif (animation === true && Monogatari.setting ('TypeAnimation') === true && Monogatari.setting ('NVLTypeAnimation') === true) {\n\n\t\t\t// If the property is set to true, the animation will be shown\n\t\t\t// if it is set to false, even if the flag was set to true,\n\t\t\t// no animation will be shown in the game.\n\t\t\tif (character !== 'narrator') {\n\t\t\t\tif (previous !== character) {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).append (`<div data-spoke=\"${character}\" class='named'><span style='color:${Monogatari.character (character).color};'>${Monogatari.replaceVariables (Monogatari.character (character).name)}: </span><p></p></div>`);\n\t\t\t\t} else {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).append (`<div data-spoke=\"${character}\"><p></p></div>`);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).append (`<div data-spoke=\"${character}\" class='unnamed'><p></p></div>`);\n\t\t\t}\n\n\t\t\tconst elements = $_('[data-ui=\"say\"] [data-spoke] p');\n\t\t\tconst last = elements.last ().get (0);\n\n\t\t\tMonogatari.global ('typedConfiguration').strings = [dialog];\n\t\t\tMonogatari.global ('textObject', new Typed (last, Monogatari.global ('typedConfiguration')));\n\n\t\t} else {\n\t\t\tif (character !== 'narrator') {\n\t\t\t\tif (previous !== character) {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).append (`<div data-spoke=\"${character}\" class='named'><span style='color:${Monogatari.character (character).color};'>${Monogatari.replaceVariables (Monogatari.character (character).name)}: </span><p>${dialog}</p></div>`);\n\t\t\t\t} else {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).append (`<div data-spoke=\"${character}\"><p>${dialog}</p></div>`);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).append (`<div data-spoke=\"${character}\" class='unnamed'><p>${dialog}</p></div>`);\n\t\t\t}\n\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t}\n\t}\n\n\tdisplayDialog (dialog, character, animation) {\n\t\tif (this.nvl === false) {\n\t\t\tif ($_(`${Monogatari.selector} [data-ui=\"text\"]`).hasClass ('nvl') && this._cycle === 'Application') {\n\t\t\t\tMonogatari.history ('nvl').push ($_(`${Monogatari.selector} [data-ui=\"text\"] [data-ui=\"say\"]`).html ());\n\t\t\t}\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).removeClass ('nvl');\n\n\t\t\t// Destroy the previous textObject so the text is rewritten.\n\t\t\t// If not destroyed, the text would be appended instead of replaced.\n\t\t\tif (Monogatari.global ('textObject') !== null) {\n\t\t\t\tMonogatari.global ('textObject').destroy ();\n\t\t\t}\n\n\t\t\t// Remove contents from the dialog area.\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).html ('');\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).data ('speaking', character);\n\n\t\t\t// Check if the typing animation flag is set to true in order to show it\n\t\t\tif (animation === true && Monogatari.setting ('TypeAnimation') === true) {\n\n\t\t\t\t// If the property is set to true, the animation will be shown\n\t\t\t\t// if it is set to false, even if the flag was set to true,\n\t\t\t\t// no animation will be shown in the game.\n\t\t\t\tMonogatari.global ('typedConfiguration').strings = [Monogatari.replaceVariables (dialog)];\n\t\t\t\tMonogatari.global ('textObject', new Typed ('[data-ui=\"say\"]', Monogatari.global ('typedConfiguration')));\n\t\t\t} else {\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"say\"]`).html (Monogatari.replaceVariables (dialog));\n\t\t\t\tMonogatari.global ('finishedTyping', true);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.displayNvlDialog (dialog, character, animation);\n\t\t}\n\n\t\tDialog.checkUnread ();\n\n\t\ttry {\n\t\t\tconst dialogLog = Monogatari.component ('dialog_log');\n\t\t\tif (typeof dialogLog !== 'undefined') {\n\t\t\t\tif (this._cycle === 'Application') {\n\t\t\t\t\tdialogLog.write ({\n\t\t\t\t\t\tid: character,\n\t\t\t\t\t\tcharacter: this.character,\n\t\t\t\t\t\tdialog\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdialogLog.pop ();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tMonogatari.debug ().error (e);\n\t\t}\n\n\n\n\t\treturn Promise.resolve ();\n\t}\n\n\tnarratorDialog () {\n\t\treturn this.displayDialog (this.dialog, 'narrator', Monogatari.setting ('NarratorTypeAnimation'));\n\t}\n\n\tcharacterDialog () {\n\t\t// Check if the character has a name to show\n\t\tif (typeof this.character.name !== 'undefined' && !this.nvl) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"who\"]`).html (Monogatari.replaceVariables (this.character.name));\n\t\t}\n\n\t\t// Focus the character's sprite and colorize it's name with the defined\n\t\t// color on its declaration\n\t\t$_(`${Monogatari.selector} [data-character=\"${this.id}\"]`).addClass ('focus');\n\t\t$_(`${Monogatari.selector} [data-ui=\"who\"]`).style ('color', this.character.color);\n\n\t\t// Check if an expression or face image was used and if it exists and\n\t\t// display it\n\t\tif (typeof this.image !== 'undefined' && !this.nvl) {\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"face\"]`).attribute ('src', 'img/characters/' + this.image);\n\t\t\t$_(`${Monogatari.selector} [data-ui=\"face\"]`).show ();\n\t\t}\n\n\t\t// Check if the character object defines if the type animation should be used.\n\t\tif (typeof this.character.type_animation !== 'undefined') {\n\t\t\treturn this.displayDialog (this.dialog, this.id, this.character.type_animation);\n\t\t} else {\n\t\t\treturn this.displayDialog (this.dialog, this.id, true);\n\t\t}\n\t}\n\n\tapply () {\n\t\t// Check if a character is the one speaking or if the narrator is speaking\n\t\tif (typeof this.character !== 'undefined') {\n\t\t\treturn this.characterDialog ();\n\t\t} else {\n\t\t\treturn this.narratorDialog ();\n\t\t}\n\t}\n\n\twillRevert () {\n\t\tthis._action = 'revert';\n\t\t$_(`${Monogatari.selector} [data-character]`).removeClass ('focus');\n\t\t$_(`${Monogatari.selector} [data-ui=\"face\"]`).hide ();\n\t\tdocument.querySelector ('[data-ui=\"who\"]').innerHTML = '';\n\t\treturn Promise.resolve ();\n\t}\n\n\trevert () {\n\t\t// Check if the dialog to replay is a NVL one or not\n\t\tif (this.nvl === true) {\n\t\t\t//  Check if the NVL screen is currently being shown\n\t\t\tif ($_(`${Monogatari.selector} [data-ui=\"text\"]`).hasClass ('nvl')) {\n\t\t\t\t// If it is being shown, then to go back, we need to remove the last dialog from it\n\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"] [data-ui=\"say\"] [data-spoke]`).last ().remove ();\n\t\t\t\treturn Promise.resolve ();\n\t\t\t} else {\n\t\t\t\t// If it is not shown right now, then we need to recover the dialogs\n\t\t\t\t// that were being shown the last time we hid it\n\t\t\t\tif (Monogatari.history ('nvl').length > 0) {\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"]`).addClass ('nvl');\n\t\t\t\t\t$_(`${Monogatari.selector} [data-ui=\"text\"] [data-ui=\"say\"]`).html (Monogatari.history ('nvl').pop ());\n\t\t\t\t\treturn Promise.resolve ();\n\t\t\t\t}\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t} else {\n\t\t\t// If the dialog was not NVL, we can simply show it as if we were\n\t\t\t// doing a simple application\n\t\t\treturn this.apply ();\n\t\t}\n\t}\n\n\tdidRevert () {\n\t\treturn Promise.resolve ({ advance: false, step: true });\n\t}\n\n}\n\nDialog.id = 'Dialog';\n\nMonogatari.registerAction (Dialog);","export * from './Canvas';\nexport * from './Centered';\nexport * from './Choice';\nexport * from './Clear';\nexport * from './Conditional';\nexport * from './End';\nexport * from './Function';\n\nexport * from './HideCanvas';\nexport * from './HideCharacter';\nexport * from './HideImage';\nexport * from './HideParticles';\nexport * from './HideVideo';\n\nexport * from './InputModal';\nexport * from './Jump';\nexport * from './Message';\nexport * from './Next';\nexport * from './Notify';\nexport * from './Particles';\nexport * from './Pause';\nexport * from './Play';\nexport * from './Scene';\n\nexport * from './ShowCharacter';\nexport * from './ShowImage';\n\nexport * from './Stop';\nexport * from './Vibrate';\nexport * from './Video';\nexport * from './Wait';\n\n// Dialog always matches strings so it has to stay last.\nexport * from './Dialog';"]}